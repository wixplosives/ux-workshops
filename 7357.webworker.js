"use strict";(self.webpackChunk_wixc3_component_playground=self.webpackChunk_wixc3_component_playground||[]).push([[7357],{39609:(e,n,t)=>{t.d(n,{Z:()=>r});const r='// Type definitions for prop-types 15.7\n// Project: https://github.com/reactjs/prop-types, https://facebook.github.io/react\n// Definitions by: DovydasNavickas <https://github.com/DovydasNavickas>\n//                 Ferdy Budhidharma <https://github.com/ferdaber>\n//                 Sebastian Silbermann <https://github.com/eps1lon>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.8\n\nexport type ReactComponentLike =\n    | string\n    | ((props: any, context?: any) => any)\n    | (new (props: any, context?: any) => any);\n\nexport interface ReactElementLike {\n    type: ReactComponentLike;\n    props: any;\n    key: string | number | null;\n}\n\nexport interface ReactNodeArray extends Array<ReactNodeLike> {}\n\nexport type ReactNodeLike =\n    | {}\n    | ReactElementLike\n    | ReactNodeArray\n    | string\n    | number\n    | boolean\n    | null\n    | undefined;\n\nexport const nominalTypeHack: unique symbol;\n\nexport type IsOptional<T> = undefined extends T ? true : false;\n\nexport type RequiredKeys<V> = { [K in keyof V]-?: Exclude<V[K], undefined> extends Validator<infer T> ? IsOptional<T> extends true ? never : K : never }[keyof V];\nexport type OptionalKeys<V> = Exclude<keyof V, RequiredKeys<V>>;\nexport type InferPropsInner<V> = { [K in keyof V]-?: InferType<V[K]>; };\n\nexport interface Validator<T> {\n    (props: { [key: string]: any }, propName: string, componentName: string, location: string, propFullName: string): Error | null;\n    [nominalTypeHack]?: {\n        type: T;\n    } | undefined;\n}\n\nexport interface Requireable<T> extends Validator<T | undefined | null> {\n    isRequired: Validator<NonNullable<T>>;\n}\n\nexport type ValidationMap<T> = { [K in keyof T]?: Validator<T[K]> };\n\nexport type InferType<V> = V extends Validator<infer T> ? T : any;\nexport type InferProps<V> =\n    & InferPropsInner<Pick<V, RequiredKeys<V>>>\n    & Partial<InferPropsInner<Pick<V, OptionalKeys<V>>>>;\n\nexport const any: Requireable<any>;\nexport const array: Requireable<any[]>;\nexport const bool: Requireable<boolean>;\nexport const func: Requireable<(...args: any[]) => any>;\nexport const number: Requireable<number>;\nexport const object: Requireable<object>;\nexport const string: Requireable<string>;\nexport const node: Requireable<ReactNodeLike>;\nexport const element: Requireable<ReactElementLike>;\nexport const symbol: Requireable<symbol>;\nexport const elementType: Requireable<ReactComponentLike>;\nexport function instanceOf<T>(expectedClass: new (...args: any[]) => T): Requireable<T>;\nexport function oneOf<T>(types: ReadonlyArray<T>): Requireable<T>;\nexport function oneOfType<T extends Validator<any>>(types: T[]): Requireable<NonNullable<InferType<T>>>;\nexport function arrayOf<T>(type: Validator<T>): Requireable<T[]>;\nexport function objectOf<T>(type: Validator<T>): Requireable<{ [K in keyof any]: T; }>;\nexport function shape<P extends ValidationMap<any>>(type: P): Requireable<InferProps<P>>;\nexport function exact<P extends ValidationMap<any>>(type: P): Requireable<Required<InferProps<P>>>;\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param typeSpecs Map of name to a ReactPropType\n * @param values Runtime values that need to be type-checked\n * @param location e.g. "prop", "context", "child context"\n * @param componentName Name of the component for error messages\n * @param getStack Returns the component stack\n */\nexport function checkPropTypes(typeSpecs: any, values: any, location: string, componentName: string, getStack?: () => any): void;\n\n/**\n * Only available if NODE_ENV=production\n */\nexport function resetWarningCache(): void;\n'},14966:(e,n,t)=>{t.d(n,{Z:()=>r});const r="// Type definitions for React (react-dom) 17.0\n// Project: https://reactjs.org\n// Definitions by: Asana <https://asana.com>\n//                 AssureSign <http://www.assuresign.com>\n//                 Microsoft <https://microsoft.com>\n//                 MartynasZilinskas <https://github.com/MartynasZilinskas>\n//                 Josh Rutherford <https://github.com/theruther4d>\n//                 Jessica Franco <https://github.com/Jessidhia>\n//                 Sebastian Silbermann <https://github.com/eps1lon>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.8\n\n// NOTE: Users of the upcoming React 18 release should add a reference\n// to 'react-dom/next' in their project. See next.d.ts's top comment\n// for reference and documentation on how exactly to do it.\n\n// NOTE: Users of the `experimental` builds of React should add a reference\n// to 'react-dom/experimental' in their project. See experimental.d.ts's top comment\n// for reference and documentation on how exactly to do it.\n\nexport as namespace ReactDOM;\n\nimport {\n    ReactInstance, Component, ComponentState,\n    ReactElement, FunctionComponentElement, CElement,\n    DOMAttributes, DOMElement, ReactNode, ReactPortal\n} from 'react';\n\nexport function findDOMNode(instance: ReactInstance | null | undefined): Element | null | Text;\nexport function unmountComponentAtNode(container: Element | DocumentFragment): boolean;\n\nexport function createPortal(children: ReactNode, container: Element, key?: null | string): ReactPortal;\n\nexport const version: string;\nexport const render: Renderer;\nexport const hydrate: Renderer;\n\nexport function flushSync<R>(fn: () => R): R;\nexport function flushSync<A, R>(fn: (a: A) => R, a: A): R;\n\nexport function unstable_batchedUpdates<A, B>(callback: (a: A, b: B) => any, a: A, b: B): void;\nexport function unstable_batchedUpdates<A>(callback: (a: A) => any, a: A): void;\nexport function unstable_batchedUpdates(callback: () => any): void;\n\nexport function unstable_renderSubtreeIntoContainer<T extends Element>(\n    parentComponent: Component<any>,\n    element: DOMElement<DOMAttributes<T>, T>,\n    container: Element,\n    callback?: (element: T) => any): T;\nexport function unstable_renderSubtreeIntoContainer<P, T extends Component<P, ComponentState>>(\n    parentComponent: Component<any>,\n    element: CElement<P, T>,\n    container: Element,\n    callback?: (component: T) => any): T;\nexport function unstable_renderSubtreeIntoContainer<P>(\n    parentComponent: Component<any>,\n    element: ReactElement<P>,\n    container: Element,\n    callback?: (component?: Component<P, ComponentState> | Element) => any): Component<P, ComponentState> | Element | void;\n\nexport type Container = Element | Document | DocumentFragment;\n\nexport interface Renderer {\n    // Deprecated(render): The return value is deprecated.\n    // In future releases the render function's return type will be void.\n\n    <T extends Element>(\n        element: DOMElement<DOMAttributes<T>, T>,\n        container: Container| null,\n        callback?: () => void\n    ): T;\n\n    (\n        element: Array<DOMElement<DOMAttributes<any>, any>>,\n        container: Container| null,\n        callback?: () => void\n    ): Element;\n\n    (\n        element: FunctionComponentElement<any> | Array<FunctionComponentElement<any>>,\n        container: Container| null,\n        callback?: () => void\n    ): void;\n\n    <P, T extends Component<P, ComponentState>>(\n        element: CElement<P, T>,\n        container: Container| null,\n        callback?: () => void\n    ): T;\n\n    (\n        element: Array<CElement<any, Component<any, ComponentState>>>,\n        container: Container| null,\n        callback?: () => void\n    ): Component<any, ComponentState>;\n\n    <P>(\n        element: ReactElement<P>,\n        container: Container| null,\n        callback?: () => void\n    ): Component<P, ComponentState> | Element | void;\n\n    (\n        element: ReactElement[],\n        container: Container| null,\n        callback?: () => void\n    ): Component<any, ComponentState> | Element | void;\n}\n"},94675:(e,n,t)=>{t.d(n,{Z:()=>r});const r="/*\nReact projects that don't include the DOM library need these interfaces to compile.\nReact Native applications use React, but there is no DOM available. The JavaScript runtime\nis ES6/ES2015 only. These definitions allow such projects to compile with only `--lib ES6`.\n\nWarning: all of these interfaces are empty. If you want type definitions for various properties\n(such as HTMLInputElement.prototype.value), you need to add `--lib DOM` (via command line or tsconfig.json).\n*/\n\ninterface Event { }\ninterface AnimationEvent extends Event { }\ninterface ClipboardEvent extends Event { }\ninterface CompositionEvent extends Event { }\ninterface DragEvent extends Event { }\ninterface FocusEvent extends Event { }\ninterface KeyboardEvent extends Event { }\ninterface MouseEvent extends Event { }\ninterface TouchEvent extends Event { }\ninterface PointerEvent extends Event { }\ninterface TransitionEvent extends Event { }\ninterface UIEvent extends Event { }\ninterface WheelEvent extends Event { }\n\ninterface EventTarget { }\ninterface Document { }\ninterface DataTransfer { }\ninterface StyleMedia { }\n\ninterface Element { }\ninterface DocumentFragment { }\n\ninterface HTMLElement extends Element { }\ninterface HTMLAnchorElement extends HTMLElement { }\ninterface HTMLAreaElement extends HTMLElement { }\ninterface HTMLAudioElement extends HTMLElement { }\ninterface HTMLBaseElement extends HTMLElement { }\ninterface HTMLBodyElement extends HTMLElement { }\ninterface HTMLBRElement extends HTMLElement { }\ninterface HTMLButtonElement extends HTMLElement { }\ninterface HTMLCanvasElement extends HTMLElement { }\ninterface HTMLDataElement extends HTMLElement { }\ninterface HTMLDataListElement extends HTMLElement { }\ninterface HTMLDialogElement extends HTMLElement { }\ninterface HTMLDivElement extends HTMLElement { }\ninterface HTMLDListElement extends HTMLElement { }\ninterface HTMLEmbedElement extends HTMLElement { }\ninterface HTMLFieldSetElement extends HTMLElement { }\ninterface HTMLFormElement extends HTMLElement { }\ninterface HTMLHeadingElement extends HTMLElement { }\ninterface HTMLHeadElement extends HTMLElement { }\ninterface HTMLHRElement extends HTMLElement { }\ninterface HTMLHtmlElement extends HTMLElement { }\ninterface HTMLIFrameElement extends HTMLElement { }\ninterface HTMLImageElement extends HTMLElement { }\ninterface HTMLInputElement extends HTMLElement { }\ninterface HTMLModElement extends HTMLElement { }\ninterface HTMLLabelElement extends HTMLElement { }\ninterface HTMLLegendElement extends HTMLElement { }\ninterface HTMLLIElement extends HTMLElement { }\ninterface HTMLLinkElement extends HTMLElement { }\ninterface HTMLMapElement extends HTMLElement { }\ninterface HTMLMetaElement extends HTMLElement { }\ninterface HTMLObjectElement extends HTMLElement { }\ninterface HTMLOListElement extends HTMLElement { }\ninterface HTMLOptGroupElement extends HTMLElement { }\ninterface HTMLOptionElement extends HTMLElement { }\ninterface HTMLParagraphElement extends HTMLElement { }\ninterface HTMLParamElement extends HTMLElement { }\ninterface HTMLPreElement extends HTMLElement { }\ninterface HTMLProgressElement extends HTMLElement { }\ninterface HTMLQuoteElement extends HTMLElement { }\ninterface HTMLSlotElement extends HTMLElement { }\ninterface HTMLScriptElement extends HTMLElement { }\ninterface HTMLSelectElement extends HTMLElement { }\ninterface HTMLSourceElement extends HTMLElement { }\ninterface HTMLSpanElement extends HTMLElement { }\ninterface HTMLStyleElement extends HTMLElement { }\ninterface HTMLTableElement extends HTMLElement { }\ninterface HTMLTableColElement extends HTMLElement { }\ninterface HTMLTableDataCellElement extends HTMLElement { }\ninterface HTMLTableHeaderCellElement extends HTMLElement { }\ninterface HTMLTableRowElement extends HTMLElement { }\ninterface HTMLTableSectionElement extends HTMLElement { }\ninterface HTMLTemplateElement extends HTMLElement { }\ninterface HTMLTextAreaElement extends HTMLElement { }\ninterface HTMLTitleElement extends HTMLElement { }\ninterface HTMLTrackElement extends HTMLElement { }\ninterface HTMLUListElement extends HTMLElement { }\ninterface HTMLVideoElement extends HTMLElement { }\ninterface HTMLWebViewElement extends HTMLElement { }\n\ninterface SVGElement extends Element { }\ninterface SVGSVGElement extends SVGElement { }\ninterface SVGCircleElement extends SVGElement { }\ninterface SVGClipPathElement extends SVGElement { }\ninterface SVGDefsElement extends SVGElement { }\ninterface SVGDescElement extends SVGElement { }\ninterface SVGEllipseElement extends SVGElement { }\ninterface SVGFEBlendElement extends SVGElement { }\ninterface SVGFEColorMatrixElement extends SVGElement { }\ninterface SVGFEComponentTransferElement extends SVGElement { }\ninterface SVGFECompositeElement extends SVGElement { }\ninterface SVGFEConvolveMatrixElement extends SVGElement { }\ninterface SVGFEDiffuseLightingElement extends SVGElement { }\ninterface SVGFEDisplacementMapElement extends SVGElement { }\ninterface SVGFEDistantLightElement extends SVGElement { }\ninterface SVGFEDropShadowElement extends SVGElement { }\ninterface SVGFEFloodElement extends SVGElement { }\ninterface SVGFEFuncAElement extends SVGElement { }\ninterface SVGFEFuncBElement extends SVGElement { }\ninterface SVGFEFuncGElement extends SVGElement { }\ninterface SVGFEFuncRElement extends SVGElement { }\ninterface SVGFEGaussianBlurElement extends SVGElement { }\ninterface SVGFEImageElement extends SVGElement { }\ninterface SVGFEMergeElement extends SVGElement { }\ninterface SVGFEMergeNodeElement extends SVGElement { }\ninterface SVGFEMorphologyElement extends SVGElement { }\ninterface SVGFEOffsetElement extends SVGElement { }\ninterface SVGFEPointLightElement extends SVGElement { }\ninterface SVGFESpecularLightingElement extends SVGElement { }\ninterface SVGFESpotLightElement extends SVGElement { }\ninterface SVGFETileElement extends SVGElement { }\ninterface SVGFETurbulenceElement extends SVGElement { }\ninterface SVGFilterElement extends SVGElement { }\ninterface SVGForeignObjectElement extends SVGElement { }\ninterface SVGGElement extends SVGElement { }\ninterface SVGImageElement extends SVGElement { }\ninterface SVGLineElement extends SVGElement { }\ninterface SVGLinearGradientElement extends SVGElement { }\ninterface SVGMarkerElement extends SVGElement { }\ninterface SVGMaskElement extends SVGElement { }\ninterface SVGMetadataElement extends SVGElement { }\ninterface SVGPathElement extends SVGElement { }\ninterface SVGPatternElement extends SVGElement { }\ninterface SVGPolygonElement extends SVGElement { }\ninterface SVGPolylineElement extends SVGElement { }\ninterface SVGRadialGradientElement extends SVGElement { }\ninterface SVGRectElement extends SVGElement { }\ninterface SVGStopElement extends SVGElement { }\ninterface SVGSwitchElement extends SVGElement { }\ninterface SVGSymbolElement extends SVGElement { }\ninterface SVGTextElement extends SVGElement { }\ninterface SVGTextPathElement extends SVGElement { }\ninterface SVGTSpanElement extends SVGElement { }\ninterface SVGUseElement extends SVGElement { }\ninterface SVGViewElement extends SVGElement { }\n\ninterface Text { }\ninterface TouchList { }\ninterface WebGLRenderingContext { }\ninterface WebGL2RenderingContext { }\n"},73879:(e,n,t)=>{t.d(n,{Z:()=>r});const r="// Type definitions for React 17.0\n// Project: http://facebook.github.io/react/\n// Definitions by: Asana <https://asana.com>\n//                 AssureSign <http://www.assuresign.com>\n//                 Microsoft <https://microsoft.com>\n//                 John Reilly <https://github.com/johnnyreilly>\n//                 Benoit Benezech <https://github.com/bbenezech>\n//                 Patricio Zavolinsky <https://github.com/pzavolinsky>\n//                 Eric Anderson <https://github.com/ericanderson>\n//                 Dovydas Navickas <https://github.com/DovydasNavickas>\n//                 Josh Rutherford <https://github.com/theruther4d>\n//                 Guilherme Hübner <https://github.com/guilhermehubner>\n//                 Ferdy Budhidharma <https://github.com/ferdaber>\n//                 Johann Rakotoharisoa <https://github.com/jrakotoharisoa>\n//                 Olivier Pascal <https://github.com/pascaloliv>\n//                 Martin Hochel <https://github.com/hotell>\n//                 Frank Li <https://github.com/franklixuefei>\n//                 Jessica Franco <https://github.com/Jessidhia>\n//                 Saransh Kataria <https://github.com/saranshkataria>\n//                 Kanitkorn Sujautra <https://github.com/lukyth>\n//                 Sebastian Silbermann <https://github.com/eps1lon>\n//                 Kyle Scully <https://github.com/zieka>\n//                 Cong Zhang <https://github.com/dancerphil>\n//                 Dimitri Mitropoulos <https://github.com/dimitropoulos>\n//                 JongChan Choi <https://github.com/disjukr>\n//                 Victor Magalhães <https://github.com/vhfmag>\n//                 Dale Tan <https://github.com/hellatan>\n//                 Priyanshu Rav <https://github.com/priyanshurav>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.8\n\n// NOTE: Users of the upcoming React 18 release should add a reference\n// to 'react/next' in their project. See next.d.ts's top comment\n// for reference and documentation on how exactly to do it.\n\n// NOTE: Users of the `experimental` builds of React should add a reference\n// to 'react/experimental' in their project. See experimental.d.ts's top comment\n// for reference and documentation on how exactly to do it.\n\n/// <reference path=\"global.d.ts\" />\n\nimport * as CSS from 'csstype';\nimport * as PropTypes from 'prop-types';\nimport { Interaction as SchedulerInteraction } from 'scheduler/tracing';\n\ntype NativeAnimationEvent = AnimationEvent;\ntype NativeClipboardEvent = ClipboardEvent;\ntype NativeCompositionEvent = CompositionEvent;\ntype NativeDragEvent = DragEvent;\ntype NativeFocusEvent = FocusEvent;\ntype NativeKeyboardEvent = KeyboardEvent;\ntype NativeMouseEvent = MouseEvent;\ntype NativeTouchEvent = TouchEvent;\ntype NativePointerEvent = PointerEvent;\ntype NativeTransitionEvent = TransitionEvent;\ntype NativeUIEvent = UIEvent;\ntype NativeWheelEvent = WheelEvent;\ntype Booleanish = boolean | 'true' | 'false';\n\ndeclare const UNDEFINED_VOID_ONLY: unique symbol;\n// Destructors are only allowed to return void.\ntype Destructor = () => void | { [UNDEFINED_VOID_ONLY]: never };\n\n// tslint:disable-next-line:export-just-namespace\nexport = React;\nexport as namespace React;\n\ndeclare namespace React {\n    //\n    // React Elements\n    // ----------------------------------------------------------------------\n\n    type ElementType<P = any> =\n        {\n            [K in keyof JSX.IntrinsicElements]: P extends JSX.IntrinsicElements[K] ? K : never\n        }[keyof JSX.IntrinsicElements] |\n        ComponentType<P>;\n    /**\n     * @deprecated Please use `ElementType`\n     */\n    type ReactType<P = any> = ElementType<P>;\n    type ComponentType<P = {}> = ComponentClass<P> | FunctionComponent<P>;\n\n    type JSXElementConstructor<P> =\n        | ((props: P) => ReactElement<any, any> | null)\n        | (new (props: P) => Component<any, any>);\n\n    interface RefObject<T> {\n        readonly current: T | null;\n    }\n    type RefCallback<T> = { bivarianceHack(instance: T | null): void }[\"bivarianceHack\"];\n    type Ref<T> = RefCallback<T> | RefObject<T> | null;\n    type LegacyRef<T> = string | Ref<T>;\n    /**\n     * Gets the instance type for a React element. The instance will be different for various component types:\n     *\n     * - React class components will be the class instance. So if you had `class Foo extends React.Component<{}> {}`\n     *   and used `React.ElementRef<typeof Foo>` then the type would be the instance of `Foo`.\n     * - React stateless functional components do not have a backing instance and so `React.ElementRef<typeof Bar>`\n     *   (when `Bar` is `function Bar() {}`) will give you the `undefined` type.\n     * - JSX intrinsics like `div` will give you their DOM instance. For `React.ElementRef<'div'>` that would be\n     *   `HTMLDivElement`. For `React.ElementRef<'input'>` that would be `HTMLInputElement`.\n     * - React stateless functional components that forward a `ref` will give you the `ElementRef` of the forwarded\n     *   to component.\n     *\n     * `C` must be the type _of_ a React component so you need to use typeof as in React.ElementRef<typeof MyComponent>.\n     *\n     * @todo In Flow, this works a little different with forwarded refs and the `AbstractComponent` that\n     *       `React.forwardRef()` returns.\n     */\n    type ElementRef<\n        C extends\n            | ForwardRefExoticComponent<any>\n            | { new (props: any): Component<any> }\n            | ((props: any, context?: any) => ReactElement | null)\n            | keyof JSX.IntrinsicElements\n    > =\n        // need to check first if `ref` is a valid prop for ts@3.0\n        // otherwise it will infer `{}` instead of `never`\n        \"ref\" extends keyof ComponentPropsWithRef<C>\n            ? NonNullable<ComponentPropsWithRef<C>[\"ref\"]> extends Ref<\n                infer Instance\n            >\n                ? Instance\n                : never\n            : never;\n\n    type ComponentState = any;\n\n    type Key = string | number;\n\n    /**\n     * @internal You shouldn't need to use this type since you never see these attributes\n     * inside your component or have to validate them.\n     */\n    interface Attributes {\n        key?: Key | null | undefined;\n    }\n    interface RefAttributes<T> extends Attributes {\n        ref?: Ref<T> | undefined;\n    }\n    interface ClassAttributes<T> extends Attributes {\n        ref?: LegacyRef<T> | undefined;\n    }\n\n    interface ReactElement<P = any, T extends string | JSXElementConstructor<any> = string | JSXElementConstructor<any>> {\n        type: T;\n        props: P;\n        key: Key | null;\n    }\n\n    interface ReactComponentElement<\n        T extends keyof JSX.IntrinsicElements | JSXElementConstructor<any>,\n        P = Pick<ComponentProps<T>, Exclude<keyof ComponentProps<T>, 'key' | 'ref'>>\n    > extends ReactElement<P, Exclude<T, number>> { }\n\n    /**\n     * @deprecated Please use `FunctionComponentElement`\n     */\n    type SFCElement<P> = FunctionComponentElement<P>;\n\n    interface FunctionComponentElement<P> extends ReactElement<P, FunctionComponent<P>> {\n        ref?: ('ref' extends keyof P ? P extends { ref?: infer R | undefined } ? R : never : never) | undefined;\n    }\n\n    type CElement<P, T extends Component<P, ComponentState>> = ComponentElement<P, T>;\n    interface ComponentElement<P, T extends Component<P, ComponentState>> extends ReactElement<P, ComponentClass<P>> {\n        ref?: LegacyRef<T> | undefined;\n    }\n\n    type ClassicElement<P> = CElement<P, ClassicComponent<P, ComponentState>>;\n\n    // string fallback for custom web-components\n    interface DOMElement<P extends HTMLAttributes<T> | SVGAttributes<T>, T extends Element> extends ReactElement<P, string> {\n        ref: LegacyRef<T>;\n    }\n\n    // ReactHTML for ReactHTMLElement\n    interface ReactHTMLElement<T extends HTMLElement> extends DetailedReactHTMLElement<AllHTMLAttributes<T>, T> { }\n\n    interface DetailedReactHTMLElement<P extends HTMLAttributes<T>, T extends HTMLElement> extends DOMElement<P, T> {\n        type: keyof ReactHTML;\n    }\n\n    // ReactSVG for ReactSVGElement\n    interface ReactSVGElement extends DOMElement<SVGAttributes<SVGElement>, SVGElement> {\n        type: keyof ReactSVG;\n    }\n\n    interface ReactPortal extends ReactElement {\n        key: Key | null;\n        children: ReactNode;\n    }\n\n    //\n    // Factories\n    // ----------------------------------------------------------------------\n\n    type Factory<P> = (props?: Attributes & P, ...children: ReactNode[]) => ReactElement<P>;\n\n    /**\n     * @deprecated Please use `FunctionComponentFactory`\n     */\n    type SFCFactory<P> = FunctionComponentFactory<P>;\n\n    type FunctionComponentFactory<P> = (props?: Attributes & P, ...children: ReactNode[]) => FunctionComponentElement<P>;\n\n    type ComponentFactory<P, T extends Component<P, ComponentState>> =\n        (props?: ClassAttributes<T> & P, ...children: ReactNode[]) => CElement<P, T>;\n\n    type CFactory<P, T extends Component<P, ComponentState>> = ComponentFactory<P, T>;\n    type ClassicFactory<P> = CFactory<P, ClassicComponent<P, ComponentState>>;\n\n    type DOMFactory<P extends DOMAttributes<T>, T extends Element> =\n        (props?: ClassAttributes<T> & P | null, ...children: ReactNode[]) => DOMElement<P, T>;\n\n    interface HTMLFactory<T extends HTMLElement> extends DetailedHTMLFactory<AllHTMLAttributes<T>, T> {}\n\n    interface DetailedHTMLFactory<P extends HTMLAttributes<T>, T extends HTMLElement> extends DOMFactory<P, T> {\n        (props?: ClassAttributes<T> & P | null, ...children: ReactNode[]): DetailedReactHTMLElement<P, T>;\n    }\n\n    interface SVGFactory extends DOMFactory<SVGAttributes<SVGElement>, SVGElement> {\n        (props?: ClassAttributes<SVGElement> & SVGAttributes<SVGElement> | null, ...children: ReactNode[]): ReactSVGElement;\n    }\n\n    //\n    // React Nodes\n    // http://facebook.github.io/react/docs/glossary.html\n    // ----------------------------------------------------------------------\n\n    type ReactText = string | number;\n    type ReactChild = ReactElement | ReactText;\n\n    /**\n     * @deprecated Use either `ReactNode[]` if you need an array or `Iterable<ReactNode>` if its passed to a host component.\n     */\n    interface ReactNodeArray extends ReadonlyArray<ReactNode> {}\n    type ReactFragment = {} | Iterable<ReactNode>;\n    type ReactNode = ReactChild | ReactFragment | ReactPortal | boolean | null | undefined;\n\n    //\n    // Top Level API\n    // ----------------------------------------------------------------------\n\n    // DOM Elements\n    function createFactory<T extends HTMLElement>(\n        type: keyof ReactHTML): HTMLFactory<T>;\n    function createFactory(\n        type: keyof ReactSVG): SVGFactory;\n    function createFactory<P extends DOMAttributes<T>, T extends Element>(\n        type: string): DOMFactory<P, T>;\n\n    // Custom components\n    function createFactory<P>(type: FunctionComponent<P>): FunctionComponentFactory<P>;\n    function createFactory<P>(\n        type: ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>): CFactory<P, ClassicComponent<P, ComponentState>>;\n    function createFactory<P, T extends Component<P, ComponentState>, C extends ComponentClass<P>>(\n        type: ClassType<P, T, C>): CFactory<P, T>;\n    function createFactory<P>(type: ComponentClass<P>): Factory<P>;\n\n    // DOM Elements\n    // TODO: generalize this to everything in `keyof ReactHTML`, not just \"input\"\n    function createElement(\n        type: \"input\",\n        props?: InputHTMLAttributes<HTMLInputElement> & ClassAttributes<HTMLInputElement> | null,\n        ...children: ReactNode[]): DetailedReactHTMLElement<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n    function createElement<P extends HTMLAttributes<T>, T extends HTMLElement>(\n        type: keyof ReactHTML,\n        props?: ClassAttributes<T> & P | null,\n        ...children: ReactNode[]): DetailedReactHTMLElement<P, T>;\n    function createElement<P extends SVGAttributes<T>, T extends SVGElement>(\n        type: keyof ReactSVG,\n        props?: ClassAttributes<T> & P | null,\n        ...children: ReactNode[]): ReactSVGElement;\n    function createElement<P extends DOMAttributes<T>, T extends Element>(\n        type: string,\n        props?: ClassAttributes<T> & P | null,\n        ...children: ReactNode[]): DOMElement<P, T>;\n\n    // Custom components\n\n    function createElement<P extends {}>(\n        type: FunctionComponent<P>,\n        props?: Attributes & P | null,\n        ...children: ReactNode[]): FunctionComponentElement<P>;\n    function createElement<P extends {}>(\n        type: ClassType<P, ClassicComponent<P, ComponentState>, ClassicComponentClass<P>>,\n        props?: ClassAttributes<ClassicComponent<P, ComponentState>> & P | null,\n        ...children: ReactNode[]): CElement<P, ClassicComponent<P, ComponentState>>;\n    function createElement<P extends {}, T extends Component<P, ComponentState>, C extends ComponentClass<P>>(\n        type: ClassType<P, T, C>,\n        props?: ClassAttributes<T> & P | null,\n        ...children: ReactNode[]): CElement<P, T>;\n    function createElement<P extends {}>(\n        type: FunctionComponent<P> | ComponentClass<P> | string,\n        props?: Attributes & P | null,\n        ...children: ReactNode[]): ReactElement<P>;\n\n    // DOM Elements\n    // ReactHTMLElement\n    function cloneElement<P extends HTMLAttributes<T>, T extends HTMLElement>(\n        element: DetailedReactHTMLElement<P, T>,\n        props?: P,\n        ...children: ReactNode[]): DetailedReactHTMLElement<P, T>;\n    // ReactHTMLElement, less specific\n    function cloneElement<P extends HTMLAttributes<T>, T extends HTMLElement>(\n        element: ReactHTMLElement<T>,\n        props?: P,\n        ...children: ReactNode[]): ReactHTMLElement<T>;\n    // SVGElement\n    function cloneElement<P extends SVGAttributes<T>, T extends SVGElement>(\n        element: ReactSVGElement,\n        props?: P,\n        ...children: ReactNode[]): ReactSVGElement;\n    // DOM Element (has to be the last, because type checking stops at first overload that fits)\n    function cloneElement<P extends DOMAttributes<T>, T extends Element>(\n        element: DOMElement<P, T>,\n        props?: DOMAttributes<T> & P,\n        ...children: ReactNode[]): DOMElement<P, T>;\n\n    // Custom components\n    function cloneElement<P>(\n        element: FunctionComponentElement<P>,\n        props?: Partial<P> & Attributes,\n        ...children: ReactNode[]): FunctionComponentElement<P>;\n    function cloneElement<P, T extends Component<P, ComponentState>>(\n        element: CElement<P, T>,\n        props?: Partial<P> & ClassAttributes<T>,\n        ...children: ReactNode[]): CElement<P, T>;\n    function cloneElement<P>(\n        element: ReactElement<P>,\n        props?: Partial<P> & Attributes,\n        ...children: ReactNode[]): ReactElement<P>;\n\n    // Context via RenderProps\n    interface ProviderProps<T> {\n        value: T;\n        children?: ReactNode | undefined;\n    }\n\n    interface ConsumerProps<T> {\n        children: (value: T) => ReactNode;\n    }\n\n    // TODO: similar to how Fragment is actually a symbol, the values returned from createContext,\n    // forwardRef and memo are actually objects that are treated specially by the renderer; see:\n    // https://github.com/facebook/react/blob/v16.6.0/packages/react/src/ReactContext.js#L35-L48\n    // https://github.com/facebook/react/blob/v16.6.0/packages/react/src/forwardRef.js#L42-L45\n    // https://github.com/facebook/react/blob/v16.6.0/packages/react/src/memo.js#L27-L31\n    // However, we have no way of telling the JSX parser that it's a JSX element type or its props other than\n    // by pretending to be a normal component.\n    //\n    // We don't just use ComponentType or FunctionComponent types because you are not supposed to attach statics to this\n    // object, but rather to the original function.\n    interface ExoticComponent<P = {}> {\n        /**\n         * **NOTE**: Exotic components are not callable.\n         */\n        (props: P): (ReactElement|null);\n        readonly $$typeof: symbol;\n    }\n\n    interface NamedExoticComponent<P = {}> extends ExoticComponent<P> {\n        displayName?: string | undefined;\n    }\n\n    interface ProviderExoticComponent<P> extends ExoticComponent<P> {\n        propTypes?: WeakValidationMap<P> | undefined;\n    }\n\n    type ContextType<C extends Context<any>> = C extends Context<infer T> ? T : never;\n\n    // NOTE: only the Context object itself can get a displayName\n    // https://github.com/facebook/react-devtools/blob/e0b854e4c/backend/attachRendererFiber.js#L310-L325\n    type Provider<T> = ProviderExoticComponent<ProviderProps<T>>;\n    type Consumer<T> = ExoticComponent<ConsumerProps<T>>;\n    interface Context<T> {\n        Provider: Provider<T>;\n        Consumer: Consumer<T>;\n        displayName?: string | undefined;\n    }\n    function createContext<T>(\n        // If you thought this should be optional, see\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/pull/24509#issuecomment-382213106\n        defaultValue: T,\n    ): Context<T>;\n\n    function isValidElement<P>(object: {} | null | undefined): object is ReactElement<P>;\n\n    const Children: ReactChildren;\n    const Fragment: ExoticComponent<{ children?: ReactNode | undefined }>;\n    const StrictMode: ExoticComponent<{ children?: ReactNode | undefined }>;\n\n    interface SuspenseProps {\n        children?: ReactNode | undefined;\n\n        // TODO(react18): `fallback?: ReactNode;`\n        /** A fallback react tree to show when a Suspense child (like React.lazy) suspends */\n        fallback: NonNullable<ReactNode>|null;\n    }\n\n    // TODO(react18): Updated JSDoc to reflect that Suspense works on the server.\n    /**\n     * This feature is not yet available for server-side rendering.\n     * Suspense support will be added in a later release.\n     */\n    const Suspense: ExoticComponent<SuspenseProps>;\n    const version: string;\n\n    /**\n     * {@link https://reactjs.org/docs/profiler.html#onrender-callback Profiler API}\n     */\n    type ProfilerOnRenderCallback = (\n        id: string,\n        phase: \"mount\" | \"update\",\n        actualDuration: number,\n        baseDuration: number,\n        startTime: number,\n        commitTime: number,\n        interactions: Set<SchedulerInteraction>,\n    ) => void;\n    interface ProfilerProps {\n        children?: ReactNode | undefined;\n        id: string;\n        onRender: ProfilerOnRenderCallback;\n    }\n\n    const Profiler: ExoticComponent<ProfilerProps>;\n\n    //\n    // Component API\n    // ----------------------------------------------------------------------\n\n    type ReactInstance = Component<any> | Element;\n\n    // Base component for plain JS classes\n    interface Component<P = {}, S = {}, SS = any> extends ComponentLifecycle<P, S, SS> { }\n    class Component<P, S> {\n        // tslint won't let me format the sample code in a way that vscode likes it :(\n        /**\n         * If set, `this.context` will be set at runtime to the current value of the given Context.\n         *\n         * Usage:\n         *\n         * ```ts\n         * type MyContext = number\n         * const Ctx = React.createContext<MyContext>(0)\n         *\n         * class Foo extends React.Component {\n         *   static contextType = Ctx\n         *   context!: React.ContextType<typeof Ctx>\n         *   render () {\n         *     return <>My context's value: {this.context}</>;\n         *   }\n         * }\n         * ```\n         *\n         * @see https://reactjs.org/docs/context.html#classcontexttype\n         */\n        static contextType?: Context<any> | undefined;\n\n        /**\n         * If using the new style context, re-declare this in your class to be the\n         * `React.ContextType` of your `static contextType`.\n         * Should be used with type annotation or static contextType.\n         *\n         * ```ts\n         * static contextType = MyContext\n         * // For TS pre-3.7:\n         * context!: React.ContextType<typeof MyContext>\n         * // For TS 3.7 and above:\n         * declare context: React.ContextType<typeof MyContext>\n         * ```\n         *\n         * @see https://reactjs.org/docs/context.html\n         */\n        // TODO (TypeScript 3.0): unknown\n        context: any;\n\n        constructor(props: Readonly<P> | P);\n        /**\n         * @deprecated\n         * @see https://reactjs.org/docs/legacy-context.html\n         */\n        constructor(props: P, context: any);\n\n        // We MUST keep setState() as a unified signature because it allows proper checking of the method return type.\n        // See: https://github.com/DefinitelyTyped/DefinitelyTyped/issues/18365#issuecomment-351013257\n        // Also, the ` | S` allows intellisense to not be dumbisense\n        setState<K extends keyof S>(\n            state: ((prevState: Readonly<S>, props: Readonly<P>) => (Pick<S, K> | S | null)) | (Pick<S, K> | S | null),\n            callback?: () => void\n        ): void;\n\n        forceUpdate(callback?: () => void): void;\n        render(): ReactNode;\n\n        // React.Props<T> is now deprecated, which means that the `children`\n        // property is not available on `P` by default, even though you can\n        // always pass children as variadic arguments to `createElement`.\n        // In the future, if we can define its call signature conditionally\n        // on the existence of `children` in `P`, then we should remove this.\n        readonly props: Readonly<P> & Readonly<{ children?: ReactNode | undefined }>;\n        state: Readonly<S>;\n        /**\n         * @deprecated\n         * https://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n         */\n        refs: {\n            [key: string]: ReactInstance\n        };\n    }\n\n    class PureComponent<P = {}, S = {}, SS = any> extends Component<P, S, SS> { }\n\n    interface ClassicComponent<P = {}, S = {}> extends Component<P, S> {\n        replaceState(nextState: S, callback?: () => void): void;\n        isMounted(): boolean;\n        getInitialState?(): S;\n    }\n\n    interface ChildContextProvider<CC> {\n        getChildContext(): CC;\n    }\n\n    //\n    // Class Interfaces\n    // ----------------------------------------------------------------------\n\n    /**\n     * @deprecated as of recent React versions, function components can no\n     * longer be considered 'stateless'. Please use `FunctionComponent` instead.\n     *\n     * @see [React Hooks](https://reactjs.org/docs/hooks-intro.html)\n     */\n    type SFC<P = {}> = FunctionComponent<P>;\n\n    /**\n     * @deprecated as of recent React versions, function components can no\n     * longer be considered 'stateless'. Please use `FunctionComponent` instead.\n     *\n     * @see [React Hooks](https://reactjs.org/docs/hooks-intro.html)\n     */\n    type StatelessComponent<P = {}> = FunctionComponent<P>;\n\n    type FC<P = {}> = FunctionComponent<P>;\n\n    interface FunctionComponent<P = {}> {\n        (props: PropsWithChildren<P>, context?: any): ReactElement<any, any> | null;\n        propTypes?: WeakValidationMap<P> | undefined;\n        contextTypes?: ValidationMap<any> | undefined;\n        defaultProps?: Partial<P> | undefined;\n        displayName?: string | undefined;\n    }\n\n    type VFC<P = {}> = VoidFunctionComponent<P>;\n\n    interface VoidFunctionComponent<P = {}> {\n        (props: P, context?: any): ReactElement<any, any> | null;\n        propTypes?: WeakValidationMap<P> | undefined;\n        contextTypes?: ValidationMap<any> | undefined;\n        defaultProps?: Partial<P> | undefined;\n        displayName?: string | undefined;\n    }\n\n    type ForwardedRef<T> = ((instance: T | null) => void) | MutableRefObject<T | null> | null;\n\n    interface ForwardRefRenderFunction<T, P = {}> {\n        (props: PropsWithChildren<P>, ref: ForwardedRef<T>): ReactElement | null;\n        displayName?: string | undefined;\n        // explicit rejected with `never` required due to\n        // https://github.com/microsoft/TypeScript/issues/36826\n        /**\n         * defaultProps are not supported on render functions\n         */\n        defaultProps?: never | undefined;\n        /**\n         * propTypes are not supported on render functions\n         */\n        propTypes?: never | undefined;\n    }\n\n    /**\n     * @deprecated Use ForwardRefRenderFunction. forwardRef doesn't accept a\n     *             \"real\" component.\n     */\n    interface RefForwardingComponent <T, P = {}> extends ForwardRefRenderFunction<T, P> {}\n\n    interface ComponentClass<P = {}, S = ComponentState> extends StaticLifecycle<P, S> {\n        new (props: P, context?: any): Component<P, S>;\n        propTypes?: WeakValidationMap<P> | undefined;\n        contextType?: Context<any> | undefined;\n        contextTypes?: ValidationMap<any> | undefined;\n        childContextTypes?: ValidationMap<any> | undefined;\n        defaultProps?: Partial<P> | undefined;\n        displayName?: string | undefined;\n    }\n\n    interface ClassicComponentClass<P = {}> extends ComponentClass<P> {\n        new (props: P, context?: any): ClassicComponent<P, ComponentState>;\n        getDefaultProps?(): P;\n    }\n\n    /**\n     * We use an intersection type to infer multiple type parameters from\n     * a single argument, which is useful for many top-level API defs.\n     * See https://github.com/Microsoft/TypeScript/issues/7234 for more info.\n     */\n    type ClassType<P, T extends Component<P, ComponentState>, C extends ComponentClass<P>> =\n        C &\n        (new (props: P, context?: any) => T);\n\n    //\n    // Component Specs and Lifecycle\n    // ----------------------------------------------------------------------\n\n    // This should actually be something like `Lifecycle<P, S> | DeprecatedLifecycle<P, S>`,\n    // as React will _not_ call the deprecated lifecycle methods if any of the new lifecycle\n    // methods are present.\n    interface ComponentLifecycle<P, S, SS = any> extends NewLifecycle<P, S, SS>, DeprecatedLifecycle<P, S> {\n        /**\n         * Called immediately after a component is mounted. Setting state here will trigger re-rendering.\n         */\n        componentDidMount?(): void;\n        /**\n         * Called to determine whether the change in props and state should trigger a re-render.\n         *\n         * `Component` always returns true.\n         * `PureComponent` implements a shallow comparison on props and state and returns true if any\n         * props or states have changed.\n         *\n         * If false is returned, `Component#render`, `componentWillUpdate`\n         * and `componentDidUpdate` will not be called.\n         */\n        shouldComponentUpdate?(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): boolean;\n        /**\n         * Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\n         * cancelled network requests, or cleaning up any DOM elements created in `componentDidMount`.\n         */\n        componentWillUnmount?(): void;\n        /**\n         * Catches exceptions generated in descendant components. Unhandled exceptions will cause\n         * the entire component tree to unmount.\n         */\n        componentDidCatch?(error: Error, errorInfo: ErrorInfo): void;\n    }\n\n    // Unfortunately, we have no way of declaring that the component constructor must implement this\n    interface StaticLifecycle<P, S> {\n        getDerivedStateFromProps?: GetDerivedStateFromProps<P, S> | undefined;\n        getDerivedStateFromError?: GetDerivedStateFromError<P, S> | undefined;\n    }\n\n    type GetDerivedStateFromProps<P, S> =\n        /**\n         * Returns an update to a component's state based on its new props and old state.\n         *\n         * Note: its presence prevents any of the deprecated lifecycle methods from being invoked\n         */\n        (nextProps: Readonly<P>, prevState: S) => Partial<S> | null;\n\n    type GetDerivedStateFromError<P, S> =\n        /**\n         * This lifecycle is invoked after an error has been thrown by a descendant component.\n         * It receives the error that was thrown as a parameter and should return a value to update state.\n         *\n         * Note: its presence prevents any of the deprecated lifecycle methods from being invoked\n         */\n        (error: any) => Partial<S> | null;\n\n    // This should be \"infer SS\" but can't use it yet\n    interface NewLifecycle<P, S, SS> {\n        /**\n         * Runs before React applies the result of `render` to the document, and\n         * returns an object to be given to componentDidUpdate. Useful for saving\n         * things such as scroll position before `render` causes changes to it.\n         *\n         * Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\n         * lifecycle events from running.\n         */\n        getSnapshotBeforeUpdate?(prevProps: Readonly<P>, prevState: Readonly<S>): SS | null;\n        /**\n         * Called immediately after updating occurs. Not called for the initial render.\n         *\n         * The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n         */\n        componentDidUpdate?(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot?: SS): void;\n    }\n\n    interface DeprecatedLifecycle<P, S> {\n        /**\n         * Called immediately before mounting occurs, and before `Component#render`.\n         * Avoid introducing any side-effects or subscriptions in this method.\n         *\n         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\n         * prevents this from being invoked.\n         *\n         * @deprecated 16.3, use componentDidMount or the constructor instead; will stop working in React 17\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n         */\n        componentWillMount?(): void;\n        /**\n         * Called immediately before mounting occurs, and before `Component#render`.\n         * Avoid introducing any side-effects or subscriptions in this method.\n         *\n         * This method will not stop working in React 17.\n         *\n         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\n         * prevents this from being invoked.\n         *\n         * @deprecated 16.3, use componentDidMount or the constructor instead\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n         */\n        UNSAFE_componentWillMount?(): void;\n        /**\n         * Called when the component may be receiving new props.\n         * React may call this even if props have not changed, so be sure to compare new and existing\n         * props if you only want to handle changes.\n         *\n         * Calling `Component#setState` generally does not trigger this method.\n         *\n         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\n         * prevents this from being invoked.\n         *\n         * @deprecated 16.3, use static getDerivedStateFromProps instead; will stop working in React 17\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n         */\n        componentWillReceiveProps?(nextProps: Readonly<P>, nextContext: any): void;\n        /**\n         * Called when the component may be receiving new props.\n         * React may call this even if props have not changed, so be sure to compare new and existing\n         * props if you only want to handle changes.\n         *\n         * Calling `Component#setState` generally does not trigger this method.\n         *\n         * This method will not stop working in React 17.\n         *\n         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\n         * prevents this from being invoked.\n         *\n         * @deprecated 16.3, use static getDerivedStateFromProps instead\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n         */\n        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<P>, nextContext: any): void;\n        /**\n         * Called immediately before rendering when new props or state is received. Not called for the initial render.\n         *\n         * Note: You cannot call `Component#setState` here.\n         *\n         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\n         * prevents this from being invoked.\n         *\n         * @deprecated 16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n         */\n        componentWillUpdate?(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): void;\n        /**\n         * Called immediately before rendering when new props or state is received. Not called for the initial render.\n         *\n         * Note: You cannot call `Component#setState` here.\n         *\n         * This method will not stop working in React 17.\n         *\n         * Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\n         * prevents this from being invoked.\n         *\n         * @deprecated 16.3, use getSnapshotBeforeUpdate instead\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update\n         * @see https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n         */\n        UNSAFE_componentWillUpdate?(nextProps: Readonly<P>, nextState: Readonly<S>, nextContext: any): void;\n    }\n\n    interface Mixin<P, S> extends ComponentLifecycle<P, S> {\n        mixins?: Array<Mixin<P, S>> | undefined;\n        statics?: {\n            [key: string]: any;\n        } | undefined;\n\n        displayName?: string | undefined;\n        propTypes?: ValidationMap<any> | undefined;\n        contextTypes?: ValidationMap<any> | undefined;\n        childContextTypes?: ValidationMap<any> | undefined;\n\n        getDefaultProps?(): P;\n        getInitialState?(): S;\n    }\n\n    interface ComponentSpec<P, S> extends Mixin<P, S> {\n        render(): ReactNode;\n\n        [propertyName: string]: any;\n    }\n\n    function createRef<T>(): RefObject<T>;\n\n    // will show `ForwardRef(${Component.displayName || Component.name})` in devtools by default,\n    // but can be given its own specific name\n    interface ForwardRefExoticComponent<P> extends NamedExoticComponent<P> {\n        defaultProps?: Partial<P> | undefined;\n        propTypes?: WeakValidationMap<P> | undefined;\n    }\n\n    function forwardRef<T, P = {}>(render: ForwardRefRenderFunction<T, P>): ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>>;\n\n    /** Ensures that the props do not include ref at all */\n    type PropsWithoutRef<P> =\n        // Pick would not be sufficient for this. We'd like to avoid unnecessary mapping and need a distributive conditional to support unions.\n        // see: https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#distributive-conditional-types\n        // https://github.com/Microsoft/TypeScript/issues/28339\n        P extends any ? ('ref' extends keyof P ? Pick<P, Exclude<keyof P, 'ref'>> : P) : P;\n    /** Ensures that the props do not include string ref, which cannot be forwarded */\n    type PropsWithRef<P> =\n        // Just \"P extends { ref?: infer R }\" looks sufficient, but R will infer as {} if P is {}.\n        'ref' extends keyof P\n            ? P extends { ref?: infer R | undefined }\n                ? string extends R\n                    ? PropsWithoutRef<P> & { ref?: Exclude<R, string> | undefined }\n                    : P\n                : P\n            : P;\n\n    type PropsWithChildren<P> = P & { children?: ReactNode | undefined };\n\n    /**\n     * NOTE: prefer ComponentPropsWithRef, if the ref is forwarded,\n     * or ComponentPropsWithoutRef when refs are not supported.\n     */\n    type ComponentProps<T extends keyof JSX.IntrinsicElements | JSXElementConstructor<any>> =\n        T extends JSXElementConstructor<infer P>\n            ? P\n            : T extends keyof JSX.IntrinsicElements\n                ? JSX.IntrinsicElements[T]\n                : {};\n    type ComponentPropsWithRef<T extends ElementType> =\n        T extends (new (props: infer P) => Component<any, any>)\n            ? PropsWithoutRef<P> & RefAttributes<InstanceType<T>>\n            : PropsWithRef<ComponentProps<T>>;\n    type ComponentPropsWithoutRef<T extends ElementType> =\n        PropsWithoutRef<ComponentProps<T>>;\n\n    type ComponentRef<T extends ElementType> = T extends NamedExoticComponent<\n        ComponentPropsWithoutRef<T> & RefAttributes<infer Method>\n    >\n        ? Method\n        : ComponentPropsWithRef<T> extends RefAttributes<infer Method>\n            ? Method\n            : never;\n\n    // will show `Memo(${Component.displayName || Component.name})` in devtools by default,\n    // but can be given its own specific name\n    type MemoExoticComponent<T extends ComponentType<any>> = NamedExoticComponent<ComponentPropsWithRef<T>> & {\n        readonly type: T;\n    };\n\n    function memo<P extends object>(\n        Component: FunctionComponent<P>,\n        propsAreEqual?: (prevProps: Readonly<PropsWithChildren<P>>, nextProps: Readonly<PropsWithChildren<P>>) => boolean\n    ): NamedExoticComponent<P>;\n    function memo<T extends ComponentType<any>>(\n        Component: T,\n        propsAreEqual?: (prevProps: Readonly<ComponentProps<T>>, nextProps: Readonly<ComponentProps<T>>) => boolean\n    ): MemoExoticComponent<T>;\n\n    type LazyExoticComponent<T extends ComponentType<any>> = ExoticComponent<ComponentPropsWithRef<T>> & {\n        readonly _result: T;\n    };\n\n    function lazy<T extends ComponentType<any>>(\n        factory: () => Promise<{ default: T }>\n    ): LazyExoticComponent<T>;\n\n    //\n    // React Hooks\n    // ----------------------------------------------------------------------\n\n    // based on the code in https://github.com/facebook/react/pull/13968\n\n    // Unlike the class component setState, the updates are not allowed to be partial\n    type SetStateAction<S> = S | ((prevState: S) => S);\n    // this technically does accept a second argument, but it's already under a deprecation warning\n    // and it's not even released so probably better to not define it.\n    type Dispatch<A> = (value: A) => void;\n    // Since action _can_ be undefined, dispatch may be called without any parameters.\n    type DispatchWithoutAction = () => void;\n    // Unlike redux, the actions _can_ be anything\n    type Reducer<S, A> = (prevState: S, action: A) => S;\n    // If useReducer accepts a reducer without action, dispatch may be called without any parameters.\n    type ReducerWithoutAction<S> = (prevState: S) => S;\n    // types used to try and prevent the compiler from reducing S\n    // to a supertype common with the second argument to useReducer()\n    type ReducerState<R extends Reducer<any, any>> = R extends Reducer<infer S, any> ? S : never;\n    type ReducerAction<R extends Reducer<any, any>> = R extends Reducer<any, infer A> ? A : never;\n    // The identity check is done with the SameValue algorithm (Object.is), which is stricter than ===\n    type ReducerStateWithoutAction<R extends ReducerWithoutAction<any>> =\n        R extends ReducerWithoutAction<infer S> ? S : never;\n    // TODO (TypeScript 3.0): ReadonlyArray<unknown>\n    type DependencyList = ReadonlyArray<any>;\n\n    // NOTE: callbacks are _only_ allowed to return either void, or a destructor.\n    type EffectCallback = () => (void | Destructor);\n\n    interface MutableRefObject<T> {\n        current: T;\n    }\n\n    // This will technically work if you give a Consumer<T> or Provider<T> but it's deprecated and warns\n    /**\n     * Accepts a context object (the value returned from `React.createContext`) and returns the current\n     * context value, as given by the nearest context provider for the given context.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#usecontext\n     */\n    function useContext<T>(context: Context<T>/*, (not public API) observedBits?: number|boolean */): T;\n    /**\n     * Returns a stateful value, and a function to update it.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#usestate\n     */\n    function useState<S>(initialState: S | (() => S)): [S, Dispatch<SetStateAction<S>>];\n    // convenience overload when first argument is omitted\n    /**\n     * Returns a stateful value, and a function to update it.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#usestate\n     */\n    function useState<S = undefined>(): [S | undefined, Dispatch<SetStateAction<S | undefined>>];\n    /**\n     * An alternative to `useState`.\n     *\n     * `useReducer` is usually preferable to `useState` when you have complex state logic that involves\n     * multiple sub-values. It also lets you optimize performance for components that trigger deep\n     * updates because you can pass `dispatch` down instead of callbacks.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#usereducer\n     */\n    // overload where dispatch could accept 0 arguments.\n    function useReducer<R extends ReducerWithoutAction<any>, I>(\n        reducer: R,\n        initializerArg: I,\n        initializer: (arg: I) => ReducerStateWithoutAction<R>\n    ): [ReducerStateWithoutAction<R>, DispatchWithoutAction];\n    /**\n     * An alternative to `useState`.\n     *\n     * `useReducer` is usually preferable to `useState` when you have complex state logic that involves\n     * multiple sub-values. It also lets you optimize performance for components that trigger deep\n     * updates because you can pass `dispatch` down instead of callbacks.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#usereducer\n     */\n    // overload where dispatch could accept 0 arguments.\n    function useReducer<R extends ReducerWithoutAction<any>>(\n        reducer: R,\n        initializerArg: ReducerStateWithoutAction<R>,\n        initializer?: undefined\n    ): [ReducerStateWithoutAction<R>, DispatchWithoutAction];\n    /**\n     * An alternative to `useState`.\n     *\n     * `useReducer` is usually preferable to `useState` when you have complex state logic that involves\n     * multiple sub-values. It also lets you optimize performance for components that trigger deep\n     * updates because you can pass `dispatch` down instead of callbacks.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#usereducer\n     */\n    // overload where \"I\" may be a subset of ReducerState<R>; used to provide autocompletion.\n    // If \"I\" matches ReducerState<R> exactly then the last overload will allow initializer to be omitted.\n    // the last overload effectively behaves as if the identity function (x => x) is the initializer.\n    function useReducer<R extends Reducer<any, any>, I>(\n        reducer: R,\n        initializerArg: I & ReducerState<R>,\n        initializer: (arg: I & ReducerState<R>) => ReducerState<R>\n    ): [ReducerState<R>, Dispatch<ReducerAction<R>>];\n    /**\n     * An alternative to `useState`.\n     *\n     * `useReducer` is usually preferable to `useState` when you have complex state logic that involves\n     * multiple sub-values. It also lets you optimize performance for components that trigger deep\n     * updates because you can pass `dispatch` down instead of callbacks.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#usereducer\n     */\n    // overload for free \"I\"; all goes as long as initializer converts it into \"ReducerState<R>\".\n    function useReducer<R extends Reducer<any, any>, I>(\n        reducer: R,\n        initializerArg: I,\n        initializer: (arg: I) => ReducerState<R>\n    ): [ReducerState<R>, Dispatch<ReducerAction<R>>];\n    /**\n     * An alternative to `useState`.\n     *\n     * `useReducer` is usually preferable to `useState` when you have complex state logic that involves\n     * multiple sub-values. It also lets you optimize performance for components that trigger deep\n     * updates because you can pass `dispatch` down instead of callbacks.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#usereducer\n     */\n\n    // I'm not sure if I keep this 2-ary or if I make it (2,3)-ary; it's currently (2,3)-ary.\n    // The Flow types do have an overload for 3-ary invocation with undefined initializer.\n\n    // NOTE: without the ReducerState indirection, TypeScript would reduce S to be the most common\n    // supertype between the reducer's return type and the initialState (or the initializer's return type),\n    // which would prevent autocompletion from ever working.\n\n    // TODO: double-check if this weird overload logic is necessary. It is possible it's either a bug\n    // in older versions, or a regression in newer versions of the typescript completion service.\n    function useReducer<R extends Reducer<any, any>>(\n        reducer: R,\n        initialState: ReducerState<R>,\n        initializer?: undefined\n    ): [ReducerState<R>, Dispatch<ReducerAction<R>>];\n    /**\n     * `useRef` returns a mutable ref object whose `.current` property is initialized to the passed argument\n     * (`initialValue`). The returned object will persist for the full lifetime of the component.\n     *\n     * Note that `useRef()` is useful for more than the `ref` attribute. It’s handy for keeping any mutable\n     * value around similar to how you’d use instance fields in classes.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#useref\n     */\n    function useRef<T>(initialValue: T): MutableRefObject<T>;\n    // convenience overload for refs given as a ref prop as they typically start with a null value\n    /**\n     * `useRef` returns a mutable ref object whose `.current` property is initialized to the passed argument\n     * (`initialValue`). The returned object will persist for the full lifetime of the component.\n     *\n     * Note that `useRef()` is useful for more than the `ref` attribute. It’s handy for keeping any mutable\n     * value around similar to how you’d use instance fields in classes.\n     *\n     * Usage note: if you need the result of useRef to be directly mutable, include `| null` in the type\n     * of the generic argument.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#useref\n     */\n    function useRef<T>(initialValue: T|null): RefObject<T>;\n    // convenience overload for potentially undefined initialValue / call with 0 arguments\n    // has a default to stop it from defaulting to {} instead\n    /**\n     * `useRef` returns a mutable ref object whose `.current` property is initialized to the passed argument\n     * (`initialValue`). The returned object will persist for the full lifetime of the component.\n     *\n     * Note that `useRef()` is useful for more than the `ref` attribute. It’s handy for keeping any mutable\n     * value around similar to how you’d use instance fields in classes.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#useref\n     */\n    function useRef<T = undefined>(): MutableRefObject<T | undefined>;\n    /**\n     * The signature is identical to `useEffect`, but it fires synchronously after all DOM mutations.\n     * Use this to read layout from the DOM and synchronously re-render. Updates scheduled inside\n     * `useLayoutEffect` will be flushed synchronously, before the browser has a chance to paint.\n     *\n     * Prefer the standard `useEffect` when possible to avoid blocking visual updates.\n     *\n     * If you’re migrating code from a class component, `useLayoutEffect` fires in the same phase as\n     * `componentDidMount` and `componentDidUpdate`.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#uselayouteffect\n     */\n    function useLayoutEffect(effect: EffectCallback, deps?: DependencyList): void;\n    /**\n     * Accepts a function that contains imperative, possibly effectful code.\n     *\n     * @param effect Imperative function that can return a cleanup function\n     * @param deps If present, effect will only activate if the values in the list change.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#useeffect\n     */\n    function useEffect(effect: EffectCallback, deps?: DependencyList): void;\n    // NOTE: this does not accept strings, but this will have to be fixed by removing strings from type Ref<T>\n    /**\n     * `useImperativeHandle` customizes the instance value that is exposed to parent components when using\n     * `ref`. As always, imperative code using refs should be avoided in most cases.\n     *\n     * `useImperativeHandle` should be used with `React.forwardRef`.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#useimperativehandle\n     */\n    function useImperativeHandle<T, R extends T>(ref: Ref<T>|undefined, init: () => R, deps?: DependencyList): void;\n    // I made 'inputs' required here and in useMemo as there's no point to memoizing without the memoization key\n    // useCallback(X) is identical to just using X, useMemo(() => Y) is identical to just using Y.\n    /**\n     * `useCallback` will return a memoized version of the callback that only changes if one of the `inputs`\n     * has changed.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#usecallback\n     */\n    // TODO (TypeScript 3.0): <T extends (...args: never[]) => unknown>\n    function useCallback<T extends (...args: any[]) => any>(callback: T, deps: DependencyList): T;\n    /**\n     * `useMemo` will only recompute the memoized value when one of the `deps` has changed.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#usememo\n     */\n    // allow undefined, but don't make it optional as that is very likely a mistake\n    function useMemo<T>(factory: () => T, deps: DependencyList | undefined): T;\n    /**\n     * `useDebugValue` can be used to display a label for custom hooks in React DevTools.\n     *\n     * NOTE: We don’t recommend adding debug values to every custom hook.\n     * It’s most valuable for custom hooks that are part of shared libraries.\n     *\n     * @version 16.8.0\n     * @see https://reactjs.org/docs/hooks-reference.html#usedebugvalue\n     */\n    // the name of the custom hook is itself derived from the function name at runtime:\n    // it's just the function name without the \"use\" prefix.\n    function useDebugValue<T>(value: T, format?: (value: T) => any): void;\n\n    //\n    // Event System\n    // ----------------------------------------------------------------------\n    // TODO: change any to unknown when moving to TS v3\n    interface BaseSyntheticEvent<E = object, C = any, T = any> {\n        nativeEvent: E;\n        currentTarget: C;\n        target: T;\n        bubbles: boolean;\n        cancelable: boolean;\n        defaultPrevented: boolean;\n        eventPhase: number;\n        isTrusted: boolean;\n        preventDefault(): void;\n        isDefaultPrevented(): boolean;\n        stopPropagation(): void;\n        isPropagationStopped(): boolean;\n        persist(): void;\n        timeStamp: number;\n        type: string;\n    }\n\n    /**\n     * currentTarget - a reference to the element on which the event listener is registered.\n     *\n     * target - a reference to the element from which the event was originally dispatched.\n     * This might be a child element to the element on which the event listener is registered.\n     * If you thought this should be `EventTarget & T`, see https://github.com/DefinitelyTyped/DefinitelyTyped/issues/11508#issuecomment-256045682\n     */\n    interface SyntheticEvent<T = Element, E = Event> extends BaseSyntheticEvent<E, EventTarget & T, EventTarget> {}\n\n    interface ClipboardEvent<T = Element> extends SyntheticEvent<T, NativeClipboardEvent> {\n        clipboardData: DataTransfer;\n    }\n\n    interface CompositionEvent<T = Element> extends SyntheticEvent<T, NativeCompositionEvent> {\n        data: string;\n    }\n\n    interface DragEvent<T = Element> extends MouseEvent<T, NativeDragEvent> {\n        dataTransfer: DataTransfer;\n    }\n\n    interface PointerEvent<T = Element> extends MouseEvent<T, NativePointerEvent> {\n        pointerId: number;\n        pressure: number;\n        tangentialPressure: number;\n        tiltX: number;\n        tiltY: number;\n        twist: number;\n        width: number;\n        height: number;\n        pointerType: 'mouse' | 'pen' | 'touch';\n        isPrimary: boolean;\n    }\n\n    interface FocusEvent<Target = Element, RelatedTarget = Element> extends SyntheticEvent<Target, NativeFocusEvent> {\n        relatedTarget: (EventTarget & RelatedTarget) | null;\n        target: EventTarget & Target;\n    }\n\n    interface FormEvent<T = Element> extends SyntheticEvent<T> {\n    }\n\n    interface InvalidEvent<T = Element> extends SyntheticEvent<T> {\n        target: EventTarget & T;\n    }\n\n    interface ChangeEvent<T = Element> extends SyntheticEvent<T> {\n        target: EventTarget & T;\n    }\n\n    interface KeyboardEvent<T = Element> extends UIEvent<T, NativeKeyboardEvent> {\n        altKey: boolean;\n        /** @deprecated */\n        charCode: number;\n        ctrlKey: boolean;\n        code: string;\n        /**\n         * See [DOM Level 3 Events spec](https://www.w3.org/TR/uievents-key/#keys-modifier). for a list of valid (case-sensitive) arguments to this method.\n         */\n        getModifierState(key: string): boolean;\n        /**\n         * See the [DOM Level 3 Events spec](https://www.w3.org/TR/uievents-key/#named-key-attribute-values). for possible values\n         */\n        key: string;\n        /** @deprecated */\n        keyCode: number;\n        locale: string;\n        location: number;\n        metaKey: boolean;\n        repeat: boolean;\n        shiftKey: boolean;\n        /** @deprecated */\n        which: number;\n    }\n\n    interface MouseEvent<T = Element, E = NativeMouseEvent> extends UIEvent<T, E> {\n        altKey: boolean;\n        button: number;\n        buttons: number;\n        clientX: number;\n        clientY: number;\n        ctrlKey: boolean;\n        /**\n         * See [DOM Level 3 Events spec](https://www.w3.org/TR/uievents-key/#keys-modifier). for a list of valid (case-sensitive) arguments to this method.\n         */\n        getModifierState(key: string): boolean;\n        metaKey: boolean;\n        movementX: number;\n        movementY: number;\n        pageX: number;\n        pageY: number;\n        relatedTarget: EventTarget | null;\n        screenX: number;\n        screenY: number;\n        shiftKey: boolean;\n    }\n\n    interface TouchEvent<T = Element> extends UIEvent<T, NativeTouchEvent> {\n        altKey: boolean;\n        changedTouches: TouchList;\n        ctrlKey: boolean;\n        /**\n         * See [DOM Level 3 Events spec](https://www.w3.org/TR/uievents-key/#keys-modifier). for a list of valid (case-sensitive) arguments to this method.\n         */\n        getModifierState(key: string): boolean;\n        metaKey: boolean;\n        shiftKey: boolean;\n        targetTouches: TouchList;\n        touches: TouchList;\n    }\n\n    interface UIEvent<T = Element, E = NativeUIEvent> extends SyntheticEvent<T, E> {\n        detail: number;\n        view: AbstractView;\n    }\n\n    interface WheelEvent<T = Element> extends MouseEvent<T, NativeWheelEvent> {\n        deltaMode: number;\n        deltaX: number;\n        deltaY: number;\n        deltaZ: number;\n    }\n\n    interface AnimationEvent<T = Element> extends SyntheticEvent<T, NativeAnimationEvent> {\n        animationName: string;\n        elapsedTime: number;\n        pseudoElement: string;\n    }\n\n    interface TransitionEvent<T = Element> extends SyntheticEvent<T, NativeTransitionEvent> {\n        elapsedTime: number;\n        propertyName: string;\n        pseudoElement: string;\n    }\n\n    //\n    // Event Handler Types\n    // ----------------------------------------------------------------------\n\n    type EventHandler<E extends SyntheticEvent<any>> = { bivarianceHack(event: E): void }[\"bivarianceHack\"];\n\n    type ReactEventHandler<T = Element> = EventHandler<SyntheticEvent<T>>;\n\n    type ClipboardEventHandler<T = Element> = EventHandler<ClipboardEvent<T>>;\n    type CompositionEventHandler<T = Element> = EventHandler<CompositionEvent<T>>;\n    type DragEventHandler<T = Element> = EventHandler<DragEvent<T>>;\n    type FocusEventHandler<T = Element> = EventHandler<FocusEvent<T>>;\n    type FormEventHandler<T = Element> = EventHandler<FormEvent<T>>;\n    type ChangeEventHandler<T = Element> = EventHandler<ChangeEvent<T>>;\n    type KeyboardEventHandler<T = Element> = EventHandler<KeyboardEvent<T>>;\n    type MouseEventHandler<T = Element> = EventHandler<MouseEvent<T>>;\n    type TouchEventHandler<T = Element> = EventHandler<TouchEvent<T>>;\n    type PointerEventHandler<T = Element> = EventHandler<PointerEvent<T>>;\n    type UIEventHandler<T = Element> = EventHandler<UIEvent<T>>;\n    type WheelEventHandler<T = Element> = EventHandler<WheelEvent<T>>;\n    type AnimationEventHandler<T = Element> = EventHandler<AnimationEvent<T>>;\n    type TransitionEventHandler<T = Element> = EventHandler<TransitionEvent<T>>;\n\n    //\n    // Props / DOM Attributes\n    // ----------------------------------------------------------------------\n\n    /**\n     * @deprecated. This was used to allow clients to pass `ref` and `key`\n     * to `createElement`, which is no longer necessary due to intersection\n     * types. If you need to declare a props object before passing it to\n     * `createElement` or a factory, use `ClassAttributes<T>`:\n     *\n     * ```ts\n     * var b: Button | null;\n     * var props: ButtonProps & ClassAttributes<Button> = {\n     *     ref: b => button = b, // ok!\n     *     label: \"I'm a Button\"\n     * };\n     * ```\n     */\n    interface Props<T> {\n        children?: ReactNode | undefined;\n        key?: Key | undefined;\n        ref?: LegacyRef<T> | undefined;\n    }\n\n    interface HTMLProps<T> extends AllHTMLAttributes<T>, ClassAttributes<T> {\n    }\n\n    type DetailedHTMLProps<E extends HTMLAttributes<T>, T> = ClassAttributes<T> & E;\n\n    interface SVGProps<T> extends SVGAttributes<T>, ClassAttributes<T> {\n    }\n\n    interface DOMAttributes<T> {\n        children?: ReactNode | undefined;\n        dangerouslySetInnerHTML?: {\n            __html: string;\n        } | undefined;\n\n        // Clipboard Events\n        onCopy?: ClipboardEventHandler<T> | undefined;\n        onCopyCapture?: ClipboardEventHandler<T> | undefined;\n        onCut?: ClipboardEventHandler<T> | undefined;\n        onCutCapture?: ClipboardEventHandler<T> | undefined;\n        onPaste?: ClipboardEventHandler<T> | undefined;\n        onPasteCapture?: ClipboardEventHandler<T> | undefined;\n\n        // Composition Events\n        onCompositionEnd?: CompositionEventHandler<T> | undefined;\n        onCompositionEndCapture?: CompositionEventHandler<T> | undefined;\n        onCompositionStart?: CompositionEventHandler<T> | undefined;\n        onCompositionStartCapture?: CompositionEventHandler<T> | undefined;\n        onCompositionUpdate?: CompositionEventHandler<T> | undefined;\n        onCompositionUpdateCapture?: CompositionEventHandler<T> | undefined;\n\n        // Focus Events\n        onFocus?: FocusEventHandler<T> | undefined;\n        onFocusCapture?: FocusEventHandler<T> | undefined;\n        onBlur?: FocusEventHandler<T> | undefined;\n        onBlurCapture?: FocusEventHandler<T> | undefined;\n\n        // Form Events\n        onChange?: FormEventHandler<T> | undefined;\n        onChangeCapture?: FormEventHandler<T> | undefined;\n        onBeforeInput?: FormEventHandler<T> | undefined;\n        onBeforeInputCapture?: FormEventHandler<T> | undefined;\n        onInput?: FormEventHandler<T> | undefined;\n        onInputCapture?: FormEventHandler<T> | undefined;\n        onReset?: FormEventHandler<T> | undefined;\n        onResetCapture?: FormEventHandler<T> | undefined;\n        onSubmit?: FormEventHandler<T> | undefined;\n        onSubmitCapture?: FormEventHandler<T> | undefined;\n        onInvalid?: FormEventHandler<T> | undefined;\n        onInvalidCapture?: FormEventHandler<T> | undefined;\n\n        // Image Events\n        onLoad?: ReactEventHandler<T> | undefined;\n        onLoadCapture?: ReactEventHandler<T> | undefined;\n        onError?: ReactEventHandler<T> | undefined; // also a Media Event\n        onErrorCapture?: ReactEventHandler<T> | undefined; // also a Media Event\n\n        // Keyboard Events\n        onKeyDown?: KeyboardEventHandler<T> | undefined;\n        onKeyDownCapture?: KeyboardEventHandler<T> | undefined;\n        onKeyPress?: KeyboardEventHandler<T> | undefined;\n        onKeyPressCapture?: KeyboardEventHandler<T> | undefined;\n        onKeyUp?: KeyboardEventHandler<T> | undefined;\n        onKeyUpCapture?: KeyboardEventHandler<T> | undefined;\n\n        // Media Events\n        onAbort?: ReactEventHandler<T> | undefined;\n        onAbortCapture?: ReactEventHandler<T> | undefined;\n        onCanPlay?: ReactEventHandler<T> | undefined;\n        onCanPlayCapture?: ReactEventHandler<T> | undefined;\n        onCanPlayThrough?: ReactEventHandler<T> | undefined;\n        onCanPlayThroughCapture?: ReactEventHandler<T> | undefined;\n        onDurationChange?: ReactEventHandler<T> | undefined;\n        onDurationChangeCapture?: ReactEventHandler<T> | undefined;\n        onEmptied?: ReactEventHandler<T> | undefined;\n        onEmptiedCapture?: ReactEventHandler<T> | undefined;\n        onEncrypted?: ReactEventHandler<T> | undefined;\n        onEncryptedCapture?: ReactEventHandler<T> | undefined;\n        onEnded?: ReactEventHandler<T> | undefined;\n        onEndedCapture?: ReactEventHandler<T> | undefined;\n        onLoadedData?: ReactEventHandler<T> | undefined;\n        onLoadedDataCapture?: ReactEventHandler<T> | undefined;\n        onLoadedMetadata?: ReactEventHandler<T> | undefined;\n        onLoadedMetadataCapture?: ReactEventHandler<T> | undefined;\n        onLoadStart?: ReactEventHandler<T> | undefined;\n        onLoadStartCapture?: ReactEventHandler<T> | undefined;\n        onPause?: ReactEventHandler<T> | undefined;\n        onPauseCapture?: ReactEventHandler<T> | undefined;\n        onPlay?: ReactEventHandler<T> | undefined;\n        onPlayCapture?: ReactEventHandler<T> | undefined;\n        onPlaying?: ReactEventHandler<T> | undefined;\n        onPlayingCapture?: ReactEventHandler<T> | undefined;\n        onProgress?: ReactEventHandler<T> | undefined;\n        onProgressCapture?: ReactEventHandler<T> | undefined;\n        onRateChange?: ReactEventHandler<T> | undefined;\n        onRateChangeCapture?: ReactEventHandler<T> | undefined;\n        onSeeked?: ReactEventHandler<T> | undefined;\n        onSeekedCapture?: ReactEventHandler<T> | undefined;\n        onSeeking?: ReactEventHandler<T> | undefined;\n        onSeekingCapture?: ReactEventHandler<T> | undefined;\n        onStalled?: ReactEventHandler<T> | undefined;\n        onStalledCapture?: ReactEventHandler<T> | undefined;\n        onSuspend?: ReactEventHandler<T> | undefined;\n        onSuspendCapture?: ReactEventHandler<T> | undefined;\n        onTimeUpdate?: ReactEventHandler<T> | undefined;\n        onTimeUpdateCapture?: ReactEventHandler<T> | undefined;\n        onVolumeChange?: ReactEventHandler<T> | undefined;\n        onVolumeChangeCapture?: ReactEventHandler<T> | undefined;\n        onWaiting?: ReactEventHandler<T> | undefined;\n        onWaitingCapture?: ReactEventHandler<T> | undefined;\n\n        // MouseEvents\n        onAuxClick?: MouseEventHandler<T> | undefined;\n        onAuxClickCapture?: MouseEventHandler<T> | undefined;\n        onClick?: MouseEventHandler<T> | undefined;\n        onClickCapture?: MouseEventHandler<T> | undefined;\n        onContextMenu?: MouseEventHandler<T> | undefined;\n        onContextMenuCapture?: MouseEventHandler<T> | undefined;\n        onDoubleClick?: MouseEventHandler<T> | undefined;\n        onDoubleClickCapture?: MouseEventHandler<T> | undefined;\n        onDrag?: DragEventHandler<T> | undefined;\n        onDragCapture?: DragEventHandler<T> | undefined;\n        onDragEnd?: DragEventHandler<T> | undefined;\n        onDragEndCapture?: DragEventHandler<T> | undefined;\n        onDragEnter?: DragEventHandler<T> | undefined;\n        onDragEnterCapture?: DragEventHandler<T> | undefined;\n        onDragExit?: DragEventHandler<T> | undefined;\n        onDragExitCapture?: DragEventHandler<T> | undefined;\n        onDragLeave?: DragEventHandler<T> | undefined;\n        onDragLeaveCapture?: DragEventHandler<T> | undefined;\n        onDragOver?: DragEventHandler<T> | undefined;\n        onDragOverCapture?: DragEventHandler<T> | undefined;\n        onDragStart?: DragEventHandler<T> | undefined;\n        onDragStartCapture?: DragEventHandler<T> | undefined;\n        onDrop?: DragEventHandler<T> | undefined;\n        onDropCapture?: DragEventHandler<T> | undefined;\n        onMouseDown?: MouseEventHandler<T> | undefined;\n        onMouseDownCapture?: MouseEventHandler<T> | undefined;\n        onMouseEnter?: MouseEventHandler<T> | undefined;\n        onMouseLeave?: MouseEventHandler<T> | undefined;\n        onMouseMove?: MouseEventHandler<T> | undefined;\n        onMouseMoveCapture?: MouseEventHandler<T> | undefined;\n        onMouseOut?: MouseEventHandler<T> | undefined;\n        onMouseOutCapture?: MouseEventHandler<T> | undefined;\n        onMouseOver?: MouseEventHandler<T> | undefined;\n        onMouseOverCapture?: MouseEventHandler<T> | undefined;\n        onMouseUp?: MouseEventHandler<T> | undefined;\n        onMouseUpCapture?: MouseEventHandler<T> | undefined;\n\n        // Selection Events\n        onSelect?: ReactEventHandler<T> | undefined;\n        onSelectCapture?: ReactEventHandler<T> | undefined;\n\n        // Touch Events\n        onTouchCancel?: TouchEventHandler<T> | undefined;\n        onTouchCancelCapture?: TouchEventHandler<T> | undefined;\n        onTouchEnd?: TouchEventHandler<T> | undefined;\n        onTouchEndCapture?: TouchEventHandler<T> | undefined;\n        onTouchMove?: TouchEventHandler<T> | undefined;\n        onTouchMoveCapture?: TouchEventHandler<T> | undefined;\n        onTouchStart?: TouchEventHandler<T> | undefined;\n        onTouchStartCapture?: TouchEventHandler<T> | undefined;\n\n        // Pointer Events\n        onPointerDown?: PointerEventHandler<T> | undefined;\n        onPointerDownCapture?: PointerEventHandler<T> | undefined;\n        onPointerMove?: PointerEventHandler<T> | undefined;\n        onPointerMoveCapture?: PointerEventHandler<T> | undefined;\n        onPointerUp?: PointerEventHandler<T> | undefined;\n        onPointerUpCapture?: PointerEventHandler<T> | undefined;\n        onPointerCancel?: PointerEventHandler<T> | undefined;\n        onPointerCancelCapture?: PointerEventHandler<T> | undefined;\n        onPointerEnter?: PointerEventHandler<T> | undefined;\n        onPointerEnterCapture?: PointerEventHandler<T> | undefined;\n        onPointerLeave?: PointerEventHandler<T> | undefined;\n        onPointerLeaveCapture?: PointerEventHandler<T> | undefined;\n        onPointerOver?: PointerEventHandler<T> | undefined;\n        onPointerOverCapture?: PointerEventHandler<T> | undefined;\n        onPointerOut?: PointerEventHandler<T> | undefined;\n        onPointerOutCapture?: PointerEventHandler<T> | undefined;\n        onGotPointerCapture?: PointerEventHandler<T> | undefined;\n        onGotPointerCaptureCapture?: PointerEventHandler<T> | undefined;\n        onLostPointerCapture?: PointerEventHandler<T> | undefined;\n        onLostPointerCaptureCapture?: PointerEventHandler<T> | undefined;\n\n        // UI Events\n        onScroll?: UIEventHandler<T> | undefined;\n        onScrollCapture?: UIEventHandler<T> | undefined;\n\n        // Wheel Events\n        onWheel?: WheelEventHandler<T> | undefined;\n        onWheelCapture?: WheelEventHandler<T> | undefined;\n\n        // Animation Events\n        onAnimationStart?: AnimationEventHandler<T> | undefined;\n        onAnimationStartCapture?: AnimationEventHandler<T> | undefined;\n        onAnimationEnd?: AnimationEventHandler<T> | undefined;\n        onAnimationEndCapture?: AnimationEventHandler<T> | undefined;\n        onAnimationIteration?: AnimationEventHandler<T> | undefined;\n        onAnimationIterationCapture?: AnimationEventHandler<T> | undefined;\n\n        // Transition Events\n        onTransitionEnd?: TransitionEventHandler<T> | undefined;\n        onTransitionEndCapture?: TransitionEventHandler<T> | undefined;\n    }\n\n    export interface CSSProperties extends CSS.Properties<string | number> {\n        /**\n         * The index signature was removed to enable closed typing for style\n         * using CSSType. You're able to use type assertion or module augmentation\n         * to add properties or an index signature of your own.\n         *\n         * For examples and more information, visit:\n         * https://github.com/frenic/csstype#what-should-i-do-when-i-get-type-errors\n         */\n    }\n\n    // All the WAI-ARIA 1.1 attributes from https://www.w3.org/TR/wai-aria-1.1/\n    interface AriaAttributes {\n        /** Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application. */\n        'aria-activedescendant'?: string | undefined;\n        /** Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute. */\n        'aria-atomic'?: Booleanish | undefined;\n        /**\n         * Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\n         * presented if they are made.\n         */\n        'aria-autocomplete'?: 'none' | 'inline' | 'list' | 'both' | undefined;\n        /** Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user. */\n        'aria-busy'?: Booleanish | undefined;\n        /**\n         * Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets.\n         * @see aria-pressed @see aria-selected.\n         */\n        'aria-checked'?: boolean | 'false' | 'mixed' | 'true' | undefined;\n        /**\n         * Defines the total number of columns in a table, grid, or treegrid.\n         * @see aria-colindex.\n         */\n        'aria-colcount'?: number | undefined;\n        /**\n         * Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n         * @see aria-colcount @see aria-colspan.\n         */\n        'aria-colindex'?: number | undefined;\n        /**\n         * Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n         * @see aria-colindex @see aria-rowspan.\n         */\n        'aria-colspan'?: number | undefined;\n        /**\n         * Identifies the element (or elements) whose contents or presence are controlled by the current element.\n         * @see aria-owns.\n         */\n        'aria-controls'?: string | undefined;\n        /** Indicates the element that represents the current item within a container or set of related elements. */\n        'aria-current'?: boolean | 'false' | 'true' | 'page' | 'step' | 'location' | 'date' | 'time' | undefined;\n        /**\n         * Identifies the element (or elements) that describes the object.\n         * @see aria-labelledby\n         */\n        'aria-describedby'?: string | undefined;\n        /**\n         * Identifies the element that provides a detailed, extended description for the object.\n         * @see aria-describedby.\n         */\n        'aria-details'?: string | undefined;\n        /**\n         * Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n         * @see aria-hidden @see aria-readonly.\n         */\n        'aria-disabled'?: Booleanish | undefined;\n        /**\n         * Indicates what functions can be performed when a dragged object is released on the drop target.\n         * @deprecated in ARIA 1.1\n         */\n        'aria-dropeffect'?: 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup' | undefined;\n        /**\n         * Identifies the element that provides an error message for the object.\n         * @see aria-invalid @see aria-describedby.\n         */\n        'aria-errormessage'?: string | undefined;\n        /** Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed. */\n        'aria-expanded'?: Booleanish | undefined;\n        /**\n         * Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\n         * allows assistive technology to override the general default of reading in document source order.\n         */\n        'aria-flowto'?: string | undefined;\n        /**\n         * Indicates an element's \"grabbed\" state in a drag-and-drop operation.\n         * @deprecated in ARIA 1.1\n         */\n        'aria-grabbed'?: Booleanish | undefined;\n        /** Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element. */\n        'aria-haspopup'?: boolean | 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog' | undefined;\n        /**\n         * Indicates whether the element is exposed to an accessibility API.\n         * @see aria-disabled.\n         */\n        'aria-hidden'?: Booleanish | undefined;\n        /**\n         * Indicates the entered value does not conform to the format expected by the application.\n         * @see aria-errormessage.\n         */\n        'aria-invalid'?: boolean | 'false' | 'true' | 'grammar' | 'spelling' | undefined;\n        /** Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element. */\n        'aria-keyshortcuts'?: string | undefined;\n        /**\n         * Defines a string value that labels the current element.\n         * @see aria-labelledby.\n         */\n        'aria-label'?: string | undefined;\n        /**\n         * Identifies the element (or elements) that labels the current element.\n         * @see aria-describedby.\n         */\n        'aria-labelledby'?: string | undefined;\n        /** Defines the hierarchical level of an element within a structure. */\n        'aria-level'?: number | undefined;\n        /** Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region. */\n        'aria-live'?: 'off' | 'assertive' | 'polite' | undefined;\n        /** Indicates whether an element is modal when displayed. */\n        'aria-modal'?: Booleanish | undefined;\n        /** Indicates whether a text box accepts multiple lines of input or only a single line. */\n        'aria-multiline'?: Booleanish | undefined;\n        /** Indicates that the user may select more than one item from the current selectable descendants. */\n        'aria-multiselectable'?: Booleanish | undefined;\n        /** Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous. */\n        'aria-orientation'?: 'horizontal' | 'vertical' | undefined;\n        /**\n         * Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\n         * between DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n         * @see aria-controls.\n         */\n        'aria-owns'?: string | undefined;\n        /**\n         * Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\n         * A hint could be a sample value or a brief description of the expected format.\n         */\n        'aria-placeholder'?: string | undefined;\n        /**\n         * Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n         * @see aria-setsize.\n         */\n        'aria-posinset'?: number | undefined;\n        /**\n         * Indicates the current \"pressed\" state of toggle buttons.\n         * @see aria-checked @see aria-selected.\n         */\n        'aria-pressed'?: boolean | 'false' | 'mixed' | 'true' | undefined;\n        /**\n         * Indicates that the element is not editable, but is otherwise operable.\n         * @see aria-disabled.\n         */\n        'aria-readonly'?: Booleanish | undefined;\n        /**\n         * Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n         * @see aria-atomic.\n         */\n        'aria-relevant'?: 'additions' | 'additions removals' | 'additions text' | 'all' | 'removals' | 'removals additions' | 'removals text' | 'text' | 'text additions' | 'text removals' | undefined;\n        /** Indicates that user input is required on the element before a form may be submitted. */\n        'aria-required'?: Booleanish | undefined;\n        /** Defines a human-readable, author-localized description for the role of an element. */\n        'aria-roledescription'?: string | undefined;\n        /**\n         * Defines the total number of rows in a table, grid, or treegrid.\n         * @see aria-rowindex.\n         */\n        'aria-rowcount'?: number | undefined;\n        /**\n         * Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n         * @see aria-rowcount @see aria-rowspan.\n         */\n        'aria-rowindex'?: number | undefined;\n        /**\n         * Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n         * @see aria-rowindex @see aria-colspan.\n         */\n        'aria-rowspan'?: number | undefined;\n        /**\n         * Indicates the current \"selected\" state of various widgets.\n         * @see aria-checked @see aria-pressed.\n         */\n        'aria-selected'?: Booleanish | undefined;\n        /**\n         * Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n         * @see aria-posinset.\n         */\n        'aria-setsize'?: number | undefined;\n        /** Indicates if items in a table or grid are sorted in ascending or descending order. */\n        'aria-sort'?: 'none' | 'ascending' | 'descending' | 'other' | undefined;\n        /** Defines the maximum allowed value for a range widget. */\n        'aria-valuemax'?: number | undefined;\n        /** Defines the minimum allowed value for a range widget. */\n        'aria-valuemin'?: number | undefined;\n        /**\n         * Defines the current value for a range widget.\n         * @see aria-valuetext.\n         */\n        'aria-valuenow'?: number | undefined;\n        /** Defines the human readable text alternative of aria-valuenow for a range widget. */\n        'aria-valuetext'?: string | undefined;\n    }\n\n    // All the WAI-ARIA 1.1 role attribute values from https://www.w3.org/TR/wai-aria-1.1/#role_definitions\n    type AriaRole =\n        | 'alert'\n        | 'alertdialog'\n        | 'application'\n        | 'article'\n        | 'banner'\n        | 'button'\n        | 'cell'\n        | 'checkbox'\n        | 'columnheader'\n        | 'combobox'\n        | 'complementary'\n        | 'contentinfo'\n        | 'definition'\n        | 'dialog'\n        | 'directory'\n        | 'document'\n        | 'feed'\n        | 'figure'\n        | 'form'\n        | 'grid'\n        | 'gridcell'\n        | 'group'\n        | 'heading'\n        | 'img'\n        | 'link'\n        | 'list'\n        | 'listbox'\n        | 'listitem'\n        | 'log'\n        | 'main'\n        | 'marquee'\n        | 'math'\n        | 'menu'\n        | 'menubar'\n        | 'menuitem'\n        | 'menuitemcheckbox'\n        | 'menuitemradio'\n        | 'navigation'\n        | 'none'\n        | 'note'\n        | 'option'\n        | 'presentation'\n        | 'progressbar'\n        | 'radio'\n        | 'radiogroup'\n        | 'region'\n        | 'row'\n        | 'rowgroup'\n        | 'rowheader'\n        | 'scrollbar'\n        | 'search'\n        | 'searchbox'\n        | 'separator'\n        | 'slider'\n        | 'spinbutton'\n        | 'status'\n        | 'switch'\n        | 'tab'\n        | 'table'\n        | 'tablist'\n        | 'tabpanel'\n        | 'term'\n        | 'textbox'\n        | 'timer'\n        | 'toolbar'\n        | 'tooltip'\n        | 'tree'\n        | 'treegrid'\n        | 'treeitem'\n        | (string & {});\n\n    interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\n        // React-specific Attributes\n        defaultChecked?: boolean | undefined;\n        defaultValue?: string | number | ReadonlyArray<string> | undefined;\n        suppressContentEditableWarning?: boolean | undefined;\n        suppressHydrationWarning?: boolean | undefined;\n\n        // Standard HTML Attributes\n        accessKey?: string | undefined;\n        className?: string | undefined;\n        contentEditable?: Booleanish | \"inherit\" | undefined;\n        contextMenu?: string | undefined;\n        dir?: string | undefined;\n        draggable?: Booleanish | undefined;\n        hidden?: boolean | undefined;\n        id?: string | undefined;\n        lang?: string | undefined;\n        placeholder?: string | undefined;\n        slot?: string | undefined;\n        spellCheck?: Booleanish | undefined;\n        style?: CSSProperties | undefined;\n        tabIndex?: number | undefined;\n        title?: string | undefined;\n        translate?: 'yes' | 'no' | undefined;\n\n        // Unknown\n        radioGroup?: string | undefined; // <command>, <menuitem>\n\n        // WAI-ARIA\n        role?: AriaRole | undefined;\n\n        // RDFa Attributes\n        about?: string | undefined;\n        datatype?: string | undefined;\n        inlist?: any;\n        prefix?: string | undefined;\n        property?: string | undefined;\n        resource?: string | undefined;\n        typeof?: string | undefined;\n        vocab?: string | undefined;\n\n        // Non-standard Attributes\n        autoCapitalize?: string | undefined;\n        autoCorrect?: string | undefined;\n        autoSave?: string | undefined;\n        color?: string | undefined;\n        itemProp?: string | undefined;\n        itemScope?: boolean | undefined;\n        itemType?: string | undefined;\n        itemID?: string | undefined;\n        itemRef?: string | undefined;\n        results?: number | undefined;\n        security?: string | undefined;\n        unselectable?: 'on' | 'off' | undefined;\n\n        // Living Standard\n        /**\n         * Hints at the type of data that might be entered by the user while editing the element or its contents\n         * @see https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute\n         */\n        inputMode?: 'none' | 'text' | 'tel' | 'url' | 'email' | 'numeric' | 'decimal' | 'search' | undefined;\n        /**\n         * Specify that a standard HTML element should behave like a defined custom built-in element\n         * @see https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is\n         */\n        is?: string | undefined;\n    }\n\n    interface AllHTMLAttributes<T> extends HTMLAttributes<T> {\n        // Standard HTML Attributes\n        accept?: string | undefined;\n        acceptCharset?: string | undefined;\n        action?: string | undefined;\n        allowFullScreen?: boolean | undefined;\n        allowTransparency?: boolean | undefined;\n        alt?: string | undefined;\n        as?: string | undefined;\n        async?: boolean | undefined;\n        autoComplete?: string | undefined;\n        autoFocus?: boolean | undefined;\n        autoPlay?: boolean | undefined;\n        capture?: boolean | 'user' | 'environment' | undefined;\n        cellPadding?: number | string | undefined;\n        cellSpacing?: number | string | undefined;\n        charSet?: string | undefined;\n        challenge?: string | undefined;\n        checked?: boolean | undefined;\n        cite?: string | undefined;\n        classID?: string | undefined;\n        cols?: number | undefined;\n        colSpan?: number | undefined;\n        content?: string | undefined;\n        controls?: boolean | undefined;\n        coords?: string | undefined;\n        crossOrigin?: string | undefined;\n        data?: string | undefined;\n        dateTime?: string | undefined;\n        default?: boolean | undefined;\n        defer?: boolean | undefined;\n        disabled?: boolean | undefined;\n        download?: any;\n        encType?: string | undefined;\n        form?: string | undefined;\n        formAction?: string | undefined;\n        formEncType?: string | undefined;\n        formMethod?: string | undefined;\n        formNoValidate?: boolean | undefined;\n        formTarget?: string | undefined;\n        frameBorder?: number | string | undefined;\n        headers?: string | undefined;\n        height?: number | string | undefined;\n        high?: number | undefined;\n        href?: string | undefined;\n        hrefLang?: string | undefined;\n        htmlFor?: string | undefined;\n        httpEquiv?: string | undefined;\n        integrity?: string | undefined;\n        keyParams?: string | undefined;\n        keyType?: string | undefined;\n        kind?: string | undefined;\n        label?: string | undefined;\n        list?: string | undefined;\n        loop?: boolean | undefined;\n        low?: number | undefined;\n        manifest?: string | undefined;\n        marginHeight?: number | undefined;\n        marginWidth?: number | undefined;\n        max?: number | string | undefined;\n        maxLength?: number | undefined;\n        media?: string | undefined;\n        mediaGroup?: string | undefined;\n        method?: string | undefined;\n        min?: number | string | undefined;\n        minLength?: number | undefined;\n        multiple?: boolean | undefined;\n        muted?: boolean | undefined;\n        name?: string | undefined;\n        nonce?: string | undefined;\n        noValidate?: boolean | undefined;\n        open?: boolean | undefined;\n        optimum?: number | undefined;\n        pattern?: string | undefined;\n        placeholder?: string | undefined;\n        playsInline?: boolean | undefined;\n        poster?: string | undefined;\n        preload?: string | undefined;\n        readOnly?: boolean | undefined;\n        rel?: string | undefined;\n        required?: boolean | undefined;\n        reversed?: boolean | undefined;\n        rows?: number | undefined;\n        rowSpan?: number | undefined;\n        sandbox?: string | undefined;\n        scope?: string | undefined;\n        scoped?: boolean | undefined;\n        scrolling?: string | undefined;\n        seamless?: boolean | undefined;\n        selected?: boolean | undefined;\n        shape?: string | undefined;\n        size?: number | undefined;\n        sizes?: string | undefined;\n        span?: number | undefined;\n        src?: string | undefined;\n        srcDoc?: string | undefined;\n        srcLang?: string | undefined;\n        srcSet?: string | undefined;\n        start?: number | undefined;\n        step?: number | string | undefined;\n        summary?: string | undefined;\n        target?: string | undefined;\n        type?: string | undefined;\n        useMap?: string | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n        width?: number | string | undefined;\n        wmode?: string | undefined;\n        wrap?: string | undefined;\n    }\n\n    type HTMLAttributeReferrerPolicy =\n        | ''\n        | 'no-referrer'\n        | 'no-referrer-when-downgrade'\n        | 'origin'\n        | 'origin-when-cross-origin'\n        | 'same-origin'\n        | 'strict-origin'\n        | 'strict-origin-when-cross-origin'\n        | 'unsafe-url';\n\n    type HTMLAttributeAnchorTarget =\n        | '_self'\n        | '_blank'\n        | '_parent'\n        | '_top'\n        | (string & {});\n\n    interface AnchorHTMLAttributes<T> extends HTMLAttributes<T> {\n        download?: any;\n        href?: string | undefined;\n        hrefLang?: string | undefined;\n        media?: string | undefined;\n        ping?: string | undefined;\n        rel?: string | undefined;\n        target?: HTMLAttributeAnchorTarget | undefined;\n        type?: string | undefined;\n        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;\n    }\n\n    interface AudioHTMLAttributes<T> extends MediaHTMLAttributes<T> {}\n\n    interface AreaHTMLAttributes<T> extends HTMLAttributes<T> {\n        alt?: string | undefined;\n        coords?: string | undefined;\n        download?: any;\n        href?: string | undefined;\n        hrefLang?: string | undefined;\n        media?: string | undefined;\n        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;\n        rel?: string | undefined;\n        shape?: string | undefined;\n        target?: string | undefined;\n    }\n\n    interface BaseHTMLAttributes<T> extends HTMLAttributes<T> {\n        href?: string | undefined;\n        target?: string | undefined;\n    }\n\n    interface BlockquoteHTMLAttributes<T> extends HTMLAttributes<T> {\n        cite?: string | undefined;\n    }\n\n    interface ButtonHTMLAttributes<T> extends HTMLAttributes<T> {\n        autoFocus?: boolean | undefined;\n        disabled?: boolean | undefined;\n        form?: string | undefined;\n        formAction?: string | undefined;\n        formEncType?: string | undefined;\n        formMethod?: string | undefined;\n        formNoValidate?: boolean | undefined;\n        formTarget?: string | undefined;\n        name?: string | undefined;\n        type?: 'submit' | 'reset' | 'button' | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n    }\n\n    interface CanvasHTMLAttributes<T> extends HTMLAttributes<T> {\n        height?: number | string | undefined;\n        width?: number | string | undefined;\n    }\n\n    interface ColHTMLAttributes<T> extends HTMLAttributes<T> {\n        span?: number | undefined;\n        width?: number | string | undefined;\n    }\n\n    interface ColgroupHTMLAttributes<T> extends HTMLAttributes<T> {\n        span?: number | undefined;\n    }\n\n    interface DataHTMLAttributes<T> extends HTMLAttributes<T> {\n        value?: string | ReadonlyArray<string> | number | undefined;\n    }\n\n    interface DetailsHTMLAttributes<T> extends HTMLAttributes<T> {\n        open?: boolean | undefined;\n        onToggle?: ReactEventHandler<T> | undefined;\n    }\n\n    interface DelHTMLAttributes<T> extends HTMLAttributes<T> {\n        cite?: string | undefined;\n        dateTime?: string | undefined;\n    }\n\n    interface DialogHTMLAttributes<T> extends HTMLAttributes<T> {\n        open?: boolean | undefined;\n    }\n\n    interface EmbedHTMLAttributes<T> extends HTMLAttributes<T> {\n        height?: number | string | undefined;\n        src?: string | undefined;\n        type?: string | undefined;\n        width?: number | string | undefined;\n    }\n\n    interface FieldsetHTMLAttributes<T> extends HTMLAttributes<T> {\n        disabled?: boolean | undefined;\n        form?: string | undefined;\n        name?: string | undefined;\n    }\n\n    interface FormHTMLAttributes<T> extends HTMLAttributes<T> {\n        acceptCharset?: string | undefined;\n        action?: string | undefined;\n        autoComplete?: string | undefined;\n        encType?: string | undefined;\n        method?: string | undefined;\n        name?: string | undefined;\n        noValidate?: boolean | undefined;\n        target?: string | undefined;\n    }\n\n    interface HtmlHTMLAttributes<T> extends HTMLAttributes<T> {\n        manifest?: string | undefined;\n    }\n\n    interface IframeHTMLAttributes<T> extends HTMLAttributes<T> {\n        allow?: string | undefined;\n        allowFullScreen?: boolean | undefined;\n        allowTransparency?: boolean | undefined;\n        /** @deprecated */\n        frameBorder?: number | string | undefined;\n        height?: number | string | undefined;\n        loading?: \"eager\" | \"lazy\" | undefined;\n        /** @deprecated */\n        marginHeight?: number | undefined;\n        /** @deprecated */\n        marginWidth?: number | undefined;\n        name?: string | undefined;\n        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;\n        sandbox?: string | undefined;\n        /** @deprecated */\n        scrolling?: string | undefined;\n        seamless?: boolean | undefined;\n        src?: string | undefined;\n        srcDoc?: string | undefined;\n        width?: number | string | undefined;\n    }\n\n    interface ImgHTMLAttributes<T> extends HTMLAttributes<T> {\n        alt?: string | undefined;\n        crossOrigin?: \"anonymous\" | \"use-credentials\" | \"\" | undefined;\n        decoding?: \"async\" | \"auto\" | \"sync\" | undefined;\n        height?: number | string | undefined;\n        loading?: \"eager\" | \"lazy\" | undefined;\n        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;\n        sizes?: string | undefined;\n        src?: string | undefined;\n        srcSet?: string | undefined;\n        useMap?: string | undefined;\n        width?: number | string | undefined;\n    }\n\n    interface InsHTMLAttributes<T> extends HTMLAttributes<T> {\n        cite?: string | undefined;\n        dateTime?: string | undefined;\n    }\n\n    type HTMLInputTypeAttribute =\n        | 'button'\n        | 'checkbox'\n        | 'color'\n        | 'date'\n        | 'datetime-local'\n        | 'email'\n        | 'file'\n        | 'hidden'\n        | 'image'\n        | 'month'\n        | 'number'\n        | 'password'\n        | 'radio'\n        | 'range'\n        | 'reset'\n        | 'search'\n        | 'submit'\n        | 'tel'\n        | 'text'\n        | 'time'\n        | 'url'\n        | 'week'\n        | (string & {});\n\n    interface InputHTMLAttributes<T> extends HTMLAttributes<T> {\n        accept?: string | undefined;\n        alt?: string | undefined;\n        autoComplete?: string | undefined;\n        autoFocus?: boolean | undefined;\n        capture?: boolean | 'user' | 'environment' | undefined; // https://www.w3.org/TR/html-media-capture/#the-capture-attribute\n        checked?: boolean | undefined;\n        crossOrigin?: string | undefined;\n        disabled?: boolean | undefined;\n        enterKeyHint?: 'enter' | 'done' | 'go' | 'next' | 'previous' | 'search' | 'send' | undefined;\n        form?: string | undefined;\n        formAction?: string | undefined;\n        formEncType?: string | undefined;\n        formMethod?: string | undefined;\n        formNoValidate?: boolean | undefined;\n        formTarget?: string | undefined;\n        height?: number | string | undefined;\n        list?: string | undefined;\n        max?: number | string | undefined;\n        maxLength?: number | undefined;\n        min?: number | string | undefined;\n        minLength?: number | undefined;\n        multiple?: boolean | undefined;\n        name?: string | undefined;\n        pattern?: string | undefined;\n        placeholder?: string | undefined;\n        readOnly?: boolean | undefined;\n        required?: boolean | undefined;\n        size?: number | undefined;\n        src?: string | undefined;\n        step?: number | string | undefined;\n        type?: HTMLInputTypeAttribute | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n        width?: number | string | undefined;\n\n        onChange?: ChangeEventHandler<T> | undefined;\n    }\n\n    interface KeygenHTMLAttributes<T> extends HTMLAttributes<T> {\n        autoFocus?: boolean | undefined;\n        challenge?: string | undefined;\n        disabled?: boolean | undefined;\n        form?: string | undefined;\n        keyType?: string | undefined;\n        keyParams?: string | undefined;\n        name?: string | undefined;\n    }\n\n    interface LabelHTMLAttributes<T> extends HTMLAttributes<T> {\n        form?: string | undefined;\n        htmlFor?: string | undefined;\n    }\n\n    interface LiHTMLAttributes<T> extends HTMLAttributes<T> {\n        value?: string | ReadonlyArray<string> | number | undefined;\n    }\n\n    interface LinkHTMLAttributes<T> extends HTMLAttributes<T> {\n        as?: string | undefined;\n        crossOrigin?: string | undefined;\n        href?: string | undefined;\n        hrefLang?: string | undefined;\n        integrity?: string | undefined;\n        media?: string | undefined;\n        imageSrcSet?: string | undefined;\n        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;\n        rel?: string | undefined;\n        sizes?: string | undefined;\n        type?: string | undefined;\n        charSet?: string | undefined;\n    }\n\n    interface MapHTMLAttributes<T> extends HTMLAttributes<T> {\n        name?: string | undefined;\n    }\n\n    interface MenuHTMLAttributes<T> extends HTMLAttributes<T> {\n        type?: string | undefined;\n    }\n\n    interface MediaHTMLAttributes<T> extends HTMLAttributes<T> {\n        autoPlay?: boolean | undefined;\n        controls?: boolean | undefined;\n        controlsList?: string | undefined;\n        crossOrigin?: string | undefined;\n        loop?: boolean | undefined;\n        mediaGroup?: string | undefined;\n        muted?: boolean | undefined;\n        playsInline?: boolean | undefined;\n        preload?: string | undefined;\n        src?: string | undefined;\n    }\n\n    interface MetaHTMLAttributes<T> extends HTMLAttributes<T> {\n        charSet?: string | undefined;\n        content?: string | undefined;\n        httpEquiv?: string | undefined;\n        name?: string | undefined;\n        media?: string | undefined;\n    }\n\n    interface MeterHTMLAttributes<T> extends HTMLAttributes<T> {\n        form?: string | undefined;\n        high?: number | undefined;\n        low?: number | undefined;\n        max?: number | string | undefined;\n        min?: number | string | undefined;\n        optimum?: number | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n    }\n\n    interface QuoteHTMLAttributes<T> extends HTMLAttributes<T> {\n        cite?: string | undefined;\n    }\n\n    interface ObjectHTMLAttributes<T> extends HTMLAttributes<T> {\n        classID?: string | undefined;\n        data?: string | undefined;\n        form?: string | undefined;\n        height?: number | string | undefined;\n        name?: string | undefined;\n        type?: string | undefined;\n        useMap?: string | undefined;\n        width?: number | string | undefined;\n        wmode?: string | undefined;\n    }\n\n    interface OlHTMLAttributes<T> extends HTMLAttributes<T> {\n        reversed?: boolean | undefined;\n        start?: number | undefined;\n        type?: '1' | 'a' | 'A' | 'i' | 'I' | undefined;\n    }\n\n    interface OptgroupHTMLAttributes<T> extends HTMLAttributes<T> {\n        disabled?: boolean | undefined;\n        label?: string | undefined;\n    }\n\n    interface OptionHTMLAttributes<T> extends HTMLAttributes<T> {\n        disabled?: boolean | undefined;\n        label?: string | undefined;\n        selected?: boolean | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n    }\n\n    interface OutputHTMLAttributes<T> extends HTMLAttributes<T> {\n        form?: string | undefined;\n        htmlFor?: string | undefined;\n        name?: string | undefined;\n    }\n\n    interface ParamHTMLAttributes<T> extends HTMLAttributes<T> {\n        name?: string | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n    }\n\n    interface ProgressHTMLAttributes<T> extends HTMLAttributes<T> {\n        max?: number | string | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n    }\n\n    interface SlotHTMLAttributes<T> extends HTMLAttributes<T> {\n        name?: string | undefined;\n    }\n\n    interface ScriptHTMLAttributes<T> extends HTMLAttributes<T> {\n        async?: boolean | undefined;\n        /** @deprecated */\n        charSet?: string | undefined;\n        crossOrigin?: string | undefined;\n        defer?: boolean | undefined;\n        integrity?: string | undefined;\n        noModule?: boolean | undefined;\n        nonce?: string | undefined;\n        referrerPolicy?: HTMLAttributeReferrerPolicy | undefined;\n        src?: string | undefined;\n        type?: string | undefined;\n    }\n\n    interface SelectHTMLAttributes<T> extends HTMLAttributes<T> {\n        autoComplete?: string | undefined;\n        autoFocus?: boolean | undefined;\n        disabled?: boolean | undefined;\n        form?: string | undefined;\n        multiple?: boolean | undefined;\n        name?: string | undefined;\n        required?: boolean | undefined;\n        size?: number | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n        onChange?: ChangeEventHandler<T> | undefined;\n    }\n\n    interface SourceHTMLAttributes<T> extends HTMLAttributes<T> {\n        height?: number | string | undefined;\n        media?: string | undefined;\n        sizes?: string | undefined;\n        src?: string | undefined;\n        srcSet?: string | undefined;\n        type?: string | undefined;\n        width?: number | string | undefined;\n    }\n\n    interface StyleHTMLAttributes<T> extends HTMLAttributes<T> {\n        media?: string | undefined;\n        nonce?: string | undefined;\n        scoped?: boolean | undefined;\n        type?: string | undefined;\n    }\n\n    interface TableHTMLAttributes<T> extends HTMLAttributes<T> {\n        cellPadding?: number | string | undefined;\n        cellSpacing?: number | string | undefined;\n        summary?: string | undefined;\n        width?: number | string | undefined;\n    }\n\n    interface TextareaHTMLAttributes<T> extends HTMLAttributes<T> {\n        autoComplete?: string | undefined;\n        autoFocus?: boolean | undefined;\n        cols?: number | undefined;\n        dirName?: string | undefined;\n        disabled?: boolean | undefined;\n        form?: string | undefined;\n        maxLength?: number | undefined;\n        minLength?: number | undefined;\n        name?: string | undefined;\n        placeholder?: string | undefined;\n        readOnly?: boolean | undefined;\n        required?: boolean | undefined;\n        rows?: number | undefined;\n        value?: string | ReadonlyArray<string> | number | undefined;\n        wrap?: string | undefined;\n\n        onChange?: ChangeEventHandler<T> | undefined;\n    }\n\n    interface TdHTMLAttributes<T> extends HTMLAttributes<T> {\n        align?: \"left\" | \"center\" | \"right\" | \"justify\" | \"char\" | undefined;\n        colSpan?: number | undefined;\n        headers?: string | undefined;\n        rowSpan?: number | undefined;\n        scope?: string | undefined;\n        abbr?: string | undefined;\n        height?: number | string | undefined;\n        width?: number | string | undefined;\n        valign?: \"top\" | \"middle\" | \"bottom\" | \"baseline\" | undefined;\n    }\n\n    interface ThHTMLAttributes<T> extends HTMLAttributes<T> {\n        align?: \"left\" | \"center\" | \"right\" | \"justify\" | \"char\" | undefined;\n        colSpan?: number | undefined;\n        headers?: string | undefined;\n        rowSpan?: number | undefined;\n        scope?: string | undefined;\n        abbr?: string | undefined;\n    }\n\n    interface TimeHTMLAttributes<T> extends HTMLAttributes<T> {\n        dateTime?: string | undefined;\n    }\n\n    interface TrackHTMLAttributes<T> extends HTMLAttributes<T> {\n        default?: boolean | undefined;\n        kind?: string | undefined;\n        label?: string | undefined;\n        src?: string | undefined;\n        srcLang?: string | undefined;\n    }\n\n    interface VideoHTMLAttributes<T> extends MediaHTMLAttributes<T> {\n        height?: number | string | undefined;\n        playsInline?: boolean | undefined;\n        poster?: string | undefined;\n        width?: number | string | undefined;\n        disablePictureInPicture?: boolean | undefined;\n        disableRemotePlayback?: boolean | undefined;\n    }\n\n    // this list is \"complete\" in that it contains every SVG attribute\n    // that React supports, but the types can be improved.\n    // Full list here: https://facebook.github.io/react/docs/dom-elements.html\n    //\n    // The three broad type categories are (in order of restrictiveness):\n    //   - \"number | string\"\n    //   - \"string\"\n    //   - union of string literals\n    interface SVGAttributes<T> extends AriaAttributes, DOMAttributes<T> {\n        // Attributes which also defined in HTMLAttributes\n        // See comment in SVGDOMPropertyConfig.js\n        className?: string | undefined;\n        color?: string | undefined;\n        height?: number | string | undefined;\n        id?: string | undefined;\n        lang?: string | undefined;\n        max?: number | string | undefined;\n        media?: string | undefined;\n        method?: string | undefined;\n        min?: number | string | undefined;\n        name?: string | undefined;\n        style?: CSSProperties | undefined;\n        target?: string | undefined;\n        type?: string | undefined;\n        width?: number | string | undefined;\n\n        // Other HTML properties supported by SVG elements in browsers\n        role?: AriaRole | undefined;\n        tabIndex?: number | undefined;\n        crossOrigin?: \"anonymous\" | \"use-credentials\" | \"\" | undefined;\n\n        // SVG Specific attributes\n        accentHeight?: number | string | undefined;\n        accumulate?: \"none\" | \"sum\" | undefined;\n        additive?: \"replace\" | \"sum\" | undefined;\n        alignmentBaseline?: \"auto\" | \"baseline\" | \"before-edge\" | \"text-before-edge\" | \"middle\" | \"central\" | \"after-edge\" |\n        \"text-after-edge\" | \"ideographic\" | \"alphabetic\" | \"hanging\" | \"mathematical\" | \"inherit\" | undefined;\n        allowReorder?: \"no\" | \"yes\" | undefined;\n        alphabetic?: number | string | undefined;\n        amplitude?: number | string | undefined;\n        arabicForm?: \"initial\" | \"medial\" | \"terminal\" | \"isolated\" | undefined;\n        ascent?: number | string | undefined;\n        attributeName?: string | undefined;\n        attributeType?: string | undefined;\n        autoReverse?: Booleanish | undefined;\n        azimuth?: number | string | undefined;\n        baseFrequency?: number | string | undefined;\n        baselineShift?: number | string | undefined;\n        baseProfile?: number | string | undefined;\n        bbox?: number | string | undefined;\n        begin?: number | string | undefined;\n        bias?: number | string | undefined;\n        by?: number | string | undefined;\n        calcMode?: number | string | undefined;\n        capHeight?: number | string | undefined;\n        clip?: number | string | undefined;\n        clipPath?: string | undefined;\n        clipPathUnits?: number | string | undefined;\n        clipRule?: number | string | undefined;\n        colorInterpolation?: number | string | undefined;\n        colorInterpolationFilters?: \"auto\" | \"sRGB\" | \"linearRGB\" | \"inherit\" | undefined;\n        colorProfile?: number | string | undefined;\n        colorRendering?: number | string | undefined;\n        contentScriptType?: number | string | undefined;\n        contentStyleType?: number | string | undefined;\n        cursor?: number | string | undefined;\n        cx?: number | string | undefined;\n        cy?: number | string | undefined;\n        d?: string | undefined;\n        decelerate?: number | string | undefined;\n        descent?: number | string | undefined;\n        diffuseConstant?: number | string | undefined;\n        direction?: number | string | undefined;\n        display?: number | string | undefined;\n        divisor?: number | string | undefined;\n        dominantBaseline?: number | string | undefined;\n        dur?: number | string | undefined;\n        dx?: number | string | undefined;\n        dy?: number | string | undefined;\n        edgeMode?: number | string | undefined;\n        elevation?: number | string | undefined;\n        enableBackground?: number | string | undefined;\n        end?: number | string | undefined;\n        exponent?: number | string | undefined;\n        externalResourcesRequired?: Booleanish | undefined;\n        fill?: string | undefined;\n        fillOpacity?: number | string | undefined;\n        fillRule?: \"nonzero\" | \"evenodd\" | \"inherit\" | undefined;\n        filter?: string | undefined;\n        filterRes?: number | string | undefined;\n        filterUnits?: number | string | undefined;\n        floodColor?: number | string | undefined;\n        floodOpacity?: number | string | undefined;\n        focusable?: Booleanish | \"auto\" | undefined;\n        fontFamily?: string | undefined;\n        fontSize?: number | string | undefined;\n        fontSizeAdjust?: number | string | undefined;\n        fontStretch?: number | string | undefined;\n        fontStyle?: number | string | undefined;\n        fontVariant?: number | string | undefined;\n        fontWeight?: number | string | undefined;\n        format?: number | string | undefined;\n        fr?: number | string | undefined;\n        from?: number | string | undefined;\n        fx?: number | string | undefined;\n        fy?: number | string | undefined;\n        g1?: number | string | undefined;\n        g2?: number | string | undefined;\n        glyphName?: number | string | undefined;\n        glyphOrientationHorizontal?: number | string | undefined;\n        glyphOrientationVertical?: number | string | undefined;\n        glyphRef?: number | string | undefined;\n        gradientTransform?: string | undefined;\n        gradientUnits?: string | undefined;\n        hanging?: number | string | undefined;\n        horizAdvX?: number | string | undefined;\n        horizOriginX?: number | string | undefined;\n        href?: string | undefined;\n        ideographic?: number | string | undefined;\n        imageRendering?: number | string | undefined;\n        in2?: number | string | undefined;\n        in?: string | undefined;\n        intercept?: number | string | undefined;\n        k1?: number | string | undefined;\n        k2?: number | string | undefined;\n        k3?: number | string | undefined;\n        k4?: number | string | undefined;\n        k?: number | string | undefined;\n        kernelMatrix?: number | string | undefined;\n        kernelUnitLength?: number | string | undefined;\n        kerning?: number | string | undefined;\n        keyPoints?: number | string | undefined;\n        keySplines?: number | string | undefined;\n        keyTimes?: number | string | undefined;\n        lengthAdjust?: number | string | undefined;\n        letterSpacing?: number | string | undefined;\n        lightingColor?: number | string | undefined;\n        limitingConeAngle?: number | string | undefined;\n        local?: number | string | undefined;\n        markerEnd?: string | undefined;\n        markerHeight?: number | string | undefined;\n        markerMid?: string | undefined;\n        markerStart?: string | undefined;\n        markerUnits?: number | string | undefined;\n        markerWidth?: number | string | undefined;\n        mask?: string | undefined;\n        maskContentUnits?: number | string | undefined;\n        maskUnits?: number | string | undefined;\n        mathematical?: number | string | undefined;\n        mode?: number | string | undefined;\n        numOctaves?: number | string | undefined;\n        offset?: number | string | undefined;\n        opacity?: number | string | undefined;\n        operator?: number | string | undefined;\n        order?: number | string | undefined;\n        orient?: number | string | undefined;\n        orientation?: number | string | undefined;\n        origin?: number | string | undefined;\n        overflow?: number | string | undefined;\n        overlinePosition?: number | string | undefined;\n        overlineThickness?: number | string | undefined;\n        paintOrder?: number | string | undefined;\n        panose1?: number | string | undefined;\n        path?: string | undefined;\n        pathLength?: number | string | undefined;\n        patternContentUnits?: string | undefined;\n        patternTransform?: number | string | undefined;\n        patternUnits?: string | undefined;\n        pointerEvents?: number | string | undefined;\n        points?: string | undefined;\n        pointsAtX?: number | string | undefined;\n        pointsAtY?: number | string | undefined;\n        pointsAtZ?: number | string | undefined;\n        preserveAlpha?: Booleanish | undefined;\n        preserveAspectRatio?: string | undefined;\n        primitiveUnits?: number | string | undefined;\n        r?: number | string | undefined;\n        radius?: number | string | undefined;\n        refX?: number | string | undefined;\n        refY?: number | string | undefined;\n        renderingIntent?: number | string | undefined;\n        repeatCount?: number | string | undefined;\n        repeatDur?: number | string | undefined;\n        requiredExtensions?: number | string | undefined;\n        requiredFeatures?: number | string | undefined;\n        restart?: number | string | undefined;\n        result?: string | undefined;\n        rotate?: number | string | undefined;\n        rx?: number | string | undefined;\n        ry?: number | string | undefined;\n        scale?: number | string | undefined;\n        seed?: number | string | undefined;\n        shapeRendering?: number | string | undefined;\n        slope?: number | string | undefined;\n        spacing?: number | string | undefined;\n        specularConstant?: number | string | undefined;\n        specularExponent?: number | string | undefined;\n        speed?: number | string | undefined;\n        spreadMethod?: string | undefined;\n        startOffset?: number | string | undefined;\n        stdDeviation?: number | string | undefined;\n        stemh?: number | string | undefined;\n        stemv?: number | string | undefined;\n        stitchTiles?: number | string | undefined;\n        stopColor?: string | undefined;\n        stopOpacity?: number | string | undefined;\n        strikethroughPosition?: number | string | undefined;\n        strikethroughThickness?: number | string | undefined;\n        string?: number | string | undefined;\n        stroke?: string | undefined;\n        strokeDasharray?: string | number | undefined;\n        strokeDashoffset?: string | number | undefined;\n        strokeLinecap?: \"butt\" | \"round\" | \"square\" | \"inherit\" | undefined;\n        strokeLinejoin?: \"miter\" | \"round\" | \"bevel\" | \"inherit\" | undefined;\n        strokeMiterlimit?: number | string | undefined;\n        strokeOpacity?: number | string | undefined;\n        strokeWidth?: number | string | undefined;\n        surfaceScale?: number | string | undefined;\n        systemLanguage?: number | string | undefined;\n        tableValues?: number | string | undefined;\n        targetX?: number | string | undefined;\n        targetY?: number | string | undefined;\n        textAnchor?: string | undefined;\n        textDecoration?: number | string | undefined;\n        textLength?: number | string | undefined;\n        textRendering?: number | string | undefined;\n        to?: number | string | undefined;\n        transform?: string | undefined;\n        u1?: number | string | undefined;\n        u2?: number | string | undefined;\n        underlinePosition?: number | string | undefined;\n        underlineThickness?: number | string | undefined;\n        unicode?: number | string | undefined;\n        unicodeBidi?: number | string | undefined;\n        unicodeRange?: number | string | undefined;\n        unitsPerEm?: number | string | undefined;\n        vAlphabetic?: number | string | undefined;\n        values?: string | undefined;\n        vectorEffect?: number | string | undefined;\n        version?: string | undefined;\n        vertAdvY?: number | string | undefined;\n        vertOriginX?: number | string | undefined;\n        vertOriginY?: number | string | undefined;\n        vHanging?: number | string | undefined;\n        vIdeographic?: number | string | undefined;\n        viewBox?: string | undefined;\n        viewTarget?: number | string | undefined;\n        visibility?: number | string | undefined;\n        vMathematical?: number | string | undefined;\n        widths?: number | string | undefined;\n        wordSpacing?: number | string | undefined;\n        writingMode?: number | string | undefined;\n        x1?: number | string | undefined;\n        x2?: number | string | undefined;\n        x?: number | string | undefined;\n        xChannelSelector?: string | undefined;\n        xHeight?: number | string | undefined;\n        xlinkActuate?: string | undefined;\n        xlinkArcrole?: string | undefined;\n        xlinkHref?: string | undefined;\n        xlinkRole?: string | undefined;\n        xlinkShow?: string | undefined;\n        xlinkTitle?: string | undefined;\n        xlinkType?: string | undefined;\n        xmlBase?: string | undefined;\n        xmlLang?: string | undefined;\n        xmlns?: string | undefined;\n        xmlnsXlink?: string | undefined;\n        xmlSpace?: string | undefined;\n        y1?: number | string | undefined;\n        y2?: number | string | undefined;\n        y?: number | string | undefined;\n        yChannelSelector?: string | undefined;\n        z?: number | string | undefined;\n        zoomAndPan?: string | undefined;\n    }\n\n    interface WebViewHTMLAttributes<T> extends HTMLAttributes<T> {\n        allowFullScreen?: boolean | undefined;\n        allowpopups?: boolean | undefined;\n        autoFocus?: boolean | undefined;\n        autosize?: boolean | undefined;\n        blinkfeatures?: string | undefined;\n        disableblinkfeatures?: string | undefined;\n        disableguestresize?: boolean | undefined;\n        disablewebsecurity?: boolean | undefined;\n        guestinstance?: string | undefined;\n        httpreferrer?: string | undefined;\n        nodeintegration?: boolean | undefined;\n        partition?: string | undefined;\n        plugins?: boolean | undefined;\n        preload?: string | undefined;\n        src?: string | undefined;\n        useragent?: string | undefined;\n        webpreferences?: string | undefined;\n    }\n\n    //\n    // React.DOM\n    // ----------------------------------------------------------------------\n\n    interface ReactHTML {\n        a: DetailedHTMLFactory<AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>;\n        abbr: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        address: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        area: DetailedHTMLFactory<AreaHTMLAttributes<HTMLAreaElement>, HTMLAreaElement>;\n        article: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        aside: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        audio: DetailedHTMLFactory<AudioHTMLAttributes<HTMLAudioElement>, HTMLAudioElement>;\n        b: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        base: DetailedHTMLFactory<BaseHTMLAttributes<HTMLBaseElement>, HTMLBaseElement>;\n        bdi: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        bdo: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        big: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        blockquote: DetailedHTMLFactory<BlockquoteHTMLAttributes<HTMLElement>, HTMLElement>;\n        body: DetailedHTMLFactory<HTMLAttributes<HTMLBodyElement>, HTMLBodyElement>;\n        br: DetailedHTMLFactory<HTMLAttributes<HTMLBRElement>, HTMLBRElement>;\n        button: DetailedHTMLFactory<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n        canvas: DetailedHTMLFactory<CanvasHTMLAttributes<HTMLCanvasElement>, HTMLCanvasElement>;\n        caption: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        cite: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        code: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        col: DetailedHTMLFactory<ColHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>;\n        colgroup: DetailedHTMLFactory<ColgroupHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>;\n        data: DetailedHTMLFactory<DataHTMLAttributes<HTMLDataElement>, HTMLDataElement>;\n        datalist: DetailedHTMLFactory<HTMLAttributes<HTMLDataListElement>, HTMLDataListElement>;\n        dd: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        del: DetailedHTMLFactory<DelHTMLAttributes<HTMLElement>, HTMLElement>;\n        details: DetailedHTMLFactory<DetailsHTMLAttributes<HTMLElement>, HTMLElement>;\n        dfn: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        dialog: DetailedHTMLFactory<DialogHTMLAttributes<HTMLDialogElement>, HTMLDialogElement>;\n        div: DetailedHTMLFactory<HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n        dl: DetailedHTMLFactory<HTMLAttributes<HTMLDListElement>, HTMLDListElement>;\n        dt: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        em: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        embed: DetailedHTMLFactory<EmbedHTMLAttributes<HTMLEmbedElement>, HTMLEmbedElement>;\n        fieldset: DetailedHTMLFactory<FieldsetHTMLAttributes<HTMLFieldSetElement>, HTMLFieldSetElement>;\n        figcaption: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        figure: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        footer: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        form: DetailedHTMLFactory<FormHTMLAttributes<HTMLFormElement>, HTMLFormElement>;\n        h1: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\n        h2: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\n        h3: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\n        h4: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\n        h5: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\n        h6: DetailedHTMLFactory<HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\n        head: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLHeadElement>;\n        header: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        hgroup: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        hr: DetailedHTMLFactory<HTMLAttributes<HTMLHRElement>, HTMLHRElement>;\n        html: DetailedHTMLFactory<HtmlHTMLAttributes<HTMLHtmlElement>, HTMLHtmlElement>;\n        i: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        iframe: DetailedHTMLFactory<IframeHTMLAttributes<HTMLIFrameElement>, HTMLIFrameElement>;\n        img: DetailedHTMLFactory<ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>;\n        input: DetailedHTMLFactory<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n        ins: DetailedHTMLFactory<InsHTMLAttributes<HTMLModElement>, HTMLModElement>;\n        kbd: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        keygen: DetailedHTMLFactory<KeygenHTMLAttributes<HTMLElement>, HTMLElement>;\n        label: DetailedHTMLFactory<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>;\n        legend: DetailedHTMLFactory<HTMLAttributes<HTMLLegendElement>, HTMLLegendElement>;\n        li: DetailedHTMLFactory<LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>;\n        link: DetailedHTMLFactory<LinkHTMLAttributes<HTMLLinkElement>, HTMLLinkElement>;\n        main: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        map: DetailedHTMLFactory<MapHTMLAttributes<HTMLMapElement>, HTMLMapElement>;\n        mark: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        menu: DetailedHTMLFactory<MenuHTMLAttributes<HTMLElement>, HTMLElement>;\n        menuitem: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        meta: DetailedHTMLFactory<MetaHTMLAttributes<HTMLMetaElement>, HTMLMetaElement>;\n        meter: DetailedHTMLFactory<MeterHTMLAttributes<HTMLElement>, HTMLElement>;\n        nav: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        noscript: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        object: DetailedHTMLFactory<ObjectHTMLAttributes<HTMLObjectElement>, HTMLObjectElement>;\n        ol: DetailedHTMLFactory<OlHTMLAttributes<HTMLOListElement>, HTMLOListElement>;\n        optgroup: DetailedHTMLFactory<OptgroupHTMLAttributes<HTMLOptGroupElement>, HTMLOptGroupElement>;\n        option: DetailedHTMLFactory<OptionHTMLAttributes<HTMLOptionElement>, HTMLOptionElement>;\n        output: DetailedHTMLFactory<OutputHTMLAttributes<HTMLElement>, HTMLElement>;\n        p: DetailedHTMLFactory<HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>;\n        param: DetailedHTMLFactory<ParamHTMLAttributes<HTMLParamElement>, HTMLParamElement>;\n        picture: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        pre: DetailedHTMLFactory<HTMLAttributes<HTMLPreElement>, HTMLPreElement>;\n        progress: DetailedHTMLFactory<ProgressHTMLAttributes<HTMLProgressElement>, HTMLProgressElement>;\n        q: DetailedHTMLFactory<QuoteHTMLAttributes<HTMLQuoteElement>, HTMLQuoteElement>;\n        rp: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        rt: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        ruby: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        s: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        samp: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        slot: DetailedHTMLFactory<SlotHTMLAttributes<HTMLSlotElement>, HTMLSlotElement>;\n        script: DetailedHTMLFactory<ScriptHTMLAttributes<HTMLScriptElement>, HTMLScriptElement>;\n        section: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        select: DetailedHTMLFactory<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>;\n        small: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        source: DetailedHTMLFactory<SourceHTMLAttributes<HTMLSourceElement>, HTMLSourceElement>;\n        span: DetailedHTMLFactory<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n        strong: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        style: DetailedHTMLFactory<StyleHTMLAttributes<HTMLStyleElement>, HTMLStyleElement>;\n        sub: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        summary: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        sup: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        table: DetailedHTMLFactory<TableHTMLAttributes<HTMLTableElement>, HTMLTableElement>;\n        template: DetailedHTMLFactory<HTMLAttributes<HTMLTemplateElement>, HTMLTemplateElement>;\n        tbody: DetailedHTMLFactory<HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;\n        td: DetailedHTMLFactory<TdHTMLAttributes<HTMLTableDataCellElement>, HTMLTableDataCellElement>;\n        textarea: DetailedHTMLFactory<TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>;\n        tfoot: DetailedHTMLFactory<HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;\n        th: DetailedHTMLFactory<ThHTMLAttributes<HTMLTableHeaderCellElement>, HTMLTableHeaderCellElement>;\n        thead: DetailedHTMLFactory<HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;\n        time: DetailedHTMLFactory<TimeHTMLAttributes<HTMLElement>, HTMLElement>;\n        title: DetailedHTMLFactory<HTMLAttributes<HTMLTitleElement>, HTMLTitleElement>;\n        tr: DetailedHTMLFactory<HTMLAttributes<HTMLTableRowElement>, HTMLTableRowElement>;\n        track: DetailedHTMLFactory<TrackHTMLAttributes<HTMLTrackElement>, HTMLTrackElement>;\n        u: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        ul: DetailedHTMLFactory<HTMLAttributes<HTMLUListElement>, HTMLUListElement>;\n        \"var\": DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        video: DetailedHTMLFactory<VideoHTMLAttributes<HTMLVideoElement>, HTMLVideoElement>;\n        wbr: DetailedHTMLFactory<HTMLAttributes<HTMLElement>, HTMLElement>;\n        webview: DetailedHTMLFactory<WebViewHTMLAttributes<HTMLWebViewElement>, HTMLWebViewElement>;\n    }\n\n    interface ReactSVG {\n        animate: SVGFactory;\n        circle: SVGFactory;\n        clipPath: SVGFactory;\n        defs: SVGFactory;\n        desc: SVGFactory;\n        ellipse: SVGFactory;\n        feBlend: SVGFactory;\n        feColorMatrix: SVGFactory;\n        feComponentTransfer: SVGFactory;\n        feComposite: SVGFactory;\n        feConvolveMatrix: SVGFactory;\n        feDiffuseLighting: SVGFactory;\n        feDisplacementMap: SVGFactory;\n        feDistantLight: SVGFactory;\n        feDropShadow: SVGFactory;\n        feFlood: SVGFactory;\n        feFuncA: SVGFactory;\n        feFuncB: SVGFactory;\n        feFuncG: SVGFactory;\n        feFuncR: SVGFactory;\n        feGaussianBlur: SVGFactory;\n        feImage: SVGFactory;\n        feMerge: SVGFactory;\n        feMergeNode: SVGFactory;\n        feMorphology: SVGFactory;\n        feOffset: SVGFactory;\n        fePointLight: SVGFactory;\n        feSpecularLighting: SVGFactory;\n        feSpotLight: SVGFactory;\n        feTile: SVGFactory;\n        feTurbulence: SVGFactory;\n        filter: SVGFactory;\n        foreignObject: SVGFactory;\n        g: SVGFactory;\n        image: SVGFactory;\n        line: SVGFactory;\n        linearGradient: SVGFactory;\n        marker: SVGFactory;\n        mask: SVGFactory;\n        metadata: SVGFactory;\n        path: SVGFactory;\n        pattern: SVGFactory;\n        polygon: SVGFactory;\n        polyline: SVGFactory;\n        radialGradient: SVGFactory;\n        rect: SVGFactory;\n        stop: SVGFactory;\n        svg: SVGFactory;\n        switch: SVGFactory;\n        symbol: SVGFactory;\n        text: SVGFactory;\n        textPath: SVGFactory;\n        tspan: SVGFactory;\n        use: SVGFactory;\n        view: SVGFactory;\n    }\n\n    interface ReactDOM extends ReactHTML, ReactSVG { }\n\n    //\n    // React.PropTypes\n    // ----------------------------------------------------------------------\n\n    type Validator<T> = PropTypes.Validator<T>;\n\n    type Requireable<T> = PropTypes.Requireable<T>;\n\n    type ValidationMap<T> = PropTypes.ValidationMap<T>;\n\n    type WeakValidationMap<T> = {\n        [K in keyof T]?: null extends T[K]\n            ? Validator<T[K] | null | undefined>\n            : undefined extends T[K]\n            ? Validator<T[K] | null | undefined>\n            : Validator<T[K]>\n    };\n\n    interface ReactPropTypes {\n        any: typeof PropTypes.any;\n        array: typeof PropTypes.array;\n        bool: typeof PropTypes.bool;\n        func: typeof PropTypes.func;\n        number: typeof PropTypes.number;\n        object: typeof PropTypes.object;\n        string: typeof PropTypes.string;\n        node: typeof PropTypes.node;\n        element: typeof PropTypes.element;\n        instanceOf: typeof PropTypes.instanceOf;\n        oneOf: typeof PropTypes.oneOf;\n        oneOfType: typeof PropTypes.oneOfType;\n        arrayOf: typeof PropTypes.arrayOf;\n        objectOf: typeof PropTypes.objectOf;\n        shape: typeof PropTypes.shape;\n        exact: typeof PropTypes.exact;\n    }\n\n    //\n    // React.Children\n    // ----------------------------------------------------------------------\n\n    interface ReactChildren {\n        map<T, C>(children: C | ReadonlyArray<C>, fn: (child: C, index: number) => T):\n            C extends null | undefined ? C : Array<Exclude<T, boolean | null | undefined>>;\n        forEach<C>(children: C | ReadonlyArray<C>, fn: (child: C, index: number) => void): void;\n        count(children: any): number;\n        only<C>(children: C): C extends any[] ? never : C;\n        toArray(children: ReactNode | ReactNode[]): Array<Exclude<ReactNode, boolean | null | undefined>>;\n    }\n\n    //\n    // Browser Interfaces\n    // https://github.com/nikeee/2048-typescript/blob/master/2048/js/touch.d.ts\n    // ----------------------------------------------------------------------\n\n    interface AbstractView {\n        styleMedia: StyleMedia;\n        document: Document;\n    }\n\n    interface Touch {\n        identifier: number;\n        target: EventTarget;\n        screenX: number;\n        screenY: number;\n        clientX: number;\n        clientY: number;\n        pageX: number;\n        pageY: number;\n    }\n\n    interface TouchList {\n        [index: number]: Touch;\n        length: number;\n        item(index: number): Touch;\n        identifiedTouch(identifier: number): Touch;\n    }\n\n    //\n    // Error Interfaces\n    // ----------------------------------------------------------------------\n    interface ErrorInfo {\n        /**\n         * Captures which component contained the exception, and its ancestors.\n         */\n        componentStack: string;\n    }\n}\n\n// naked 'any' type in a conditional type will short circuit and union both the then/else branches\n// so boolean is only resolved for T = any\ntype IsExactlyAny<T> = boolean extends (T extends never ? true : false) ? true : false;\n\ntype ExactlyAnyPropertyKeys<T> = { [K in keyof T]: IsExactlyAny<T[K]> extends true ? K : never }[keyof T];\ntype NotExactlyAnyPropertyKeys<T> = Exclude<keyof T, ExactlyAnyPropertyKeys<T>>;\n\n// Try to resolve ill-defined props like for JS users: props can be any, or sometimes objects with properties of type any\ntype MergePropTypes<P, T> =\n    // Distribute over P in case it is a union type\n    P extends any\n        // If props is type any, use propTypes definitions\n        ? IsExactlyAny<P> extends true ? T :\n            // If declared props have indexed properties, ignore inferred props entirely as keyof gets widened\n            string extends keyof P ? P :\n                // Prefer declared types which are not exactly any\n                & Pick<P, NotExactlyAnyPropertyKeys<P>>\n                // For props which are exactly any, use the type inferred from propTypes if present\n                & Pick<T, Exclude<keyof T, NotExactlyAnyPropertyKeys<P>>>\n                // Keep leftover props not specified in propTypes\n                & Pick<P, Exclude<keyof P, keyof T>>\n        : never;\n\n// Any prop that has a default prop becomes optional, but its type is unchanged\n// Undeclared default props are augmented into the resulting allowable attributes\n// If declared props have indexed properties, ignore default props entirely as keyof gets widened\n// Wrap in an outer-level conditional type to allow distribution over props that are unions\ntype Defaultize<P, D> = P extends any\n    ? string extends keyof P ? P :\n        & Pick<P, Exclude<keyof P, keyof D>>\n        & Partial<Pick<P, Extract<keyof P, keyof D>>>\n        & Partial<Pick<D, Exclude<keyof D, keyof P>>>\n    : never;\n\ntype ReactManagedAttributes<C, P> = C extends { propTypes: infer T; defaultProps: infer D; }\n    ? Defaultize<MergePropTypes<P, PropTypes.InferProps<T>>, D>\n    : C extends { propTypes: infer T; }\n        ? MergePropTypes<P, PropTypes.InferProps<T>>\n        : C extends { defaultProps: infer D; }\n            ? Defaultize<P, D>\n            : P;\n\ndeclare global {\n    namespace JSX {\n        interface Element extends React.ReactElement<any, any> { }\n        interface ElementClass extends React.Component<any> {\n            render(): React.ReactNode;\n        }\n        interface ElementAttributesProperty { props: {}; }\n        interface ElementChildrenAttribute { children: {}; }\n\n        // We can't recurse forever because `type` can't be self-referential;\n        // let's assume it's reasonable to do a single React.lazy() around a single React.memo() / vice-versa\n        type LibraryManagedAttributes<C, P> = C extends React.MemoExoticComponent<infer T> | React.LazyExoticComponent<infer T>\n            ? T extends React.MemoExoticComponent<infer U> | React.LazyExoticComponent<infer U>\n                ? ReactManagedAttributes<U, P>\n                : ReactManagedAttributes<T, P>\n            : ReactManagedAttributes<C, P>;\n\n        interface IntrinsicAttributes extends React.Attributes { }\n        interface IntrinsicClassAttributes<T> extends React.ClassAttributes<T> { }\n\n        interface IntrinsicElements {\n            // HTML\n            a: React.DetailedHTMLProps<React.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>;\n            abbr: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            address: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            area: React.DetailedHTMLProps<React.AreaHTMLAttributes<HTMLAreaElement>, HTMLAreaElement>;\n            article: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            aside: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            audio: React.DetailedHTMLProps<React.AudioHTMLAttributes<HTMLAudioElement>, HTMLAudioElement>;\n            b: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            base: React.DetailedHTMLProps<React.BaseHTMLAttributes<HTMLBaseElement>, HTMLBaseElement>;\n            bdi: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            bdo: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            big: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            blockquote: React.DetailedHTMLProps<React.BlockquoteHTMLAttributes<HTMLElement>, HTMLElement>;\n            body: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBodyElement>, HTMLBodyElement>;\n            br: React.DetailedHTMLProps<React.HTMLAttributes<HTMLBRElement>, HTMLBRElement>;\n            button: React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n            canvas: React.DetailedHTMLProps<React.CanvasHTMLAttributes<HTMLCanvasElement>, HTMLCanvasElement>;\n            caption: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            cite: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            code: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            col: React.DetailedHTMLProps<React.ColHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>;\n            colgroup: React.DetailedHTMLProps<React.ColgroupHTMLAttributes<HTMLTableColElement>, HTMLTableColElement>;\n            data: React.DetailedHTMLProps<React.DataHTMLAttributes<HTMLDataElement>, HTMLDataElement>;\n            datalist: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDataListElement>, HTMLDataListElement>;\n            dd: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            del: React.DetailedHTMLProps<React.DelHTMLAttributes<HTMLElement>, HTMLElement>;\n            details: React.DetailedHTMLProps<React.DetailsHTMLAttributes<HTMLElement>, HTMLElement>;\n            dfn: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            dialog: React.DetailedHTMLProps<React.DialogHTMLAttributes<HTMLDialogElement>, HTMLDialogElement>;\n            div: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n            dl: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDListElement>, HTMLDListElement>;\n            dt: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            em: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            embed: React.DetailedHTMLProps<React.EmbedHTMLAttributes<HTMLEmbedElement>, HTMLEmbedElement>;\n            fieldset: React.DetailedHTMLProps<React.FieldsetHTMLAttributes<HTMLFieldSetElement>, HTMLFieldSetElement>;\n            figcaption: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            figure: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            footer: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            form: React.DetailedHTMLProps<React.FormHTMLAttributes<HTMLFormElement>, HTMLFormElement>;\n            h1: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\n            h2: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\n            h3: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\n            h4: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\n            h5: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\n            h6: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>;\n            head: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadElement>, HTMLHeadElement>;\n            header: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            hgroup: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            hr: React.DetailedHTMLProps<React.HTMLAttributes<HTMLHRElement>, HTMLHRElement>;\n            html: React.DetailedHTMLProps<React.HtmlHTMLAttributes<HTMLHtmlElement>, HTMLHtmlElement>;\n            i: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            iframe: React.DetailedHTMLProps<React.IframeHTMLAttributes<HTMLIFrameElement>, HTMLIFrameElement>;\n            img: React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>;\n            input: React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n            ins: React.DetailedHTMLProps<React.InsHTMLAttributes<HTMLModElement>, HTMLModElement>;\n            kbd: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            keygen: React.DetailedHTMLProps<React.KeygenHTMLAttributes<HTMLElement>, HTMLElement>;\n            label: React.DetailedHTMLProps<React.LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>;\n            legend: React.DetailedHTMLProps<React.HTMLAttributes<HTMLLegendElement>, HTMLLegendElement>;\n            li: React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>;\n            link: React.DetailedHTMLProps<React.LinkHTMLAttributes<HTMLLinkElement>, HTMLLinkElement>;\n            main: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            map: React.DetailedHTMLProps<React.MapHTMLAttributes<HTMLMapElement>, HTMLMapElement>;\n            mark: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            menu: React.DetailedHTMLProps<React.MenuHTMLAttributes<HTMLElement>, HTMLElement>;\n            menuitem: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            meta: React.DetailedHTMLProps<React.MetaHTMLAttributes<HTMLMetaElement>, HTMLMetaElement>;\n            meter: React.DetailedHTMLProps<React.MeterHTMLAttributes<HTMLElement>, HTMLElement>;\n            nav: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            noindex: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            noscript: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            object: React.DetailedHTMLProps<React.ObjectHTMLAttributes<HTMLObjectElement>, HTMLObjectElement>;\n            ol: React.DetailedHTMLProps<React.OlHTMLAttributes<HTMLOListElement>, HTMLOListElement>;\n            optgroup: React.DetailedHTMLProps<React.OptgroupHTMLAttributes<HTMLOptGroupElement>, HTMLOptGroupElement>;\n            option: React.DetailedHTMLProps<React.OptionHTMLAttributes<HTMLOptionElement>, HTMLOptionElement>;\n            output: React.DetailedHTMLProps<React.OutputHTMLAttributes<HTMLElement>, HTMLElement>;\n            p: React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>;\n            param: React.DetailedHTMLProps<React.ParamHTMLAttributes<HTMLParamElement>, HTMLParamElement>;\n            picture: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            pre: React.DetailedHTMLProps<React.HTMLAttributes<HTMLPreElement>, HTMLPreElement>;\n            progress: React.DetailedHTMLProps<React.ProgressHTMLAttributes<HTMLProgressElement>, HTMLProgressElement>;\n            q: React.DetailedHTMLProps<React.QuoteHTMLAttributes<HTMLQuoteElement>, HTMLQuoteElement>;\n            rp: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            rt: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            ruby: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            s: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            samp: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            slot: React.DetailedHTMLProps<React.SlotHTMLAttributes<HTMLSlotElement>, HTMLSlotElement>;\n            script: React.DetailedHTMLProps<React.ScriptHTMLAttributes<HTMLScriptElement>, HTMLScriptElement>;\n            section: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            select: React.DetailedHTMLProps<React.SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>;\n            small: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            source: React.DetailedHTMLProps<React.SourceHTMLAttributes<HTMLSourceElement>, HTMLSourceElement>;\n            span: React.DetailedHTMLProps<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n            strong: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            style: React.DetailedHTMLProps<React.StyleHTMLAttributes<HTMLStyleElement>, HTMLStyleElement>;\n            sub: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            summary: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            sup: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            table: React.DetailedHTMLProps<React.TableHTMLAttributes<HTMLTableElement>, HTMLTableElement>;\n            template: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTemplateElement>, HTMLTemplateElement>;\n            tbody: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;\n            td: React.DetailedHTMLProps<React.TdHTMLAttributes<HTMLTableDataCellElement>, HTMLTableDataCellElement>;\n            textarea: React.DetailedHTMLProps<React.TextareaHTMLAttributes<HTMLTextAreaElement>, HTMLTextAreaElement>;\n            tfoot: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;\n            th: React.DetailedHTMLProps<React.ThHTMLAttributes<HTMLTableHeaderCellElement>, HTMLTableHeaderCellElement>;\n            thead: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>;\n            time: React.DetailedHTMLProps<React.TimeHTMLAttributes<HTMLElement>, HTMLElement>;\n            title: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTitleElement>, HTMLTitleElement>;\n            tr: React.DetailedHTMLProps<React.HTMLAttributes<HTMLTableRowElement>, HTMLTableRowElement>;\n            track: React.DetailedHTMLProps<React.TrackHTMLAttributes<HTMLTrackElement>, HTMLTrackElement>;\n            u: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            ul: React.DetailedHTMLProps<React.HTMLAttributes<HTMLUListElement>, HTMLUListElement>;\n            \"var\": React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            video: React.DetailedHTMLProps<React.VideoHTMLAttributes<HTMLVideoElement>, HTMLVideoElement>;\n            wbr: React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>;\n            webview: React.DetailedHTMLProps<React.WebViewHTMLAttributes<HTMLWebViewElement>, HTMLWebViewElement>;\n\n            // SVG\n            svg: React.SVGProps<SVGSVGElement>;\n\n            animate: React.SVGProps<SVGElement>; // TODO: It is SVGAnimateElement but is not in TypeScript's lib.dom.d.ts for now.\n            animateMotion: React.SVGProps<SVGElement>;\n            animateTransform: React.SVGProps<SVGElement>; // TODO: It is SVGAnimateTransformElement but is not in TypeScript's lib.dom.d.ts for now.\n            circle: React.SVGProps<SVGCircleElement>;\n            clipPath: React.SVGProps<SVGClipPathElement>;\n            defs: React.SVGProps<SVGDefsElement>;\n            desc: React.SVGProps<SVGDescElement>;\n            ellipse: React.SVGProps<SVGEllipseElement>;\n            feBlend: React.SVGProps<SVGFEBlendElement>;\n            feColorMatrix: React.SVGProps<SVGFEColorMatrixElement>;\n            feComponentTransfer: React.SVGProps<SVGFEComponentTransferElement>;\n            feComposite: React.SVGProps<SVGFECompositeElement>;\n            feConvolveMatrix: React.SVGProps<SVGFEConvolveMatrixElement>;\n            feDiffuseLighting: React.SVGProps<SVGFEDiffuseLightingElement>;\n            feDisplacementMap: React.SVGProps<SVGFEDisplacementMapElement>;\n            feDistantLight: React.SVGProps<SVGFEDistantLightElement>;\n            feDropShadow: React.SVGProps<SVGFEDropShadowElement>;\n            feFlood: React.SVGProps<SVGFEFloodElement>;\n            feFuncA: React.SVGProps<SVGFEFuncAElement>;\n            feFuncB: React.SVGProps<SVGFEFuncBElement>;\n            feFuncG: React.SVGProps<SVGFEFuncGElement>;\n            feFuncR: React.SVGProps<SVGFEFuncRElement>;\n            feGaussianBlur: React.SVGProps<SVGFEGaussianBlurElement>;\n            feImage: React.SVGProps<SVGFEImageElement>;\n            feMerge: React.SVGProps<SVGFEMergeElement>;\n            feMergeNode: React.SVGProps<SVGFEMergeNodeElement>;\n            feMorphology: React.SVGProps<SVGFEMorphologyElement>;\n            feOffset: React.SVGProps<SVGFEOffsetElement>;\n            fePointLight: React.SVGProps<SVGFEPointLightElement>;\n            feSpecularLighting: React.SVGProps<SVGFESpecularLightingElement>;\n            feSpotLight: React.SVGProps<SVGFESpotLightElement>;\n            feTile: React.SVGProps<SVGFETileElement>;\n            feTurbulence: React.SVGProps<SVGFETurbulenceElement>;\n            filter: React.SVGProps<SVGFilterElement>;\n            foreignObject: React.SVGProps<SVGForeignObjectElement>;\n            g: React.SVGProps<SVGGElement>;\n            image: React.SVGProps<SVGImageElement>;\n            line: React.SVGProps<SVGLineElement>;\n            linearGradient: React.SVGProps<SVGLinearGradientElement>;\n            marker: React.SVGProps<SVGMarkerElement>;\n            mask: React.SVGProps<SVGMaskElement>;\n            metadata: React.SVGProps<SVGMetadataElement>;\n            mpath: React.SVGProps<SVGElement>;\n            path: React.SVGProps<SVGPathElement>;\n            pattern: React.SVGProps<SVGPatternElement>;\n            polygon: React.SVGProps<SVGPolygonElement>;\n            polyline: React.SVGProps<SVGPolylineElement>;\n            radialGradient: React.SVGProps<SVGRadialGradientElement>;\n            rect: React.SVGProps<SVGRectElement>;\n            stop: React.SVGProps<SVGStopElement>;\n            switch: React.SVGProps<SVGSwitchElement>;\n            symbol: React.SVGProps<SVGSymbolElement>;\n            text: React.SVGProps<SVGTextElement>;\n            textPath: React.SVGProps<SVGTextPathElement>;\n            tspan: React.SVGProps<SVGTSpanElement>;\n            use: React.SVGProps<SVGUseElement>;\n            view: React.SVGProps<SVGViewElement>;\n        }\n    }\n}\n"},29775:(e,n,t)=>{t.d(n,{Z:()=>r});const r="// Type definitions for scheduler 0.16\n// Project: https://reactjs.org/\n// Definitions by: Nathan Bierema <https://github.com/Methuselah96>\n//                 Sebastian Silbermann <https://github.com/eps1lon>\n// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped\n// TypeScript Version: 2.8\n\nexport type FrameCallbackType = () => FrameCallbackType | void;\nexport interface CallbackNode {\n  callback: FrameCallbackType;\n  priorityLevel: number;\n  expirationTime: number;\n  next: CallbackNode | null;\n  prev: CallbackNode | null;\n}\n\nexport const unstable_ImmediatePriority = 1;\nexport const unstable_UserBlockingPriority = 2;\nexport const unstable_NormalPriority = 3;\nexport const unstable_IdlePriority = 5;\nexport const unstable_LowPriority = 4;\nexport function unstable_runWithPriority<T>(priorityLevel: number, eventHandler: () => T): T;\nexport function unstable_scheduleCallback(priorityLevel: number, callback: FrameCallbackType, options?: { delay?: number | undefined, timeout?: number | undefined}): CallbackNode;\nexport function unstable_next<T>(eventHandler: () => T): T;\nexport function unstable_cancelCallback(callbackNode: CallbackNode): void;\nexport function unstable_wrapCallback(callback: FrameCallbackType): () => FrameCallbackType;\nexport function unstable_getCurrentPriorityLevel(): number;\nexport function unstable_shouldYield(): boolean;\nexport function unstable_continueExecution(): void;\nexport function unstable_pauseExecution(): void;\nexport function unstable_getFirstCallbackNode(): CallbackNode | null;\nexport function unstable_now(): number;\n"},34779:(e,n,t)=>{t.d(n,{Z:()=>r});const r='// disable automatic export\nexport {};\n/**\n * This type is only interesting if you\'re only using this module for a specifc build environment.\n *\n * With module augmentation you can declare what build of scheduler you are using by\n * augmenting this interface with e.g. `interface Build { type: \'development\'; }`\n * Depending on the build some exported members have different types.\n * Possible values are `production`, `profiling` and `development`.\n * The default behavior for the types is to use a union of all possible types.\n */\n// tslint:disable-next-line: no-empty-interface\nexport interface Build {}\n\nexport type EnableSchedulerTracing = Build extends { type: infer BuildType }\n  ? BuildType extends "production" | "profiling"\n    ? false\n    : BuildType extends "development"\n    ? true\n    : undefined\n  : undefined;\n\ntype TypeByBuildFlag<\n  Flag extends boolean | undefined,\n  WhenTrue,\n  WhenFalse\n> = Flag extends undefined\n  ? (WhenTrue | WhenFalse)\n  : Flag extends true\n  ? WhenTrue\n  : WhenFalse;\n\ntype IfSchedulerTracing<WhenTrue, WhenFalse> = TypeByBuildFlag<\n  EnableSchedulerTracing,\n  WhenTrue,\n  WhenFalse\n>;\n\nexport interface Interaction {\n  __count: number;\n  id: number;\n  name: string;\n  timestamp: number;\n}\n\nexport interface Subscriber {\n  /**\n   * A new interaction has been created via the trace() method.\n   */\n  onInteractionTraced: (interaction: Interaction) => void;\n\n  /**\n   * All scheduled async work for an interaction has finished.\n   */\n  onInteractionScheduledWorkCompleted: (interaction: Interaction) => void;\n\n  /**\n   * New async work has been scheduled for a set of interactions.\n   * When this work is later run, onWorkStarted/onWorkStopped will be called.\n   * A batch of async/yieldy work may be scheduled multiple times before completing.\n   * In that case, onWorkScheduled may be called more than once before onWorkStopped.\n   * Work is scheduled by a "thread" which is identified by a unique ID.\n   */\n  onWorkScheduled: (interactions: Set<Interaction>, threadID: number) => void;\n\n  /**\n   * A batch of scheduled work has been canceled.\n   * Work is done by a "thread" which is identified by a unique ID.\n   */\n  onWorkCanceled: (interactions: Set<Interaction>, threadID: number) => void;\n\n  /**\n   * A batch of work has started for a set of interactions.\n   * When this work is complete, onWorkStopped will be called.\n   * Work is not always completed synchronously; yielding may occur in between.\n   * A batch of async/yieldy work may also be re-started before completing.\n   * In that case, onWorkStarted may be called more than once before onWorkStopped.\n   * Work is done by a "thread" which is identified by a unique ID.\n   */\n  onWorkStarted: (interactions: Set<Interaction>, threadID: number) => void;\n\n  /**\n   * A batch of work has completed for a set of interactions.\n   * Work is done by a "thread" which is identified by a unique ID.\n   */\n  onWorkStopped: (interactions: Set<Interaction>, threadID: number) => void;\n}\n\nexport interface InteractionsRef {\n  current: Set<Interaction>;\n}\n\nexport interface SubscriberRef {\n  current: Subscriber | null;\n}\n\nexport const __interactionsRef: IfSchedulerTracing<InteractionsRef, null>;\nexport const __subscriberRef: IfSchedulerTracing<SubscriberRef, null>;\n\nexport function unstable_clear<T>(callback: () => T): T;\n\nexport function unstable_getCurrent(): Set<Interaction> | null;\n\nexport function unstable_getThreadID(): number;\n\nexport function unstable_trace<T>(\n  name: string,\n  timestamp: number,\n  callback: () => T,\n  threadID?: number\n): T;\n\nexport type WrappedFunction<T extends (...args: any[]) => any> = T & {\n  cancel: () => void;\n};\n\n/**\n * The callback is immediately returned if the enableSchedulerTracing is disabled.\n * It is unclear for which bundles this is the case.\n *\n * @param callback\n * @param threadID\n */\nexport function unstable_wrap<T extends (...args: any[]) => any>(\n  callback: T,\n  threadID?: number\n): IfSchedulerTracing<WrappedFunction<T>, T>;\n\nexport function unstable_subscribe(subscriber: Subscriber): void;\n\nexport function unstable_unsubscribe(subscriber: Subscriber): void;\n'},10962:(e,n,t)=>{t.d(n,{Z:()=>r});const r='export {};\n\nexport type PropertyValue<TValue> = TValue extends Array<infer AValue>\n  ? Array<AValue extends infer TUnpacked & {} ? TUnpacked : AValue>\n  : TValue extends infer TUnpacked & {}\n  ? TUnpacked\n  : TValue;\n\nexport type Fallback<T> = { [P in keyof T]: T[P] | NonNullable<T[P]>[] };\n\nexport interface StandardLonghandProperties<TLength = (string & {}) | 0, TTime = string & {}> {\n  /**\n   * The **`accent-color`** CSS property sets the accent color for user-interface controls generated by some elements.\n   *\n   * **Syntax**: `auto | <color>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **93** | **92**  | **15.4** | **93** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/accent-color\n   */\n  accentColor?: Property.AccentColor | undefined;\n  /**\n   * The CSS **`align-content`** property sets the distribution of space between and around content items along a flexbox\'s cross-axis or a grid\'s block axis.\n   *\n   * **Syntax**: `normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>`\n   *\n   * **Initial value**: `normal`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **29**  | **28**  |  **9**  | **12** | **11** |\n   * | 21 _-x-_ |         | 7 _-x-_ |        |        |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/align-content\n   */\n  alignContent?: Property.AlignContent | undefined;\n  /**\n   * The CSS **`align-items`** property sets the `align-self` value on all direct children as a group. In Flexbox, it controls the alignment of items on the Cross Axis. In Grid Layout, it controls the alignment of items on the Block Axis within their grid area.\n   *\n   * **Syntax**: `normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **52**  | **20**  |  **9**  | **12** | **11** |\n   * | 21 _-x-_ |         | 7 _-x-_ |        |        |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/align-items\n   */\n  alignItems?: Property.AlignItems | undefined;\n  /**\n   * The **`align-self`** CSS property overrides a grid or flex item\'s `align-items` value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.\n   *\n   * **Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>`\n   *\n   * **Initial value**: `auto`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **36**  | **20**  |  **9**  | **12** | **11** |\n   * | 21 _-x-_ |         | 7 _-x-_ |        |        |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  |      IE      |\n   * | :----: | :-----: | :------: | :----: | :----------: |\n   * | **57** | **52**  | **10.1** | **16** | **10** _-x-_ |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/align-self\n   */\n  alignSelf?: Property.AlignSelf | undefined;\n  /**\n   * The **`align-tracks`** CSS property sets the alignment in the masonry axis for grid containers that have masonry in their block axis.\n   *\n   * **Syntax**: `[ normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position> ]#`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   |   n/a   |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/align-tracks\n   */\n  alignTracks?: Property.AlignTracks | undefined;\n  /**\n   * The **`animation-delay`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-delay\n   */\n  animationDelay?: Property.AnimationDelay<TTime> | undefined;\n  /**\n   * The **`animation-direction`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.\n   *\n   * **Syntax**: `<single-animation-direction>#`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-direction\n   */\n  animationDirection?: Property.AnimationDirection | undefined;\n  /**\n   * The **`animation-duration`** CSS property sets the length of time that an animation takes to complete one cycle.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-duration\n   */\n  animationDuration?: Property.AnimationDuration<TTime> | undefined;\n  /**\n   * The **`animation-fill-mode`** CSS property sets how a CSS animation applies styles to its target before and after its execution.\n   *\n   * **Syntax**: `<single-animation-fill-mode>#`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 5 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-fill-mode\n   */\n  animationFillMode?: Property.AnimationFillMode | undefined;\n  /**\n   * The **`animation-iteration-count`** CSS property sets the number of times an animation sequence should be played before stopping.\n   *\n   * **Syntax**: `<single-animation-iteration-count>#`\n   *\n   * **Initial value**: `1`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-iteration-count\n   */\n  animationIterationCount?: Property.AnimationIterationCount | undefined;\n  /**\n   * The **`animation-name`** CSS property specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element.\n   *\n   * **Syntax**: `[ none | <keyframes-name> ]#`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-name\n   */\n  animationName?: Property.AnimationName | undefined;\n  /**\n   * The **`animation-play-state`** CSS property sets whether an animation is running or paused.\n   *\n   * **Syntax**: `<single-animation-play-state>#`\n   *\n   * **Initial value**: `running`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-play-state\n   */\n  animationPlayState?: Property.AnimationPlayState | undefined;\n  /**\n   * The **`animation-timeline`** CSS property specifies the names of one or more `@scroll-timeline` at-rules describing the scroll animations to apply to the element.\n   *\n   * **Syntax**: `<single-animation-timeline>#`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   |   n/a   |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-timeline\n   */\n  animationTimeline?: Property.AnimationTimeline | undefined;\n  /**\n   * The **`animation-timing-function`** CSS property sets how an animation progresses through the duration of each cycle.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-timing-function\n   */\n  animationTimingFunction?: Property.AnimationTimingFunction | undefined;\n  /**\n   * The **`appearance`** CSS property is used to display an element using platform-native styling, based on the operating system\'s theme. The **`-moz-appearance`** and **`-webkit-appearance`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **`-webkit-appearance`**, for compatibility reasons.\n   *\n   * **Syntax**: `none | auto | textfield | menulist-button | <compat-auto>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome  | Firefox |  Safari  |   Edge   | IE  |\n   * | :-----: | :-----: | :------: | :------: | :-: |\n   * | **84**  | **80**  | **15.4** |  **84**  | No  |\n   * | 1 _-x-_ | 1 _-x-_ | 3 _-x-_  | 12 _-x-_ |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/appearance\n   */\n  appearance?: Property.Appearance | undefined;\n  /**\n   * The **`aspect-ratio`** CSS property sets a **preferred aspect ratio** for the box, which will be used in the calculation of auto sizes and some other layout functions.\n   *\n   * **Syntax**: `auto | <ratio>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **88** | **89**  | **15** | **88** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/aspect-ratio\n   */\n  aspectRatio?: Property.AspectRatio | undefined;\n  /**\n   * The **`backdrop-filter`** CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything _behind_ the element, to see the effect you must make the element or its background at least partially transparent.\n   *\n   * **Syntax**: `none | <filter-function-list>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |   Safari    |  Edge  | IE  |\n   * | :----: | :-----: | :---------: | :----: | :-: |\n   * | **76** |   n/a   | **9** _-x-_ | **17** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/backdrop-filter\n   */\n  backdropFilter?: Property.BackdropFilter | undefined;\n  /**\n   * The **`backface-visibility`** CSS property sets whether the back face of an element is visible when turned towards the user.\n   *\n   * **Syntax**: `visible | hidden`\n   *\n   * **Initial value**: `visible`\n   *\n   * |  Chrome  | Firefox  |  Safari   |  Edge  |   IE   |\n   * | :------: | :------: | :-------: | :----: | :----: |\n   * |  **36**  |  **16**  | **15.4**  | **12** | **10** |\n   * | 12 _-x-_ | 10 _-x-_ | 5.1 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/backface-visibility\n   */\n  backfaceVisibility?: Property.BackfaceVisibility | undefined;\n  /**\n   * The **`background-attachment`** CSS property sets whether a background image\'s position is fixed within the viewport, or scrolls with its containing block.\n   *\n   * **Syntax**: `<attachment>#`\n   *\n   * **Initial value**: `scroll`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-attachment\n   */\n  backgroundAttachment?: Property.BackgroundAttachment | undefined;\n  /**\n   * The **`background-blend-mode`** CSS property sets how an element\'s background images should blend with each other and with the element\'s background color.\n   *\n   * **Syntax**: `<blend-mode>#`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **35** | **30**  | **8**  | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-blend-mode\n   */\n  backgroundBlendMode?: Property.BackgroundBlendMode | undefined;\n  /**\n   * The **`background-clip`** CSS property sets whether an element\'s background extends underneath its border box, padding box, or content box.\n   *\n   * **Syntax**: `<box>#`\n   *\n   * **Initial value**: `border-box`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  |  **4**  | **14**  | **12** | **9** |\n   * |        |         | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-clip\n   */\n  backgroundClip?: Property.BackgroundClip | undefined;\n  /**\n   * The **`background-color`** CSS property sets the background color of an element.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `transparent`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-color\n   */\n  backgroundColor?: Property.BackgroundColor | undefined;\n  /**\n   * The **`background-image`** CSS property sets one or more background images on an element.\n   *\n   * **Syntax**: `<bg-image>#`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-image\n   */\n  backgroundImage?: Property.BackgroundImage | undefined;\n  /**\n   * The **`background-origin`** CSS property sets the background\'s origin: from the border start, inside the border, or inside the padding.\n   *\n   * **Syntax**: `<box>#`\n   *\n   * **Initial value**: `padding-box`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **4**  | **3**  | **12** | **9** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-origin\n   */\n  backgroundOrigin?: Property.BackgroundOrigin | undefined;\n  /**\n   * The **`background-position-x`** CSS property sets the initial horizontal position for each background image. The position is relative to the position layer set by `background-origin`.\n   *\n   * **Syntax**: `[ center | [ [ left | right | x-start | x-end ]? <length-percentage>? ]! ]#`\n   *\n   * **Initial value**: `0%`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  | **49**  | **1**  | **12** | **6** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-position-x\n   */\n  backgroundPositionX?: Property.BackgroundPositionX<TLength> | undefined;\n  /**\n   * The **`background-position-y`** CSS property sets the initial vertical position for each background image. The position is relative to the position layer set by `background-origin`.\n   *\n   * **Syntax**: `[ center | [ [ top | bottom | y-start | y-end ]? <length-percentage>? ]! ]#`\n   *\n   * **Initial value**: `0%`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  | **49**  | **1**  | **12** | **6** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-position-y\n   */\n  backgroundPositionY?: Property.BackgroundPositionY<TLength> | undefined;\n  /**\n   * The **`background-repeat`** CSS property sets how background images are repeated. A background image can be repeated along the horizontal and vertical axes, or not repeated at all.\n   *\n   * **Syntax**: `<repeat-style>#`\n   *\n   * **Initial value**: `repeat`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-repeat\n   */\n  backgroundRepeat?: Property.BackgroundRepeat | undefined;\n  /**\n   * The **`background-size`** CSS property sets the size of the element\'s background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\n   *\n   * **Syntax**: `<bg-size>#`\n   *\n   * **Initial value**: `auto auto`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\n   * | :-----: | :-----: | :-----: | :----: | :---: |\n   * |  **3**  |  **4**  |  **5**  | **12** | **9** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-size\n   */\n  backgroundSize?: Property.BackgroundSize<TLength> | undefined;\n  /**\n   * **Syntax**: `clip | ellipsis | <string>`\n   *\n   * **Initial value**: `clip`\n   */\n  blockOverflow?: Property.BlockOverflow | undefined;\n  /**\n   * The **`block-size`** CSS property defines the horizontal or vertical size of an element\'s block, depending on its writing mode. It corresponds to either the `width` or the `height` property, depending on the value of `writing-mode`.\n   *\n   * **Syntax**: `<\'width\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/block-size\n   */\n  blockSize?: Property.BlockSize<TLength> | undefined;\n  /**\n   * The **`border-block-color`** CSS property defines the color of the logical block borders of an element, which maps to a physical border color depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-color` and `border-bottom-color`, or `border-right-color` and `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-color\'>{1,2}`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-color\n   */\n  borderBlockColor?: Property.BorderBlockColor | undefined;\n  /**\n   * The **`border-block-end-color`** CSS property defines the color of the logical block-end border of an element, which maps to a physical border color depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-color\'>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-end-color\n   */\n  borderBlockEndColor?: Property.BorderBlockEndColor | undefined;\n  /**\n   * The **`border-block-end-style`** CSS property defines the style of the logical block-end border of an element, which maps to a physical border style depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-end-style\n   */\n  borderBlockEndStyle?: Property.BorderBlockEndStyle | undefined;\n  /**\n   * The **`border-block-end-width`** CSS property defines the width of the logical block-end border of an element, which maps to a physical border width depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-width\'>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-end-width\n   */\n  borderBlockEndWidth?: Property.BorderBlockEndWidth<TLength> | undefined;\n  /**\n   * The **`border-block-start-color`** CSS property defines the color of the logical block-start border of an element, which maps to a physical border color depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-color\'>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-start-color\n   */\n  borderBlockStartColor?: Property.BorderBlockStartColor | undefined;\n  /**\n   * The **`border-block-start-style`** CSS property defines the style of the logical block start border of an element, which maps to a physical border style depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-start-style\n   */\n  borderBlockStartStyle?: Property.BorderBlockStartStyle | undefined;\n  /**\n   * The **`border-block-start-width`** CSS property defines the width of the logical block-start border of an element, which maps to a physical border width depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-width\'>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-start-width\n   */\n  borderBlockStartWidth?: Property.BorderBlockStartWidth<TLength> | undefined;\n  /**\n   * The **`border-block-style`** CSS property defines the style of the logical block borders of an element, which maps to a physical border style depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-style` and `border-bottom-style`, or `border-left-style` and `border-right-style` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-style\n   */\n  borderBlockStyle?: Property.BorderBlockStyle | undefined;\n  /**\n   * The **`border-block-width`** CSS property defines the width of the logical block borders of an element, which maps to a physical border width depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-width` and `border-bottom-width`, or `border-left-width`, and `border-right-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-width\'>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-width\n   */\n  borderBlockWidth?: Property.BorderBlockWidth<TLength> | undefined;\n  /**\n   * The **`border-bottom-color`** CSS property sets the color of an element\'s bottom border. It can also be set with the shorthand CSS properties `border-color` or `border-bottom`.\n   *\n   * **Syntax**: `<\'border-top-color\'>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-color\n   */\n  borderBottomColor?: Property.BorderBottomColor | undefined;\n  /**\n   * The **`border-bottom-left-radius`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\n   * | :-----: | :-----: | :-----: | :----: | :---: |\n   * |  **4**  |  **4**  |  **5**  | **12** | **9** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-left-radius\n   */\n  borderBottomLeftRadius?: Property.BorderBottomLeftRadius<TLength> | undefined;\n  /**\n   * The **`border-bottom-right-radius`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\n   * | :-----: | :-----: | :-----: | :----: | :---: |\n   * |  **4**  |  **4**  |  **5**  | **12** | **9** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-right-radius\n   */\n  borderBottomRightRadius?: Property.BorderBottomRightRadius<TLength> | undefined;\n  /**\n   * The **`border-bottom-style`** CSS property sets the line style of an element\'s bottom `border`.\n   *\n   * **Syntax**: `<line-style>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-style\n   */\n  borderBottomStyle?: Property.BorderBottomStyle | undefined;\n  /**\n   * The **`border-bottom-width`** CSS property sets the width of the bottom border of an element.\n   *\n   * **Syntax**: `<line-width>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-width\n   */\n  borderBottomWidth?: Property.BorderBottomWidth<TLength> | undefined;\n  /**\n   * The **`border-collapse`** CSS property sets whether cells inside a `<table>` have shared or separate borders.\n   *\n   * **Syntax**: `collapse | separate`\n   *\n   * **Initial value**: `separate`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  |  **1**  | **1.2** | **12** | **5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-collapse\n   */\n  borderCollapse?: Property.BorderCollapse | undefined;\n  /**\n   * The **`border-end-end-radius`** CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element\'s `writing-mode`, `direction`, and `text-orientation`. This is useful when building styles to work regardless of the text orientation and writing mode.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **89** | **66**  | **15** | **89** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-end-end-radius\n   */\n  borderEndEndRadius?: Property.BorderEndEndRadius<TLength> | undefined;\n  /**\n   * The **`border-end-start-radius`** CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element\'s `writing-mode`, `direction`, and `text-orientation`. This is useful when building styles to work regardless of the text orientation and writing mode.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **89** | **66**  | **15** | **89** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-end-start-radius\n   */\n  borderEndStartRadius?: Property.BorderEndStartRadius<TLength> | undefined;\n  /**\n   * The **`border-image-outset`** CSS property sets the distance by which an element\'s border image is set out from its border box.\n   *\n   * **Syntax**: `[ <length> | <number> ]{1,4}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **15** | **15**  | **6**  | **12** | **11** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-outset\n   */\n  borderImageOutset?: Property.BorderImageOutset<TLength> | undefined;\n  /**\n   * The **`border-image-repeat`** CSS property defines how the edge regions of a source image are adjusted to fit the dimensions of an element\'s border image.\n   *\n   * **Syntax**: `[ stretch | repeat | round | space ]{1,2}`\n   *\n   * **Initial value**: `stretch`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **15** | **15**  | **6**  | **12** | **11** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-repeat\n   */\n  borderImageRepeat?: Property.BorderImageRepeat | undefined;\n  /**\n   * The **`border-image-slice`** CSS property divides the image specified by `border-image-source` into regions. These regions form the components of an element\'s border image.\n   *\n   * **Syntax**: `<number-percentage>{1,4} && fill?`\n   *\n   * **Initial value**: `100%`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **15** | **15**  | **6**  | **12** | **11** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-slice\n   */\n  borderImageSlice?: Property.BorderImageSlice | undefined;\n  /**\n   * The **`border-image-source`** CSS property sets the source image used to create an element\'s border image.\n   *\n   * **Syntax**: `none | <image>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **15** | **15**  | **6**  | **12** | **11** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-source\n   */\n  borderImageSource?: Property.BorderImageSource | undefined;\n  /**\n   * The **`border-image-width`** CSS property sets the width of an element\'s border image.\n   *\n   * **Syntax**: `[ <length-percentage> | <number> | auto ]{1,4}`\n   *\n   * **Initial value**: `1`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **15** | **13**  | **6**  | **12** | **11** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-width\n   */\n  borderImageWidth?: Property.BorderImageWidth<TLength> | undefined;\n  /**\n   * The **`border-inline-color`** CSS property defines the color of the logical inline borders of an element, which maps to a physical border color depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-color` and `border-bottom-color`, or `border-right-color` and `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-color\'>{1,2}`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-color\n   */\n  borderInlineColor?: Property.BorderInlineColor | undefined;\n  /**\n   * The **`border-inline-end-color`** CSS property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-color\'>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome |           Firefox           |  Safari  |  Edge  | IE  |\n   * | :----: | :-------------------------: | :------: | :----: | :-: |\n   * | **69** |           **41**            | **12.1** | **79** | No  |\n   * |        | 3 _(-moz-border-end-color)_ |          |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-end-color\n   */\n  borderInlineEndColor?: Property.BorderInlineEndColor | undefined;\n  /**\n   * The **`border-inline-end-style`** CSS property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome |           Firefox           |  Safari  |  Edge  | IE  |\n   * | :----: | :-------------------------: | :------: | :----: | :-: |\n   * | **69** |           **41**            | **12.1** | **79** | No  |\n   * |        | 3 _(-moz-border-end-style)_ |          |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-end-style\n   */\n  borderInlineEndStyle?: Property.BorderInlineEndStyle | undefined;\n  /**\n   * The **`border-inline-end-width`** CSS property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-width\'>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome |           Firefox           |  Safari  |  Edge  | IE  |\n   * | :----: | :-------------------------: | :------: | :----: | :-: |\n   * | **69** |           **41**            | **12.1** | **79** | No  |\n   * |        | 3 _(-moz-border-end-width)_ |          |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-end-width\n   */\n  borderInlineEndWidth?: Property.BorderInlineEndWidth<TLength> | undefined;\n  /**\n   * The **`border-inline-start-color`** CSS property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-color\'>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome |            Firefox            |  Safari  |  Edge  | IE  |\n   * | :----: | :---------------------------: | :------: | :----: | :-: |\n   * | **69** |            **41**             | **12.1** | **79** | No  |\n   * |        | 3 _(-moz-border-start-color)_ |          |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-start-color\n   */\n  borderInlineStartColor?: Property.BorderInlineStartColor | undefined;\n  /**\n   * The **`border-inline-start-style`** CSS property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome |            Firefox            |  Safari  |  Edge  | IE  |\n   * | :----: | :---------------------------: | :------: | :----: | :-: |\n   * | **69** |            **41**             | **12.1** | **79** | No  |\n   * |        | 3 _(-moz-border-start-style)_ |          |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-start-style\n   */\n  borderInlineStartStyle?: Property.BorderInlineStartStyle | undefined;\n  /**\n   * The **`border-inline-start-width`** CSS property defines the width of the logical inline-start border of an element, which maps to a physical border width depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-width\'>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-start-width\n   */\n  borderInlineStartWidth?: Property.BorderInlineStartWidth<TLength> | undefined;\n  /**\n   * The **`border-inline-style`** CSS property defines the style of the logical inline borders of an element, which maps to a physical border style depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-style` and `border-bottom-style`, or `border-left-style` and `border-right-style` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-style\n   */\n  borderInlineStyle?: Property.BorderInlineStyle | undefined;\n  /**\n   * The **`border-inline-width`** CSS property defines the width of the logical inline borders of an element, which maps to a physical border width depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-width` and `border-bottom-width`, or `border-left-width`, and `border-right-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-width\'>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-width\n   */\n  borderInlineWidth?: Property.BorderInlineWidth<TLength> | undefined;\n  /**\n   * The **`border-left-color`** CSS property sets the color of an element\'s left border. It can also be set with the shorthand CSS properties `border-color` or `border-left`.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-left-color\n   */\n  borderLeftColor?: Property.BorderLeftColor | undefined;\n  /**\n   * The **`border-left-style`** CSS property sets the line style of an element\'s left `border`.\n   *\n   * **Syntax**: `<line-style>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-left-style\n   */\n  borderLeftStyle?: Property.BorderLeftStyle | undefined;\n  /**\n   * The **`border-left-width`** CSS property sets the width of the left border of an element.\n   *\n   * **Syntax**: `<line-width>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-left-width\n   */\n  borderLeftWidth?: Property.BorderLeftWidth<TLength> | undefined;\n  /**\n   * The **`border-right-color`** CSS property sets the color of an element\'s right border. It can also be set with the shorthand CSS properties `border-color` or `border-right`.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-right-color\n   */\n  borderRightColor?: Property.BorderRightColor | undefined;\n  /**\n   * The **`border-right-style`** CSS property sets the line style of an element\'s right `border`.\n   *\n   * **Syntax**: `<line-style>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-right-style\n   */\n  borderRightStyle?: Property.BorderRightStyle | undefined;\n  /**\n   * The **`border-right-width`** CSS property sets the width of the right border of an element.\n   *\n   * **Syntax**: `<line-width>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-right-width\n   */\n  borderRightWidth?: Property.BorderRightWidth<TLength> | undefined;\n  /**\n   * The **`border-spacing`** CSS property sets the distance between the borders of adjacent `<table>` cells. This property applies only when `border-collapse` is `separate`.\n   *\n   * **Syntax**: `<length> <length>?`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-spacing\n   */\n  borderSpacing?: Property.BorderSpacing<TLength> | undefined;\n  /**\n   * The **`border-start-end-radius`** CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element\'s `writing-mode`, `direction`, and `text-orientation`. This is useful when building styles to work regardless of the text orientation and writing mode.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **89** | **66**  | **15** | **89** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-start-end-radius\n   */\n  borderStartEndRadius?: Property.BorderStartEndRadius<TLength> | undefined;\n  /**\n   * The **`border-start-start-radius`** CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element\'s `writing-mode`, `direction`, and `text-orientation`. This is useful when building styles to work regardless of the text orientation and writing mode.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **89** | **66**  | **15** | **89** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-start-start-radius\n   */\n  borderStartStartRadius?: Property.BorderStartStartRadius<TLength> | undefined;\n  /**\n   * The **`border-top-color`** CSS property sets the color of an element\'s top border. It can also be set with the shorthand CSS properties `border-color` or `border-top`.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-color\n   */\n  borderTopColor?: Property.BorderTopColor | undefined;\n  /**\n   * The **`border-top-left-radius`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\n   * | :-----: | :-----: | :-----: | :----: | :---: |\n   * |  **4**  |  **4**  |  **5**  | **12** | **9** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-left-radius\n   */\n  borderTopLeftRadius?: Property.BorderTopLeftRadius<TLength> | undefined;\n  /**\n   * The **`border-top-right-radius`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\n   * | :-----: | :-----: | :-----: | :----: | :---: |\n   * |  **4**  |  **4**  |  **5**  | **12** | **9** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-right-radius\n   */\n  borderTopRightRadius?: Property.BorderTopRightRadius<TLength> | undefined;\n  /**\n   * The **`border-top-style`** CSS property sets the line style of an element\'s top `border`.\n   *\n   * **Syntax**: `<line-style>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-style\n   */\n  borderTopStyle?: Property.BorderTopStyle | undefined;\n  /**\n   * The **`border-top-width`** CSS property sets the width of the top border of an element.\n   *\n   * **Syntax**: `<line-width>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-width\n   */\n  borderTopWidth?: Property.BorderTopWidth<TLength> | undefined;\n  /**\n   * The **`bottom`** CSS property participates in setting the vertical position of a positioned element. It has no effect on non-positioned elements.\n   *\n   * **Syntax**: `<length> | <percentage> | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/bottom\n   */\n  bottom?: Property.Bottom<TLength> | undefined;\n  /**\n   * The **`box-decoration-break`** CSS property specifies how an element\'s fragments should be rendered when broken across multiple lines, columns, or pages.\n   *\n   * **Syntax**: `slice | clone`\n   *\n   * **Initial value**: `slice`\n   *\n   * |    Chrome    | Firefox |   Safari    |     Edge     | IE  |\n   * | :----------: | :-----: | :---------: | :----------: | :-: |\n   * | **22** _-x-_ | **32**  | **7** _-x-_ | **79** _-x-_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/box-decoration-break\n   */\n  boxDecorationBreak?: Property.BoxDecorationBreak | undefined;\n  /**\n   * The **`box-shadow`** CSS property adds shadow effects around an element\'s frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.\n   *\n   * **Syntax**: `none | <shadow>#`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\n   * | :-----: | :-----: | :-----: | :----: | :---: |\n   * | **10**  |  **4**  | **5.1** | **12** | **9** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/box-shadow\n   */\n  boxShadow?: Property.BoxShadow | undefined;\n  /**\n   * The **`box-sizing`** CSS property sets how the total width and height of an element is calculated.\n   *\n   * **Syntax**: `content-box | border-box`\n   *\n   * **Initial value**: `content-box`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\n   * | :-----: | :-----: | :-----: | :----: | :---: |\n   * | **10**  | **29**  | **5.1** | **12** | **8** |\n   * | 1 _-x-_ | 1 _-x-_ | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/box-sizing\n   */\n  boxSizing?: Property.BoxSizing | undefined;\n  /**\n   * The **`break-after`** CSS property sets how page, column, or region breaks should behave after a generated box. If there is no generated box, the property is ignored.\n   *\n   * **Syntax**: `auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region`\n   *\n   * **Initial value**: `auto`\n   *\n   * ---\n   *\n   * _Supported in Multi-column Layout_\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **50** | **65**  |   No   | **12** | **10** |\n   *\n   * ---\n   *\n   * _Supported in Paged Media_\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **50** | **65**  | **10** | **12** | **10** |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/break-after\n   */\n  breakAfter?: Property.BreakAfter | undefined;\n  /**\n   * The **`break-before`** CSS property sets how page, column, or region breaks should behave before a generated box. If there is no generated box, the property is ignored.\n   *\n   * **Syntax**: `auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region`\n   *\n   * **Initial value**: `auto`\n   *\n   * ---\n   *\n   * _Supported in Multi-column Layout_\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **50** | **65**  |   No   | **12** | **10** |\n   *\n   * ---\n   *\n   * _Supported in Paged Media_\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **50** | **65**  | **10** | **12** | **10** |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/break-before\n   */\n  breakBefore?: Property.BreakBefore | undefined;\n  /**\n   * The **`break-inside`** CSS property sets how page, column, or region breaks should behave inside a generated box. If there is no generated box, the property is ignored.\n   *\n   * **Syntax**: `auto | avoid | avoid-page | avoid-column | avoid-region`\n   *\n   * **Initial value**: `auto`\n   *\n   * ---\n   *\n   * _Supported in Multi-column Layout_\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **50** | **65**  | **10** | **12** | **10** |\n   *\n   * ---\n   *\n   * _Supported in Paged Media_\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **50** | **65**  | **10** | **12** | **10** |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/break-inside\n   */\n  breakInside?: Property.BreakInside | undefined;\n  /**\n   * The **`caption-side`** CSS property puts the content of a table\'s `<caption>` on the specified side. The values are relative to the `writing-mode` of the table.\n   *\n   * **Syntax**: `top | bottom | block-start | block-end | inline-start | inline-end`\n   *\n   * **Initial value**: `top`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/caption-side\n   */\n  captionSide?: Property.CaptionSide | undefined;\n  /**\n   * The **`caret-color`** CSS property sets the color of the **insertion caret**, the visible marker where the next character typed will be inserted. This is sometimes referred to as the **text input cursor**. The caret appears in elements such as `<input>` or those with the `contenteditable` attribute. The caret is typically a thin vertical line that flashes to help make it more noticeable. By default, it is black, but its color can be altered with this property.\n   *\n   * **Syntax**: `auto | <color>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **53**  | **11.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/caret-color\n   */\n  caretColor?: Property.CaretColor | undefined;\n  /**\n   * The **`clear`** CSS property sets whether an element must be moved below (cleared) floating elements that precede it. The `clear` property applies to floating and non-floating elements.\n   *\n   * **Syntax**: `none | left | right | both | inline-start | inline-end`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/clear\n   */\n  clear?: Property.Clear | undefined;\n  /**\n   * The **`clip-path`** CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden.\n   *\n   * **Syntax**: `<clip-source> | [ <basic-shape> || <geometry-box> ] | none`\n   *\n   * **Initial value**: `none`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **55**  | **3.5** | **9.1** | **12** | **10** |\n   * | 23 _-x-_ |         | 7 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/clip-path\n   */\n  clipPath?: Property.ClipPath | undefined;\n  /**\n   * The **`color`** CSS property sets the foreground color value of an element\'s text and text decorations, and sets the `<currentcolor>` value. `currentcolor` may be used as an indirect value on _other_ properties and is the default for other color properties, such as `border-color`.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `canvastext`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/color\n   */\n  color?: Property.Color | undefined;\n  /**\n   * The **`print-color-adjust`** CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element\'s appearance it determines to be necessary and prudent given the type and capabilities of the output device.\n   *\n   * **Syntax**: `economy | exact`\n   *\n   * **Initial value**: `economy`\n   *\n   * |    Chrome    |       Firefox       |  Safari  |     Edge     | IE  |\n   * | :----------: | :-----------------: | :------: | :----------: | :-: |\n   * | **17** _-x-_ |       **97**        | **15.4** | **79** _-x-_ | No  |\n   * |              | 48 _(color-adjust)_ | 6 _-x-_  |              |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/print-color-adjust\n   */\n  colorAdjust?: Property.PrintColorAdjust | undefined;\n  /**\n   * The **`color-scheme`** CSS property allows an element to indicate which color schemes it can comfortably be rendered in.\n   *\n   * **Syntax**: `normal | [ light | dark | <custom-ident> ]+ && only?`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **81** | **96**  | **13** | **81** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/color-scheme\n   */\n  colorScheme?: Property.ColorScheme | undefined;\n  /**\n   * The **`column-count`** CSS property breaks an element\'s content into the specified number of columns.\n   *\n   * **Syntax**: `<integer> | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **50**  | **52**  |  **9**  | **12** | **10** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-count\n   */\n  columnCount?: Property.ColumnCount | undefined;\n  /**\n   * The **`column-fill`** CSS property controls how an element\'s contents are balanced when broken into columns.\n   *\n   * **Syntax**: `auto | balance | balance-all`\n   *\n   * **Initial value**: `balance`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |   IE   |\n   * | :----: | :-----: | :-----: | :----: | :----: |\n   * | **50** | **52**  |  **9**  | **12** | **10** |\n   * |        |         | 8 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-fill\n   */\n  columnFill?: Property.ColumnFill | undefined;\n  /**\n   * The **`column-gap`** CSS property sets the size of the gap (gutter) between an element\'s columns.\n   *\n   * **Syntax**: `normal | <length-percentage>`\n   *\n   * **Initial value**: `normal`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **84** | **63**  | **14.1** | **84** | No  |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * |         Chrome         |        Firefox         |          Safari          |  Edge  | IE  |\n   * | :--------------------: | :--------------------: | :----------------------: | :----: | :-: |\n   * |         **66**         |         **61**         |          **12**          | **16** | No  |\n   * | 57 _(grid-column-gap)_ | 52 _(grid-column-gap)_ | 10.1 _(grid-column-gap)_ |        |     |\n   *\n   * ---\n   *\n   * _Supported in Multi-column Layout_\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **50**  | **52**  | **10**  | **12** | **10** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |        |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-gap\n   */\n  columnGap?: Property.ColumnGap<TLength> | undefined;\n  /**\n   * The **`column-rule-color`** CSS property sets the color of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **50**  | **52**  |  **9**  | **12** | **10** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-rule-color\n   */\n  columnRuleColor?: Property.ColumnRuleColor | undefined;\n  /**\n   * The **`column-rule-style`** CSS property sets the style of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'border-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **50**  | **52**  |  **9**  | **12** | **10** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-rule-style\n   */\n  columnRuleStyle?: Property.ColumnRuleStyle | undefined;\n  /**\n   * The **`column-rule-width`** CSS property sets the width of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'border-width\'>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **50**  | **52**  |  **9**  | **12** | **10** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-rule-width\n   */\n  columnRuleWidth?: Property.ColumnRuleWidth<TLength> | undefined;\n  /**\n   * The **`column-span`** CSS property makes it possible for an element to span across all columns when its value is set to `all`.\n   *\n   * **Syntax**: `none | all`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n   * | :-----: | :-----: | :-------: | :----: | :----: |\n   * | **50**  | **71**  |   **9**   | **12** | **10** |\n   * | 6 _-x-_ |         | 5.1 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-span\n   */\n  columnSpan?: Property.ColumnSpan | undefined;\n  /**\n   * The **`column-width`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the `column-width` value. If the width of the container is narrower than the specified value, the single column\'s width will be smaller than the declared column width.\n   *\n   * **Syntax**: `<length> | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **50**  | **50**  |  **9**  | **12** | **10** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-width\n   */\n  columnWidth?: Property.ColumnWidth<TLength> | undefined;\n  /**\n   * The **`contain`** CSS property allows an author to indicate that an element and its contents are, as much as possible, _independent_ of the rest of the document tree. This allows the browser to recalculate layout, style, paint, size, or any combination of them for a limited area of the DOM and not the entire page, leading to obvious performance benefits.\n   *\n   * **Syntax**: `none | strict | content | [ size || layout || style || paint ]`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **52** | **69**  | **15.4** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/contain\n   */\n  contain?: Property.Contain | undefined;\n  /**\n   * The **`content`** CSS property replaces an element with a generated value. Objects inserted using the `content` property are **anonymous replaced elements**.\n   *\n   * **Syntax**: `normal | none | [ <content-replacement> | <content-list> ] [/ [ <string> | <counter> ]+ ]?`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/content\n   */\n  content?: Property.Content | undefined;\n  /**\n   * The **`content-visibility`** CSS property controls whether or not an element renders its contents at all, along with forcing a strong set of containments, allowing user agents to potentially omit large swathes of layout and rendering work until it becomes needed. Basically it enables the user agent to skip an element\'s rendering work (including layout and painting) until it is needed — which makes the initial page load much faster.\n   *\n   * **Syntax**: `visible | auto | hidden`\n   *\n   * **Initial value**: `visible`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **85** |   No    | **15.4** | **85** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/content-visibility\n   */\n  contentVisibility?: Property.ContentVisibility | undefined;\n  /**\n   * The **`counter-increment`** CSS property increases or decreases the value of a CSS counter by a given value.\n   *\n   * **Syntax**: `[ <counter-name> <integer>? ]+ | none`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **2**  |  **1**  | **3**  | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/counter-increment\n   */\n  counterIncrement?: Property.CounterIncrement | undefined;\n  /**\n   * The **`counter-reset`** CSS property resets a CSS counter to a given value. This property will create a new counter or reversed counter with the given name on the specified element.\n   *\n   * **Syntax**: `[ <counter-name> <integer>? | <reversed-counter-name> <integer>? ]+ | none`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **2**  |  **1**  | **3**  | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/counter-reset\n   */\n  counterReset?: Property.CounterReset | undefined;\n  /**\n   * The **`counter-set`** CSS property sets a CSS counter to a given value. It manipulates the value of existing counters, and will only create new counters if there isn\'t already a counter of the given name on the element.\n   *\n   * **Syntax**: `[ <counter-name> <integer>? ]+ | none`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **85** | **68**  |   No   | **85** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/counter-set\n   */\n  counterSet?: Property.CounterSet | undefined;\n  /**\n   * The **`cursor`** CSS property sets the mouse cursor, if any, to show when the mouse pointer is over an element.\n   *\n   * **Syntax**: `[ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing ] ]`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  |  **1**  | **1.2** | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/cursor\n   */\n  cursor?: Property.Cursor | undefined;\n  /**\n   * The **`direction`** CSS property sets the direction of text, table columns, and horizontal overflow. Use `rtl` for languages written from right to left (like Hebrew or Arabic), and `ltr` for those written from left to right (like English and most other languages).\n   *\n   * **Syntax**: `ltr | rtl`\n   *\n   * **Initial value**: `ltr`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **2**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/direction\n   */\n  direction?: Property.Direction | undefined;\n  /**\n   * The **`display`** CSS property sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.\n   *\n   * **Syntax**: `[ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy>`\n   *\n   * **Initial value**: `inline`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/display\n   */\n  display?: Property.Display | undefined;\n  /**\n   * The **`empty-cells`** CSS property sets whether borders and backgrounds appear around `<table>` cells that have no visible content.\n   *\n   * **Syntax**: `show | hide`\n   *\n   * **Initial value**: `show`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  |  **1**  | **1.2** | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/empty-cells\n   */\n  emptyCells?: Property.EmptyCells | undefined;\n  /**\n   * The **`filter`** CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders.\n   *\n   * **Syntax**: `none | <filter-function-list>`\n   *\n   * **Initial value**: `none`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  | IE  |\n   * | :------: | :-----: | :-----: | :----: | :-: |\n   * |  **53**  | **35**  | **9.1** | **12** | No  |\n   * | 18 _-x-_ |         | 6 _-x-_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/filter\n   */\n  filter?: Property.Filter | undefined;\n  /**\n   * The **`flex-basis`** CSS property sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with `box-sizing`.\n   *\n   * **Syntax**: `content | <\'width\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **29**  | **22**  |  **9**  | **12** | **11** |\n   * | 22 _-x-_ |         | 7 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/flex-basis\n   */\n  flexBasis?: Property.FlexBasis<TLength> | undefined;\n  /**\n   * The **`flex-direction`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).\n   *\n   * **Syntax**: `row | row-reverse | column | column-reverse`\n   *\n   * **Initial value**: `row`\n   *\n   * |  Chrome  | Firefox  | Safari  |  Edge  |    IE    |\n   * | :------: | :------: | :-----: | :----: | :------: |\n   * |  **29**  |  **81**  |  **9**  | **12** |  **11**  |\n   * | 21 _-x-_ | 49 _-x-_ | 7 _-x-_ |        | 10 _-x-_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/flex-direction\n   */\n  flexDirection?: Property.FlexDirection | undefined;\n  /**\n   * The **`flex-grow`** CSS property sets the flex grow factor of a flex item\'s main size.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `0`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |            IE            |\n   * | :------: | :-----: | :-----: | :----: | :----------------------: |\n   * |  **29**  | **20**  |  **9**  | **12** |          **11**          |\n   * | 22 _-x-_ |         | 7 _-x-_ |        | 10 _(-ms-flex-positive)_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/flex-grow\n   */\n  flexGrow?: Property.FlexGrow | undefined;\n  /**\n   * The **`flex-shrink`** CSS property sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to `flex-shrink`.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `1`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **29**  | **20**  |  **9**  | **12** | **10** |\n   * | 22 _-x-_ |         | 8 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/flex-shrink\n   */\n  flexShrink?: Property.FlexShrink | undefined;\n  /**\n   * The **`flex-wrap`** CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked.\n   *\n   * **Syntax**: `nowrap | wrap | wrap-reverse`\n   *\n   * **Initial value**: `nowrap`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **29**  | **28**  |  **9**  | **12** | **11** |\n   * | 21 _-x-_ |         | 7 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/flex-wrap\n   */\n  flexWrap?: Property.FlexWrap | undefined;\n  /**\n   * The **`float`** CSS property places an element on the left or right side of its container, allowing text and inline elements to wrap around it. The element is removed from the normal flow of the page, though still remaining a part of the flow (in contrast to absolute positioning).\n   *\n   * **Syntax**: `left | right | none | inline-start | inline-end`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/float\n   */\n  float?: Property.Float | undefined;\n  /**\n   * The **`font-family`** CSS property specifies a prioritized list of one or more font family names and/or generic family names for the selected element.\n   *\n   * **Syntax**: `[ <family-name> | <generic-family> ]#`\n   *\n   * **Initial value**: depends on user agent\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-family\n   */\n  fontFamily?: Property.FontFamily | undefined;\n  /**\n   * The **`font-feature-settings`** CSS property controls advanced typographic features in OpenType fonts.\n   *\n   * **Syntax**: `normal | <feature-tag-value>#`\n   *\n   * **Initial value**: `normal`\n   *\n   * |  Chrome  | Firefox  | Safari  |  Edge  |   IE   |\n   * | :------: | :------: | :-----: | :----: | :----: |\n   * |  **48**  |  **34**  | **9.1** | **15** | **10** |\n   * | 16 _-x-_ | 15 _-x-_ |         |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-feature-settings\n   */\n  fontFeatureSettings?: Property.FontFeatureSettings | undefined;\n  /**\n   * The **`font-kerning`** CSS property sets the use of the kerning information stored in a font.\n   *\n   * **Syntax**: `auto | normal | none`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :-----: | :----: | :-: |\n   * | **33** | **32**  |  **9**  | **79** | No  |\n   * |        |         | 6 _-x-_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-kerning\n   */\n  fontKerning?: Property.FontKerning | undefined;\n  /**\n   * The **`font-language-override`** CSS property controls the use of language-specific glyphs in a typeface.\n   *\n   * **Syntax**: `normal | <string>`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   | **34**  |   No   |  No  | No  |\n   * |        | 4 _-x-_ |        |      |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-language-override\n   */\n  fontLanguageOverride?: Property.FontLanguageOverride | undefined;\n  /**\n   * The **`font-optical-sizing`** CSS property sets whether text rendering is optimized for viewing at different sizes.\n   *\n   * **Syntax**: `auto | none`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **79** | **62**  | **11** | **17** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-optical-sizing\n   */\n  fontOpticalSizing?: Property.FontOpticalSizing | undefined;\n  /**\n   * The **`font-size`** CSS property sets the size of the font. Changing the font size also updates the sizes of the font size-relative `<length>` units, such as `em`, `ex`, and so forth.\n   *\n   * **Syntax**: `<absolute-size> | <relative-size> | <length-percentage>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-size\n   */\n  fontSize?: Property.FontSize<TLength> | undefined;\n  /**\n   * The **`font-size-adjust`** CSS property sets the size of lower-case letters relative to the current font size (which defines the size of upper-case letters).\n   *\n   * **Syntax**: `none | [ ex-height | cap-height | ch-width | ic-width | ic-height ]? [ from-font | <number> ]`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |  n/a   |  **1**  |   No   | n/a  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-size-adjust\n   */\n  fontSizeAdjust?: Property.FontSizeAdjust | undefined;\n  /**\n   * The **`font-smooth`** CSS property controls the application of anti-aliasing when fonts are rendered.\n   *\n   * **Syntax**: `auto | never | always | <absolute-size> | <length>`\n   *\n   * **Initial value**: `auto`\n   *\n   * |              Chrome              |              Firefox               |              Safari              |               Edge                | IE  |\n   * | :------------------------------: | :--------------------------------: | :------------------------------: | :-------------------------------: | :-: |\n   * | **5** _(-webkit-font-smoothing)_ | **25** _(-moz-osx-font-smoothing)_ | **4** _(-webkit-font-smoothing)_ | **79** _(-webkit-font-smoothing)_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-smooth\n   */\n  fontSmooth?: Property.FontSmooth<TLength> | undefined;\n  /**\n   * The **`font-stretch`** CSS property selects a normal, condensed, or expanded face from a font.\n   *\n   * **Syntax**: `<font-stretch-absolute>`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **60** |  **9**  | **11** | **12** | **9** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-stretch\n   */\n  fontStretch?: Property.FontStretch | undefined;\n  /**\n   * The **`font-style`** CSS property sets whether a font should be styled with a normal, italic, or oblique face from its `font-family`.\n   *\n   * **Syntax**: `normal | italic | oblique <angle>?`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-style\n   */\n  fontStyle?: Property.FontStyle | undefined;\n  /**\n   * The **`font-synthesis`** CSS property controls which missing typefaces, bold, italic, or small-caps, may be synthesized by the browser.\n   *\n   * **Syntax**: `none | [ weight || style || small-caps ]`\n   *\n   * **Initial value**: `weight style`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **97** | **34**  | **9**  | **97** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-synthesis\n   */\n  fontSynthesis?: Property.FontSynthesis | undefined;\n  /**\n   * The **`font-variant`** CSS shorthand property allows you to set all the font variants for a font.\n   *\n   * **Syntax**: `normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant\n   */\n  fontVariant?: Property.FontVariant | undefined;\n  /**\n   * The **`font-variant-alternates`** CSS property controls the usage of alternate glyphs. These alternate glyphs may be referenced by alternative names defined in `@font-feature-values`.\n   *\n   * **Syntax**: `normal | [ stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari  | Edge | IE  |\n   * | :----: | :-----: | :-----: | :--: | :-: |\n   * |   No   | **34**  | **9.1** |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-alternates\n   */\n  fontVariantAlternates?: Property.FontVariantAlternates | undefined;\n  /**\n   * The **`font-variant-caps`** CSS property controls the use of alternate glyphs for capital letters.\n   *\n   * **Syntax**: `normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :-----: | :----: | :-: |\n   * | **52** | **34**  | **9.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-caps\n   */\n  fontVariantCaps?: Property.FontVariantCaps | undefined;\n  /**\n   * The **`font-variant-east-asian`** CSS property controls the use of alternate glyphs for East Asian scripts, like Japanese and Chinese.\n   *\n   * **Syntax**: `normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :-----: | :----: | :-: |\n   * | **63** | **34**  | **9.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-east-asian\n   */\n  fontVariantEastAsian?: Property.FontVariantEastAsian | undefined;\n  /**\n   * The **`font-variant-ligatures`** CSS property controls which ligatures and contextual forms are used in textual content of the elements it applies to. This leads to more harmonized forms in the resulting text.\n   *\n   * **Syntax**: `normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  | IE  |\n   * | :------: | :-----: | :-----: | :----: | :-: |\n   * |  **34**  | **34**  | **9.1** | **79** | No  |\n   * | 31 _-x-_ |         | 7 _-x-_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-ligatures\n   */\n  fontVariantLigatures?: Property.FontVariantLigatures | undefined;\n  /**\n   * The **`font-variant-numeric`** CSS property controls the usage of alternate glyphs for numbers, fractions, and ordinal markers.\n   *\n   * **Syntax**: `normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :-----: | :----: | :-: |\n   * | **52** | **34**  | **9.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-numeric\n   */\n  fontVariantNumeric?: Property.FontVariantNumeric | undefined;\n  /**\n   * The **`font-variant-position`** CSS property controls the use of alternate, smaller glyphs that are positioned as superscript or subscript.\n   *\n   * **Syntax**: `normal | sub | super`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari  | Edge | IE  |\n   * | :----: | :-----: | :-----: | :--: | :-: |\n   * |   No   | **34**  | **9.1** |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-position\n   */\n  fontVariantPosition?: Property.FontVariantPosition | undefined;\n  /**\n   * The **`font-variation-settings`** CSS property provides low-level control over variable font characteristics, by specifying the four letter axis names of the characteristics you want to vary, along with their values.\n   *\n   * **Syntax**: `normal | [ <string> <number> ]#`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **62** | **62**  | **11** | **17** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-variation-settings\n   */\n  fontVariationSettings?: Property.FontVariationSettings | undefined;\n  /**\n   * The **`font-weight`** CSS property sets the weight (or boldness) of the font. The weights available depend on the `font-family` that is currently set.\n   *\n   * **Syntax**: `<font-weight-absolute> | bolder | lighter`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **2**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-weight\n   */\n  fontWeight?: Property.FontWeight | undefined;\n  /**\n   * The **`forced-color-adjust`** CSS property allows authors to opt certain elements out of forced colors mode. This then restores the control of those values to CSS.\n   *\n   * **Syntax**: `auto | none`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |              Edge               |                 IE                  |\n   * | :----: | :-----: | :----: | :-----------------------------: | :---------------------------------: |\n   * | **89** |   No    |   No   |             **79**              | **10** _(-ms-high-contrast-adjust)_ |\n   * |        |         |        | 12 _(-ms-high-contrast-adjust)_ |                                     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/forced-color-adjust\n   */\n  forcedColorAdjust?: Property.ForcedColorAdjust | undefined;\n  /**\n   * The **`grid-auto-columns`** CSS property specifies the size of an implicitly-created grid column track or pattern of tracks.\n   *\n   * **Syntax**: `<track-size>+`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  |             IE              |\n   * | :----: | :-----: | :------: | :----: | :-------------------------: |\n   * | **57** | **70**  | **10.1** | **16** | **10** _(-ms-grid-columns)_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-auto-columns\n   */\n  gridAutoColumns?: Property.GridAutoColumns<TLength> | undefined;\n  /**\n   * The **`grid-auto-flow`** CSS property controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the grid.\n   *\n   * **Syntax**: `[ row | column ] || dense`\n   *\n   * **Initial value**: `row`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-auto-flow\n   */\n  gridAutoFlow?: Property.GridAutoFlow | undefined;\n  /**\n   * The **`grid-auto-rows`** CSS property specifies the size of an implicitly-created grid row track or pattern of tracks.\n   *\n   * **Syntax**: `<track-size>+`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  |            IE            |\n   * | :----: | :-----: | :------: | :----: | :----------------------: |\n   * | **57** | **70**  | **10.1** | **16** | **10** _(-ms-grid-rows)_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-auto-rows\n   */\n  gridAutoRows?: Property.GridAutoRows<TLength> | undefined;\n  /**\n   * The **`grid-column-end`** CSS property specifies a grid item\'s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.\n   *\n   * **Syntax**: `<grid-line>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-column-end\n   */\n  gridColumnEnd?: Property.GridColumnEnd | undefined;\n  /**\n   * The **`grid-column-start`** CSS property specifies a grid item\'s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.\n   *\n   * **Syntax**: `<grid-line>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-column-start\n   */\n  gridColumnStart?: Property.GridColumnStart | undefined;\n  /**\n   * The **`grid-row-end`** CSS property specifies a grid item\'s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.\n   *\n   * **Syntax**: `<grid-line>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-row-end\n   */\n  gridRowEnd?: Property.GridRowEnd | undefined;\n  /**\n   * The **`grid-row-start`** CSS property specifies a grid item\'s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.\n   *\n   * **Syntax**: `<grid-line>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-row-start\n   */\n  gridRowStart?: Property.GridRowStart | undefined;\n  /**\n   * The **`grid-template-areas`** CSS property specifies named grid areas, establishing the cells in the grid and assigning them names.\n   *\n   * **Syntax**: `none | <string>+`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-template-areas\n   */\n  gridTemplateAreas?: Property.GridTemplateAreas | undefined;\n  /**\n   * The **`grid-template-columns`** CSS property defines the line names and track sizing functions of the grid columns.\n   *\n   * **Syntax**: `none | <track-list> | <auto-track-list> | subgrid <line-name-list>?`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  |             IE              |\n   * | :----: | :-----: | :------: | :----: | :-------------------------: |\n   * | **57** | **52**  | **10.1** | **16** | **10** _(-ms-grid-columns)_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-template-columns\n   */\n  gridTemplateColumns?: Property.GridTemplateColumns<TLength> | undefined;\n  /**\n   * The **`grid-template-rows`** CSS property defines the line names and track sizing functions of the grid rows.\n   *\n   * **Syntax**: `none | <track-list> | <auto-track-list> | subgrid <line-name-list>?`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  |            IE            |\n   * | :----: | :-----: | :------: | :----: | :----------------------: |\n   * | **57** | **52**  | **10.1** | **16** | **10** _(-ms-grid-rows)_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-template-rows\n   */\n  gridTemplateRows?: Property.GridTemplateRows<TLength> | undefined;\n  /**\n   * The **`hanging-punctuation`** CSS property specifies whether a punctuation mark should hang at the start or end of a line of text. Hanging punctuation may be placed outside the line box.\n   *\n   * **Syntax**: `none | [ first || [ force-end | allow-end ] || last ]`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   |   No    | **10** |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/hanging-punctuation\n   */\n  hangingPunctuation?: Property.HangingPunctuation | undefined;\n  /**\n   * The **`height`** CSS property specifies the height of an element. By default, the property defines the height of the content area. If `box-sizing` is set to `border-box`, however, it instead determines the height of the border area.\n   *\n   * **Syntax**: `auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/height\n   */\n  height?: Property.Height<TLength> | undefined;\n  /**\n   * The **`hyphenate-character`** CSS property sets the character (or string) used at the end of a line before a hyphenation break.\n   *\n   * **Syntax**: `auto | <string>`\n   *\n   * **Initial value**: `auto`\n   *\n   * |   Chrome    | Firefox |    Safari     |     Edge     | IE  |\n   * | :---------: | :-----: | :-----------: | :----------: | :-: |\n   * | **6** _-x-_ | **98**  | **5.1** _-x-_ | **79** _-x-_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/hyphenate-character\n   */\n  hyphenateCharacter?: Property.HyphenateCharacter | undefined;\n  /**\n   * The **`hyphens`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.\n   *\n   * **Syntax**: `none | manual | auto`\n   *\n   * **Initial value**: `manual`\n   *\n   * |  Chrome  | Firefox |    Safari     |  Edge  |      IE      |\n   * | :------: | :-----: | :-----------: | :----: | :----------: |\n   * |  **55**  | **43**  | **5.1** _-x-_ | **79** | **10** _-x-_ |\n   * | 13 _-x-_ | 6 _-x-_ |               |        |              |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/hyphens\n   */\n  hyphens?: Property.Hyphens | undefined;\n  /**\n   * The **`image-orientation`** CSS property specifies a layout-independent correction to the orientation of an image.\n   *\n   * **Syntax**: `from-image | <angle> | [ <angle>? flip ]`\n   *\n   * **Initial value**: `from-image`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **81** | **26**  | **13.1** | **81** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/image-orientation\n   */\n  imageOrientation?: Property.ImageOrientation | undefined;\n  /**\n   * The **`image-rendering`** CSS property sets an image scaling algorithm. The property applies to an element itself, to any images set in its other properties, and to its descendants.\n   *\n   * **Syntax**: `auto | crisp-edges | pixelated`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **13** | **3.6** | **6**  | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/image-rendering\n   */\n  imageRendering?: Property.ImageRendering | undefined;\n  /**\n   * **Syntax**: `[ from-image || <resolution> ] && snap?`\n   *\n   * **Initial value**: `1dppx`\n   */\n  imageResolution?: Property.ImageResolution | undefined;\n  /**\n   * The `initial-letter` CSS property sets styling for dropped, raised, and sunken initial letters.\n   *\n   * **Syntax**: `normal | [ <number> <integer>? ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox |   Safari    | Edge | IE  |\n   * | :----: | :-----: | :---------: | :--: | :-: |\n   * |   No   |   No    | **9** _-x-_ |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/initial-letter\n   */\n  initialLetter?: Property.InitialLetter | undefined;\n  /**\n   * The **`inline-size`** CSS property defines the horizontal or vertical size of an element\'s block, depending on its writing mode. It corresponds to either the `width` or the `height` property, depending on the value of `writing-mode`.\n   *\n   * **Syntax**: `<\'width\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/inline-size\n   */\n  inlineSize?: Property.InlineSize<TLength> | undefined;\n  /**\n   * **Syntax**: `auto | none`\n   *\n   * **Initial value**: `auto`\n   */\n  inputSecurity?: Property.InputSecurity | undefined;\n  /**\n   * The **`inset`** CSS property is a shorthand that corresponds to the `top`, `right`, `bottom`, and/or `left` properties. It has the same multi-value syntax of the `margin` shorthand.\n   *\n   * **Syntax**: `<\'top\'>{1,4}`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/inset\n   */\n  inset?: Property.Inset<TLength> | undefined;\n  /**\n   * The **`inset-block`** CSS property defines the logical block start and end offsets of an element, which maps to physical offsets depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top` and `bottom`, or `right` and `left` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>{1,2}`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **63**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/inset-block\n   */\n  insetBlock?: Property.InsetBlock<TLength> | undefined;\n  /**\n   * The **`inset-block-end`** CSS property defines the logical block end offset of an element, which maps to a physical inset depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **63**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/inset-block-end\n   */\n  insetBlockEnd?: Property.InsetBlockEnd<TLength> | undefined;\n  /**\n   * The **`inset-block-start`** CSS property defines the logical block start offset of an element, which maps to a physical inset depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **63**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/inset-block-start\n   */\n  insetBlockStart?: Property.InsetBlockStart<TLength> | undefined;\n  /**\n   * The **`inset-inline`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top` and `bottom`, or `right` and `left` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>{1,2}`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **63**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/inset-inline\n   */\n  insetInline?: Property.InsetInline<TLength> | undefined;\n  /**\n   * The **`inset-inline-end`** CSS property defines the logical inline end inset of an element, which maps to a physical offset depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **63**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/inset-inline-end\n   */\n  insetInlineEnd?: Property.InsetInlineEnd<TLength> | undefined;\n  /**\n   * The **`inset-inline-start`** CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **63**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/inset-inline-start\n   */\n  insetInlineStart?: Property.InsetInlineStart<TLength> | undefined;\n  /**\n   * The **`isolation`** CSS property determines whether an element must create a new stacking context.\n   *\n   * **Syntax**: `auto | isolate`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **41** | **36**  | **8**  | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/isolation\n   */\n  isolation?: Property.Isolation | undefined;\n  /**\n   * The CSS **`justify-content`** property defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container.\n   *\n   * **Syntax**: `normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **52**  | **20**  |  **9**  | **12** | **11** |\n   * | 21 _-x-_ |         | 7 _-x-_ |        |        |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/justify-content\n   */\n  justifyContent?: Property.JustifyContent | undefined;\n  /**\n   * The CSS **`justify-items`** property defines the default `justify-self` for all items of the box, giving them all a default way of justifying each box along the appropriate axis.\n   *\n   * **Syntax**: `normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ] | legacy | legacy && [ left | right | center ]`\n   *\n   * **Initial value**: `legacy`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **52** | **20**  | **9**  | **12** | **11** |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **45**  | **10.1** | **16** | No  |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/justify-items\n   */\n  justifyItems?: Property.JustifyItems | undefined;\n  /**\n   * The CSS **`justify-self`** property sets the way a box is justified inside its alignment container along the appropriate axis.\n   *\n   * **Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]`\n   *\n   * **Initial value**: `auto`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **45**  | **10.1** | **16** | No  |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  |      IE      |\n   * | :----: | :-----: | :------: | :----: | :----------: |\n   * | **57** | **45**  | **10.1** | **16** | **10** _-x-_ |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/justify-self\n   */\n  justifySelf?: Property.JustifySelf | undefined;\n  /**\n   * The **`justify-tracks`** CSS property sets the alignment in the masonry axis for grid containers that have masonry in their inline axis.\n   *\n   * **Syntax**: `[ normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ] ]#`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   |   n/a   |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/justify-tracks\n   */\n  justifyTracks?: Property.JustifyTracks | undefined;\n  /**\n   * The **`left`** CSS property participates in specifying the horizontal position of a positioned element. It has no effect on non-positioned elements.\n   *\n   * **Syntax**: `<length> | <percentage> | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/left\n   */\n  left?: Property.Left<TLength> | undefined;\n  /**\n   * The **`letter-spacing`** CSS property sets the horizontal spacing behavior between text characters. This value is added to the natural spacing between characters while rendering the text. Positive values of `letter-spacing` causes characters to spread farther apart, while negative values of `letter-spacing` bring characters closer together.\n   *\n   * **Syntax**: `normal | <length>`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/letter-spacing\n   */\n  letterSpacing?: Property.LetterSpacing<TLength> | undefined;\n  /**\n   * The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.\n   *\n   * **Syntax**: `auto | loose | normal | strict | anywhere`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE    |\n   * | :-----: | :-----: | :-----: | :----: | :-----: |\n   * | **58**  | **69**  | **11**  | **14** | **5.5** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |         |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/line-break\n   */\n  lineBreak?: Property.LineBreak | undefined;\n  /**\n   * The **`line-height`** CSS property sets the height of a line box. It\'s commonly used to set the distance between lines of text. On block-level elements, it specifies the minimum height of line boxes within the element. On non-replaced inline elements, it specifies the height that is used to calculate line box height.\n   *\n   * **Syntax**: `normal | <number> | <length> | <percentage>`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/line-height\n   */\n  lineHeight?: Property.LineHeight<TLength> | undefined;\n  /**\n   * The **`line-height-step`** CSS property sets the step unit for line box heights. When the property is set, line box heights are rounded up to the closest multiple of the unit.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |  n/a   |   No    |   No   | n/a  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/line-height-step\n   */\n  lineHeightStep?: Property.LineHeightStep<TLength> | undefined;\n  /**\n   * The **`list-style-image`** CSS property sets an image to be used as the list item marker.\n   *\n   * **Syntax**: `<image> | none`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/list-style-image\n   */\n  listStyleImage?: Property.ListStyleImage | undefined;\n  /**\n   * The **`list-style-position`** CSS property sets the position of the `::marker` relative to a list item.\n   *\n   * **Syntax**: `inside | outside`\n   *\n   * **Initial value**: `outside`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/list-style-position\n   */\n  listStylePosition?: Property.ListStylePosition | undefined;\n  /**\n   * The **`list-style-type`** CSS property sets the marker (such as a disc, character, or custom counter style) of a list item element.\n   *\n   * **Syntax**: `<counter-style> | <string> | none`\n   *\n   * **Initial value**: `disc`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/list-style-type\n   */\n  listStyleType?: Property.ListStyleType | undefined;\n  /**\n   * The **`margin-block`** CSS shorthand property defines the logical block start and end margins of an element, which maps to physical margins depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'margin-left\'>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-block\n   */\n  marginBlock?: Property.MarginBlock<TLength> | undefined;\n  /**\n   * The **`margin-block-end`** CSS property defines the logical block end margin of an element, which maps to a physical margin depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'margin-left\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-block-end\n   */\n  marginBlockEnd?: Property.MarginBlockEnd<TLength> | undefined;\n  /**\n   * The **`margin-block-start`** CSS property defines the logical block start margin of an element, which maps to a physical margin depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'margin-left\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-block-start\n   */\n  marginBlockStart?: Property.MarginBlockStart<TLength> | undefined;\n  /**\n   * The **`margin-bottom`** CSS property sets the margin area on the bottom of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\n   *\n   * **Syntax**: `<length> | <percentage> | auto`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-bottom\n   */\n  marginBottom?: Property.MarginBottom<TLength> | undefined;\n  /**\n   * The **`margin-inline`** CSS shorthand property is a shorthand property that defines both the logical inline start and end margins of an element, which maps to physical margins depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'margin-left\'>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-inline\n   */\n  marginInline?: Property.MarginInline<TLength> | undefined;\n  /**\n   * The **`margin-inline-end`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element\'s writing mode, directionality, and text orientation. In other words, it corresponds to the `margin-top`, `margin-right`, `margin-bottom` or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'margin-left\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * |          Chrome          |        Firefox        |          Safari          |  Edge  | IE  |\n   * | :----------------------: | :-------------------: | :----------------------: | :----: | :-: |\n   * |          **69**          |        **41**         |         **12.1**         | **79** | No  |\n   * | 2 _(-webkit-margin-end)_ | 3 _(-moz-margin-end)_ | 3 _(-webkit-margin-end)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-inline-end\n   */\n  marginInlineEnd?: Property.MarginInlineEnd<TLength> | undefined;\n  /**\n   * The **`margin-inline-start`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `margin-top`, `margin-right`, `margin-bottom`, or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'margin-left\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * |           Chrome           |         Firefox         |           Safari           |  Edge  | IE  |\n   * | :------------------------: | :---------------------: | :------------------------: | :----: | :-: |\n   * |           **69**           |         **41**          |          **12.1**          | **79** | No  |\n   * | 2 _(-webkit-margin-start)_ | 3 _(-moz-margin-start)_ | 3 _(-webkit-margin-start)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-inline-start\n   */\n  marginInlineStart?: Property.MarginInlineStart<TLength> | undefined;\n  /**\n   * The **`margin-left`** CSS property sets the margin area on the left side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\n   *\n   * **Syntax**: `<length> | <percentage> | auto`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-left\n   */\n  marginLeft?: Property.MarginLeft<TLength> | undefined;\n  /**\n   * The **`margin-right`** CSS property sets the margin area on the right side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\n   *\n   * **Syntax**: `<length> | <percentage> | auto`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-right\n   */\n  marginRight?: Property.MarginRight<TLength> | undefined;\n  /**\n   * The **`margin-top`** CSS property sets the margin area on the top of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\n   *\n   * **Syntax**: `<length> | <percentage> | auto`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-top\n   */\n  marginTop?: Property.MarginTop<TLength> | undefined;\n  /**\n   * The **`mask-border-mode`** CSS property specifies the blending mode used in a mask border.\n   *\n   * **Syntax**: `luminance | alpha`\n   *\n   * **Initial value**: `alpha`\n   */\n  maskBorderMode?: Property.MaskBorderMode | undefined;\n  /**\n   * The **`mask-border-outset`** CSS property specifies the distance by which an element\'s mask border is set out from its border box.\n   *\n   * **Syntax**: `[ <length> | <number> ]{1,4}`\n   *\n   * **Initial value**: `0`\n   *\n   * |                 Chrome                  | Firefox |                  Safari                   |                   Edge                   | IE  |\n   * | :-------------------------------------: | :-----: | :---------------------------------------: | :--------------------------------------: | :-: |\n   * | **1** _(-webkit-mask-box-image-outset)_ |   No    | **3.1** _(-webkit-mask-box-image-outset)_ | **79** _(-webkit-mask-box-image-outset)_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-outset\n   */\n  maskBorderOutset?: Property.MaskBorderOutset<TLength> | undefined;\n  /**\n   * The **`mask-border-repeat`** CSS property sets how the edge regions of a source image are adjusted to fit the dimensions of an element\'s mask border.\n   *\n   * **Syntax**: `[ stretch | repeat | round | space ]{1,2}`\n   *\n   * **Initial value**: `stretch`\n   *\n   * |                 Chrome                  | Firefox |                  Safari                   |                   Edge                   | IE  |\n   * | :-------------------------------------: | :-----: | :---------------------------------------: | :--------------------------------------: | :-: |\n   * | **1** _(-webkit-mask-box-image-repeat)_ |   No    | **3.1** _(-webkit-mask-box-image-repeat)_ | **79** _(-webkit-mask-box-image-repeat)_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-repeat\n   */\n  maskBorderRepeat?: Property.MaskBorderRepeat | undefined;\n  /**\n   * The **`mask-border-slice`** CSS property divides the image set by `mask-border-source` into regions. These regions are used to form the components of an element\'s mask border.\n   *\n   * **Syntax**: `<number-percentage>{1,4} fill?`\n   *\n   * **Initial value**: `0`\n   *\n   * |                 Chrome                 | Firefox |                  Safari                  |                  Edge                   | IE  |\n   * | :------------------------------------: | :-----: | :--------------------------------------: | :-------------------------------------: | :-: |\n   * | **1** _(-webkit-mask-box-image-slice)_ |   No    | **3.1** _(-webkit-mask-box-image-slice)_ | **79** _(-webkit-mask-box-image-slice)_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-slice\n   */\n  maskBorderSlice?: Property.MaskBorderSlice | undefined;\n  /**\n   * The **`mask-border-source`** CSS property sets the source image used to create an element\'s mask border.\n   *\n   * **Syntax**: `none | <image>`\n   *\n   * **Initial value**: `none`\n   *\n   * |                 Chrome                  | Firefox |                  Safari                   |                   Edge                   | IE  |\n   * | :-------------------------------------: | :-----: | :---------------------------------------: | :--------------------------------------: | :-: |\n   * | **1** _(-webkit-mask-box-image-source)_ |   No    | **3.1** _(-webkit-mask-box-image-source)_ | **79** _(-webkit-mask-box-image-source)_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-source\n   */\n  maskBorderSource?: Property.MaskBorderSource | undefined;\n  /**\n   * The **`mask-border-width`** CSS property sets the width of an element\'s mask border.\n   *\n   * **Syntax**: `[ <length-percentage> | <number> | auto ]{1,4}`\n   *\n   * **Initial value**: `auto`\n   *\n   * |                 Chrome                 | Firefox |                  Safari                  |                  Edge                   | IE  |\n   * | :------------------------------------: | :-----: | :--------------------------------------: | :-------------------------------------: | :-: |\n   * | **1** _(-webkit-mask-box-image-width)_ |   No    | **3.1** _(-webkit-mask-box-image-width)_ | **79** _(-webkit-mask-box-image-width)_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-width\n   */\n  maskBorderWidth?: Property.MaskBorderWidth<TLength> | undefined;\n  /**\n   * The **`mask-clip`** CSS property determines the area which is affected by a mask. The painted content of an element must be restricted to this area.\n   *\n   * **Syntax**: `[ <geometry-box> | no-clip ]#`\n   *\n   * **Initial value**: `border-box`\n   *\n   * |   Chrome    | Firefox |  Safari  |     Edge     | IE  |\n   * | :---------: | :-----: | :------: | :----------: | :-: |\n   * | **1** _-x-_ | **53**  | **15.4** | **79** _-x-_ | No  |\n   * |             |         | 4 _-x-_  |              |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-clip\n   */\n  maskClip?: Property.MaskClip | undefined;\n  /**\n   * The **`mask-composite`** CSS property represents a compositing operation used on the current mask layer with the mask layers below it.\n   *\n   * **Syntax**: `<compositing-operator>#`\n   *\n   * **Initial value**: `add`\n   *\n   * | Chrome | Firefox |  Safari  | Edge  | IE  |\n   * | :----: | :-----: | :------: | :---: | :-: |\n   * |   No   | **53**  | **15.4** | 18-79 | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-composite\n   */\n  maskComposite?: Property.MaskComposite | undefined;\n  /**\n   * The **`mask-image`** CSS property sets the image that is used as mask layer for an element. By default this means the alpha channel of the mask image will be multiplied with the alpha channel of the element. This can be controlled with the `mask-mode` property.\n   *\n   * **Syntax**: `<mask-reference>#`\n   *\n   * **Initial value**: `none`\n   *\n   * |   Chrome    | Firefox |  Safari  | Edge  | IE  |\n   * | :---------: | :-----: | :------: | :---: | :-: |\n   * | **1** _-x-_ | **53**  | **15.4** | 16-79 | No  |\n   * |             |         | 4 _-x-_  |       |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-image\n   */\n  maskImage?: Property.MaskImage | undefined;\n  /**\n   * The **`mask-mode`** CSS property sets whether the mask reference defined by `mask-image` is treated as a luminance or alpha mask.\n   *\n   * **Syntax**: `<masking-mode>#`\n   *\n   * **Initial value**: `match-source`\n   *\n   * | Chrome | Firefox |  Safari  | Edge | IE  |\n   * | :----: | :-----: | :------: | :--: | :-: |\n   * |   No   | **53**  | **15.4** |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-mode\n   */\n  maskMode?: Property.MaskMode | undefined;\n  /**\n   * The **`mask-origin`** CSS property sets the origin of a mask.\n   *\n   * **Syntax**: `<geometry-box>#`\n   *\n   * **Initial value**: `border-box`\n   *\n   * |   Chrome    | Firefox |  Safari  |     Edge     | IE  |\n   * | :---------: | :-----: | :------: | :----------: | :-: |\n   * | **1** _-x-_ | **53**  | **15.4** | **79** _-x-_ | No  |\n   * |             |         | 4 _-x-_  |              |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-origin\n   */\n  maskOrigin?: Property.MaskOrigin | undefined;\n  /**\n   * The **`mask-position`** CSS property sets the initial position, relative to the mask position layer set by `mask-origin`, for each defined mask image.\n   *\n   * **Syntax**: `<position>#`\n   *\n   * **Initial value**: `center`\n   *\n   * |   Chrome    | Firefox |  Safari   | Edge  | IE  |\n   * | :---------: | :-----: | :-------: | :---: | :-: |\n   * | **1** _-x-_ | **53**  | **15.4**  | 18-79 | No  |\n   * |             |         | 3.1 _-x-_ |       |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-position\n   */\n  maskPosition?: Property.MaskPosition<TLength> | undefined;\n  /**\n   * The **`mask-repeat`** CSS property sets how mask images are repeated. A mask image can be repeated along the horizontal axis, the vertical axis, both axes, or not repeated at all.\n   *\n   * **Syntax**: `<repeat-style>#`\n   *\n   * **Initial value**: `no-repeat`\n   *\n   * |   Chrome    | Firefox |  Safari   | Edge  | IE  |\n   * | :---------: | :-----: | :-------: | :---: | :-: |\n   * | **1** _-x-_ | **53**  | **15.4**  | 18-79 | No  |\n   * |             |         | 3.1 _-x-_ |       |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-repeat\n   */\n  maskRepeat?: Property.MaskRepeat | undefined;\n  /**\n   * The **`mask-size`** CSS property specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio.\n   *\n   * **Syntax**: `<bg-size>#`\n   *\n   * **Initial value**: `auto`\n   *\n   * |   Chrome    | Firefox |  Safari  | Edge  | IE  |\n   * | :---------: | :-----: | :------: | :---: | :-: |\n   * | **4** _-x-_ | **53**  | **15.4** | 18-79 | No  |\n   * |             |         | 4 _-x-_  |       |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-size\n   */\n  maskSize?: Property.MaskSize<TLength> | undefined;\n  /**\n   * The **`mask-type`** CSS property sets whether an SVG `<mask>` element is used as a _luminance_ or an _alpha_ mask. It applies to the `<mask>` element itself.\n   *\n   * **Syntax**: `luminance | alpha`\n   *\n   * **Initial value**: `luminance`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **24** | **35**  | **7**  | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-type\n   */\n  maskType?: Property.MaskType | undefined;\n  /**\n   * The `math-style` property indicates whether MathML equations should render with normal or compact height.\n   *\n   * **Syntax**: `normal | compact`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox |  Safari  | Edge | IE  |\n   * | :----: | :-----: | :------: | :--: | :-: |\n   * |  n/a   |   n/a   | **14.1** |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/math-style\n   */\n  mathStyle?: Property.MathStyle | undefined;\n  /**\n   * The **`max-block-size`** CSS property specifies the maximum size of an element in the direction opposite that of the writing direction as specified by `writing-mode`. That is, if the writing direction is horizontal, then `max-block-size` is equivalent to `max-height`; if the writing direction is vertical, `max-block-size` is the same as `max-width`.\n   *\n   * **Syntax**: `<\'max-width\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/max-block-size\n   */\n  maxBlockSize?: Property.MaxBlockSize<TLength> | undefined;\n  /**\n   * The **`max-height`** CSS property sets the maximum height of an element. It prevents the used value of the `height` property from becoming larger than the value specified for `max-height`.\n   *\n   * **Syntax**: `none | <length-percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **18** |  **1**  | **1.3** | **12** | **7** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/max-height\n   */\n  maxHeight?: Property.MaxHeight<TLength> | undefined;\n  /**\n   * The **`max-inline-size`** CSS property defines the horizontal or vertical maximum size of an element\'s block, depending on its writing mode. It corresponds to either the `max-width` or the `max-height` property, depending on the value of `writing-mode`.\n   *\n   * **Syntax**: `<\'max-width\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |   Safari   |  Edge  | IE  |\n   * | :----: | :-----: | :--------: | :----: | :-: |\n   * | **57** | **41**  |  **12.1**  | **79** | No  |\n   * |        |         | 10.1 _-x-_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/max-inline-size\n   */\n  maxInlineSize?: Property.MaxInlineSize<TLength> | undefined;\n  /**\n   * **Syntax**: `none | <integer>`\n   *\n   * **Initial value**: `none`\n   */\n  maxLines?: Property.MaxLines | undefined;\n  /**\n   * The **`max-width`** CSS property sets the maximum width of an element. It prevents the used value of the `width` property from becoming larger than the value specified by `max-width`.\n   *\n   * **Syntax**: `none | <length-percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **7** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/max-width\n   */\n  maxWidth?: Property.MaxWidth<TLength> | undefined;\n  /**\n   * The **`min-block-size`** CSS property defines the minimum horizontal or vertical size of an element\'s block, depending on its writing mode. It corresponds to either the `min-width` or the `min-height` property, depending on the value of `writing-mode`.\n   *\n   * **Syntax**: `<\'min-width\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/min-block-size\n   */\n  minBlockSize?: Property.MinBlockSize<TLength> | undefined;\n  /**\n   * The **`min-height`** CSS property sets the minimum height of an element. It prevents the used value of the `height` property from becoming smaller than the value specified for `min-height`.\n   *\n   * **Syntax**: `auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  |  **3**  | **1.3** | **12** | **7** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/min-height\n   */\n  minHeight?: Property.MinHeight<TLength> | undefined;\n  /**\n   * The **`min-inline-size`** CSS property defines the horizontal or vertical minimal size of an element\'s block, depending on its writing mode. It corresponds to either the `min-width` or the `min-height` property, depending on the value of `writing-mode`.\n   *\n   * **Syntax**: `<\'min-width\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/min-inline-size\n   */\n  minInlineSize?: Property.MinInlineSize<TLength> | undefined;\n  /**\n   * The **`min-width`** CSS property sets the minimum width of an element. It prevents the used value of the `width` property from becoming smaller than the value specified for `min-width`.\n   *\n   * **Syntax**: `auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **7** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/min-width\n   */\n  minWidth?: Property.MinWidth<TLength> | undefined;\n  /**\n   * The **`mix-blend-mode`** CSS property sets how an element\'s content should blend with the content of the element\'s parent and the element\'s background.\n   *\n   * **Syntax**: `<blend-mode>`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **41** | **32**  | **8**  | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mix-blend-mode\n   */\n  mixBlendMode?: Property.MixBlendMode | undefined;\n  /**\n   * The **`offset-distance`** CSS property specifies a position along an `offset-path` for an element to be placed.\n   *\n   * **Syntax**: `<length-percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * |         Chrome         | Firefox | Safari |  Edge  | IE  |\n   * | :--------------------: | :-----: | :----: | :----: | :-: |\n   * |         **55**         | **72**  |   No   | **79** | No  |\n   * | 46 _(motion-distance)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset-distance\n   */\n  motionDistance?: Property.OffsetDistance<TLength> | undefined;\n  /**\n   * The **`offset-path`** CSS property specifies a motion path for an element to follow and defines the element\'s positioning within the parent container or SVG coordinate system.\n   *\n   * **Syntax**: `none | ray( [ <angle> && <size> && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]`\n   *\n   * **Initial value**: `none`\n   *\n   * |       Chrome       | Firefox | Safari |  Edge  | IE  |\n   * | :----------------: | :-----: | :----: | :----: | :-: |\n   * |       **55**       | **72**  |   No   | **79** | No  |\n   * | 46 _(motion-path)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset-path\n   */\n  motionPath?: Property.OffsetPath | undefined;\n  /**\n   * The **`offset-rotate`** CSS property defines the orientation/direction of the element as it is positioned along the `offset-path`.\n   *\n   * **Syntax**: `[ auto | reverse ] || <angle>`\n   *\n   * **Initial value**: `auto`\n   *\n   * |         Chrome         | Firefox | Safari |  Edge  | IE  |\n   * | :--------------------: | :-----: | :----: | :----: | :-: |\n   * |         **56**         | **72**  |   No   | **79** | No  |\n   * | 46 _(motion-rotation)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset-rotate\n   */\n  motionRotation?: Property.OffsetRotate | undefined;\n  /**\n   * The **`object-fit`** CSS property sets how the content of a replaced element, such as an `<img>` or `<video>`, should be resized to fit its container.\n   *\n   * **Syntax**: `fill | contain | cover | none | scale-down`\n   *\n   * **Initial value**: `fill`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **32** | **36**  | **10** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/object-fit\n   */\n  objectFit?: Property.ObjectFit | undefined;\n  /**\n   * The **`object-position`** CSS property specifies the alignment of the selected replaced element\'s contents within the element\'s box. Areas of the box which aren\'t covered by the replaced element\'s object will show the element\'s background.\n   *\n   * **Syntax**: `<position>`\n   *\n   * **Initial value**: `50% 50%`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **32** | **36**  | **10** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/object-position\n   */\n  objectPosition?: Property.ObjectPosition<TLength> | undefined;\n  /**\n   * **Syntax**: `auto | <position>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **79** | **72**  |   No   | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset-anchor\n   */\n  offsetAnchor?: Property.OffsetAnchor<TLength> | undefined;\n  /**\n   * The **`offset-distance`** CSS property specifies a position along an `offset-path` for an element to be placed.\n   *\n   * **Syntax**: `<length-percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * |         Chrome         | Firefox | Safari |  Edge  | IE  |\n   * | :--------------------: | :-----: | :----: | :----: | :-: |\n   * |         **55**         | **72**  |   No   | **79** | No  |\n   * | 46 _(motion-distance)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset-distance\n   */\n  offsetDistance?: Property.OffsetDistance<TLength> | undefined;\n  /**\n   * The **`offset-path`** CSS property specifies a motion path for an element to follow and defines the element\'s positioning within the parent container or SVG coordinate system.\n   *\n   * **Syntax**: `none | ray( [ <angle> && <size> && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]`\n   *\n   * **Initial value**: `none`\n   *\n   * |       Chrome       | Firefox | Safari |  Edge  | IE  |\n   * | :----------------: | :-----: | :----: | :----: | :-: |\n   * |       **55**       | **72**  |   No   | **79** | No  |\n   * | 46 _(motion-path)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset-path\n   */\n  offsetPath?: Property.OffsetPath | undefined;\n  /**\n   * The **`offset-rotate`** CSS property defines the orientation/direction of the element as it is positioned along the `offset-path`.\n   *\n   * **Syntax**: `[ auto | reverse ] || <angle>`\n   *\n   * **Initial value**: `auto`\n   *\n   * |         Chrome         | Firefox | Safari |  Edge  | IE  |\n   * | :--------------------: | :-----: | :----: | :----: | :-: |\n   * |         **56**         | **72**  |   No   | **79** | No  |\n   * | 46 _(motion-rotation)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset-rotate\n   */\n  offsetRotate?: Property.OffsetRotate | undefined;\n  /**\n   * The **`offset-rotate`** CSS property defines the orientation/direction of the element as it is positioned along the `offset-path`.\n   *\n   * **Syntax**: `[ auto | reverse ] || <angle>`\n   *\n   * **Initial value**: `auto`\n   *\n   * |         Chrome         | Firefox | Safari |  Edge  | IE  |\n   * | :--------------------: | :-----: | :----: | :----: | :-: |\n   * |         **56**         | **72**  |   No   | **79** | No  |\n   * | 46 _(motion-rotation)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset-rotate\n   */\n  offsetRotation?: Property.OffsetRotate | undefined;\n  /**\n   * The **`opacity`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.\n   *\n   * **Syntax**: `<alpha-value>`\n   *\n   * **Initial value**: `1`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **2**  | **12** | **9** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/opacity\n   */\n  opacity?: Property.Opacity | undefined;\n  /**\n   * The **`order`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending `order` value and then by their source code order.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `0`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |    IE    |\n   * | :------: | :-----: | :-----: | :----: | :------: |\n   * |  **29**  | **20**  |  **9**  | **12** |  **11**  |\n   * | 21 _-x-_ |         | 7 _-x-_ |        | 10 _-x-_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/order\n   */\n  order?: Property.Order | undefined;\n  /**\n   * The **`orphans`** CSS property sets the minimum number of lines in a block container that must be shown at the _bottom_ of a page, region, or column.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `2`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **25** |   No    | **1.3** | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/orphans\n   */\n  orphans?: Property.Orphans | undefined;\n  /**\n   * The **`outline-color`** CSS property sets the color of an element\'s outline.\n   *\n   * **Syntax**: `<color> | invert`\n   *\n   * **Initial value**: `invert`, for browsers supporting it, `currentColor` for the other\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  | **1.5** | **1.2** | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/outline-color\n   */\n  outlineColor?: Property.OutlineColor | undefined;\n  /**\n   * The **`outline-offset`** CSS property sets the amount of space between an outline and the edge or border of an element.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :-----: | :----: | :-: |\n   * | **1**  | **1.5** | **1.2** | **15** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/outline-offset\n   */\n  outlineOffset?: Property.OutlineOffset<TLength> | undefined;\n  /**\n   * The **`outline-style`** CSS property sets the style of an element\'s outline. An outline is a line that is drawn around an element, outside the `border`.\n   *\n   * **Syntax**: `auto | <\'border-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  | **1.5** | **1.2** | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/outline-style\n   */\n  outlineStyle?: Property.OutlineStyle | undefined;\n  /**\n   * The CSS **`outline-width`** property sets the thickness of an element\'s outline. An outline is a line that is drawn around an element, outside the `border`.\n   *\n   * **Syntax**: `<line-width>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  | **1.5** | **1.2** | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/outline-width\n   */\n  outlineWidth?: Property.OutlineWidth<TLength> | undefined;\n  /**\n   * **Syntax**: `auto | none`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **56** | **66**  |   No   | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-anchor\n   */\n  overflowAnchor?: Property.OverflowAnchor | undefined;\n  /**\n   * **Syntax**: `visible | hidden | clip | scroll | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   | **69**  |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-block\n   */\n  overflowBlock?: Property.OverflowBlock | undefined;\n  /**\n   * The **`overflow-clip-box`** CSS property specifies relative to which box the clipping happens when there is an overflow. It is short hand for the `overflow-clip-box-inline` and `overflow-clip-box-block` properties.\n   *\n   * **Syntax**: `padding-box | content-box`\n   *\n   * **Initial value**: `padding-box`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   | **29**  |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Mozilla/Gecko/Chrome/CSS/overflow-clip-box\n   */\n  overflowClipBox?: Property.OverflowClipBox | undefined;\n  /**\n   * **Syntax**: `<visual-box> || <length [0,∞]>`\n   *\n   * **Initial value**: `0px`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **90** |   No    |   No   | **90** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-clip-margin\n   */\n  overflowClipMargin?: Property.OverflowClipMargin<TLength> | undefined;\n  /**\n   * **Syntax**: `visible | hidden | clip | scroll | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   | **69**  |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-inline\n   */\n  overflowInline?: Property.OverflowInline | undefined;\n  /**\n   * The **`overflow-wrap`** CSS property applies to inline elements, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box.\n   *\n   * **Syntax**: `normal | break-word | anywhere`\n   *\n   * **Initial value**: `normal`\n   *\n   * |     Chrome      |      Firefox      |     Safari      |       Edge       |          IE           |\n   * | :-------------: | :---------------: | :-------------: | :--------------: | :-------------------: |\n   * |     **23**      |      **49**       |      **7**      |      **18**      | **5.5** _(word-wrap)_ |\n   * | 1 _(word-wrap)_ | 3.5 _(word-wrap)_ | 1 _(word-wrap)_ | 12 _(word-wrap)_ |                       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-wrap\n   */\n  overflowWrap?: Property.OverflowWrap | undefined;\n  /**\n   * The **`overflow-x`** CSS property sets what shows when content overflows a block-level element\'s left and right edges. This may be nothing, a scroll bar, or the overflow content.\n   *\n   * **Syntax**: `visible | hidden | clip | scroll | auto`\n   *\n   * **Initial value**: `visible`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  | **3.5** | **3**  | **12** | **5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-x\n   */\n  overflowX?: Property.OverflowX | undefined;\n  /**\n   * The **`overflow-y`** CSS property sets what shows when content overflows a block-level element\'s top and bottom edges. This may be nothing, a scroll bar, or the overflow content.\n   *\n   * **Syntax**: `visible | hidden | clip | scroll | auto`\n   *\n   * **Initial value**: `visible`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  | **3.5** | **3**  | **12** | **5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-y\n   */\n  overflowY?: Property.OverflowY | undefined;\n  /**\n   * The **`overscroll-behavior-block`** CSS property sets the browser\'s behavior when the block direction boundary of a scrolling area is reached.\n   *\n   * **Syntax**: `contain | none | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **77** | **73**  |   No   | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-block\n   */\n  overscrollBehaviorBlock?: Property.OverscrollBehaviorBlock | undefined;\n  /**\n   * The **`overscroll-behavior-inline`** CSS property sets the browser\'s behavior when the inline direction boundary of a scrolling area is reached.\n   *\n   * **Syntax**: `contain | none | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **77** | **73**  |   No   | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-inline\n   */\n  overscrollBehaviorInline?: Property.OverscrollBehaviorInline | undefined;\n  /**\n   * The **`overscroll-behavior-x`** CSS property sets the browser\'s behavior when the horizontal boundary of a scrolling area is reached.\n   *\n   * **Syntax**: `contain | none | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **63** | **59**  |   No   | **18** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-x\n   */\n  overscrollBehaviorX?: Property.OverscrollBehaviorX | undefined;\n  /**\n   * The **`overscroll-behavior-y`** CSS property sets the browser\'s behavior when the vertical boundary of a scrolling area is reached.\n   *\n   * **Syntax**: `contain | none | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **63** | **59**  |   No   | **18** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-y\n   */\n  overscrollBehaviorY?: Property.OverscrollBehaviorY | undefined;\n  /**\n   * The **`padding-block`** CSS shorthand property defines the logical block start and end padding of an element, which maps to physical padding properties depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-block\n   */\n  paddingBlock?: Property.PaddingBlock<TLength> | undefined;\n  /**\n   * The **`padding-block-end`** CSS property defines the logical block end padding of an element, which maps to a physical padding depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-block-end\n   */\n  paddingBlockEnd?: Property.PaddingBlockEnd<TLength> | undefined;\n  /**\n   * The **`padding-block-start`** CSS property defines the logical block start padding of an element, which maps to a physical padding depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-block-start\n   */\n  paddingBlockStart?: Property.PaddingBlockStart<TLength> | undefined;\n  /**\n   * The **`padding-bottom`** CSS property sets the height of the padding area on the bottom of an element.\n   *\n   * **Syntax**: `<length> | <percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-bottom\n   */\n  paddingBottom?: Property.PaddingBottom<TLength> | undefined;\n  /**\n   * The **`padding-inline`** CSS shorthand property defines the logical inline start and end padding of an element, which maps to physical padding properties depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-inline\n   */\n  paddingInline?: Property.PaddingInline<TLength> | undefined;\n  /**\n   * The **`padding-inline-end`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * |          Chrome           |        Firefox         |          Safari           |  Edge  | IE  |\n   * | :-----------------------: | :--------------------: | :-----------------------: | :----: | :-: |\n   * |          **69**           |         **41**         |         **12.1**          | **79** | No  |\n   * | 2 _(-webkit-padding-end)_ | 3 _(-moz-padding-end)_ | 3 _(-webkit-padding-end)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-inline-end\n   */\n  paddingInlineEnd?: Property.PaddingInlineEnd<TLength> | undefined;\n  /**\n   * The **`padding-inline-start`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * |           Chrome            |         Firefox          |           Safari            |  Edge  | IE  |\n   * | :-------------------------: | :----------------------: | :-------------------------: | :----: | :-: |\n   * |           **69**            |          **41**          |          **12.1**           | **79** | No  |\n   * | 2 _(-webkit-padding-start)_ | 3 _(-moz-padding-start)_ | 3 _(-webkit-padding-start)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-inline-start\n   */\n  paddingInlineStart?: Property.PaddingInlineStart<TLength> | undefined;\n  /**\n   * The **`padding-left`** CSS property sets the width of the padding area to the left of an element.\n   *\n   * **Syntax**: `<length> | <percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-left\n   */\n  paddingLeft?: Property.PaddingLeft<TLength> | undefined;\n  /**\n   * The **`padding-right`** CSS property sets the width of the padding area on the right of an element.\n   *\n   * **Syntax**: `<length> | <percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-right\n   */\n  paddingRight?: Property.PaddingRight<TLength> | undefined;\n  /**\n   * The **`padding-top`** CSS property sets the height of the padding area on the top of an element.\n   *\n   * **Syntax**: `<length> | <percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-top\n   */\n  paddingTop?: Property.PaddingTop<TLength> | undefined;\n  /**\n   * The **`page-break-after`** CSS property adjusts page breaks _after_ the current element.\n   *\n   * **Syntax**: `auto | always | avoid | left | right | recto | verso`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  |  **1**  | **1.2** | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/page-break-after\n   */\n  pageBreakAfter?: Property.PageBreakAfter | undefined;\n  /**\n   * The **`page-break-before`** CSS property adjusts page breaks _before_ the current element.\n   *\n   * **Syntax**: `auto | always | avoid | left | right | recto | verso`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  |  **1**  | **1.2** | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/page-break-before\n   */\n  pageBreakBefore?: Property.PageBreakBefore | undefined;\n  /**\n   * The **`page-break-inside`** CSS property adjusts page breaks _inside_ the current element.\n   *\n   * **Syntax**: `auto | avoid`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  | **19**  | **1.3** | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/page-break-inside\n   */\n  pageBreakInside?: Property.PageBreakInside | undefined;\n  /**\n   * The **`paint-order`** CSS property lets you control the order in which the fill and stroke (and painting markers) of text content and shapes are drawn.\n   *\n   * **Syntax**: `normal | [ fill || stroke || markers ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **35** | **60**  | **8**  | **17** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/paint-order\n   */\n  paintOrder?: Property.PaintOrder | undefined;\n  /**\n   * The **`perspective`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.\n   *\n   * **Syntax**: `none | <length>`\n   *\n   * **Initial value**: `none`\n   *\n   * |  Chrome  | Firefox  | Safari  |  Edge  |   IE   |\n   * | :------: | :------: | :-----: | :----: | :----: |\n   * |  **36**  |  **16**  |  **9**  | **12** | **10** |\n   * | 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/perspective\n   */\n  perspective?: Property.Perspective<TLength> | undefined;\n  /**\n   * The **`perspective-origin`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the `perspective` property.\n   *\n   * **Syntax**: `<position>`\n   *\n   * **Initial value**: `50% 50%`\n   *\n   * |  Chrome  | Firefox  | Safari  |  Edge  |   IE   |\n   * | :------: | :------: | :-----: | :----: | :----: |\n   * |  **36**  |  **16**  |  **9**  | **12** | **10** |\n   * | 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/perspective-origin\n   */\n  perspectiveOrigin?: Property.PerspectiveOrigin<TLength> | undefined;\n  /**\n   * The **`place-content`** CSS shorthand property allows you to align content along both the block and inline directions at once (i.e. the `align-content` and `justify-content` properties) in a relevant layout system such as Grid or Flexbox.\n   *\n   * **Syntax**: `<\'align-content\'> <\'justify-content\'>?`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **59** | **45**  | **9**  | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/place-content\n   */\n  placeContent?: Property.PlaceContent | undefined;\n  /**\n   * The **`pointer-events`** CSS property sets under what circumstances (if any) a particular graphic element can become the target of pointer events.\n   *\n   * **Syntax**: `auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **1**  | **1.5** | **4**  | **12** | **11** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/pointer-events\n   */\n  pointerEvents?: Property.PointerEvents | undefined;\n  /**\n   * The **`position`** CSS property sets how an element is positioned in a document. The `top`, `right`, `bottom`, and `left` properties determine the final location of positioned elements.\n   *\n   * **Syntax**: `static | relative | absolute | sticky | fixed`\n   *\n   * **Initial value**: `static`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/position\n   */\n  position?: Property.Position | undefined;\n  /**\n   * The **`print-color-adjust`** CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element\'s appearance it determines to be necessary and prudent given the type and capabilities of the output device.\n   *\n   * **Syntax**: `economy | exact`\n   *\n   * **Initial value**: `economy`\n   *\n   * |    Chrome    |       Firefox       |  Safari  |     Edge     | IE  |\n   * | :----------: | :-----------------: | :------: | :----------: | :-: |\n   * | **17** _-x-_ |       **97**        | **15.4** | **79** _-x-_ | No  |\n   * |              | 48 _(color-adjust)_ | 6 _-x-_  |              |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/print-color-adjust\n   */\n  printColorAdjust?: Property.PrintColorAdjust | undefined;\n  /**\n   * The **`quotes`** CSS property sets how the browser should render quotation marks that are added using the `open-quotes` or `close-quotes` values of the CSS `content` property.\n   *\n   * **Syntax**: `none | auto | [ <string> <string> ]+`\n   *\n   * **Initial value**: depends on user agent\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **11** | **1.5** | **9**  | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/quotes\n   */\n  quotes?: Property.Quotes | undefined;\n  /**\n   * The **`resize`** CSS property sets whether an element is resizable, and if so, in which directions.\n   *\n   * **Syntax**: `none | both | horizontal | vertical | block | inline`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **1**  |  **4**  | **3**  | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/resize\n   */\n  resize?: Property.Resize | undefined;\n  /**\n   * The **`right`** CSS property participates in specifying the horizontal position of a positioned element. It has no effect on non-positioned elements.\n   *\n   * **Syntax**: `<length> | <percentage> | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/right\n   */\n  right?: Property.Right<TLength> | undefined;\n  /**\n   * The **`rotate`** CSS property allows you to specify rotation transforms individually and independently of the `transform` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the `transform` property.\n   *\n   * **Syntax**: `none | <angle> | [ x | y | z | <number>{3} ] && <angle>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  | Edge | IE  |\n   * | :----: | :-----: | :------: | :--: | :-: |\n   * |   No   | **72**  | **14.1** |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/rotate\n   */\n  rotate?: Property.Rotate | undefined;\n  /**\n   * The **`row-gap`** CSS property sets the size of the gap (gutter) between an element\'s grid rows.\n   *\n   * **Syntax**: `normal | <length-percentage>`\n   *\n   * **Initial value**: `normal`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **84** | **63**  | **14.1** | **84** | No  |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * |       Chrome        |       Firefox       |        Safari         |  Edge  | IE  |\n   * | :-----------------: | :-----------------: | :-------------------: | :----: | :-: |\n   * |       **66**        |       **61**        |        **12**         | **16** | No  |\n   * | 57 _(grid-row-gap)_ | 52 _(grid-row-gap)_ | 10.1 _(grid-row-gap)_ |        |     |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/row-gap\n   */\n  rowGap?: Property.RowGap<TLength> | undefined;\n  /**\n   * The **`ruby-align`** CSS property defines the distribution of the different ruby elements over the base.\n   *\n   * **Syntax**: `start | center | space-between | space-around`\n   *\n   * **Initial value**: `space-around`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   | **38**  |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/ruby-align\n   */\n  rubyAlign?: Property.RubyAlign | undefined;\n  /**\n   * **Syntax**: `separate | collapse | auto`\n   *\n   * **Initial value**: `separate`\n   */\n  rubyMerge?: Property.RubyMerge | undefined;\n  /**\n   * The **`ruby-position`** CSS property defines the position of a ruby element relatives to its base element. It can be positioned over the element (`over`), under it (`under`), or between the characters on their right side (`inter-character`).\n   *\n   * **Syntax**: `[ alternate || [ over | under ] ] | inter-character`\n   *\n   * **Initial value**: `alternate`\n   *\n   * | Chrome  | Firefox |   Safari    | Edge  | IE  |\n   * | :-----: | :-----: | :---------: | :---: | :-: |\n   * | **84**  | **38**  | **7** _-x-_ | 12-79 | No  |\n   * | 1 _-x-_ |         |             |       |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/ruby-position\n   */\n  rubyPosition?: Property.RubyPosition | undefined;\n  /**\n   * The **`scale`** CSS property allows you to specify scale transforms individually and independently of the `transform` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the `transform` value.\n   *\n   * **Syntax**: `none | <number>{1,3}`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  | Edge | IE  |\n   * | :----: | :-----: | :------: | :--: | :-: |\n   * |   No   | **72**  | **14.1** |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scale\n   */\n  scale?: Property.Scale | undefined;\n  /**\n   * The **`scroll-behavior`** CSS property sets the behavior for a scrolling box when scrolling is triggered by the navigation or CSSOM scrolling APIs.\n   *\n   * **Syntax**: `auto | smooth`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **61** | **36**  | **15.4** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-behavior\n   */\n  scrollBehavior?: Property.ScrollBehavior | undefined;\n  /**\n   * The **`scroll-margin`** shorthand property sets all of the scroll margins of an element at once, assigning values much like the `margin` property does for margins of an element.\n   *\n   * **Syntax**: `<length>{1,4}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |          Safari           |  Edge  | IE  |\n   * | :----: | :-----: | :-----------------------: | :----: | :-: |\n   * | **69** | **90**  |         **14.1**          | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin\n   */\n  scrollMargin?: Property.ScrollMargin<TLength> | undefined;\n  /**\n   * The `scroll-margin-block` shorthand property sets the scroll margins of an element in the block dimension.\n   *\n   * **Syntax**: `<length>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block\n   */\n  scrollMarginBlock?: Property.ScrollMarginBlock<TLength> | undefined;\n  /**\n   * The `scroll-margin-block-end` property defines the margin of the scroll snap area at the end of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-end\n   */\n  scrollMarginBlockEnd?: Property.ScrollMarginBlockEnd<TLength> | undefined;\n  /**\n   * The `scroll-margin-block-start` property defines the margin of the scroll snap area at the start of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-start\n   */\n  scrollMarginBlockStart?: Property.ScrollMarginBlockStart<TLength> | undefined;\n  /**\n   * The `scroll-margin-bottom` property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |              Safari              |  Edge  | IE  |\n   * | :----: | :-----: | :------------------------------: | :----: | :-: |\n   * | **69** | **68**  |             **14.1**             | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin-bottom)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-bottom\n   */\n  scrollMarginBottom?: Property.ScrollMarginBottom<TLength> | undefined;\n  /**\n   * The `scroll-margin-inline` shorthand property sets the scroll margins of an element in the inline dimension.\n   *\n   * **Syntax**: `<length>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline\n   */\n  scrollMarginInline?: Property.ScrollMarginInline<TLength> | undefined;\n  /**\n   * The `scroll-margin-inline-end` property defines the margin of the scroll snap area at the end of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-end\n   */\n  scrollMarginInlineEnd?: Property.ScrollMarginInlineEnd<TLength> | undefined;\n  /**\n   * The `scroll-margin-inline-start` property defines the margin of the scroll snap area at the start of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-start\n   */\n  scrollMarginInlineStart?: Property.ScrollMarginInlineStart<TLength> | undefined;\n  /**\n   * The `scroll-margin-left` property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |             Safari             |  Edge  | IE  |\n   * | :----: | :-----: | :----------------------------: | :----: | :-: |\n   * | **69** | **68**  |            **14.1**            | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin-left)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-left\n   */\n  scrollMarginLeft?: Property.ScrollMarginLeft<TLength> | undefined;\n  /**\n   * The `scroll-margin-right` property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |             Safari              |  Edge  | IE  |\n   * | :----: | :-----: | :-----------------------------: | :----: | :-: |\n   * | **69** | **68**  |            **14.1**             | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin-right)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-right\n   */\n  scrollMarginRight?: Property.ScrollMarginRight<TLength> | undefined;\n  /**\n   * The `scroll-margin-top` property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |            Safari             |  Edge  | IE  |\n   * | :----: | :-----: | :---------------------------: | :----: | :-: |\n   * | **69** | **68**  |           **14.1**            | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin-top)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-top\n   */\n  scrollMarginTop?: Property.ScrollMarginTop<TLength> | undefined;\n  /**\n   * The **`scroll-padding`** shorthand property sets scroll padding on all sides of an element at once, much like the `padding` property does for padding on an element.\n   *\n   * **Syntax**: `[ auto | <length-percentage> ]{1,4}`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding\n   */\n  scrollPadding?: Property.ScrollPadding<TLength> | undefined;\n  /**\n   * The `scroll-padding-block` shorthand property sets the scroll padding of an element in the block dimension.\n   *\n   * **Syntax**: `[ auto | <length-percentage> ]{1,2}`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **69** | **68**  | **15** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block\n   */\n  scrollPaddingBlock?: Property.ScrollPaddingBlock<TLength> | undefined;\n  /**\n   * The `scroll-padding-block-end` property defines offsets for the end edge in the block dimension of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.\n   *\n   * **Syntax**: `auto | <length-percentage>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **69** | **68**  | **15** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-end\n   */\n  scrollPaddingBlockEnd?: Property.ScrollPaddingBlockEnd<TLength> | undefined;\n  /**\n   * The `scroll-padding-block-start` property defines offsets for the start edge in the block dimension of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.\n   *\n   * **Syntax**: `auto | <length-percentage>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **69** | **68**  | **15** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-start\n   */\n  scrollPaddingBlockStart?: Property.ScrollPaddingBlockStart<TLength> | undefined;\n  /**\n   * The `scroll-padding-bottom` property defines offsets for the bottom of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.\n   *\n   * **Syntax**: `auto | <length-percentage>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-bottom\n   */\n  scrollPaddingBottom?: Property.ScrollPaddingBottom<TLength> | undefined;\n  /**\n   * The `scroll-padding-inline` shorthand property sets the scroll padding of an element in the inline dimension.\n   *\n   * **Syntax**: `[ auto | <length-percentage> ]{1,2}`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **69** | **68**  | **15** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline\n   */\n  scrollPaddingInline?: Property.ScrollPaddingInline<TLength> | undefined;\n  /**\n   * The `scroll-padding-inline-end` property defines offsets for the end edge in the inline dimension of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.\n   *\n   * **Syntax**: `auto | <length-percentage>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **69** | **68**  | **15** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-end\n   */\n  scrollPaddingInlineEnd?: Property.ScrollPaddingInlineEnd<TLength> | undefined;\n  /**\n   * The `scroll-padding-inline-start` property defines offsets for the start edge in the inline dimension of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.\n   *\n   * **Syntax**: `auto | <length-percentage>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **69** | **68**  | **15** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-start\n   */\n  scrollPaddingInlineStart?: Property.ScrollPaddingInlineStart<TLength> | undefined;\n  /**\n   * The `scroll-padding-left` property defines offsets for the left of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.\n   *\n   * **Syntax**: `auto | <length-percentage>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-left\n   */\n  scrollPaddingLeft?: Property.ScrollPaddingLeft<TLength> | undefined;\n  /**\n   * The `scroll-padding-right` property defines offsets for the right of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.\n   *\n   * **Syntax**: `auto | <length-percentage>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-right\n   */\n  scrollPaddingRight?: Property.ScrollPaddingRight<TLength> | undefined;\n  /**\n   * The **`scroll-padding-top`** property defines offsets for the top of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.\n   *\n   * **Syntax**: `auto | <length-percentage>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-top\n   */\n  scrollPaddingTop?: Property.ScrollPaddingTop<TLength> | undefined;\n  /**\n   * The `scroll-snap-align` property specifies the box\'s snap position as an alignment of its snap area (as the alignment subject) within its snap container\'s snapport (as the alignment container). The two values specify the snapping alignment in the block axis and inline axis, respectively. If only one value is specified, the second value defaults to the same value.\n   *\n   * **Syntax**: `[ none | start | end | center ]{1,2}`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **69** | **68**  | **11** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-snap-align\n   */\n  scrollSnapAlign?: Property.ScrollSnapAlign | undefined;\n  /**\n   * The **`scroll-margin`** shorthand property sets all of the scroll margins of an element at once, assigning values much like the `margin` property does for margins of an element.\n   *\n   * **Syntax**: `<length>{1,4}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |          Safari           |  Edge  | IE  |\n   * | :----: | :-----: | :-----------------------: | :----: | :-: |\n   * | **69** |  68-90  |         **14.1**          | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin\n   */\n  scrollSnapMargin?: Property.ScrollMargin<TLength> | undefined;\n  /**\n   * The `scroll-margin-bottom` property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |              Safari              |  Edge  | IE  |\n   * | :----: | :-----: | :------------------------------: | :----: | :-: |\n   * | **69** | **68**  |             **14.1**             | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin-bottom)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-bottom\n   */\n  scrollSnapMarginBottom?: Property.ScrollMarginBottom<TLength> | undefined;\n  /**\n   * The `scroll-margin-left` property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |             Safari             |  Edge  | IE  |\n   * | :----: | :-----: | :----------------------------: | :----: | :-: |\n   * | **69** | **68**  |            **14.1**            | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin-left)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-left\n   */\n  scrollSnapMarginLeft?: Property.ScrollMarginLeft<TLength> | undefined;\n  /**\n   * The `scroll-margin-right` property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |             Safari              |  Edge  | IE  |\n   * | :----: | :-----: | :-----------------------------: | :----: | :-: |\n   * | **69** | **68**  |            **14.1**             | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin-right)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-right\n   */\n  scrollSnapMarginRight?: Property.ScrollMarginRight<TLength> | undefined;\n  /**\n   * The `scroll-margin-top` property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |            Safari             |  Edge  | IE  |\n   * | :----: | :-----: | :---------------------------: | :----: | :-: |\n   * | **69** | **68**  |           **14.1**            | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin-top)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-top\n   */\n  scrollSnapMarginTop?: Property.ScrollMarginTop<TLength> | undefined;\n  /**\n   * The **`scroll-snap-stop`** CSS property defines whether the scroll container is allowed to "pass over" possible snap positions.\n   *\n   * **Syntax**: `normal | always`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **75** |   No    | **15** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-snap-stop\n   */\n  scrollSnapStop?: Property.ScrollSnapStop | undefined;\n  /**\n   * The **`scroll-snap-type`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.\n   *\n   * **Syntax**: `none | [ x | y | block | inline | both ] [ mandatory | proximity ]?`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |      IE      |\n   * | :----: | :-----: | :-----: | :----: | :----------: |\n   * | **69** |  39-68  | **11**  | **79** | **10** _-x-_ |\n   * |        |         | 9 _-x-_ |        |              |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type\n   */\n  scrollSnapType?: Property.ScrollSnapType | undefined;\n  /**\n   * The **`scrollbar-color`** CSS property sets the color of the scrollbar track and thumb.\n   *\n   * **Syntax**: `auto | <color>{2}`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   | **64**  |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scrollbar-color\n   */\n  scrollbarColor?: Property.ScrollbarColor | undefined;\n  /**\n   * The **`scrollbar-gutter`** CSS property allows authors to reserve space for the scrollbar, preventing unwanted layout changes as the content grows while also avoiding unnecessary visuals when scrolling isn\'t needed.\n   *\n   * **Syntax**: `auto | stable && both-edges?`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **94** | **97**  |   No   | **94** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scrollbar-gutter\n   */\n  scrollbarGutter?: Property.ScrollbarGutter | undefined;\n  /**\n   * The **`scrollbar-width`** property allows the author to set the maximum thickness of an element\'s scrollbars when they are shown.\n   *\n   * **Syntax**: `auto | thin | none`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   | **64**  |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scrollbar-width\n   */\n  scrollbarWidth?: Property.ScrollbarWidth | undefined;\n  /**\n   * The **`shape-image-threshold`** CSS property sets the alpha channel threshold used to extract the shape using an image as the value for `shape-outside`.\n   *\n   * **Syntax**: `<alpha-value>`\n   *\n   * **Initial value**: `0.0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **37** | **62**  | **10.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/shape-image-threshold\n   */\n  shapeImageThreshold?: Property.ShapeImageThreshold | undefined;\n  /**\n   * The **`shape-margin`** CSS property sets a margin for a CSS shape created using `shape-outside`.\n   *\n   * **Syntax**: `<length-percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **37** | **62**  | **10.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/shape-margin\n   */\n  shapeMargin?: Property.ShapeMargin<TLength> | undefined;\n  /**\n   * The **`shape-outside`** CSS property defines a shape—which may be non-rectangular—around which adjacent inline content should wrap. By default, inline content wraps around its margin box; `shape-outside` provides a way to customize this wrapping, making it possible to wrap text around complex objects rather than simple boxes.\n   *\n   * **Syntax**: `none | [ <shape-box> || <basic-shape> ] | <image>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **37** | **62**  | **10.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/shape-outside\n   */\n  shapeOutside?: Property.ShapeOutside | undefined;\n  /**\n   * The **`tab-size`** CSS property is used to customize the width of tab characters (U+0009).\n   *\n   * **Syntax**: `<integer> | <length>`\n   *\n   * **Initial value**: `8`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **21** | **91**  | **7**  | **79** | No  |\n   * |        | 4 _-x-_ |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/tab-size\n   */\n  tabSize?: Property.TabSize<TLength> | undefined;\n  /**\n   * The **`table-layout`** CSS property sets the algorithm used to lay out `<table>` cells, rows, and columns.\n   *\n   * **Syntax**: `auto | fixed`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **14** |  **1**  | **1**  | **12** | **5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/table-layout\n   */\n  tableLayout?: Property.TableLayout | undefined;\n  /**\n   * The **`text-align`** CSS property sets the horizontal alignment of the content inside a block element or table-cell box. This means it works like `vertical-align` but in the horizontal direction.\n   *\n   * **Syntax**: `start | end | left | right | center | justify | match-parent`\n   *\n   * **Initial value**: `start`, or a nameless value that acts as `left` if _direction_ is `ltr`, `right` if _direction_ is `rtl` if `start` is not supported by the browser.\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-align\n   */\n  textAlign?: Property.TextAlign | undefined;\n  /**\n   * The **`text-align-last`** CSS property sets how the last line of a block or a line, right before a forced line break, is aligned.\n   *\n   * **Syntax**: `auto | start | end | left | right | center | justify`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **47** | **49**  |   No   | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-align-last\n   */\n  textAlignLast?: Property.TextAlignLast | undefined;\n  /**\n   * The **`text-combine-upright`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\n   *\n   * **Syntax**: `none | all | [ digits <integer>? ]`\n   *\n   * **Initial value**: `none`\n   *\n   * |           Chrome           | Firefox |              Safari              | Edge  |                   IE                   |\n   * | :------------------------: | :-----: | :------------------------------: | :---: | :------------------------------------: |\n   * |           **48**           | **48**  | **5.1** _(-webkit-text-combine)_ | 15-79 | **11** _(-ms-text-combine-horizontal)_ |\n   * | 9 _(-webkit-text-combine)_ |         |                                  |       |                                        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-combine-upright\n   */\n  textCombineUpright?: Property.TextCombineUpright | undefined;\n  /**\n   * The **`text-decoration-color`** CSS property sets the color of decorations added to text by `text-decoration-line`.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **36**  | **12.1** | **79** | No  |\n   * |        |         | 8 _-x-_  |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-color\n   */\n  textDecorationColor?: Property.TextDecorationColor | undefined;\n  /**\n   * The **`text-decoration-line`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.\n   *\n   * **Syntax**: `none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **36**  | **12.1** | **79** | No  |\n   * |        |         | 8 _-x-_  |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-line\n   */\n  textDecorationLine?: Property.TextDecorationLine | undefined;\n  /**\n   * The **`text-decoration-skip`** CSS property sets what parts of an element\'s content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors.\n   *\n   * **Syntax**: `none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]`\n   *\n   * **Initial value**: `objects`\n   *\n   * | Chrome | Firefox |  Safari  | Edge | IE  |\n   * | :----: | :-----: | :------: | :--: | :-: |\n   * | 57-64  |   No    | **12.1** |  No  | No  |\n   * |        |         | 7 _-x-_  |      |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip\n   */\n  textDecorationSkip?: Property.TextDecorationSkip | undefined;\n  /**\n   * The **`text-decoration-skip-ink`** CSS property specifies how overlines and underlines are drawn when they pass over glyph ascenders and descenders.\n   *\n   * **Syntax**: `auto | all | none`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **64** | **70**  | **15.4** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip-ink\n   */\n  textDecorationSkipInk?: Property.TextDecorationSkipInk | undefined;\n  /**\n   * The **`text-decoration-style`** CSS property sets the style of the lines specified by `text-decoration-line`. The style applies to all lines that are set with `text-decoration-line`.\n   *\n   * **Syntax**: `solid | double | dotted | dashed | wavy`\n   *\n   * **Initial value**: `solid`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **36**  | **12.1** | **79** | No  |\n   * |        |         | 8 _-x-_  |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-style\n   */\n  textDecorationStyle?: Property.TextDecorationStyle | undefined;\n  /**\n   * The **`text-decoration-thickness`** CSS property sets the stroke thickness of the decoration line that is used on text in an element, such as a line-through, underline, or overline.\n   *\n   * **Syntax**: `auto | from-font | <length> | <percentage> `\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **89** | **70**  | **12.1** | **89** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-thickness\n   */\n  textDecorationThickness?: Property.TextDecorationThickness<TLength> | undefined;\n  /**\n   * The **`text-decoration-thickness`** CSS property sets the stroke thickness of the decoration line that is used on text in an element, such as a line-through, underline, or overline.\n   *\n   * **Syntax**: `auto | from-font | <length> | <percentage> `\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  | Edge  | IE  |\n   * | :----: | :-----: | :------: | :---: | :-: |\n   * | 87-89  | **70**  | **12.1** | 87-89 | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-thickness\n   */\n  textDecorationWidth?: Property.TextDecorationThickness<TLength> | undefined;\n  /**\n   * The **`text-emphasis-color`** CSS property sets the color of emphasis marks. This value can also be set using the `text-emphasis` shorthand.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * |    Chrome    | Firefox | Safari |     Edge     | IE  |\n   * | :----------: | :-----: | :----: | :----------: | :-: |\n   * | **25** _-x-_ | **46**  | **7**  | **79** _-x-_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-emphasis-color\n   */\n  textEmphasisColor?: Property.TextEmphasisColor | undefined;\n  /**\n   * The **`text-emphasis-position`** CSS property sets where emphasis marks are drawn. Like ruby text, if there isn\'t enough room for emphasis marks, the line height is increased.\n   *\n   * **Syntax**: `[ over | under ] && [ right | left ]`\n   *\n   * **Initial value**: `over right`\n   *\n   * |    Chrome    | Firefox | Safari |     Edge     | IE  |\n   * | :----------: | :-----: | :----: | :----------: | :-: |\n   * | **25** _-x-_ | **46**  | **7**  | **79** _-x-_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-emphasis-position\n   */\n  textEmphasisPosition?: Property.TextEmphasisPosition | undefined;\n  /**\n   * The **`text-emphasis-style`** CSS property sets the appearance of emphasis marks. It can also be set, and reset, using the `text-emphasis` shorthand.\n   *\n   * **Syntax**: `none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>`\n   *\n   * **Initial value**: `none`\n   *\n   * |    Chrome    | Firefox | Safari |     Edge     | IE  |\n   * | :----------: | :-----: | :----: | :----------: | :-: |\n   * | **25** _-x-_ | **46**  | **7**  | **79** _-x-_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-emphasis-style\n   */\n  textEmphasisStyle?: Property.TextEmphasisStyle | undefined;\n  /**\n   * The **`text-indent`** CSS property sets the length of empty space (indentation) that is put before lines of text in a block.\n   *\n   * **Syntax**: `<length-percentage> && hanging? && each-line?`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-indent\n   */\n  textIndent?: Property.TextIndent<TLength> | undefined;\n  /**\n   * The **`text-justify`** CSS property sets what type of justification should be applied to text when `text-align``: justify;` is set on an element.\n   *\n   * **Syntax**: `auto | inter-character | inter-word | none`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * |  n/a   | **55**  |   No   | **12** | **11** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-justify\n   */\n  textJustify?: Property.TextJustify | undefined;\n  /**\n   * The **`text-orientation`** CSS property sets the orientation of the text characters in a line. It only affects text in vertical mode (when `writing-mode` is not `horizontal-tb`). It is useful for controlling the display of languages that use vertical script, and also for making vertical table headers.\n   *\n   * **Syntax**: `mixed | upright | sideways`\n   *\n   * **Initial value**: `mixed`\n   *\n   * |  Chrome  | Firefox |  Safari   |  Edge  | IE  |\n   * | :------: | :-----: | :-------: | :----: | :-: |\n   * |  **48**  | **41**  |  **14**   | **79** | No  |\n   * | 11 _-x-_ |         | 5.1 _-x-_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-orientation\n   */\n  textOrientation?: Property.TextOrientation | undefined;\n  /**\n   * The **`text-overflow`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis (\'`…`\'), or display a custom string.\n   *\n   * **Syntax**: `[ clip | ellipsis | <string> ]{1,2}`\n   *\n   * **Initial value**: `clip`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  |  **7**  | **1.3** | **12** | **6** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-overflow\n   */\n  textOverflow?: Property.TextOverflow | undefined;\n  /**\n   * The **`text-rendering`** CSS property provides information to the rendering engine about what to optimize for when rendering text.\n   *\n   * **Syntax**: `auto | optimizeSpeed | optimizeLegibility | geometricPrecision`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **4**  |  **1**  | **5**  | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-rendering\n   */\n  textRendering?: Property.TextRendering | undefined;\n  /**\n   * The **`text-shadow`** CSS property adds shadows to text. It accepts a comma-separated list of shadows to be applied to the text and any of its `decorations`. Each shadow is described by some combination of X and Y offsets from the element, blur radius, and color.\n   *\n   * **Syntax**: `none | <shadow-t>#`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |   IE   |\n   * | :----: | :-----: | :-----: | :----: | :----: |\n   * | **2**  | **3.5** | **1.1** | **12** | **10** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-shadow\n   */\n  textShadow?: Property.TextShadow | undefined;\n  /**\n   * The **`text-size-adjust`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.\n   *\n   * **Syntax**: `none | auto | <percentage>`\n   *\n   * **Initial value**: `auto` for smartphone browsers supporting inflation, `none` in other cases (and then not modifiable).\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **54** |   No    |   No   | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-size-adjust\n   */\n  textSizeAdjust?: Property.TextSizeAdjust | undefined;\n  /**\n   * The **`text-transform`** CSS property specifies how to capitalize an element\'s text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized. It also can help improve legibility for ruby.\n   *\n   * **Syntax**: `none | capitalize | uppercase | lowercase | full-width | full-size-kana`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-transform\n   */\n  textTransform?: Property.TextTransform | undefined;\n  /**\n   * The **`text-underline-offset`** CSS property sets the offset distance of an underline text decoration line (applied using `text-decoration`) from its original position.\n   *\n   * **Syntax**: `auto | <length> | <percentage> `\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **70**  | **12.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-underline-offset\n   */\n  textUnderlineOffset?: Property.TextUnderlineOffset<TLength> | undefined;\n  /**\n   * The **`text-underline-position`** CSS property specifies the position of the underline which is set using the `text-decoration` property\'s `underline` value.\n   *\n   * **Syntax**: `auto | from-font | [ under || [ left | right ] ]`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :------: | :----: | :---: |\n   * | **33** | **74**  | **12.1** | **12** | **6** |\n   * |        |         | 9 _-x-_  |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-underline-position\n   */\n  textUnderlinePosition?: Property.TextUnderlinePosition | undefined;\n  /**\n   * The **`top`** CSS property participates in specifying the vertical position of a positioned element. It has no effect on non-positioned elements.\n   *\n   * **Syntax**: `<length> | <percentage> | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/top\n   */\n  top?: Property.Top<TLength> | undefined;\n  /**\n   * The **`touch-action`** CSS property sets how an element\'s region can be manipulated by a touchscreen user (for example, by zooming features built into the browser).\n   *\n   * **Syntax**: `auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |    IE    |\n   * | :----: | :-----: | :----: | :----: | :------: |\n   * | **36** | **52**  | **13** | **12** |  **11**  |\n   * |        |         |        |        | 10 _-x-_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/touch-action\n   */\n  touchAction?: Property.TouchAction | undefined;\n  /**\n   * The **`transform`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\n   *\n   * **Syntax**: `none | <transform-list>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome  | Firefox |  Safari   |  Edge  |   IE    |\n   * | :-----: | :-----: | :-------: | :----: | :-----: |\n   * | **36**  | **16**  |   **9**   | **12** | **10**  |\n   * | 1 _-x-_ |         | 3.1 _-x-_ |        | 9 _-x-_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transform\n   */\n  transform?: Property.Transform | undefined;\n  /**\n   * The **`transform-box`** CSS property defines the layout box to which the `transform` and `transform-origin` properties relate.\n   *\n   * **Syntax**: `content-box | border-box | fill-box | stroke-box | view-box`\n   *\n   * **Initial value**: `view-box`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **64** | **55**  | **11** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transform-box\n   */\n  transformBox?: Property.TransformBox | undefined;\n  /**\n   * The **`transform-origin`** CSS property sets the origin for an element\'s transformations.\n   *\n   * **Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n   *\n   * **Initial value**: `50% 50% 0`\n   *\n   * | Chrome  |  Firefox  | Safari  |  Edge  |   IE    |\n   * | :-----: | :-------: | :-----: | :----: | :-----: |\n   * | **36**  |  **16**   |  **9**  | **12** | **10**  |\n   * | 1 _-x-_ | 3.5 _-x-_ | 2 _-x-_ |        | 9 _-x-_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transform-origin\n   */\n  transformOrigin?: Property.TransformOrigin<TLength> | undefined;\n  /**\n   * The **`transform-style`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.\n   *\n   * **Syntax**: `flat | preserve-3d`\n   *\n   * **Initial value**: `flat`\n   *\n   * |  Chrome  | Firefox  | Safari  |  Edge  | IE  |\n   * | :------: | :------: | :-----: | :----: | :-: |\n   * |  **36**  |  **16**  |  **9**  | **12** | No  |\n   * | 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transform-style\n   */\n  transformStyle?: Property.TransformStyle | undefined;\n  /**\n   * The **`transition-delay`** CSS property specifies the duration to wait before starting a property\'s transition effect when its value changes.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **26**  | **16**  |  **9**  | **12** | **10** |\n   * | 1 _-x-_ | 4 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transition-delay\n   */\n  transitionDelay?: Property.TransitionDelay<TTime> | undefined;\n  /**\n   * The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   *\n   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n   * | :-----: | :-----: | :-------: | :----: | :----: |\n   * | **26**  | **16**  |   **9**   | **12** | **10** |\n   * | 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transition-duration\n   */\n  transitionDuration?: Property.TransitionDuration<TTime> | undefined;\n  /**\n   * The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n   *\n   * **Syntax**: `none | <single-transition-property>#`\n   *\n   * **Initial value**: all\n   *\n   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n   * | :-----: | :-----: | :-------: | :----: | :----: |\n   * | **26**  | **16**  |   **9**   | **12** | **10** |\n   * | 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transition-property\n   */\n  transitionProperty?: Property.TransitionProperty | undefined;\n  /**\n   * The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   *\n   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n   * | :-----: | :-----: | :-------: | :----: | :----: |\n   * | **26**  | **16**  |   **9**   | **12** | **10** |\n   * | 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transition-timing-function\n   */\n  transitionTimingFunction?: Property.TransitionTimingFunction | undefined;\n  /**\n   * The **`translate`** CSS property allows you to specify translation transforms individually and independently of the `transform` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the `transform` value.\n   *\n   * **Syntax**: `none | <length-percentage> [ <length-percentage> <length>? ]?`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  | Edge | IE  |\n   * | :----: | :-----: | :------: | :--: | :-: |\n   * |   No   | **72**  | **14.1** |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/translate\n   */\n  translate?: Property.Translate<TLength> | undefined;\n  /**\n   * The **`unicode-bidi`** CSS property, together with the `direction` property, determines how bidirectional text in a document is handled. For example, if a block of content contains both left-to-right and right-to-left text, the user-agent uses a complex Unicode algorithm to decide how to display the text. The `unicode-bidi` property overrides this algorithm and allows the developer to control the text embedding.\n   *\n   * **Syntax**: `normal | embed | isolate | bidi-override | isolate-override | plaintext`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |   IE    |\n   * | :----: | :-----: | :-----: | :----: | :-----: |\n   * | **2**  |  **1**  | **1.3** | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/unicode-bidi\n   */\n  unicodeBidi?: Property.UnicodeBidi | undefined;\n  /**\n   * The **`user-select`** CSS property controls whether the user can select text. This doesn\'t have any effect on content loaded as part of a browser\'s user interface (its chrome), except in textboxes.\n   *\n   * **Syntax**: `auto | text | none | contain | all`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome  | Firefox |   Safari    |   Edge   |      IE      |\n   * | :-----: | :-----: | :---------: | :------: | :----------: |\n   * | **54**  | **69**  | **3** _-x-_ |  **79**  | **10** _-x-_ |\n   * | 1 _-x-_ | 1 _-x-_ |             | 12 _-x-_ |              |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/user-select\n   */\n  userSelect?: Property.UserSelect | undefined;\n  /**\n   * The **`vertical-align`** CSS property sets vertical alignment of an inline, inline-block or table-cell box.\n   *\n   * **Syntax**: `baseline | sub | super | text-top | text-bottom | middle | top | bottom | <percentage> | <length>`\n   *\n   * **Initial value**: `baseline`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/vertical-align\n   */\n  verticalAlign?: Property.VerticalAlign<TLength> | undefined;\n  /**\n   * The **`visibility`** CSS property shows or hides an element without changing the layout of a document. The property can also hide rows or columns in a `<table>`.\n   *\n   * **Syntax**: `visible | hidden | collapse`\n   *\n   * **Initial value**: `visible`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/visibility\n   */\n  visibility?: Property.Visibility | undefined;\n  /**\n   * The **`white-space`** CSS property sets how white space inside an element is handled.\n   *\n   * **Syntax**: `normal | pre | nowrap | pre-wrap | pre-line | break-spaces`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/white-space\n   */\n  whiteSpace?: Property.WhiteSpace | undefined;\n  /**\n   * The **`widows`** CSS property sets the minimum number of lines in a block container that must be shown at the _top_ of a page, region, or column.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `2`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **25** |   No    | **1.3** | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/widows\n   */\n  widows?: Property.Widows | undefined;\n  /**\n   * The **`width`** CSS property sets an element\'s width. By default, it sets the width of the content area, but if `box-sizing` is set to `border-box`, it sets the width of the border area.\n   *\n   * **Syntax**: `auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/width\n   */\n  width?: Property.Width<TLength> | undefined;\n  /**\n   * The **`will-change`** CSS property hints to browsers how an element is expected to change. Browsers may set up optimizations before an element is actually changed. These kinds of optimizations can increase the responsiveness of a page by doing potentially expensive work before they are actually required.\n   *\n   * **Syntax**: `auto | <animateable-feature>#`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :-----: | :----: | :-: |\n   * | **36** | **36**  | **9.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/will-change\n   */\n  willChange?: Property.WillChange | undefined;\n  /**\n   * The **`word-break`** CSS property sets whether line breaks appear wherever the text would otherwise overflow its content box.\n   *\n   * **Syntax**: `normal | break-all | keep-all | break-word`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  | **15**  | **3**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/word-break\n   */\n  wordBreak?: Property.WordBreak | undefined;\n  /**\n   * The **`word-spacing`** CSS property sets the length of space between words and between tags.\n   *\n   * **Syntax**: `normal | <length>`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **6** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/word-spacing\n   */\n  wordSpacing?: Property.WordSpacing<TLength> | undefined;\n  /**\n   * The **`overflow-wrap`** CSS property applies to inline elements, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box.\n   *\n   * **Syntax**: `normal | break-word`\n   *\n   * **Initial value**: `normal`\n   */\n  wordWrap?: Property.WordWrap | undefined;\n  /**\n   * The **`writing-mode`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (`html` element for HTML documents).\n   *\n   * **Syntax**: `horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr`\n   *\n   * **Initial value**: `horizontal-tb`\n   *\n   * | Chrome  | Firefox |  Safari   |  Edge  |  IE   |\n   * | :-----: | :-----: | :-------: | :----: | :---: |\n   * | **48**  | **41**  | **10.1**  | **12** | **9** |\n   * | 8 _-x-_ |         | 5.1 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/writing-mode\n   */\n  writingMode?: Property.WritingMode | undefined;\n  /**\n   * The **`z-index`** CSS property sets the z-order of a positioned element and its descendants or flex items. Overlapping elements with a larger z-index cover those with a smaller one.\n   *\n   * **Syntax**: `auto | <integer>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/z-index\n   */\n  zIndex?: Property.ZIndex | undefined;\n  /**\n   * The non-standard **_`zoom`_** CSS property can be used to control the magnification level of an element. `transform: scale()` should be used instead of this property, if possible. However, unlike CSS Transforms, `zoom` affects the layout size of the element.\n   *\n   * **Syntax**: `normal | reset | <number> | <percentage>`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |   IE    |\n   * | :----: | :-----: | :-----: | :----: | :-----: |\n   * | **1**  |   No    | **3.1** | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/zoom\n   */\n  zoom?: Property.Zoom | undefined;\n}\n\nexport interface StandardShorthandProperties<TLength = (string & {}) | 0, TTime = string & {}> {\n  /**\n   * The **`all`** shorthand CSS property resets all of an element\'s properties except `unicode-bidi`, `direction`, and CSS Custom Properties. It can set properties to their initial or inherited values, or to the values specified in another stylesheet origin.\n   *\n   * **Syntax**: `initial | inherit | unset | revert`\n   *\n   * **Initial value**: There is no practical initial value for it.\n   *\n   * | Chrome | Firefox | Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :-----: | :----: | :-: |\n   * | **37** | **27**  | **9.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/all\n   */\n  all?: Property.All | undefined;\n  /**\n   * The **`animation`** shorthand CSS property applies an animation between styles. It is a shorthand for `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and `animation-play-state`.\n   *\n   * **Syntax**: `<single-animation>#`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation\n   */\n  animation?: Property.Animation<TTime> | undefined;\n  /**\n   * The **`background`** shorthand CSS property sets all background style properties at once, such as color, image, origin and size, or repeat method.\n   *\n   * **Syntax**: `[ <bg-layer> , ]* <final-bg-layer>`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background\n   */\n  background?: Property.Background<TLength> | undefined;\n  /**\n   * The **`background-position`** CSS property sets the initial position for each background image. The position is relative to the position layer set by `background-origin`.\n   *\n   * **Syntax**: `<bg-position>#`\n   *\n   * **Initial value**: `0% 0%`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-position\n   */\n  backgroundPosition?: Property.BackgroundPosition<TLength> | undefined;\n  /**\n   * The **`border`** shorthand CSS property sets an element\'s border. It sets the values of `border-width`, `border-style`, and `border-color`.\n   *\n   * **Syntax**: `<line-width> || <line-style> || <color>`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border\n   */\n  border?: Property.Border<TLength> | undefined;\n  /**\n   * The **`border-block`** CSS property is a shorthand property for setting the individual logical block border property values in a single place in the style sheet.\n   *\n   * **Syntax**: `<\'border-top-width\'> || <\'border-top-style\'> || <color>`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block\n   */\n  borderBlock?: Property.BorderBlock<TLength> | undefined;\n  /**\n   * The **`border-block-end`** CSS property is a shorthand property for setting the individual logical block-end border property values in a single place in the style sheet.\n   *\n   * **Syntax**: `<\'border-top-width\'> || <\'border-top-style\'> || <color>`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-end\n   */\n  borderBlockEnd?: Property.BorderBlockEnd<TLength> | undefined;\n  /**\n   * The **`border-block-start`** CSS property is a shorthand property for setting the individual logical block-start border property values in a single place in the style sheet.\n   *\n   * **Syntax**: `<\'border-top-width\'> || <\'border-top-style\'> || <color>`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-start\n   */\n  borderBlockStart?: Property.BorderBlockStart<TLength> | undefined;\n  /**\n   * The **`border-bottom`** shorthand CSS property sets an element\'s bottom border. It sets the values of `border-bottom-width`, `border-bottom-style` and `border-bottom-color`.\n   *\n   * **Syntax**: `<line-width> || <line-style> || <color>`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom\n   */\n  borderBottom?: Property.BorderBottom<TLength> | undefined;\n  /**\n   * The **`border-color`** shorthand CSS property sets the color of an element\'s border.\n   *\n   * **Syntax**: `<color>{1,4}`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-color\n   */\n  borderColor?: Property.BorderColor | undefined;\n  /**\n   * The **`border-image`** CSS property draws an image around a given element. It replaces the element\'s regular border.\n   *\n   * **Syntax**: `<\'border-image-source\'> || <\'border-image-slice\'> [ / <\'border-image-width\'> | / <\'border-image-width\'>? / <\'border-image-outset\'> ]? || <\'border-image-repeat\'>`\n   *\n   * | Chrome  |  Firefox  | Safari  |  Edge  |   IE   |\n   * | :-----: | :-------: | :-----: | :----: | :----: |\n   * | **16**  |  **15**   |  **6**  | **12** | **11** |\n   * | 7 _-x-_ | 3.5 _-x-_ | 3 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-image\n   */\n  borderImage?: Property.BorderImage | undefined;\n  /**\n   * The **`border-inline`** CSS property is a shorthand property for setting the individual logical inline border property values in a single place in the style sheet.\n   *\n   * **Syntax**: `<\'border-top-width\'> || <\'border-top-style\'> || <color>`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline\n   */\n  borderInline?: Property.BorderInline<TLength> | undefined;\n  /**\n   * The **`border-inline-end`** CSS property is a shorthand property for setting the individual logical inline-end border property values in a single place in the style sheet.\n   *\n   * **Syntax**: `<\'border-top-width\'> || <\'border-top-style\'> || <color>`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-end\n   */\n  borderInlineEnd?: Property.BorderInlineEnd<TLength> | undefined;\n  /**\n   * The **`border-inline-start`** CSS property is a shorthand property for setting the individual logical inline-start border property values in a single place in the style sheet.\n   *\n   * **Syntax**: `<\'border-top-width\'> || <\'border-top-style\'> || <color>`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-start\n   */\n  borderInlineStart?: Property.BorderInlineStart<TLength> | undefined;\n  /**\n   * The **`border-left`** shorthand CSS property sets all the properties of an element\'s left border.\n   *\n   * **Syntax**: `<line-width> || <line-style> || <color>`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-left\n   */\n  borderLeft?: Property.BorderLeft<TLength> | undefined;\n  /**\n   * The **`border-radius`** CSS property rounds the corners of an element\'s outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.\n   *\n   * **Syntax**: `<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\n   * | :-----: | :-----: | :-----: | :----: | :---: |\n   * |  **4**  |  **4**  |  **5**  | **12** | **9** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-radius\n   */\n  borderRadius?: Property.BorderRadius<TLength> | undefined;\n  /**\n   * The **`border-right`** shorthand CSS property sets all the properties of an element\'s right border.\n   *\n   * **Syntax**: `<line-width> || <line-style> || <color>`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-right\n   */\n  borderRight?: Property.BorderRight<TLength> | undefined;\n  /**\n   * The **`border-style`** shorthand CSS property sets the line style for all four sides of an element\'s border.\n   *\n   * **Syntax**: `<line-style>{1,4}`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-style\n   */\n  borderStyle?: Property.BorderStyle | undefined;\n  /**\n   * The **`border-top`** shorthand CSS property sets all the properties of an element\'s top border.\n   *\n   * **Syntax**: `<line-width> || <line-style> || <color>`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-top\n   */\n  borderTop?: Property.BorderTop<TLength> | undefined;\n  /**\n   * The **`border-width`** shorthand CSS property sets the width of an element\'s border.\n   *\n   * **Syntax**: `<line-width>{1,4}`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-width\n   */\n  borderWidth?: Property.BorderWidth<TLength> | undefined;\n  /**\n   * The **`column-rule`** shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'column-rule-width\'> || <\'column-rule-style\'> || <\'column-rule-color\'>`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **50**  | **52**  |  **9**  | **12** | **10** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-rule\n   */\n  columnRule?: Property.ColumnRule<TLength> | undefined;\n  /**\n   * The **`columns`** CSS shorthand property sets the number of columns to use when drawing an element\'s contents, as well as those columns\' widths.\n   *\n   * **Syntax**: `<\'column-width\'> || <\'column-count\'>`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |   IE   |\n   * | :----: | :-----: | :-----: | :----: | :----: |\n   * | **50** | **52**  |  **9**  | **12** | **10** |\n   * |        |         | 3 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/columns\n   */\n  columns?: Property.Columns<TLength> | undefined;\n  /**\n   * The **`flex`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.\n   *\n   * **Syntax**: `none | [ <\'flex-grow\'> <\'flex-shrink\'>? || <\'flex-basis\'> ]`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |    IE    |\n   * | :------: | :-----: | :-----: | :----: | :------: |\n   * |  **29**  | **20**  |  **9**  | **12** |  **11**  |\n   * | 21 _-x-_ |         | 7 _-x-_ |        | 10 _-x-_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/flex\n   */\n  flex?: Property.Flex<TLength> | undefined;\n  /**\n   * The **`flex-flow`** CSS shorthand property specifies the direction of a flex container, as well as its wrapping behavior.\n   *\n   * **Syntax**: `<\'flex-direction\'> || <\'flex-wrap\'>`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **29**  | **28**  |  **9**  | **12** | **11** |\n   * | 21 _-x-_ |         | 7 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/flex-flow\n   */\n  flexFlow?: Property.FlexFlow | undefined;\n  /**\n   * The **`font`** CSS shorthand property sets all the different properties of an element\'s font. Alternatively, it sets an element\'s font to a system font.\n   *\n   * **Syntax**: `[ [ <\'font-style\'> || <font-variant-css21> || <\'font-weight\'> || <\'font-stretch\'> ]? <\'font-size\'> [ / <\'line-height\'> ]? <\'font-family\'> ] | caption | icon | menu | message-box | small-caption | status-bar`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font\n   */\n  font?: Property.Font | undefined;\n  /**\n   * The **`gap`** CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for `row-gap` and `column-gap`.\n   *\n   * **Syntax**: `<\'row-gap\'> <\'column-gap\'>?`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **84** | **63**  | **14.1** | **84** | No  |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * |     Chrome      |     Firefox     |      Safari       |  Edge  | IE  |\n   * | :-------------: | :-------------: | :---------------: | :----: | :-: |\n   * |     **66**      |     **61**      |      **12**       | **16** | No  |\n   * | 57 _(grid-gap)_ | 52 _(grid-gap)_ | 10.1 _(grid-gap)_ |        |     |\n   *\n   * ---\n   *\n   * _Supported in Multi-column Layout_\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **66** | **61**  |   No   | **16** | No  |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/gap\n   */\n  gap?: Property.Gap<TLength> | undefined;\n  /**\n   * The **`grid`** CSS property is a shorthand property that sets all of the explicit and implicit grid properties in a single declaration.\n   *\n   * **Syntax**: `<\'grid-template\'> | <\'grid-template-rows\'> / [ auto-flow && dense? ] <\'grid-auto-columns\'>? | [ auto-flow && dense? ] <\'grid-auto-rows\'>? / <\'grid-template-columns\'>`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid\n   */\n  grid?: Property.Grid | undefined;\n  /**\n   * The **`grid-area`** CSS shorthand property specifies a grid item\'s size and location within a grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.\n   *\n   * **Syntax**: `<grid-line> [ / <grid-line> ]{0,3}`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-area\n   */\n  gridArea?: Property.GridArea | undefined;\n  /**\n   * The **`grid-column`** CSS shorthand property specifies a grid item\'s size and location within a grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.\n   *\n   * **Syntax**: `<grid-line> [ / <grid-line> ]?`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-column\n   */\n  gridColumn?: Property.GridColumn | undefined;\n  /**\n   * The **`grid-row`** CSS shorthand property specifies a grid item\'s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.\n   *\n   * **Syntax**: `<grid-line> [ / <grid-line> ]?`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-row\n   */\n  gridRow?: Property.GridRow | undefined;\n  /**\n   * The **`grid-template`** CSS property is a shorthand property for defining grid columns, rows, and areas.\n   *\n   * **Syntax**: `none | [ <\'grid-template-rows\'> / <\'grid-template-columns\'> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-template\n   */\n  gridTemplate?: Property.GridTemplate | undefined;\n  /**\n   * **Syntax**: `none | <integer>`\n   *\n   * **Initial value**: `none`\n   */\n  lineClamp?: Property.LineClamp | undefined;\n  /**\n   * The **`list-style`** CSS shorthand property allows you to set all the list style properties at once.\n   *\n   * **Syntax**: `<\'list-style-type\'> || <\'list-style-position\'> || <\'list-style-image\'>`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/list-style\n   */\n  listStyle?: Property.ListStyle | undefined;\n  /**\n   * The **`margin`** CSS shorthand property sets the margin area on all four sides of an element.\n   *\n   * **Syntax**: `[ <length> | <percentage> | auto ]{1,4}`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin\n   */\n  margin?: Property.Margin<TLength> | undefined;\n  /**\n   * The **`mask`** CSS shorthand property hides an element (partially or fully) by masking or clipping the image at specific points.\n   *\n   * **Syntax**: `<mask-layer>#`\n   *\n   * | Chrome | Firefox | Safari  | Edge  | IE  |\n   * | :----: | :-----: | :-----: | :---: | :-: |\n   * | **1**  |  **2**  | **3.1** | 12-79 | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask\n   */\n  mask?: Property.Mask<TLength> | undefined;\n  /**\n   * The **`mask-border`** CSS shorthand property lets you create a mask along the edge of an element\'s border.\n   *\n   * **Syntax**: `<\'mask-border-source\'> || <\'mask-border-slice\'> [ / <\'mask-border-width\'>? [ / <\'mask-border-outset\'> ]? ]? || <\'mask-border-repeat\'> || <\'mask-border-mode\'>`\n   *\n   * |              Chrome              | Firefox |               Safari               |               Edge                | IE  |\n   * | :------------------------------: | :-----: | :--------------------------------: | :-------------------------------: | :-: |\n   * | **1** _(-webkit-mask-box-image)_ |   No    | **3.1** _(-webkit-mask-box-image)_ | **79** _(-webkit-mask-box-image)_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border\n   */\n  maskBorder?: Property.MaskBorder | undefined;\n  /**\n   * The **`offset`** CSS shorthand property sets all the properties required for animating an element along a defined path.\n   *\n   * **Syntax**: `[ <\'offset-position\'>? [ <\'offset-path\'> [ <\'offset-distance\'> || <\'offset-rotate\'> ]? ]? ]! [ / <\'offset-anchor\'> ]?`\n   *\n   * |    Chrome     | Firefox | Safari |  Edge  | IE  |\n   * | :-----------: | :-----: | :----: | :----: | :-: |\n   * |    **55**     | **72**  |   No   | **79** | No  |\n   * | 46 _(motion)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset\n   */\n  motion?: Property.Offset<TLength> | undefined;\n  /**\n   * The **`offset`** CSS shorthand property sets all the properties required for animating an element along a defined path.\n   *\n   * **Syntax**: `[ <\'offset-position\'>? [ <\'offset-path\'> [ <\'offset-distance\'> || <\'offset-rotate\'> ]? ]? ]! [ / <\'offset-anchor\'> ]?`\n   *\n   * |    Chrome     | Firefox | Safari |  Edge  | IE  |\n   * | :-----------: | :-----: | :----: | :----: | :-: |\n   * |    **55**     | **72**  |   No   | **79** | No  |\n   * | 46 _(motion)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset\n   */\n  offset?: Property.Offset<TLength> | undefined;\n  /**\n   * The **`outline`** CSS shorthand property set all the outline properties in a single declaration.\n   *\n   * **Syntax**: `[ <\'outline-color\'> || <\'outline-style\'> || <\'outline-width\'> ]`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  | **1.5** | **1.2** | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/outline\n   */\n  outline?: Property.Outline<TLength> | undefined;\n  /**\n   * The **`overflow`** CSS shorthand property sets the desired behavior for an element\'s overflow — i.e. when an element\'s content is too big to fit in its block formatting context — in both directions.\n   *\n   * **Syntax**: `[ visible | hidden | clip | scroll | auto ]{1,2}`\n   *\n   * **Initial value**: `visible`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overflow\n   */\n  overflow?: Property.Overflow | undefined;\n  /**\n   * The **`overscroll-behavior`** CSS property sets what a browser does when reaching the boundary of a scrolling area. It\'s a shorthand for `overscroll-behavior-x` and `overscroll-behavior-y`.\n   *\n   * **Syntax**: `[ contain | none | auto ]{1,2}`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **63** | **59**  |   No   | **18** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior\n   */\n  overscrollBehavior?: Property.OverscrollBehavior | undefined;\n  /**\n   * The **`padding`** CSS shorthand property sets the padding area on all four sides of an element at once.\n   *\n   * **Syntax**: `[ <length> | <percentage> ]{1,4}`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding\n   */\n  padding?: Property.Padding<TLength> | undefined;\n  /**\n   * The CSS **`place-items`** shorthand property allows you to align items along both the block and inline directions at once (i.e. the `align-items` and `justify-items` properties) in a relevant layout system such as Grid or Flexbox. If the second value is not set, the first value is also used for it.\n   *\n   * **Syntax**: `<\'align-items\'> <\'justify-items\'>?`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **59** | **45**  | **11** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/place-items\n   */\n  placeItems?: Property.PlaceItems | undefined;\n  /**\n   * The **`place-self`** CSS shorthand property allows you to align an individual item in both the block and inline directions at once (i.e. the `align-self` and `justify-self` properties) in a relevant layout system such as Grid or Flexbox. If the second value is not present, the first value is also used for it.\n   *\n   * **Syntax**: `<\'align-self\'> <\'justify-self\'>?`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **59** | **45**  | **11** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/place-self\n   */\n  placeSelf?: Property.PlaceSelf | undefined;\n  /**\n   * The **`text-decoration`** shorthand CSS property sets the appearance of decorative lines on text. It is a shorthand for `text-decoration-line`, `text-decoration-color`, `text-decoration-style`, and the newer `text-decoration-thickness` property.\n   *\n   * **Syntax**: `<\'text-decoration-line\'> || <\'text-decoration-style\'> || <\'text-decoration-color\'> || <\'text-decoration-thickness\'>`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration\n   */\n  textDecoration?: Property.TextDecoration<TLength> | undefined;\n  /**\n   * The **`text-emphasis`** CSS property applies emphasis marks to text (except spaces and control characters). It is a shorthand for `text-emphasis-style` and `text-emphasis-color`.\n   *\n   * **Syntax**: `<\'text-emphasis-style\'> || <\'text-emphasis-color\'>`\n   *\n   * |    Chrome    | Firefox | Safari |     Edge     | IE  |\n   * | :----------: | :-----: | :----: | :----------: | :-: |\n   * | **25** _-x-_ | **46**  | **7**  | **79** _-x-_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-emphasis\n   */\n  textEmphasis?: Property.TextEmphasis | undefined;\n  /**\n   * The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n   *\n   * **Syntax**: `<single-transition>#`\n   *\n   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n   * | :-----: | :-----: | :-------: | :----: | :----: |\n   * | **26**  | **16**  |   **9**   | **12** | **10** |\n   * | 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transition\n   */\n  transition?: Property.Transition<TTime> | undefined;\n}\n\nexport interface StandardProperties<TLength = (string & {}) | 0, TTime = string & {}>\n  extends StandardLonghandProperties<TLength, TTime>,\n    StandardShorthandProperties<TLength, TTime> {}\n\nexport interface VendorLonghandProperties<TLength = (string & {}) | 0, TTime = string & {}> {\n  /**\n   * The **`animation-delay`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  MozAnimationDelay?: Property.AnimationDelay<TTime> | undefined;\n  /**\n   * The **`animation-direction`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.\n   *\n   * **Syntax**: `<single-animation-direction>#`\n   *\n   * **Initial value**: `normal`\n   */\n  MozAnimationDirection?: Property.AnimationDirection | undefined;\n  /**\n   * The **`animation-duration`** CSS property sets the length of time that an animation takes to complete one cycle.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  MozAnimationDuration?: Property.AnimationDuration<TTime> | undefined;\n  /**\n   * The **`animation-fill-mode`** CSS property sets how a CSS animation applies styles to its target before and after its execution.\n   *\n   * **Syntax**: `<single-animation-fill-mode>#`\n   *\n   * **Initial value**: `none`\n   */\n  MozAnimationFillMode?: Property.AnimationFillMode | undefined;\n  /**\n   * The **`animation-iteration-count`** CSS property sets the number of times an animation sequence should be played before stopping.\n   *\n   * **Syntax**: `<single-animation-iteration-count>#`\n   *\n   * **Initial value**: `1`\n   */\n  MozAnimationIterationCount?: Property.AnimationIterationCount | undefined;\n  /**\n   * The **`animation-name`** CSS property specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element.\n   *\n   * **Syntax**: `[ none | <keyframes-name> ]#`\n   *\n   * **Initial value**: `none`\n   */\n  MozAnimationName?: Property.AnimationName | undefined;\n  /**\n   * The **`animation-play-state`** CSS property sets whether an animation is running or paused.\n   *\n   * **Syntax**: `<single-animation-play-state>#`\n   *\n   * **Initial value**: `running`\n   */\n  MozAnimationPlayState?: Property.AnimationPlayState | undefined;\n  /**\n   * The **`animation-timing-function`** CSS property sets how an animation progresses through the duration of each cycle.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   */\n  MozAnimationTimingFunction?: Property.AnimationTimingFunction | undefined;\n  /**\n   * The **`appearance`** CSS property is used to display an element using platform-native styling, based on the operating system\'s theme. The **`-moz-appearance`** and **`-webkit-appearance`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **`-webkit-appearance`**, for compatibility reasons.\n   *\n   * **Syntax**: `none | button | button-arrow-down | button-arrow-next | button-arrow-previous | button-arrow-up | button-bevel | button-focus | caret | checkbox | checkbox-container | checkbox-label | checkmenuitem | dualbutton | groupbox | listbox | listitem | menuarrow | menubar | menucheckbox | menuimage | menuitem | menuitemtext | menulist | menulist-button | menulist-text | menulist-textfield | menupopup | menuradio | menuseparator | meterbar | meterchunk | progressbar | progressbar-vertical | progresschunk | progresschunk-vertical | radio | radio-container | radio-label | radiomenuitem | range | range-thumb | resizer | resizerpanel | scale-horizontal | scalethumbend | scalethumb-horizontal | scalethumbstart | scalethumbtick | scalethumb-vertical | scale-vertical | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | separator | sheet | spinner | spinner-downbutton | spinner-textfield | spinner-upbutton | splitter | statusbar | statusbarpanel | tab | tabpanel | tabpanels | tab-scroll-arrow-back | tab-scroll-arrow-forward | textfield | textfield-multiline | toolbar | toolbarbutton | toolbarbutton-dropdown | toolbargripper | toolbox | tooltip | treeheader | treeheadercell | treeheadersortarrow | treeitem | treeline | treetwisty | treetwistyopen | treeview | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communicationstext | -moz-win-communications-toolbox | -moz-win-exclude-glass | -moz-win-glass | -moz-win-mediatext | -moz-win-media-toolbox | -moz-window-button-box | -moz-window-button-box-maximized | -moz-window-button-close | -moz-window-button-maximize | -moz-window-button-minimize | -moz-window-button-restore | -moz-window-frame-bottom | -moz-window-frame-left | -moz-window-frame-right | -moz-window-titlebar | -moz-window-titlebar-maximized`\n   *\n   * **Initial value**: `none` (but this value is overridden in the user agent CSS)\n   */\n  MozAppearance?: Property.MozAppearance | undefined;\n  /**\n   * The **`backface-visibility`** CSS property sets whether the back face of an element is visible when turned towards the user.\n   *\n   * **Syntax**: `visible | hidden`\n   *\n   * **Initial value**: `visible`\n   */\n  MozBackfaceVisibility?: Property.BackfaceVisibility | undefined;\n  /**\n   * In Mozilla applications like Firefox, the **`-moz-border-bottom-colors`** CSS property sets a list of colors for the bottom border.\n   *\n   * **Syntax**: `<color>+ | none`\n   *\n   * **Initial value**: `none`\n   */\n  MozBorderBottomColors?: Property.MozBorderBottomColors | undefined;\n  /**\n   * The **`border-inline-end-color`** CSS property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-color\'>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  MozBorderEndColor?: Property.BorderInlineEndColor | undefined;\n  /**\n   * The **`border-inline-end-style`** CSS property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-style\'>`\n   *\n   * **Initial value**: `none`\n   */\n  MozBorderEndStyle?: Property.BorderInlineEndStyle | undefined;\n  /**\n   * The **`border-inline-end-width`** CSS property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-width\'>`\n   *\n   * **Initial value**: `medium`\n   */\n  MozBorderEndWidth?: Property.BorderInlineEndWidth<TLength> | undefined;\n  /**\n   * In Mozilla applications like Firefox, the **`-moz-border-left-colors`** CSS property sets a list of colors for the left border.\n   *\n   * **Syntax**: `<color>+ | none`\n   *\n   * **Initial value**: `none`\n   */\n  MozBorderLeftColors?: Property.MozBorderLeftColors | undefined;\n  /**\n   * In Mozilla applications like Firefox, the **`-moz-border-right-colors`** CSS property sets a list of colors for the right border.\n   *\n   * **Syntax**: `<color>+ | none`\n   *\n   * **Initial value**: `none`\n   */\n  MozBorderRightColors?: Property.MozBorderRightColors | undefined;\n  /**\n   * The **`border-inline-start-color`** CSS property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-color\'>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  MozBorderStartColor?: Property.BorderInlineStartColor | undefined;\n  /**\n   * The **`border-inline-start-style`** CSS property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-style\'>`\n   *\n   * **Initial value**: `none`\n   */\n  MozBorderStartStyle?: Property.BorderInlineStartStyle | undefined;\n  /**\n   * In Mozilla applications like Firefox, the **`-moz-border-top-colors`** CSS property sets a list of colors for the top border.\n   *\n   * **Syntax**: `<color>+ | none`\n   *\n   * **Initial value**: `none`\n   */\n  MozBorderTopColors?: Property.MozBorderTopColors | undefined;\n  /**\n   * The **`box-sizing`** CSS property sets how the total width and height of an element is calculated.\n   *\n   * **Syntax**: `content-box | border-box`\n   *\n   * **Initial value**: `content-box`\n   */\n  MozBoxSizing?: Property.BoxSizing | undefined;\n  /**\n   * The **`column-count`** CSS property breaks an element\'s content into the specified number of columns.\n   *\n   * **Syntax**: `<integer> | auto`\n   *\n   * **Initial value**: `auto`\n   */\n  MozColumnCount?: Property.ColumnCount | undefined;\n  /**\n   * The **`column-fill`** CSS property controls how an element\'s contents are balanced when broken into columns.\n   *\n   * **Syntax**: `auto | balance | balance-all`\n   *\n   * **Initial value**: `balance`\n   */\n  MozColumnFill?: Property.ColumnFill | undefined;\n  /**\n   * The **`column-gap`** CSS property sets the size of the gap (gutter) between an element\'s columns.\n   *\n   * **Syntax**: `normal | <length-percentage>`\n   *\n   * **Initial value**: `normal`\n   */\n  MozColumnGap?: Property.ColumnGap<TLength> | undefined;\n  /**\n   * The **`column-rule-color`** CSS property sets the color of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  MozColumnRuleColor?: Property.ColumnRuleColor | undefined;\n  /**\n   * The **`column-rule-style`** CSS property sets the style of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'border-style\'>`\n   *\n   * **Initial value**: `none`\n   */\n  MozColumnRuleStyle?: Property.ColumnRuleStyle | undefined;\n  /**\n   * The **`column-rule-width`** CSS property sets the width of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'border-width\'>`\n   *\n   * **Initial value**: `medium`\n   */\n  MozColumnRuleWidth?: Property.ColumnRuleWidth<TLength> | undefined;\n  /**\n   * The **`column-width`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the `column-width` value. If the width of the container is narrower than the specified value, the single column\'s width will be smaller than the declared column width.\n   *\n   * **Syntax**: `<length> | auto`\n   *\n   * **Initial value**: `auto`\n   */\n  MozColumnWidth?: Property.ColumnWidth<TLength> | undefined;\n  /**\n   * The **`-moz-context-properties`** property can be used within privileged contexts in Firefox to share the values of specified properties of the element with a child SVG image.\n   *\n   * **Syntax**: `none | [ fill | fill-opacity | stroke | stroke-opacity ]#`\n   *\n   * **Initial value**: `none`\n   */\n  MozContextProperties?: Property.MozContextProperties | undefined;\n  /**\n   * The **`font-feature-settings`** CSS property controls advanced typographic features in OpenType fonts.\n   *\n   * **Syntax**: `normal | <feature-tag-value>#`\n   *\n   * **Initial value**: `normal`\n   */\n  MozFontFeatureSettings?: Property.FontFeatureSettings | undefined;\n  /**\n   * The **`font-language-override`** CSS property controls the use of language-specific glyphs in a typeface.\n   *\n   * **Syntax**: `normal | <string>`\n   *\n   * **Initial value**: `normal`\n   */\n  MozFontLanguageOverride?: Property.FontLanguageOverride | undefined;\n  /**\n   * The **`hyphens`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.\n   *\n   * **Syntax**: `none | manual | auto`\n   *\n   * **Initial value**: `manual`\n   */\n  MozHyphens?: Property.Hyphens | undefined;\n  /**\n   * For certain XUL elements and pseudo-elements that use an image from the `list-style-image` property, this property specifies a region of the image that is used in place of the whole image. This allows elements to use different pieces of the same image to improve performance.\n   *\n   * **Syntax**: `<shape> | auto`\n   *\n   * **Initial value**: `auto`\n   */\n  MozImageRegion?: Property.MozImageRegion | undefined;\n  /**\n   * The **`margin-inline-end`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element\'s writing mode, directionality, and text orientation. In other words, it corresponds to the `margin-top`, `margin-right`, `margin-bottom` or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'margin-left\'>`\n   *\n   * **Initial value**: `0`\n   */\n  MozMarginEnd?: Property.MarginInlineEnd<TLength> | undefined;\n  /**\n   * The **`margin-inline-start`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `margin-top`, `margin-right`, `margin-bottom`, or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'margin-left\'>`\n   *\n   * **Initial value**: `0`\n   */\n  MozMarginStart?: Property.MarginInlineStart<TLength> | undefined;\n  /**\n   * The **`-moz-orient`** CSS property specifies the orientation of the element to which it\'s applied.\n   *\n   * **Syntax**: `inline | block | horizontal | vertical`\n   *\n   * **Initial value**: `inline`\n   */\n  MozOrient?: Property.MozOrient | undefined;\n  /**\n   * The **`font-smooth`** CSS property controls the application of anti-aliasing when fonts are rendered.\n   *\n   * **Syntax**: `auto | never | always | <absolute-size> | <length>`\n   *\n   * **Initial value**: `auto`\n   */\n  MozOsxFontSmoothing?: Property.FontSmooth<TLength> | undefined;\n  /**\n   * The **`padding-inline-end`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>`\n   *\n   * **Initial value**: `0`\n   */\n  MozPaddingEnd?: Property.PaddingInlineEnd<TLength> | undefined;\n  /**\n   * The **`padding-inline-start`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>`\n   *\n   * **Initial value**: `0`\n   */\n  MozPaddingStart?: Property.PaddingInlineStart<TLength> | undefined;\n  /**\n   * The **`perspective`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.\n   *\n   * **Syntax**: `none | <length>`\n   *\n   * **Initial value**: `none`\n   */\n  MozPerspective?: Property.Perspective<TLength> | undefined;\n  /**\n   * The **`perspective-origin`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the `perspective` property.\n   *\n   * **Syntax**: `<position>`\n   *\n   * **Initial value**: `50% 50%`\n   */\n  MozPerspectiveOrigin?: Property.PerspectiveOrigin<TLength> | undefined;\n  /**\n   * **`-moz-stack-sizing`** is an extended CSS property. Normally, a `<xul:stack>` will change its size so that all of its child elements are completely visible. For example, moving a child of the stack far to the right will widen the stack so the child remains visible.\n   *\n   * **Syntax**: `ignore | stretch-to-fit`\n   *\n   * **Initial value**: `stretch-to-fit`\n   */\n  MozStackSizing?: Property.MozStackSizing | undefined;\n  /**\n   * The **`tab-size`** CSS property is used to customize the width of tab characters (U+0009).\n   *\n   * **Syntax**: `<integer> | <length>`\n   *\n   * **Initial value**: `8`\n   */\n  MozTabSize?: Property.TabSize<TLength> | undefined;\n  /**\n   * The **`-moz-text-blink`** non-standard Mozilla CSS extension specifies the blink mode.\n   *\n   * **Syntax**: `none | blink`\n   *\n   * **Initial value**: `none`\n   */\n  MozTextBlink?: Property.MozTextBlink | undefined;\n  /**\n   * The **`text-size-adjust`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.\n   *\n   * **Syntax**: `none | auto | <percentage>`\n   *\n   * **Initial value**: `auto` for smartphone browsers supporting inflation, `none` in other cases (and then not modifiable).\n   */\n  MozTextSizeAdjust?: Property.TextSizeAdjust | undefined;\n  /**\n   * The **`transform-origin`** CSS property sets the origin for an element\'s transformations.\n   *\n   * **Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n   *\n   * **Initial value**: `50% 50% 0`\n   */\n  MozTransformOrigin?: Property.TransformOrigin<TLength> | undefined;\n  /**\n   * The **`transform-style`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.\n   *\n   * **Syntax**: `flat | preserve-3d`\n   *\n   * **Initial value**: `flat`\n   */\n  MozTransformStyle?: Property.TransformStyle | undefined;\n  /**\n   * The **`transition-delay`** CSS property specifies the duration to wait before starting a property\'s transition effect when its value changes.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  MozTransitionDelay?: Property.TransitionDelay<TTime> | undefined;\n  /**\n   * The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  MozTransitionDuration?: Property.TransitionDuration<TTime> | undefined;\n  /**\n   * The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n   *\n   * **Syntax**: `none | <single-transition-property>#`\n   *\n   * **Initial value**: all\n   */\n  MozTransitionProperty?: Property.TransitionProperty | undefined;\n  /**\n   * The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   */\n  MozTransitionTimingFunction?: Property.TransitionTimingFunction | undefined;\n  /**\n   * The **`-moz-user-focus`** CSS property is used to indicate whether an element can have the focus.\n   *\n   * **Syntax**: `ignore | normal | select-after | select-before | select-menu | select-same | select-all | none`\n   *\n   * **Initial value**: `none`\n   */\n  MozUserFocus?: Property.MozUserFocus | undefined;\n  /**\n   * The **`user-modify`** property has no effect in Firefox. It was originally planned to determine whether or not the content of an element can be edited by a user.\n   *\n   * **Syntax**: `read-only | read-write | write-only`\n   *\n   * **Initial value**: `read-only`\n   */\n  MozUserModify?: Property.MozUserModify | undefined;\n  /**\n   * The **`user-select`** CSS property controls whether the user can select text. This doesn\'t have any effect on content loaded as part of a browser\'s user interface (its chrome), except in textboxes.\n   *\n   * **Syntax**: `auto | text | none | contain | all`\n   *\n   * **Initial value**: `auto`\n   */\n  MozUserSelect?: Property.UserSelect | undefined;\n  /**\n   * The **`-moz-window-dragging`** CSS property specifies whether a window is draggable or not. It only works in Chrome code, and only on Mac OS X.\n   *\n   * **Syntax**: `drag | no-drag`\n   *\n   * **Initial value**: `drag`\n   */\n  MozWindowDragging?: Property.MozWindowDragging | undefined;\n  /**\n   * The **`-moz-window-shadow`** CSS property specifies whether a window will have a shadow. It only works on Mac OS X.\n   *\n   * **Syntax**: `default | menu | tooltip | sheet | none`\n   *\n   * **Initial value**: `default`\n   */\n  MozWindowShadow?: Property.MozWindowShadow | undefined;\n  /**\n   * The **`-ms-accelerator`** CSS property is a Microsoft extension that sets or retrieves a string indicating whether the object represents a keyboard shortcut.\n   *\n   * **Syntax**: `false | true`\n   *\n   * **Initial value**: `false`\n   */\n  msAccelerator?: Property.MsAccelerator | undefined;\n  /**\n   * The **`align-self`** CSS property overrides a grid or flex item\'s `align-items` value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.\n   *\n   * **Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>`\n   *\n   * **Initial value**: `auto`\n   */\n  msAlignSelf?: Property.AlignSelf | undefined;\n  /**\n   * The **`-ms-block-progression`** CSS property is a Microsoft extension that specifies the block progression and layout orientation.\n   *\n   * **Syntax**: `tb | rl | bt | lr`\n   *\n   * **Initial value**: `tb`\n   */\n  msBlockProgression?: Property.MsBlockProgression | undefined;\n  /**\n   * The **`-ms-content-zoom-chaining`** CSS property is a Microsoft extension specifying the zoom behavior that occurs when a user hits the zoom limit during page manipulation.\n   *\n   * **Syntax**: `none | chained`\n   *\n   * **Initial value**: `none`\n   */\n  msContentZoomChaining?: Property.MsContentZoomChaining | undefined;\n  /**\n   * The **`-ms-content-zoom-limit-max`** CSS property is a Microsoft extension that specifies the selected elements\' maximum zoom factor.\n   *\n   * **Syntax**: `<percentage>`\n   *\n   * **Initial value**: `400%`\n   */\n  msContentZoomLimitMax?: Property.MsContentZoomLimitMax | undefined;\n  /**\n   * The **`-ms-content-zoom-limit-min`** CSS property is a Microsoft extension that specifies the minimum zoom factor.\n   *\n   * **Syntax**: `<percentage>`\n   *\n   * **Initial value**: `100%`\n   */\n  msContentZoomLimitMin?: Property.MsContentZoomLimitMin | undefined;\n  /**\n   * The **`-ms-content-zoom-snap-points`** CSS property is a Microsoft extension that specifies where zoom snap-points are located.\n   *\n   * **Syntax**: `snapInterval( <percentage>, <percentage> ) | snapList( <percentage># )`\n   *\n   * **Initial value**: `snapInterval(0%, 100%)`\n   */\n  msContentZoomSnapPoints?: Property.MsContentZoomSnapPoints | undefined;\n  /**\n   * The **`-ms-content-zoom-snap-type`** CSS property is a Microsoft extension that specifies how zooming is affected by defined snap-points.\n   *\n   * **Syntax**: `none | proximity | mandatory`\n   *\n   * **Initial value**: `none`\n   */\n  msContentZoomSnapType?: Property.MsContentZoomSnapType | undefined;\n  /**\n   * The **`-ms-content-zooming`** CSS property is a Microsoft extension that specifies whether zooming is enabled.\n   *\n   * **Syntax**: `none | zoom`\n   *\n   * **Initial value**: zoom for the top level element, none for all other elements\n   */\n  msContentZooming?: Property.MsContentZooming | undefined;\n  /**\n   * The `-ms-filter` CSS property is a Microsoft extension that sets or retrieves the filter or collection of filters applied to an object.\n   *\n   * **Syntax**: `<string>`\n   *\n   * **Initial value**: "" (the empty string)\n   */\n  msFilter?: Property.MsFilter | undefined;\n  /**\n   * The **`flex-direction`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).\n   *\n   * **Syntax**: `row | row-reverse | column | column-reverse`\n   *\n   * **Initial value**: `row`\n   */\n  msFlexDirection?: Property.FlexDirection | undefined;\n  /**\n   * The **`flex-grow`** CSS property sets the flex grow factor of a flex item\'s main size.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `0`\n   */\n  msFlexPositive?: Property.FlexGrow | undefined;\n  /**\n   * The **`-ms-flow-from`** CSS property is a Microsoft extension that gets or sets a value identifying a region container in the document that accepts the content flow from the data source.\n   *\n   * **Syntax**: `[ none | <custom-ident> ]#`\n   *\n   * **Initial value**: `none`\n   */\n  msFlowFrom?: Property.MsFlowFrom | undefined;\n  /**\n   * The **`-ms-flow-into`** CSS property is a Microsoft extension that gets or sets a value identifying an iframe container in the document that serves as the region\'s data source.\n   *\n   * **Syntax**: `[ none | <custom-ident> ]#`\n   *\n   * **Initial value**: `none`\n   */\n  msFlowInto?: Property.MsFlowInto | undefined;\n  /**\n   * The **`grid-template-columns`** CSS property defines the line names and track sizing functions of the grid columns.\n   *\n   * **Syntax**: `none | <track-list> | <auto-track-list>`\n   *\n   * **Initial value**: `none`\n   */\n  msGridColumns?: Property.MsGridColumns<TLength> | undefined;\n  /**\n   * The **`grid-template-rows`** CSS property defines the line names and track sizing functions of the grid rows.\n   *\n   * **Syntax**: `none | <track-list> | <auto-track-list>`\n   *\n   * **Initial value**: `none`\n   */\n  msGridRows?: Property.MsGridRows<TLength> | undefined;\n  /**\n   * The **`-ms-high-contrast-adjust`** CSS property is a Microsoft extension that gets or sets a value indicating whether to override any CSS properties that would have been set in high contrast mode.\n   *\n   * **Syntax**: `auto | none`\n   *\n   * **Initial value**: `auto`\n   */\n  msHighContrastAdjust?: Property.MsHighContrastAdjust | undefined;\n  /**\n   * The **`-ms-hyphenate-limit-chars`** CSS property is a Microsoft extension that specifies one to three values indicating the minimum number of characters in a hyphenated word. If the word does not meet the required minimum number of characters in the word, before the hyphen, or after the hyphen, then the word is not hyphenated.\n   *\n   * **Syntax**: `auto | <integer>{1,3}`\n   *\n   * **Initial value**: `auto`\n   */\n  msHyphenateLimitChars?: Property.MsHyphenateLimitChars | undefined;\n  /**\n   * The **`-ms-hyphenate-limit-lines`** CSS property is a Microsoft extension specifying the maximum number of consecutive lines in an element that may be ended with a hyphenated word.\n   *\n   * **Syntax**: `no-limit | <integer>`\n   *\n   * **Initial value**: `no-limit`\n   */\n  msHyphenateLimitLines?: Property.MsHyphenateLimitLines | undefined;\n  /**\n   * The `**-ms-hyphenate-limit-zone**` CSS property is a Microsoft extension specifying the width of the hyphenation zone.\n   *\n   * **Syntax**: `<percentage> | <length>`\n   *\n   * **Initial value**: `0`\n   */\n  msHyphenateLimitZone?: Property.MsHyphenateLimitZone<TLength> | undefined;\n  /**\n   * The **`hyphens`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.\n   *\n   * **Syntax**: `none | manual | auto`\n   *\n   * **Initial value**: `manual`\n   */\n  msHyphens?: Property.Hyphens | undefined;\n  /**\n   * The **`-ms-ime-align`** CSS property is a Microsoft extension aligning the Input Method Editor (IME) candidate window box relative to the element on which the IME composition is active. The extension is implemented in Microsoft Edge and Internet Explorer 11.\n   *\n   * **Syntax**: `auto | after`\n   *\n   * **Initial value**: `auto`\n   */\n  msImeAlign?: Property.MsImeAlign | undefined;\n  /**\n   * The CSS **`justify-self`** property sets the way a box is justified inside its alignment container along the appropriate axis.\n   *\n   * **Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]`\n   *\n   * **Initial value**: `auto`\n   */\n  msJustifySelf?: Property.JustifySelf | undefined;\n  /**\n   * The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.\n   *\n   * **Syntax**: `auto | loose | normal | strict | anywhere`\n   *\n   * **Initial value**: `auto`\n   */\n  msLineBreak?: Property.LineBreak | undefined;\n  /**\n   * The **`order`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending `order` value and then by their source code order.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `0`\n   */\n  msOrder?: Property.Order | undefined;\n  /**\n   * The **`-ms-overflow-style`** CSS property is a Microsoft extension controlling the behavior of scrollbars when the content of an element overflows.\n   *\n   * **Syntax**: `auto | none | scrollbar | -ms-autohiding-scrollbar`\n   *\n   * **Initial value**: `auto`\n   */\n  msOverflowStyle?: Property.MsOverflowStyle | undefined;\n  /**\n   * The **`overflow-x`** CSS property sets what shows when content overflows a block-level element\'s left and right edges. This may be nothing, a scroll bar, or the overflow content.\n   *\n   * **Syntax**: `visible | hidden | clip | scroll | auto`\n   *\n   * **Initial value**: `visible`\n   */\n  msOverflowX?: Property.OverflowX | undefined;\n  /**\n   * The **`overflow-y`** CSS property sets what shows when content overflows a block-level element\'s top and bottom edges. This may be nothing, a scroll bar, or the overflow content.\n   *\n   * **Syntax**: `visible | hidden | clip | scroll | auto`\n   *\n   * **Initial value**: `visible`\n   */\n  msOverflowY?: Property.OverflowY | undefined;\n  /**\n   * The `**-ms-scroll-chaining**` CSS property is a Microsoft extension that specifies the scrolling behavior that occurs when a user hits the scroll limit during a manipulation.\n   *\n   * **Syntax**: `chained | none`\n   *\n   * **Initial value**: `chained`\n   */\n  msScrollChaining?: Property.MsScrollChaining | undefined;\n  /**\n   * The `**-ms-scroll-limit-x-max**` CSS property is a Microsoft extension that specifies the maximum value for the `Element.scrollLeft` property.\n   *\n   * **Syntax**: `auto | <length>`\n   *\n   * **Initial value**: `auto`\n   */\n  msScrollLimitXMax?: Property.MsScrollLimitXMax<TLength> | undefined;\n  /**\n   * The **`-ms-scroll-limit-x-min`** CSS property is a Microsoft extension that specifies the minimum value for the `Element.scrollLeft` property.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   */\n  msScrollLimitXMin?: Property.MsScrollLimitXMin<TLength> | undefined;\n  /**\n   * The **`-ms-scroll-limit-y-max`** CSS property is a Microsoft extension that specifies the maximum value for the `Element.scrollTop` property.\n   *\n   * **Syntax**: `auto | <length>`\n   *\n   * **Initial value**: `auto`\n   */\n  msScrollLimitYMax?: Property.MsScrollLimitYMax<TLength> | undefined;\n  /**\n   * The **`-ms-scroll-limit-y-min`** CSS property is a Microsoft extension that specifies the minimum value for the `Element.scrollTop` property.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   */\n  msScrollLimitYMin?: Property.MsScrollLimitYMin<TLength> | undefined;\n  /**\n   * The **`-ms-scroll-rails`** CSS property is a Microsoft extension that specifies whether scrolling locks to the primary axis of motion.\n   *\n   * **Syntax**: `none | railed`\n   *\n   * **Initial value**: `railed`\n   */\n  msScrollRails?: Property.MsScrollRails | undefined;\n  /**\n   * The **`-ms-scroll-snap-points-x`** CSS property is a Microsoft extension that specifies where snap-points will be located along the x-axis.\n   *\n   * **Syntax**: `snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )`\n   *\n   * **Initial value**: `snapInterval(0px, 100%)`\n   */\n  msScrollSnapPointsX?: Property.MsScrollSnapPointsX | undefined;\n  /**\n   * The **`-ms-scroll-snap-points-y`** CSS property is a Microsoft extension that specifies where snap-points will be located along the y-axis.\n   *\n   * **Syntax**: `snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )`\n   *\n   * **Initial value**: `snapInterval(0px, 100%)`\n   */\n  msScrollSnapPointsY?: Property.MsScrollSnapPointsY | undefined;\n  /**\n   * The **`scroll-snap-type`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.\n   *\n   * **Syntax**: `none | proximity | mandatory`\n   *\n   * **Initial value**: `none`\n   */\n  msScrollSnapType?: Property.MsScrollSnapType | undefined;\n  /**\n   * The **`-ms-scroll-translation`** CSS property is a Microsoft extension that specifies whether vertical-to-horizontal scroll wheel translation occurs on the specified element.\n   *\n   * **Syntax**: `none | vertical-to-horizontal`\n   *\n   * **Initial value**: `none`\n   */\n  msScrollTranslation?: Property.MsScrollTranslation | undefined;\n  /**\n   * The **`-ms-scrollbar-3dlight-color`** CSS property is a Microsoft extension specifying the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: depends on user agent\n   */\n  msScrollbar3dlightColor?: Property.MsScrollbar3dlightColor | undefined;\n  /**\n   * The **`-ms-scrollbar-arrow-color`** CSS property is a Microsoft extension that specifies the color of the arrow elements of a scroll arrow.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `ButtonText`\n   */\n  msScrollbarArrowColor?: Property.MsScrollbarArrowColor | undefined;\n  /**\n   * The `**-ms-scrollbar-base-color**` CSS property is a Microsoft extension that specifies the base color of the main elements of a scroll bar.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: depends on user agent\n   */\n  msScrollbarBaseColor?: Property.MsScrollbarBaseColor | undefined;\n  /**\n   * The **`-ms-scrollbar-darkshadow-color`** CSS property is a Microsoft extension that specifies the color of a scroll bar\'s gutter.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `ThreeDDarkShadow`\n   */\n  msScrollbarDarkshadowColor?: Property.MsScrollbarDarkshadowColor | undefined;\n  /**\n   * The `**-ms-scrollbar-face-color**` CSS property is a Microsoft extension that specifies the color of the scroll box and scroll arrows of a scroll bar.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `ThreeDFace`\n   */\n  msScrollbarFaceColor?: Property.MsScrollbarFaceColor | undefined;\n  /**\n   * The `**-ms-scrollbar-highlight-color**` CSS property is a Microsoft extension that specifies the color of the slider tray, the top and left edges of the scroll box, and the scroll arrows of a scroll bar.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `ThreeDHighlight`\n   */\n  msScrollbarHighlightColor?: Property.MsScrollbarHighlightColor | undefined;\n  /**\n   * The **`-ms-scrollbar-shadow-color`** CSS property is a Microsoft extension that specifies the color of the bottom and right edges of the scroll box and scroll arrows of a scroll bar.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `ThreeDDarkShadow`\n   */\n  msScrollbarShadowColor?: Property.MsScrollbarShadowColor | undefined;\n  /**\n   * The **`-ms-text-autospace`** CSS property is a Microsoft extension that specifies the autospacing and narrow space width adjustment of text.\n   *\n   * **Syntax**: `none | ideograph-alpha | ideograph-numeric | ideograph-parenthesis | ideograph-space`\n   *\n   * **Initial value**: `none`\n   */\n  msTextAutospace?: Property.MsTextAutospace | undefined;\n  /**\n   * The **`text-combine-upright`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\n   *\n   * **Syntax**: `none | all | [ digits <integer>? ]`\n   *\n   * **Initial value**: `none`\n   */\n  msTextCombineHorizontal?: Property.TextCombineUpright | undefined;\n  /**\n   * The **`text-overflow`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis (\'`…`\'), or display a custom string.\n   *\n   * **Syntax**: `[ clip | ellipsis | <string> ]{1,2}`\n   *\n   * **Initial value**: `clip`\n   */\n  msTextOverflow?: Property.TextOverflow | undefined;\n  /**\n   * The **`touch-action`** CSS property sets how an element\'s region can be manipulated by a touchscreen user (for example, by zooming features built into the browser).\n   *\n   * **Syntax**: `auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation`\n   *\n   * **Initial value**: `auto`\n   */\n  msTouchAction?: Property.TouchAction | undefined;\n  /**\n   * The **`-ms-touch-select`** CSS property is a Microsoft extension that toggles the gripper visual elements that enable touch text selection.\n   *\n   * **Syntax**: `grippers | none`\n   *\n   * **Initial value**: `grippers`\n   */\n  msTouchSelect?: Property.MsTouchSelect | undefined;\n  /**\n   * The **`transform`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\n   *\n   * **Syntax**: `none | <transform-list>`\n   *\n   * **Initial value**: `none`\n   */\n  msTransform?: Property.Transform | undefined;\n  /**\n   * The **`transform-origin`** CSS property sets the origin for an element\'s transformations.\n   *\n   * **Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n   *\n   * **Initial value**: `50% 50% 0`\n   */\n  msTransformOrigin?: Property.TransformOrigin<TLength> | undefined;\n  /**\n   * The **`transition-delay`** CSS property specifies the duration to wait before starting a property\'s transition effect when its value changes.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  msTransitionDelay?: Property.TransitionDelay<TTime> | undefined;\n  /**\n   * The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  msTransitionDuration?: Property.TransitionDuration<TTime> | undefined;\n  /**\n   * The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n   *\n   * **Syntax**: `none | <single-transition-property>#`\n   *\n   * **Initial value**: all\n   */\n  msTransitionProperty?: Property.TransitionProperty | undefined;\n  /**\n   * The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   */\n  msTransitionTimingFunction?: Property.TransitionTimingFunction | undefined;\n  /**\n   * The `**user-select**` CSS property controls whether the user can select text. This doesn\'t have any effect on content loaded as chrome, except in textboxes.\n   *\n   * **Syntax**: `none | element | text`\n   *\n   * **Initial value**: `text`\n   */\n  msUserSelect?: Property.MsUserSelect | undefined;\n  /**\n   * The **`word-break`** CSS property sets whether line breaks appear wherever the text would otherwise overflow its content box.\n   *\n   * **Syntax**: `normal | break-all | keep-all | break-word`\n   *\n   * **Initial value**: `normal`\n   */\n  msWordBreak?: Property.WordBreak | undefined;\n  /**\n   * The **`-ms-wrap-flow`** CSS property is a Microsoft extension that specifies how exclusions impact inline content within block-level elements.\n   *\n   * **Syntax**: `auto | both | start | end | maximum | clear`\n   *\n   * **Initial value**: `auto`\n   */\n  msWrapFlow?: Property.MsWrapFlow | undefined;\n  /**\n   * The **`-ms-wrap-margin`** CSS property is a Microsoft extension that specifies a margin that offsets the inner wrap shape from other shapes.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   */\n  msWrapMargin?: Property.MsWrapMargin<TLength> | undefined;\n  /**\n   * The **`-ms-wrap-through`** CSS property is a Microsoft extension that specifies how content should wrap around an exclusion element.\n   *\n   * **Syntax**: `wrap | none`\n   *\n   * **Initial value**: `wrap`\n   */\n  msWrapThrough?: Property.MsWrapThrough | undefined;\n  /**\n   * The **`writing-mode`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (`html` element for HTML documents).\n   *\n   * **Syntax**: `horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr`\n   *\n   * **Initial value**: `horizontal-tb`\n   */\n  msWritingMode?: Property.WritingMode | undefined;\n  /**\n   * The CSS **`align-content`** property sets the distribution of space between and around content items along a flexbox\'s cross-axis or a grid\'s block axis.\n   *\n   * **Syntax**: `normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>`\n   *\n   * **Initial value**: `normal`\n   */\n  WebkitAlignContent?: Property.AlignContent | undefined;\n  /**\n   * The CSS **`align-items`** property sets the `align-self` value on all direct children as a group. In Flexbox, it controls the alignment of items on the Cross Axis. In Grid Layout, it controls the alignment of items on the Block Axis within their grid area.\n   *\n   * **Syntax**: `normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]`\n   *\n   * **Initial value**: `normal`\n   */\n  WebkitAlignItems?: Property.AlignItems | undefined;\n  /**\n   * The **`align-self`** CSS property overrides a grid or flex item\'s `align-items` value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.\n   *\n   * **Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>`\n   *\n   * **Initial value**: `auto`\n   */\n  WebkitAlignSelf?: Property.AlignSelf | undefined;\n  /**\n   * The **`animation-delay`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  WebkitAnimationDelay?: Property.AnimationDelay<TTime> | undefined;\n  /**\n   * The **`animation-direction`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.\n   *\n   * **Syntax**: `<single-animation-direction>#`\n   *\n   * **Initial value**: `normal`\n   */\n  WebkitAnimationDirection?: Property.AnimationDirection | undefined;\n  /**\n   * The **`animation-duration`** CSS property sets the length of time that an animation takes to complete one cycle.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  WebkitAnimationDuration?: Property.AnimationDuration<TTime> | undefined;\n  /**\n   * The **`animation-fill-mode`** CSS property sets how a CSS animation applies styles to its target before and after its execution.\n   *\n   * **Syntax**: `<single-animation-fill-mode>#`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitAnimationFillMode?: Property.AnimationFillMode | undefined;\n  /**\n   * The **`animation-iteration-count`** CSS property sets the number of times an animation sequence should be played before stopping.\n   *\n   * **Syntax**: `<single-animation-iteration-count>#`\n   *\n   * **Initial value**: `1`\n   */\n  WebkitAnimationIterationCount?: Property.AnimationIterationCount | undefined;\n  /**\n   * The **`animation-name`** CSS property specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element.\n   *\n   * **Syntax**: `[ none | <keyframes-name> ]#`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitAnimationName?: Property.AnimationName | undefined;\n  /**\n   * The **`animation-play-state`** CSS property sets whether an animation is running or paused.\n   *\n   * **Syntax**: `<single-animation-play-state>#`\n   *\n   * **Initial value**: `running`\n   */\n  WebkitAnimationPlayState?: Property.AnimationPlayState | undefined;\n  /**\n   * The **`animation-timing-function`** CSS property sets how an animation progresses through the duration of each cycle.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   */\n  WebkitAnimationTimingFunction?: Property.AnimationTimingFunction | undefined;\n  /**\n   * The **`appearance`** CSS property is used to display an element using platform-native styling, based on the operating system\'s theme. The **`-moz-appearance`** and **`-webkit-appearance`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **`-webkit-appearance`**, for compatibility reasons.\n   *\n   * **Syntax**: `none | button | button-bevel | caret | checkbox | default-button | inner-spin-button | listbox | listitem | media-controls-background | media-controls-fullscreen-background | media-current-time-display | media-enter-fullscreen-button | media-exit-fullscreen-button | media-fullscreen-button | media-mute-button | media-overlay-play-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | media-time-remaining-display | media-toggle-closed-captions-button | media-volume-slider | media-volume-slider-container | media-volume-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | meter | progress-bar | progress-bar-value | push-button | radio | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield | -apple-pay-button`\n   *\n   * **Initial value**: `none` (but this value is overridden in the user agent CSS)\n   */\n  WebkitAppearance?: Property.WebkitAppearance | undefined;\n  /**\n   * The **`backdrop-filter`** CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything _behind_ the element, to see the effect you must make the element or its background at least partially transparent.\n   *\n   * **Syntax**: `none | <filter-function-list>`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitBackdropFilter?: Property.BackdropFilter | undefined;\n  /**\n   * The **`backface-visibility`** CSS property sets whether the back face of an element is visible when turned towards the user.\n   *\n   * **Syntax**: `visible | hidden`\n   *\n   * **Initial value**: `visible`\n   */\n  WebkitBackfaceVisibility?: Property.BackfaceVisibility | undefined;\n  /**\n   * The **`background-clip`** CSS property sets whether an element\'s background extends underneath its border box, padding box, or content box.\n   *\n   * **Syntax**: `<box>#`\n   *\n   * **Initial value**: `border-box`\n   */\n  WebkitBackgroundClip?: Property.BackgroundClip | undefined;\n  /**\n   * The **`background-origin`** CSS property sets the background\'s origin: from the border start, inside the border, or inside the padding.\n   *\n   * **Syntax**: `<box>#`\n   *\n   * **Initial value**: `padding-box`\n   */\n  WebkitBackgroundOrigin?: Property.BackgroundOrigin | undefined;\n  /**\n   * The **`background-size`** CSS property sets the size of the element\'s background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\n   *\n   * **Syntax**: `<bg-size>#`\n   *\n   * **Initial value**: `auto auto`\n   */\n  WebkitBackgroundSize?: Property.BackgroundSize<TLength> | undefined;\n  /**\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  WebkitBorderBeforeColor?: Property.WebkitBorderBeforeColor | undefined;\n  /**\n   * **Syntax**: `<\'border-style\'>`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitBorderBeforeStyle?: Property.WebkitBorderBeforeStyle | undefined;\n  /**\n   * **Syntax**: `<\'border-width\'>`\n   *\n   * **Initial value**: `medium`\n   */\n  WebkitBorderBeforeWidth?: Property.WebkitBorderBeforeWidth<TLength> | undefined;\n  /**\n   * The **`border-bottom-left-radius`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   */\n  WebkitBorderBottomLeftRadius?: Property.BorderBottomLeftRadius<TLength> | undefined;\n  /**\n   * The **`border-bottom-right-radius`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   */\n  WebkitBorderBottomRightRadius?: Property.BorderBottomRightRadius<TLength> | undefined;\n  /**\n   * The **`border-image-slice`** CSS property divides the image specified by `border-image-source` into regions. These regions form the components of an element\'s border image.\n   *\n   * **Syntax**: `<number-percentage>{1,4} && fill?`\n   *\n   * **Initial value**: `100%`\n   */\n  WebkitBorderImageSlice?: Property.BorderImageSlice | undefined;\n  /**\n   * The **`border-top-left-radius`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   */\n  WebkitBorderTopLeftRadius?: Property.BorderTopLeftRadius<TLength> | undefined;\n  /**\n   * The **`border-top-right-radius`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   */\n  WebkitBorderTopRightRadius?: Property.BorderTopRightRadius<TLength> | undefined;\n  /**\n   * The **`box-decoration-break`** CSS property specifies how an element\'s fragments should be rendered when broken across multiple lines, columns, or pages.\n   *\n   * **Syntax**: `slice | clone`\n   *\n   * **Initial value**: `slice`\n   */\n  WebkitBoxDecorationBreak?: Property.BoxDecorationBreak | undefined;\n  /**\n   * The **`-webkit-box-reflect`** CSS property lets you reflect the content of an element in one specific direction.\n   *\n   * **Syntax**: `[ above | below | right | left ]? <length>? <image>?`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitBoxReflect?: Property.WebkitBoxReflect<TLength> | undefined;\n  /**\n   * The **`box-shadow`** CSS property adds shadow effects around an element\'s frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.\n   *\n   * **Syntax**: `none | <shadow>#`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitBoxShadow?: Property.BoxShadow | undefined;\n  /**\n   * The **`box-sizing`** CSS property sets how the total width and height of an element is calculated.\n   *\n   * **Syntax**: `content-box | border-box`\n   *\n   * **Initial value**: `content-box`\n   */\n  WebkitBoxSizing?: Property.BoxSizing | undefined;\n  /**\n   * The **`clip-path`** CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden.\n   *\n   * **Syntax**: `<clip-source> | [ <basic-shape> || <geometry-box> ] | none`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitClipPath?: Property.ClipPath | undefined;\n  /**\n   * The **`column-count`** CSS property breaks an element\'s content into the specified number of columns.\n   *\n   * **Syntax**: `<integer> | auto`\n   *\n   * **Initial value**: `auto`\n   */\n  WebkitColumnCount?: Property.ColumnCount | undefined;\n  /**\n   * The **`column-fill`** CSS property controls how an element\'s contents are balanced when broken into columns.\n   *\n   * **Syntax**: `auto | balance | balance-all`\n   *\n   * **Initial value**: `balance`\n   */\n  WebkitColumnFill?: Property.ColumnFill | undefined;\n  /**\n   * The **`column-gap`** CSS property sets the size of the gap (gutter) between an element\'s columns.\n   *\n   * **Syntax**: `normal | <length-percentage>`\n   *\n   * **Initial value**: `normal`\n   */\n  WebkitColumnGap?: Property.ColumnGap<TLength> | undefined;\n  /**\n   * The **`column-rule-color`** CSS property sets the color of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  WebkitColumnRuleColor?: Property.ColumnRuleColor | undefined;\n  /**\n   * The **`column-rule-style`** CSS property sets the style of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'border-style\'>`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitColumnRuleStyle?: Property.ColumnRuleStyle | undefined;\n  /**\n   * The **`column-rule-width`** CSS property sets the width of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'border-width\'>`\n   *\n   * **Initial value**: `medium`\n   */\n  WebkitColumnRuleWidth?: Property.ColumnRuleWidth<TLength> | undefined;\n  /**\n   * The **`column-span`** CSS property makes it possible for an element to span across all columns when its value is set to `all`.\n   *\n   * **Syntax**: `none | all`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitColumnSpan?: Property.ColumnSpan | undefined;\n  /**\n   * The **`column-width`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the `column-width` value. If the width of the container is narrower than the specified value, the single column\'s width will be smaller than the declared column width.\n   *\n   * **Syntax**: `<length> | auto`\n   *\n   * **Initial value**: `auto`\n   */\n  WebkitColumnWidth?: Property.ColumnWidth<TLength> | undefined;\n  /**\n   * The **`filter`** CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders.\n   *\n   * **Syntax**: `none | <filter-function-list>`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitFilter?: Property.Filter | undefined;\n  /**\n   * The **`flex-basis`** CSS property sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with `box-sizing`.\n   *\n   * **Syntax**: `content | <\'width\'>`\n   *\n   * **Initial value**: `auto`\n   */\n  WebkitFlexBasis?: Property.FlexBasis<TLength> | undefined;\n  /**\n   * The **`flex-direction`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).\n   *\n   * **Syntax**: `row | row-reverse | column | column-reverse`\n   *\n   * **Initial value**: `row`\n   */\n  WebkitFlexDirection?: Property.FlexDirection | undefined;\n  /**\n   * The **`flex-grow`** CSS property sets the flex grow factor of a flex item\'s main size.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `0`\n   */\n  WebkitFlexGrow?: Property.FlexGrow | undefined;\n  /**\n   * The **`flex-shrink`** CSS property sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to `flex-shrink`.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `1`\n   */\n  WebkitFlexShrink?: Property.FlexShrink | undefined;\n  /**\n   * The **`flex-wrap`** CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked.\n   *\n   * **Syntax**: `nowrap | wrap | wrap-reverse`\n   *\n   * **Initial value**: `nowrap`\n   */\n  WebkitFlexWrap?: Property.FlexWrap | undefined;\n  /**\n   * The **`font-feature-settings`** CSS property controls advanced typographic features in OpenType fonts.\n   *\n   * **Syntax**: `normal | <feature-tag-value>#`\n   *\n   * **Initial value**: `normal`\n   */\n  WebkitFontFeatureSettings?: Property.FontFeatureSettings | undefined;\n  /**\n   * The **`font-kerning`** CSS property sets the use of the kerning information stored in a font.\n   *\n   * **Syntax**: `auto | normal | none`\n   *\n   * **Initial value**: `auto`\n   */\n  WebkitFontKerning?: Property.FontKerning | undefined;\n  /**\n   * The **`font-smooth`** CSS property controls the application of anti-aliasing when fonts are rendered.\n   *\n   * **Syntax**: `auto | never | always | <absolute-size> | <length>`\n   *\n   * **Initial value**: `auto`\n   */\n  WebkitFontSmoothing?: Property.FontSmooth<TLength> | undefined;\n  /**\n   * The **`font-variant-ligatures`** CSS property controls which ligatures and contextual forms are used in textual content of the elements it applies to. This leads to more harmonized forms in the resulting text.\n   *\n   * **Syntax**: `normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]`\n   *\n   * **Initial value**: `normal`\n   */\n  WebkitFontVariantLigatures?: Property.FontVariantLigatures | undefined;\n  /**\n   * The **`hyphenate-character`** CSS property sets the character (or string) used at the end of a line before a hyphenation break.\n   *\n   * **Syntax**: `auto | <string>`\n   *\n   * **Initial value**: `auto`\n   */\n  WebkitHyphenateCharacter?: Property.HyphenateCharacter | undefined;\n  /**\n   * The **`hyphens`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.\n   *\n   * **Syntax**: `none | manual | auto`\n   *\n   * **Initial value**: `manual`\n   */\n  WebkitHyphens?: Property.Hyphens | undefined;\n  /**\n   * The `initial-letter` CSS property sets styling for dropped, raised, and sunken initial letters.\n   *\n   * **Syntax**: `normal | [ <number> <integer>? ]`\n   *\n   * **Initial value**: `normal`\n   */\n  WebkitInitialLetter?: Property.InitialLetter | undefined;\n  /**\n   * The CSS **`justify-content`** property defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container.\n   *\n   * **Syntax**: `normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]`\n   *\n   * **Initial value**: `normal`\n   */\n  WebkitJustifyContent?: Property.JustifyContent | undefined;\n  /**\n   * The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.\n   *\n   * **Syntax**: `auto | loose | normal | strict | anywhere`\n   *\n   * **Initial value**: `auto`\n   */\n  WebkitLineBreak?: Property.LineBreak | undefined;\n  /**\n   * The **`-webkit-line-clamp`** CSS property allows limiting of the contents of a block container to the specified number of lines.\n   *\n   * **Syntax**: `none | <integer>`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitLineClamp?: Property.WebkitLineClamp | undefined;\n  /**\n   * The **`margin-inline-end`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element\'s writing mode, directionality, and text orientation. In other words, it corresponds to the `margin-top`, `margin-right`, `margin-bottom` or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'margin-left\'>`\n   *\n   * **Initial value**: `0`\n   */\n  WebkitMarginEnd?: Property.MarginInlineEnd<TLength> | undefined;\n  /**\n   * The **`margin-inline-start`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `margin-top`, `margin-right`, `margin-bottom`, or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'margin-left\'>`\n   *\n   * **Initial value**: `0`\n   */\n  WebkitMarginStart?: Property.MarginInlineStart<TLength> | undefined;\n  /**\n   * If a `-webkit-mask-image` is specified, `-webkit-mask-attachment` determines whether the mask image\'s position is fixed within the viewport, or scrolls along with its containing block.\n   *\n   * **Syntax**: `<attachment>#`\n   *\n   * **Initial value**: `scroll`\n   */\n  WebkitMaskAttachment?: Property.WebkitMaskAttachment | undefined;\n  /**\n   * The **`mask-border-outset`** CSS property specifies the distance by which an element\'s mask border is set out from its border box.\n   *\n   * **Syntax**: `[ <length> | <number> ]{1,4}`\n   *\n   * **Initial value**: `0`\n   */\n  WebkitMaskBoxImageOutset?: Property.MaskBorderOutset<TLength> | undefined;\n  /**\n   * The **`mask-border-repeat`** CSS property sets how the edge regions of a source image are adjusted to fit the dimensions of an element\'s mask border.\n   *\n   * **Syntax**: `[ stretch | repeat | round | space ]{1,2}`\n   *\n   * **Initial value**: `stretch`\n   */\n  WebkitMaskBoxImageRepeat?: Property.MaskBorderRepeat | undefined;\n  /**\n   * The **`mask-border-slice`** CSS property divides the image set by `mask-border-source` into regions. These regions are used to form the components of an element\'s mask border.\n   *\n   * **Syntax**: `<number-percentage>{1,4} fill?`\n   *\n   * **Initial value**: `0`\n   */\n  WebkitMaskBoxImageSlice?: Property.MaskBorderSlice | undefined;\n  /**\n   * The **`mask-border-source`** CSS property sets the source image used to create an element\'s mask border.\n   *\n   * **Syntax**: `none | <image>`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitMaskBoxImageSource?: Property.MaskBorderSource | undefined;\n  /**\n   * The **`mask-border-width`** CSS property sets the width of an element\'s mask border.\n   *\n   * **Syntax**: `[ <length-percentage> | <number> | auto ]{1,4}`\n   *\n   * **Initial value**: `auto`\n   */\n  WebkitMaskBoxImageWidth?: Property.MaskBorderWidth<TLength> | undefined;\n  /**\n   * The **`mask-clip`** CSS property determines the area which is affected by a mask. The painted content of an element must be restricted to this area.\n   *\n   * **Syntax**: `[ <box> | border | padding | content | text ]#`\n   *\n   * **Initial value**: `border`\n   */\n  WebkitMaskClip?: Property.WebkitMaskClip | undefined;\n  /**\n   * The **`-webkit-mask-composite`** property specifies the manner in which multiple mask images applied to the same element are composited with one another. Mask images are composited in the opposite order that they are declared with the `-webkit-mask-image` property.\n   *\n   * **Syntax**: `<composite-style>#`\n   *\n   * **Initial value**: `source-over`\n   */\n  WebkitMaskComposite?: Property.WebkitMaskComposite | undefined;\n  /**\n   * The **`mask-image`** CSS property sets the image that is used as mask layer for an element. By default this means the alpha channel of the mask image will be multiplied with the alpha channel of the element. This can be controlled with the `mask-mode` property.\n   *\n   * **Syntax**: `<mask-reference>#`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitMaskImage?: Property.WebkitMaskImage | undefined;\n  /**\n   * The **`mask-origin`** CSS property sets the origin of a mask.\n   *\n   * **Syntax**: `[ <box> | border | padding | content ]#`\n   *\n   * **Initial value**: `padding`\n   */\n  WebkitMaskOrigin?: Property.WebkitMaskOrigin | undefined;\n  /**\n   * The **`mask-position`** CSS property sets the initial position, relative to the mask position layer set by `mask-origin`, for each defined mask image.\n   *\n   * **Syntax**: `<position>#`\n   *\n   * **Initial value**: `0% 0%`\n   */\n  WebkitMaskPosition?: Property.WebkitMaskPosition<TLength> | undefined;\n  /**\n   * The `-webkit-mask-position-x` CSS property sets the initial horizontal position of a mask image.\n   *\n   * **Syntax**: `[ <length-percentage> | left | center | right ]#`\n   *\n   * **Initial value**: `0%`\n   */\n  WebkitMaskPositionX?: Property.WebkitMaskPositionX<TLength> | undefined;\n  /**\n   * The `-webkit-mask-position-y` CSS property sets the initial vertical position of a mask image.\n   *\n   * **Syntax**: `[ <length-percentage> | top | center | bottom ]#`\n   *\n   * **Initial value**: `0%`\n   */\n  WebkitMaskPositionY?: Property.WebkitMaskPositionY<TLength> | undefined;\n  /**\n   * The **`mask-repeat`** CSS property sets how mask images are repeated. A mask image can be repeated along the horizontal axis, the vertical axis, both axes, or not repeated at all.\n   *\n   * **Syntax**: `<repeat-style>#`\n   *\n   * **Initial value**: `repeat`\n   */\n  WebkitMaskRepeat?: Property.WebkitMaskRepeat | undefined;\n  /**\n   * The `-webkit-mask-repeat-x` property specifies whether and how a mask image is repeated (tiled) horizontally.\n   *\n   * **Syntax**: `repeat | no-repeat | space | round`\n   *\n   * **Initial value**: `repeat`\n   */\n  WebkitMaskRepeatX?: Property.WebkitMaskRepeatX | undefined;\n  /**\n   * The `-webkit-mask-repeat-y` property sets whether and how a mask image is repeated (tiled) vertically.\n   *\n   * **Syntax**: `repeat | no-repeat | space | round`\n   *\n   * **Initial value**: `repeat`\n   */\n  WebkitMaskRepeatY?: Property.WebkitMaskRepeatY | undefined;\n  /**\n   * The **`mask-size`** CSS property specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio.\n   *\n   * **Syntax**: `<bg-size>#`\n   *\n   * **Initial value**: `auto auto`\n   */\n  WebkitMaskSize?: Property.WebkitMaskSize<TLength> | undefined;\n  /**\n   * The **`max-inline-size`** CSS property defines the horizontal or vertical maximum size of an element\'s block, depending on its writing mode. It corresponds to either the `max-width` or the `max-height` property, depending on the value of `writing-mode`.\n   *\n   * **Syntax**: `<\'max-width\'>`\n   *\n   * **Initial value**: `0`\n   */\n  WebkitMaxInlineSize?: Property.MaxInlineSize<TLength> | undefined;\n  /**\n   * The **`order`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending `order` value and then by their source code order.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `0`\n   */\n  WebkitOrder?: Property.Order | undefined;\n  /**\n   * The `-webkit-overflow-scrolling` CSS property controls whether or not touch devices use momentum-based scrolling for a given element.\n   *\n   * **Syntax**: `auto | touch`\n   *\n   * **Initial value**: `auto`\n   */\n  WebkitOverflowScrolling?: Property.WebkitOverflowScrolling | undefined;\n  /**\n   * The **`padding-inline-end`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>`\n   *\n   * **Initial value**: `0`\n   */\n  WebkitPaddingEnd?: Property.PaddingInlineEnd<TLength> | undefined;\n  /**\n   * The **`padding-inline-start`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>`\n   *\n   * **Initial value**: `0`\n   */\n  WebkitPaddingStart?: Property.PaddingInlineStart<TLength> | undefined;\n  /**\n   * The **`perspective`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.\n   *\n   * **Syntax**: `none | <length>`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitPerspective?: Property.Perspective<TLength> | undefined;\n  /**\n   * The **`perspective-origin`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the `perspective` property.\n   *\n   * **Syntax**: `<position>`\n   *\n   * **Initial value**: `50% 50%`\n   */\n  WebkitPerspectiveOrigin?: Property.PerspectiveOrigin<TLength> | undefined;\n  /**\n   * The **`print-color-adjust`** CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element\'s appearance it determines to be necessary and prudent given the type and capabilities of the output device.\n   *\n   * **Syntax**: `economy | exact`\n   *\n   * **Initial value**: `economy`\n   */\n  WebkitPrintColorAdjust?: Property.PrintColorAdjust | undefined;\n  /**\n   * The **`ruby-position`** CSS property defines the position of a ruby element relatives to its base element. It can be positioned over the element (`over`), under it (`under`), or between the characters on their right side (`inter-character`).\n   *\n   * **Syntax**: `[ alternate || [ over | under ] ] | inter-character`\n   *\n   * **Initial value**: `alternate`\n   */\n  WebkitRubyPosition?: Property.RubyPosition | undefined;\n  /**\n   * The **`scroll-snap-type`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.\n   *\n   * **Syntax**: `none | [ x | y | block | inline | both ] [ mandatory | proximity ]?`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitScrollSnapType?: Property.ScrollSnapType | undefined;\n  /**\n   * The **`shape-margin`** CSS property sets a margin for a CSS shape created using `shape-outside`.\n   *\n   * **Syntax**: `<length-percentage>`\n   *\n   * **Initial value**: `0`\n   */\n  WebkitShapeMargin?: Property.ShapeMargin<TLength> | undefined;\n  /**\n   * **`-webkit-tap-highlight-color`** is a non-standard CSS property that sets the color of the highlight that appears over a link while it\'s being tapped. The highlighting indicates to the user that their tap is being successfully recognized, and indicates which element they\'re tapping on.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `black`\n   */\n  WebkitTapHighlightColor?: Property.WebkitTapHighlightColor | undefined;\n  /**\n   * The **`text-combine-upright`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\n   *\n   * **Syntax**: `none | all | [ digits <integer>? ]`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitTextCombine?: Property.TextCombineUpright | undefined;\n  /**\n   * The **`text-decoration-color`** CSS property sets the color of decorations added to text by `text-decoration-line`.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  WebkitTextDecorationColor?: Property.TextDecorationColor | undefined;\n  /**\n   * The **`text-decoration-line`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.\n   *\n   * **Syntax**: `none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitTextDecorationLine?: Property.TextDecorationLine | undefined;\n  /**\n   * The **`text-decoration-skip`** CSS property sets what parts of an element\'s content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors.\n   *\n   * **Syntax**: `none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]`\n   *\n   * **Initial value**: `objects`\n   */\n  WebkitTextDecorationSkip?: Property.TextDecorationSkip | undefined;\n  /**\n   * The **`text-decoration-style`** CSS property sets the style of the lines specified by `text-decoration-line`. The style applies to all lines that are set with `text-decoration-line`.\n   *\n   * **Syntax**: `solid | double | dotted | dashed | wavy`\n   *\n   * **Initial value**: `solid`\n   */\n  WebkitTextDecorationStyle?: Property.TextDecorationStyle | undefined;\n  /**\n   * The **`text-emphasis-color`** CSS property sets the color of emphasis marks. This value can also be set using the `text-emphasis` shorthand.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  WebkitTextEmphasisColor?: Property.TextEmphasisColor | undefined;\n  /**\n   * The **`text-emphasis-position`** CSS property sets where emphasis marks are drawn. Like ruby text, if there isn\'t enough room for emphasis marks, the line height is increased.\n   *\n   * **Syntax**: `[ over | under ] && [ right | left ]`\n   *\n   * **Initial value**: `over right`\n   */\n  WebkitTextEmphasisPosition?: Property.TextEmphasisPosition | undefined;\n  /**\n   * The **`text-emphasis-style`** CSS property sets the appearance of emphasis marks. It can also be set, and reset, using the `text-emphasis` shorthand.\n   *\n   * **Syntax**: `none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitTextEmphasisStyle?: Property.TextEmphasisStyle | undefined;\n  /**\n   * The **`-webkit-text-fill-color`** CSS property specifies the fill color of characters of text. If this property is not set, the value of the `color` property is used.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  WebkitTextFillColor?: Property.WebkitTextFillColor | undefined;\n  /**\n   * The **`text-orientation`** CSS property sets the orientation of the text characters in a line. It only affects text in vertical mode (when `writing-mode` is not `horizontal-tb`). It is useful for controlling the display of languages that use vertical script, and also for making vertical table headers.\n   *\n   * **Syntax**: `mixed | upright | sideways`\n   *\n   * **Initial value**: `mixed`\n   */\n  WebkitTextOrientation?: Property.TextOrientation | undefined;\n  /**\n   * The **`text-size-adjust`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.\n   *\n   * **Syntax**: `none | auto | <percentage>`\n   *\n   * **Initial value**: `auto` for smartphone browsers supporting inflation, `none` in other cases (and then not modifiable).\n   */\n  WebkitTextSizeAdjust?: Property.TextSizeAdjust | undefined;\n  /**\n   * The **`-webkit-text-stroke-color`** CSS property specifies the stroke color of characters of text. If this property is not set, the value of the `color` property is used.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  WebkitTextStrokeColor?: Property.WebkitTextStrokeColor | undefined;\n  /**\n   * The **`-webkit-text-stroke-width`** CSS property specifies the width of the stroke for text.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   */\n  WebkitTextStrokeWidth?: Property.WebkitTextStrokeWidth<TLength> | undefined;\n  /**\n   * The **`text-underline-position`** CSS property specifies the position of the underline which is set using the `text-decoration` property\'s `underline` value.\n   *\n   * **Syntax**: `auto | from-font | [ under || [ left | right ] ]`\n   *\n   * **Initial value**: `auto`\n   */\n  WebkitTextUnderlinePosition?: Property.TextUnderlinePosition | undefined;\n  /**\n   * The `-webkit-touch-callout` CSS property controls the display of the default callout shown when you touch and hold a touch target.\n   *\n   * **Syntax**: `default | none`\n   *\n   * **Initial value**: `default`\n   */\n  WebkitTouchCallout?: Property.WebkitTouchCallout | undefined;\n  /**\n   * The **`transform`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\n   *\n   * **Syntax**: `none | <transform-list>`\n   *\n   * **Initial value**: `none`\n   */\n  WebkitTransform?: Property.Transform | undefined;\n  /**\n   * The **`transform-origin`** CSS property sets the origin for an element\'s transformations.\n   *\n   * **Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n   *\n   * **Initial value**: `50% 50% 0`\n   */\n  WebkitTransformOrigin?: Property.TransformOrigin<TLength> | undefined;\n  /**\n   * The **`transform-style`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.\n   *\n   * **Syntax**: `flat | preserve-3d`\n   *\n   * **Initial value**: `flat`\n   */\n  WebkitTransformStyle?: Property.TransformStyle | undefined;\n  /**\n   * The **`transition-delay`** CSS property specifies the duration to wait before starting a property\'s transition effect when its value changes.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  WebkitTransitionDelay?: Property.TransitionDelay<TTime> | undefined;\n  /**\n   * The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  WebkitTransitionDuration?: Property.TransitionDuration<TTime> | undefined;\n  /**\n   * The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n   *\n   * **Syntax**: `none | <single-transition-property>#`\n   *\n   * **Initial value**: all\n   */\n  WebkitTransitionProperty?: Property.TransitionProperty | undefined;\n  /**\n   * The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   */\n  WebkitTransitionTimingFunction?: Property.TransitionTimingFunction | undefined;\n  /**\n   * **Syntax**: `read-only | read-write | read-write-plaintext-only`\n   *\n   * **Initial value**: `read-only`\n   */\n  WebkitUserModify?: Property.WebkitUserModify | undefined;\n  /**\n   * The **`user-select`** CSS property controls whether the user can select text. This doesn\'t have any effect on content loaded as part of a browser\'s user interface (its chrome), except in textboxes.\n   *\n   * **Syntax**: `auto | text | none | contain | all`\n   *\n   * **Initial value**: `auto`\n   */\n  WebkitUserSelect?: Property.UserSelect | undefined;\n  /**\n   * The **`writing-mode`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (`html` element for HTML documents).\n   *\n   * **Syntax**: `horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr`\n   *\n   * **Initial value**: `horizontal-tb`\n   */\n  WebkitWritingMode?: Property.WritingMode | undefined;\n}\n\nexport interface VendorShorthandProperties<TLength = (string & {}) | 0, TTime = string & {}> {\n  /**\n   * The **`animation`** shorthand CSS property applies an animation between styles. It is a shorthand for `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and `animation-play-state`.\n   *\n   * **Syntax**: `<single-animation>#`\n   */\n  MozAnimation?: Property.Animation<TTime> | undefined;\n  /**\n   * The **`border-image`** CSS property draws an image around a given element. It replaces the element\'s regular border.\n   *\n   * **Syntax**: `<\'border-image-source\'> || <\'border-image-slice\'> [ / <\'border-image-width\'> | / <\'border-image-width\'>? / <\'border-image-outset\'> ]? || <\'border-image-repeat\'>`\n   */\n  MozBorderImage?: Property.BorderImage | undefined;\n  /**\n   * The **`column-rule`** shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'column-rule-width\'> || <\'column-rule-style\'> || <\'column-rule-color\'>`\n   */\n  MozColumnRule?: Property.ColumnRule<TLength> | undefined;\n  /**\n   * The **`columns`** CSS shorthand property sets the number of columns to use when drawing an element\'s contents, as well as those columns\' widths.\n   *\n   * **Syntax**: `<\'column-width\'> || <\'column-count\'>`\n   */\n  MozColumns?: Property.Columns<TLength> | undefined;\n  /**\n   * The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n   *\n   * **Syntax**: `<single-transition>#`\n   */\n  MozTransition?: Property.Transition<TTime> | undefined;\n  /**\n   * The **`-ms-content-zoom-limit`** CSS shorthand property is a Microsoft extension that specifies values for the `-ms-content-zoom-limit-min` and `-ms-content-zoom-limit-max` properties.\n   *\n   * **Syntax**: `<\'-ms-content-zoom-limit-min\'> <\'-ms-content-zoom-limit-max\'>`\n   */\n  msContentZoomLimit?: Property.MsContentZoomLimit | undefined;\n  /**\n   * The **`-ms-content-zoom-snap`** CSS shorthand property is a Microsoft extension that specifies values for the `-ms-content-zoom-snap-type` and `-ms-content-zoom-snap-points` properties.\n   *\n   * **Syntax**: `<\'-ms-content-zoom-snap-type\'> || <\'-ms-content-zoom-snap-points\'>`\n   */\n  msContentZoomSnap?: Property.MsContentZoomSnap | undefined;\n  /**\n   * The **`flex`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.\n   *\n   * **Syntax**: `none | [ <\'flex-grow\'> <\'flex-shrink\'>? || <\'flex-basis\'> ]`\n   */\n  msFlex?: Property.Flex<TLength> | undefined;\n  /**\n   * The **\\-ms-scroll-limit** CSS property is a Microsoft extension that specifies values for the `-ms-scroll-limit-x-min`, `-ms-scroll-limit-y-min`, `-ms-scroll-limit-x-max`, and `-ms-scroll-limit-y-max` properties.\n   *\n   * **Syntax**: `<\'-ms-scroll-limit-x-min\'> <\'-ms-scroll-limit-y-min\'> <\'-ms-scroll-limit-x-max\'> <\'-ms-scroll-limit-y-max\'>`\n   */\n  msScrollLimit?: Property.MsScrollLimit | undefined;\n  /**\n   * The **`-ms-scroll-snap-x`** CSS shorthand property is a Microsoft extension that specifies values for the `-ms-scroll-snap-type` and `-ms-scroll-snap-points-x` properties.\n   *\n   * **Syntax**: `<\'-ms-scroll-snap-type\'> <\'-ms-scroll-snap-points-x\'>`\n   */\n  msScrollSnapX?: Property.MsScrollSnapX | undefined;\n  /**\n   * The **`-ms-scroll-snap-x`** CSS shorthand property is a Microsoft extension that specifies values for the `-ms-scroll-snap-type` and `-ms-scroll-snap-points-y` properties.\n   *\n   * **Syntax**: `<\'-ms-scroll-snap-type\'> <\'-ms-scroll-snap-points-y\'>`\n   */\n  msScrollSnapY?: Property.MsScrollSnapY | undefined;\n  /**\n   * The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n   *\n   * **Syntax**: `<single-transition>#`\n   */\n  msTransition?: Property.Transition<TTime> | undefined;\n  /**\n   * The **`animation`** shorthand CSS property applies an animation between styles. It is a shorthand for `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and `animation-play-state`.\n   *\n   * **Syntax**: `<single-animation>#`\n   */\n  WebkitAnimation?: Property.Animation<TTime> | undefined;\n  /**\n   * The **`-webkit-border-before`** CSS property is a shorthand property for setting the individual logical block start border property values in a single place in the style sheet.\n   *\n   * **Syntax**: `<\'border-width\'> || <\'border-style\'> || <color>`\n   */\n  WebkitBorderBefore?: Property.WebkitBorderBefore<TLength> | undefined;\n  /**\n   * The **`border-image`** CSS property draws an image around a given element. It replaces the element\'s regular border.\n   *\n   * **Syntax**: `<\'border-image-source\'> || <\'border-image-slice\'> [ / <\'border-image-width\'> | / <\'border-image-width\'>? / <\'border-image-outset\'> ]? || <\'border-image-repeat\'>`\n   */\n  WebkitBorderImage?: Property.BorderImage | undefined;\n  /**\n   * The **`border-radius`** CSS property rounds the corners of an element\'s outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.\n   *\n   * **Syntax**: `<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?`\n   */\n  WebkitBorderRadius?: Property.BorderRadius<TLength> | undefined;\n  /**\n   * The **`column-rule`** shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'column-rule-width\'> || <\'column-rule-style\'> || <\'column-rule-color\'>`\n   */\n  WebkitColumnRule?: Property.ColumnRule<TLength> | undefined;\n  /**\n   * The **`columns`** CSS shorthand property sets the number of columns to use when drawing an element\'s contents, as well as those columns\' widths.\n   *\n   * **Syntax**: `<\'column-width\'> || <\'column-count\'>`\n   */\n  WebkitColumns?: Property.Columns<TLength> | undefined;\n  /**\n   * The **`flex`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.\n   *\n   * **Syntax**: `none | [ <\'flex-grow\'> <\'flex-shrink\'>? || <\'flex-basis\'> ]`\n   */\n  WebkitFlex?: Property.Flex<TLength> | undefined;\n  /**\n   * The **`flex-flow`** CSS shorthand property specifies the direction of a flex container, as well as its wrapping behavior.\n   *\n   * **Syntax**: `<\'flex-direction\'> || <\'flex-wrap\'>`\n   */\n  WebkitFlexFlow?: Property.FlexFlow | undefined;\n  /**\n   * The **`mask`** CSS shorthand property hides an element (partially or fully) by masking or clipping the image at specific points.\n   *\n   * **Syntax**: `[ <mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || [ <box> | border | padding | content | text ] || [ <box> | border | padding | content ] ]#`\n   */\n  WebkitMask?: Property.WebkitMask<TLength> | undefined;\n  /**\n   * The **`mask-border`** CSS shorthand property lets you create a mask along the edge of an element\'s border.\n   *\n   * **Syntax**: `<\'mask-border-source\'> || <\'mask-border-slice\'> [ / <\'mask-border-width\'>? [ / <\'mask-border-outset\'> ]? ]? || <\'mask-border-repeat\'> || <\'mask-border-mode\'>`\n   */\n  WebkitMaskBoxImage?: Property.MaskBorder | undefined;\n  /**\n   * The **`text-emphasis`** CSS property applies emphasis marks to text (except spaces and control characters). It is a shorthand for `text-emphasis-style` and `text-emphasis-color`.\n   *\n   * **Syntax**: `<\'text-emphasis-style\'> || <\'text-emphasis-color\'>`\n   */\n  WebkitTextEmphasis?: Property.TextEmphasis | undefined;\n  /**\n   * The **`-webkit-text-stroke`** CSS property specifies the width and color of strokes for text characters. This is a shorthand property for the longhand properties `-webkit-text-stroke-width` and `-webkit-text-stroke-color`.\n   *\n   * **Syntax**: `<length> || <color>`\n   */\n  WebkitTextStroke?: Property.WebkitTextStroke<TLength> | undefined;\n  /**\n   * The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n   *\n   * **Syntax**: `<single-transition>#`\n   */\n  WebkitTransition?: Property.Transition<TTime> | undefined;\n}\n\nexport interface VendorProperties<TLength = (string & {}) | 0, TTime = string & {}> extends VendorLonghandProperties<TLength, TTime>, VendorShorthandProperties<TLength, TTime> {}\n\nexport interface ObsoleteProperties<TLength = (string & {}) | 0, TTime = string & {}> {\n  /**\n   * In combination with `elevation`, the **`azimuth`** CSS property enables different audio sources to be positioned spatially for aural presentation. This is important in that it provides a natural way to tell several voices apart, as each can be positioned to originate at a different location on the sound stage. Stereo output produce a lateral sound stage, while binaural headphones and multi-speaker setups allow for a fully three-dimensional stage.\n   *\n   * **Syntax**: `<angle> | [ [ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards`\n   *\n   * **Initial value**: `center`\n   *\n   * @deprecated\n   */\n  azimuth?: Property.Azimuth | undefined;\n  /**\n   * The **`box-align`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\n   *\n   * **Syntax**: `start | center | end | baseline | stretch`\n   *\n   * **Initial value**: `stretch`\n   *\n   * @deprecated\n   */\n  boxAlign?: Property.BoxAlign | undefined;\n  /**\n   * The **`box-direction`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n   *\n   * **Syntax**: `normal | reverse | inherit`\n   *\n   * **Initial value**: `normal`\n   *\n   * @deprecated\n   */\n  boxDirection?: Property.BoxDirection | undefined;\n  /**\n   * The **`-moz-box-flex`** and **`-webkit-box-flex`** CSS properties specify how a `-moz-box` or `-webkit-box` grows to fill the box that contains it, in the direction of the containing box\'s layout.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  boxFlex?: Property.BoxFlex | undefined;\n  /**\n   * The **`box-flex-group`** CSS property assigns the flexbox\'s child elements to a flex group.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  boxFlexGroup?: Property.BoxFlexGroup | undefined;\n  /**\n   * The **`box-lines`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).\n   *\n   * **Syntax**: `single | multiple`\n   *\n   * **Initial value**: `single`\n   *\n   * @deprecated\n   */\n  boxLines?: Property.BoxLines | undefined;\n  /**\n   * The **`box-ordinal-group`** CSS property assigns the flexbox\'s child elements to an ordinal group.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  boxOrdinalGroup?: Property.BoxOrdinalGroup | undefined;\n  /**\n   * The **`box-orient`** CSS property sets whether an element lays out its contents horizontally or vertically.\n   *\n   * **Syntax**: `horizontal | vertical | inline-axis | block-axis | inherit`\n   *\n   * **Initial value**: `inline-axis` (`horizontal` in XUL)\n   *\n   * @deprecated\n   */\n  boxOrient?: Property.BoxOrient | undefined;\n  /**\n   * The **`-moz-box-pack`** and **`-webkit-box-pack`** CSS properties specify how a `-moz-box` or `-webkit-box` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\n   *\n   * **Syntax**: `start | center | end | justify`\n   *\n   * **Initial value**: `start`\n   *\n   * @deprecated\n   */\n  boxPack?: Property.BoxPack | undefined;\n  /**\n   * The **`clip`** CSS property defines a visible portion of an element. The `clip` property applies only to absolutely positioned elements — that is, elements with `position:absolute` or `position:fixed`.\n   *\n   * **Syntax**: `<shape> | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  clip?: Property.Clip | undefined;\n  /**\n   * The **`column-gap`** CSS property sets the size of the gap (gutter) between an element\'s columns.\n   *\n   * **Syntax**: `<length-percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  gridColumnGap?: Property.GridColumnGap<TLength> | undefined;\n  /**\n   * The **`gap`** CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for `row-gap` and `column-gap`.\n   *\n   * **Syntax**: `<\'grid-row-gap\'> <\'grid-column-gap\'>?`\n   *\n   * @deprecated\n   */\n  gridGap?: Property.GridGap<TLength> | undefined;\n  /**\n   * The **`row-gap`** CSS property sets the size of the gap (gutter) between an element\'s grid rows.\n   *\n   * **Syntax**: `<length-percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  gridRowGap?: Property.GridRowGap<TLength> | undefined;\n  /**\n   * The **`ime-mode`** CSS property controls the state of the input method editor (IME) for text fields. This property is obsolete.\n   *\n   * **Syntax**: `auto | normal | active | inactive | disabled`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  imeMode?: Property.ImeMode | undefined;\n  /**\n   * The **`inset-block`** CSS property defines the logical block start and end offsets of an element, which maps to physical offsets depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top` and `bottom`, or `right` and `left` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>{1,2}`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  offsetBlock?: Property.InsetBlock<TLength> | undefined;\n  /**\n   * The **`inset-block-end`** CSS property defines the logical block end offset of an element, which maps to a physical inset depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  offsetBlockEnd?: Property.InsetBlockEnd<TLength> | undefined;\n  /**\n   * The **`inset-block-start`** CSS property defines the logical block start offset of an element, which maps to a physical inset depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  offsetBlockStart?: Property.InsetBlockStart<TLength> | undefined;\n  /**\n   * The **`inset-inline`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top` and `bottom`, or `right` and `left` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>{1,2}`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  offsetInline?: Property.InsetInline<TLength> | undefined;\n  /**\n   * The **`inset-inline-end`** CSS property defines the logical inline end inset of an element, which maps to a physical offset depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  offsetInlineEnd?: Property.InsetInlineEnd<TLength> | undefined;\n  /**\n   * The **`inset-inline-start`** CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  offsetInlineStart?: Property.InsetInlineStart<TLength> | undefined;\n  /**\n   * The **`scroll-snap-coordinate`** CSS property defines the x and y coordinate positions within an element that will align with its nearest ancestor scroll container\'s `scroll-snap-destination` for each respective axis.\n   *\n   * **Syntax**: `none | <position>#`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  scrollSnapCoordinate?: Property.ScrollSnapCoordinate<TLength> | undefined;\n  /**\n   * The **`scroll-snap-destination`** CSS property defines the position in x and y coordinates within the scroll container\'s visual viewport which element snap points align with.\n   *\n   * **Syntax**: `<position>`\n   *\n   * **Initial value**: `0px 0px`\n   *\n   * @deprecated\n   */\n  scrollSnapDestination?: Property.ScrollSnapDestination<TLength> | undefined;\n  /**\n   * The **`scroll-snap-points-x`** CSS property defines the horizontal positioning of snap points within the content of the scroll container they are applied to.\n   *\n   * **Syntax**: `none | repeat( <length-percentage> )`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  scrollSnapPointsX?: Property.ScrollSnapPointsX | undefined;\n  /**\n   * The **`scroll-snap-points-y`** CSS property defines the vertical positioning of snap points within the content of the scroll container they are applied to.\n   *\n   * **Syntax**: `none | repeat( <length-percentage> )`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  scrollSnapPointsY?: Property.ScrollSnapPointsY | undefined;\n  /**\n   * The **`scroll-snap-type-x`** CSS property defines how strictly snap points are enforced on the horizontal axis of the scroll container in case there is one.\n   *\n   * **Syntax**: `none | mandatory | proximity`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  scrollSnapTypeX?: Property.ScrollSnapTypeX | undefined;\n  /**\n   * The **`scroll-snap-type-y`** CSS property defines how strictly snap points are enforced on the vertical axis of the scroll container in case there is one.\n   *\n   * **Syntax**: `none | mandatory | proximity`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  scrollSnapTypeY?: Property.ScrollSnapTypeY | undefined;\n  /**\n   * The **`-ms-scrollbar-track-color`** CSS property is a Microsoft extension that specifies the color of the track element of a scrollbar.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `Scrollbar`\n   *\n   * @deprecated\n   */\n  scrollbarTrackColor?: Property.MsScrollbarTrackColor | undefined;\n  /**\n   * The **`box-align`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\n   *\n   * **Syntax**: `start | center | end | baseline | stretch`\n   *\n   * **Initial value**: `stretch`\n   *\n   * @deprecated\n   */\n  KhtmlBoxAlign?: Property.BoxAlign | undefined;\n  /**\n   * The **`box-direction`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n   *\n   * **Syntax**: `normal | reverse | inherit`\n   *\n   * **Initial value**: `normal`\n   *\n   * @deprecated\n   */\n  KhtmlBoxDirection?: Property.BoxDirection | undefined;\n  /**\n   * The **`-moz-box-flex`** and **`-webkit-box-flex`** CSS properties specify how a `-moz-box` or `-webkit-box` grows to fill the box that contains it, in the direction of the containing box\'s layout.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  KhtmlBoxFlex?: Property.BoxFlex | undefined;\n  /**\n   * The **`box-flex-group`** CSS property assigns the flexbox\'s child elements to a flex group.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  KhtmlBoxFlexGroup?: Property.BoxFlexGroup | undefined;\n  /**\n   * The **`box-lines`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).\n   *\n   * **Syntax**: `single | multiple`\n   *\n   * **Initial value**: `single`\n   *\n   * @deprecated\n   */\n  KhtmlBoxLines?: Property.BoxLines | undefined;\n  /**\n   * The **`box-ordinal-group`** CSS property assigns the flexbox\'s child elements to an ordinal group.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  KhtmlBoxOrdinalGroup?: Property.BoxOrdinalGroup | undefined;\n  /**\n   * The **`box-orient`** CSS property sets whether an element lays out its contents horizontally or vertically.\n   *\n   * **Syntax**: `horizontal | vertical | inline-axis | block-axis | inherit`\n   *\n   * **Initial value**: `inline-axis` (`horizontal` in XUL)\n   *\n   * @deprecated\n   */\n  KhtmlBoxOrient?: Property.BoxOrient | undefined;\n  /**\n   * The **`-moz-box-pack`** and **`-webkit-box-pack`** CSS properties specify how a `-moz-box` or `-webkit-box` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\n   *\n   * **Syntax**: `start | center | end | justify`\n   *\n   * **Initial value**: `start`\n   *\n   * @deprecated\n   */\n  KhtmlBoxPack?: Property.BoxPack | undefined;\n  /**\n   * The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.\n   *\n   * **Syntax**: `auto | loose | normal | strict | anywhere`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  KhtmlLineBreak?: Property.LineBreak | undefined;\n  /**\n   * The **`opacity`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.\n   *\n   * **Syntax**: `<alpha-value>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  KhtmlOpacity?: Property.Opacity | undefined;\n  /**\n   * The **`user-select`** CSS property controls whether the user can select text. This doesn\'t have any effect on content loaded as part of a browser\'s user interface (its chrome), except in textboxes.\n   *\n   * **Syntax**: `auto | text | none | contain | all`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  KhtmlUserSelect?: Property.UserSelect | undefined;\n  /**\n   * The **`background-clip`** CSS property sets whether an element\'s background extends underneath its border box, padding box, or content box.\n   *\n   * **Syntax**: `<box>#`\n   *\n   * **Initial value**: `border-box`\n   *\n   * @deprecated\n   */\n  MozBackgroundClip?: Property.BackgroundClip | undefined;\n  /**\n   * The **`box-decoration-break`** CSS property specifies how an element\'s fragments should be rendered when broken across multiple lines, columns, or pages.\n   *\n   * **Syntax**: `slice | clone`\n   *\n   * **Initial value**: `slice`\n   *\n   * @deprecated\n   */\n  MozBackgroundInlinePolicy?: Property.BoxDecorationBreak | undefined;\n  /**\n   * The **`background-origin`** CSS property sets the background\'s origin: from the border start, inside the border, or inside the padding.\n   *\n   * **Syntax**: `<box>#`\n   *\n   * **Initial value**: `padding-box`\n   *\n   * @deprecated\n   */\n  MozBackgroundOrigin?: Property.BackgroundOrigin | undefined;\n  /**\n   * The **`background-size`** CSS property sets the size of the element\'s background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\n   *\n   * **Syntax**: `<bg-size>#`\n   *\n   * **Initial value**: `auto auto`\n   *\n   * @deprecated\n   */\n  MozBackgroundSize?: Property.BackgroundSize<TLength> | undefined;\n  /**\n   * The **`-moz-binding`** CSS property is used by Mozilla-based applications to attach an XBL binding to a DOM element.\n   *\n   * **Syntax**: `<url> | none`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  MozBinding?: Property.MozBinding | undefined;\n  /**\n   * The **`border-radius`** CSS property rounds the corners of an element\'s outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.\n   *\n   * **Syntax**: `<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?`\n   *\n   * @deprecated\n   */\n  MozBorderRadius?: Property.BorderRadius<TLength> | undefined;\n  /**\n   * The **`border-bottom-left-radius`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  MozBorderRadiusBottomleft?: Property.BorderBottomLeftRadius<TLength> | undefined;\n  /**\n   * The **`border-bottom-right-radius`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  MozBorderRadiusBottomright?: Property.BorderBottomRightRadius<TLength> | undefined;\n  /**\n   * The **`border-top-left-radius`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  MozBorderRadiusTopleft?: Property.BorderTopLeftRadius<TLength> | undefined;\n  /**\n   * The **`border-top-right-radius`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  MozBorderRadiusTopright?: Property.BorderTopRightRadius<TLength> | undefined;\n  /**\n   * The **`box-align`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\n   *\n   * **Syntax**: `start | center | end | baseline | stretch`\n   *\n   * **Initial value**: `stretch`\n   *\n   * @deprecated\n   */\n  MozBoxAlign?: Property.BoxAlign | undefined;\n  /**\n   * The **`box-direction`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n   *\n   * **Syntax**: `normal | reverse | inherit`\n   *\n   * **Initial value**: `normal`\n   *\n   * @deprecated\n   */\n  MozBoxDirection?: Property.BoxDirection | undefined;\n  /**\n   * The **`-moz-box-flex`** and **`-webkit-box-flex`** CSS properties specify how a `-moz-box` or `-webkit-box` grows to fill the box that contains it, in the direction of the containing box\'s layout.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  MozBoxFlex?: Property.BoxFlex | undefined;\n  /**\n   * The **`box-ordinal-group`** CSS property assigns the flexbox\'s child elements to an ordinal group.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  MozBoxOrdinalGroup?: Property.BoxOrdinalGroup | undefined;\n  /**\n   * The **`box-orient`** CSS property sets whether an element lays out its contents horizontally or vertically.\n   *\n   * **Syntax**: `horizontal | vertical | inline-axis | block-axis | inherit`\n   *\n   * **Initial value**: `inline-axis` (`horizontal` in XUL)\n   *\n   * @deprecated\n   */\n  MozBoxOrient?: Property.BoxOrient | undefined;\n  /**\n   * The **`-moz-box-pack`** and **`-webkit-box-pack`** CSS properties specify how a `-moz-box` or `-webkit-box` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\n   *\n   * **Syntax**: `start | center | end | justify`\n   *\n   * **Initial value**: `start`\n   *\n   * @deprecated\n   */\n  MozBoxPack?: Property.BoxPack | undefined;\n  /**\n   * The **`box-shadow`** CSS property adds shadow effects around an element\'s frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.\n   *\n   * **Syntax**: `none | <shadow>#`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  MozBoxShadow?: Property.BoxShadow | undefined;\n  /**\n   * The non-standard **`-moz-float-edge`** CSS property specifies whether the height and width properties of the element include the margin, border, or padding thickness.\n   *\n   * **Syntax**: `border-box | content-box | margin-box | padding-box`\n   *\n   * **Initial value**: `content-box`\n   *\n   * @deprecated\n   */\n  MozFloatEdge?: Property.MozFloatEdge | undefined;\n  /**\n   * The **`-moz-force-broken-image-icon`** extended CSS property can be used to force the broken image icon to be shown even when a broken image has an `alt` attribute.\n   *\n   * **Syntax**: `0 | 1`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  MozForceBrokenImageIcon?: Property.MozForceBrokenImageIcon | undefined;\n  /**\n   * The **`opacity`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.\n   *\n   * **Syntax**: `<alpha-value>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  MozOpacity?: Property.Opacity | undefined;\n  /**\n   * The **`outline`** CSS shorthand property set all the outline properties in a single declaration.\n   *\n   * **Syntax**: `[ <\'outline-color\'> || <\'outline-style\'> || <\'outline-width\'> ]`\n   *\n   * @deprecated\n   */\n  MozOutline?: Property.Outline<TLength> | undefined;\n  /**\n   * The **`outline-color`** CSS property sets the color of an element\'s outline.\n   *\n   * **Syntax**: `<color> | invert`\n   *\n   * **Initial value**: `invert`, for browsers supporting it, `currentColor` for the other\n   *\n   * @deprecated\n   */\n  MozOutlineColor?: Property.OutlineColor | undefined;\n  /**\n   * In Mozilla applications like Firefox, the **`-moz-outline-radius`** CSS shorthand property can be used to give an element\'s `outline` rounded corners.\n   *\n   * **Syntax**: `<outline-radius>{1,4} [ / <outline-radius>{1,4} ]?`\n   *\n   * @deprecated\n   */\n  MozOutlineRadius?: Property.MozOutlineRadius<TLength> | undefined;\n  /**\n   * In Mozilla applications, the **`-moz-outline-radius-bottomleft`** CSS property can be used to round the bottom-left corner of an element\'s `outline`.\n   *\n   * **Syntax**: `<outline-radius>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  MozOutlineRadiusBottomleft?: Property.MozOutlineRadiusBottomleft<TLength> | undefined;\n  /**\n   * In Mozilla applications, the **`-moz-outline-radius-bottomright`** CSS property can be used to round the bottom-right corner of an element\'s `outline`.\n   *\n   * **Syntax**: `<outline-radius>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  MozOutlineRadiusBottomright?: Property.MozOutlineRadiusBottomright<TLength> | undefined;\n  /**\n   * In Mozilla applications, the **`-moz-outline-radius-topleft`** CSS property can be used to round the top-left corner of an element\'s `outline`.\n   *\n   * **Syntax**: `<outline-radius>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  MozOutlineRadiusTopleft?: Property.MozOutlineRadiusTopleft<TLength> | undefined;\n  /**\n   * In Mozilla applications, the **`-moz-outline-radius-topright`** CSS property can be used to round the top-right corner of an element\'s `outline`.\n   *\n   * **Syntax**: `<outline-radius>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  MozOutlineRadiusTopright?: Property.MozOutlineRadiusTopright<TLength> | undefined;\n  /**\n   * The **`outline-style`** CSS property sets the style of an element\'s outline. An outline is a line that is drawn around an element, outside the `border`.\n   *\n   * **Syntax**: `auto | <\'border-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  MozOutlineStyle?: Property.OutlineStyle | undefined;\n  /**\n   * The CSS **`outline-width`** property sets the thickness of an element\'s outline. An outline is a line that is drawn around an element, outside the `border`.\n   *\n   * **Syntax**: `<line-width>`\n   *\n   * **Initial value**: `medium`\n   *\n   * @deprecated\n   */\n  MozOutlineWidth?: Property.OutlineWidth<TLength> | undefined;\n  /**\n   * The **`text-align-last`** CSS property sets how the last line of a block or a line, right before a forced line break, is aligned.\n   *\n   * **Syntax**: `auto | start | end | left | right | center | justify`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  MozTextAlignLast?: Property.TextAlignLast | undefined;\n  /**\n   * The **`text-decoration-color`** CSS property sets the color of decorations added to text by `text-decoration-line`.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * @deprecated\n   */\n  MozTextDecorationColor?: Property.TextDecorationColor | undefined;\n  /**\n   * The **`text-decoration-line`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.\n   *\n   * **Syntax**: `none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  MozTextDecorationLine?: Property.TextDecorationLine | undefined;\n  /**\n   * The **`text-decoration-style`** CSS property sets the style of the lines specified by `text-decoration-line`. The style applies to all lines that are set with `text-decoration-line`.\n   *\n   * **Syntax**: `solid | double | dotted | dashed | wavy`\n   *\n   * **Initial value**: `solid`\n   *\n   * @deprecated\n   */\n  MozTextDecorationStyle?: Property.TextDecorationStyle | undefined;\n  /**\n   * In Mozilla applications, **`-moz-user-input`** determines if an element will accept user input.\n   *\n   * **Syntax**: `auto | none | enabled | disabled`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  MozUserInput?: Property.MozUserInput | undefined;\n  /**\n   * The **`ime-mode`** CSS property controls the state of the input method editor (IME) for text fields. This property is obsolete.\n   *\n   * **Syntax**: `auto | normal | active | inactive | disabled`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  msImeMode?: Property.ImeMode | undefined;\n  /**\n   * The **`-ms-scrollbar-track-color`** CSS property is a Microsoft extension that specifies the color of the track element of a scrollbar.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `Scrollbar`\n   *\n   * @deprecated\n   */\n  msScrollbarTrackColor?: Property.MsScrollbarTrackColor | undefined;\n  /**\n   * The **`animation`** shorthand CSS property applies an animation between styles. It is a shorthand for `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and `animation-play-state`.\n   *\n   * **Syntax**: `<single-animation>#`\n   *\n   * @deprecated\n   */\n  OAnimation?: Property.Animation<TTime> | undefined;\n  /**\n   * The **`animation-delay`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   *\n   * @deprecated\n   */\n  OAnimationDelay?: Property.AnimationDelay<TTime> | undefined;\n  /**\n   * The **`animation-direction`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.\n   *\n   * **Syntax**: `<single-animation-direction>#`\n   *\n   * **Initial value**: `normal`\n   *\n   * @deprecated\n   */\n  OAnimationDirection?: Property.AnimationDirection | undefined;\n  /**\n   * The **`animation-duration`** CSS property sets the length of time that an animation takes to complete one cycle.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   *\n   * @deprecated\n   */\n  OAnimationDuration?: Property.AnimationDuration<TTime> | undefined;\n  /**\n   * The **`animation-fill-mode`** CSS property sets how a CSS animation applies styles to its target before and after its execution.\n   *\n   * **Syntax**: `<single-animation-fill-mode>#`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  OAnimationFillMode?: Property.AnimationFillMode | undefined;\n  /**\n   * The **`animation-iteration-count`** CSS property sets the number of times an animation sequence should be played before stopping.\n   *\n   * **Syntax**: `<single-animation-iteration-count>#`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  OAnimationIterationCount?: Property.AnimationIterationCount | undefined;\n  /**\n   * The **`animation-name`** CSS property specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element.\n   *\n   * **Syntax**: `[ none | <keyframes-name> ]#`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  OAnimationName?: Property.AnimationName | undefined;\n  /**\n   * The **`animation-play-state`** CSS property sets whether an animation is running or paused.\n   *\n   * **Syntax**: `<single-animation-play-state>#`\n   *\n   * **Initial value**: `running`\n   *\n   * @deprecated\n   */\n  OAnimationPlayState?: Property.AnimationPlayState | undefined;\n  /**\n   * The **`animation-timing-function`** CSS property sets how an animation progresses through the duration of each cycle.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   *\n   * @deprecated\n   */\n  OAnimationTimingFunction?: Property.AnimationTimingFunction | undefined;\n  /**\n   * The **`background-size`** CSS property sets the size of the element\'s background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\n   *\n   * **Syntax**: `<bg-size>#`\n   *\n   * **Initial value**: `auto auto`\n   *\n   * @deprecated\n   */\n  OBackgroundSize?: Property.BackgroundSize<TLength> | undefined;\n  /**\n   * The **`border-image`** CSS property draws an image around a given element. It replaces the element\'s regular border.\n   *\n   * **Syntax**: `<\'border-image-source\'> || <\'border-image-slice\'> [ / <\'border-image-width\'> | / <\'border-image-width\'>? / <\'border-image-outset\'> ]? || <\'border-image-repeat\'>`\n   *\n   * @deprecated\n   */\n  OBorderImage?: Property.BorderImage | undefined;\n  /**\n   * The **`object-fit`** CSS property sets how the content of a replaced element, such as an `<img>` or `<video>`, should be resized to fit its container.\n   *\n   * **Syntax**: `fill | contain | cover | none | scale-down`\n   *\n   * **Initial value**: `fill`\n   *\n   * @deprecated\n   */\n  OObjectFit?: Property.ObjectFit | undefined;\n  /**\n   * The **`object-position`** CSS property specifies the alignment of the selected replaced element\'s contents within the element\'s box. Areas of the box which aren\'t covered by the replaced element\'s object will show the element\'s background.\n   *\n   * **Syntax**: `<position>`\n   *\n   * **Initial value**: `50% 50%`\n   *\n   * @deprecated\n   */\n  OObjectPosition?: Property.ObjectPosition<TLength> | undefined;\n  /**\n   * The **`tab-size`** CSS property is used to customize the width of tab characters (U+0009).\n   *\n   * **Syntax**: `<integer> | <length>`\n   *\n   * **Initial value**: `8`\n   *\n   * @deprecated\n   */\n  OTabSize?: Property.TabSize<TLength> | undefined;\n  /**\n   * The **`text-overflow`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis (\'`…`\'), or display a custom string.\n   *\n   * **Syntax**: `[ clip | ellipsis | <string> ]{1,2}`\n   *\n   * **Initial value**: `clip`\n   *\n   * @deprecated\n   */\n  OTextOverflow?: Property.TextOverflow | undefined;\n  /**\n   * The **`transform`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\n   *\n   * **Syntax**: `none | <transform-list>`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  OTransform?: Property.Transform | undefined;\n  /**\n   * The **`transform-origin`** CSS property sets the origin for an element\'s transformations.\n   *\n   * **Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n   *\n   * **Initial value**: `50% 50% 0`\n   *\n   * @deprecated\n   */\n  OTransformOrigin?: Property.TransformOrigin<TLength> | undefined;\n  /**\n   * The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n   *\n   * **Syntax**: `<single-transition>#`\n   *\n   * @deprecated\n   */\n  OTransition?: Property.Transition<TTime> | undefined;\n  /**\n   * The **`transition-delay`** CSS property specifies the duration to wait before starting a property\'s transition effect when its value changes.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   *\n   * @deprecated\n   */\n  OTransitionDelay?: Property.TransitionDelay<TTime> | undefined;\n  /**\n   * The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   *\n   * @deprecated\n   */\n  OTransitionDuration?: Property.TransitionDuration<TTime> | undefined;\n  /**\n   * The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n   *\n   * **Syntax**: `none | <single-transition-property>#`\n   *\n   * **Initial value**: all\n   *\n   * @deprecated\n   */\n  OTransitionProperty?: Property.TransitionProperty | undefined;\n  /**\n   * The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   *\n   * @deprecated\n   */\n  OTransitionTimingFunction?: Property.TransitionTimingFunction | undefined;\n  /**\n   * The **`box-align`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\n   *\n   * **Syntax**: `start | center | end | baseline | stretch`\n   *\n   * **Initial value**: `stretch`\n   *\n   * @deprecated\n   */\n  WebkitBoxAlign?: Property.BoxAlign | undefined;\n  /**\n   * The **`box-direction`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n   *\n   * **Syntax**: `normal | reverse | inherit`\n   *\n   * **Initial value**: `normal`\n   *\n   * @deprecated\n   */\n  WebkitBoxDirection?: Property.BoxDirection | undefined;\n  /**\n   * The **`-moz-box-flex`** and **`-webkit-box-flex`** CSS properties specify how a `-moz-box` or `-webkit-box` grows to fill the box that contains it, in the direction of the containing box\'s layout.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  WebkitBoxFlex?: Property.BoxFlex | undefined;\n  /**\n   * The **`box-flex-group`** CSS property assigns the flexbox\'s child elements to a flex group.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  WebkitBoxFlexGroup?: Property.BoxFlexGroup | undefined;\n  /**\n   * The **`box-lines`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).\n   *\n   * **Syntax**: `single | multiple`\n   *\n   * **Initial value**: `single`\n   *\n   * @deprecated\n   */\n  WebkitBoxLines?: Property.BoxLines | undefined;\n  /**\n   * The **`box-ordinal-group`** CSS property assigns the flexbox\'s child elements to an ordinal group.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  WebkitBoxOrdinalGroup?: Property.BoxOrdinalGroup | undefined;\n  /**\n   * The **`box-orient`** CSS property sets whether an element lays out its contents horizontally or vertically.\n   *\n   * **Syntax**: `horizontal | vertical | inline-axis | block-axis | inherit`\n   *\n   * **Initial value**: `inline-axis` (`horizontal` in XUL)\n   *\n   * @deprecated\n   */\n  WebkitBoxOrient?: Property.BoxOrient | undefined;\n  /**\n   * The **`-moz-box-pack`** and **`-webkit-box-pack`** CSS properties specify how a `-moz-box` or `-webkit-box` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\n   *\n   * **Syntax**: `start | center | end | justify`\n   *\n   * **Initial value**: `start`\n   *\n   * @deprecated\n   */\n  WebkitBoxPack?: Property.BoxPack | undefined;\n  /**\n   * The **`scroll-snap-points-x`** CSS property defines the horizontal positioning of snap points within the content of the scroll container they are applied to.\n   *\n   * **Syntax**: `none | repeat( <length-percentage> )`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  WebkitScrollSnapPointsX?: Property.ScrollSnapPointsX | undefined;\n  /**\n   * The **`scroll-snap-points-y`** CSS property defines the vertical positioning of snap points within the content of the scroll container they are applied to.\n   *\n   * **Syntax**: `none | repeat( <length-percentage> )`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  WebkitScrollSnapPointsY?: Property.ScrollSnapPointsY | undefined;\n}\n\nexport interface SvgProperties<TLength = (string & {}) | 0, TTime = string & {}> {\n  alignmentBaseline?: Property.AlignmentBaseline | undefined;\n  baselineShift?: Property.BaselineShift<TLength> | undefined;\n  clip?: Property.Clip | undefined;\n  clipPath?: Property.ClipPath | undefined;\n  clipRule?: Property.ClipRule | undefined;\n  color?: Property.Color | undefined;\n  colorInterpolation?: Property.ColorInterpolation | undefined;\n  colorRendering?: Property.ColorRendering | undefined;\n  cursor?: Property.Cursor | undefined;\n  direction?: Property.Direction | undefined;\n  display?: Property.Display | undefined;\n  dominantBaseline?: Property.DominantBaseline | undefined;\n  fill?: Property.Fill | undefined;\n  fillOpacity?: Property.FillOpacity | undefined;\n  fillRule?: Property.FillRule | undefined;\n  filter?: Property.Filter | undefined;\n  floodColor?: Property.FloodColor | undefined;\n  floodOpacity?: Property.FloodOpacity | undefined;\n  font?: Property.Font | undefined;\n  fontFamily?: Property.FontFamily | undefined;\n  fontSize?: Property.FontSize<TLength> | undefined;\n  fontSizeAdjust?: Property.FontSizeAdjust | undefined;\n  fontStretch?: Property.FontStretch | undefined;\n  fontStyle?: Property.FontStyle | undefined;\n  fontVariant?: Property.FontVariant | undefined;\n  fontWeight?: Property.FontWeight | undefined;\n  glyphOrientationVertical?: Property.GlyphOrientationVertical | undefined;\n  imageRendering?: Property.ImageRendering | undefined;\n  letterSpacing?: Property.LetterSpacing<TLength> | undefined;\n  lightingColor?: Property.LightingColor | undefined;\n  lineHeight?: Property.LineHeight<TLength> | undefined;\n  marker?: Property.Marker | undefined;\n  markerEnd?: Property.MarkerEnd | undefined;\n  markerMid?: Property.MarkerMid | undefined;\n  markerStart?: Property.MarkerStart | undefined;\n  mask?: Property.Mask<TLength> | undefined;\n  opacity?: Property.Opacity | undefined;\n  overflow?: Property.Overflow | undefined;\n  paintOrder?: Property.PaintOrder | undefined;\n  pointerEvents?: Property.PointerEvents | undefined;\n  shapeRendering?: Property.ShapeRendering | undefined;\n  stopColor?: Property.StopColor | undefined;\n  stopOpacity?: Property.StopOpacity | undefined;\n  stroke?: Property.Stroke | undefined;\n  strokeDasharray?: Property.StrokeDasharray<TLength> | undefined;\n  strokeDashoffset?: Property.StrokeDashoffset<TLength> | undefined;\n  strokeLinecap?: Property.StrokeLinecap | undefined;\n  strokeLinejoin?: Property.StrokeLinejoin | undefined;\n  strokeMiterlimit?: Property.StrokeMiterlimit | undefined;\n  strokeOpacity?: Property.StrokeOpacity | undefined;\n  strokeWidth?: Property.StrokeWidth<TLength> | undefined;\n  textAnchor?: Property.TextAnchor | undefined;\n  textDecoration?: Property.TextDecoration<TLength> | undefined;\n  textRendering?: Property.TextRendering | undefined;\n  unicodeBidi?: Property.UnicodeBidi | undefined;\n  vectorEffect?: Property.VectorEffect | undefined;\n  visibility?: Property.Visibility | undefined;\n  whiteSpace?: Property.WhiteSpace | undefined;\n  wordSpacing?: Property.WordSpacing<TLength> | undefined;\n  writingMode?: Property.WritingMode | undefined;\n}\n\nexport interface Properties<TLength = (string & {}) | 0, TTime = string & {}>\n  extends StandardProperties<TLength, TTime>,\n    VendorProperties<TLength, TTime>,\n    ObsoleteProperties<TLength, TTime>,\n    SvgProperties<TLength, TTime> {}\n\nexport interface StandardLonghandPropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}> {\n  /**\n   * The **`accent-color`** CSS property sets the accent color for user-interface controls generated by some elements.\n   *\n   * **Syntax**: `auto | <color>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **93** | **92**  | **15.4** | **93** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/accent-color\n   */\n  "accent-color"?: Property.AccentColor | undefined;\n  /**\n   * The CSS **`align-content`** property sets the distribution of space between and around content items along a flexbox\'s cross-axis or a grid\'s block axis.\n   *\n   * **Syntax**: `normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>`\n   *\n   * **Initial value**: `normal`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **29**  | **28**  |  **9**  | **12** | **11** |\n   * | 21 _-x-_ |         | 7 _-x-_ |        |        |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/align-content\n   */\n  "align-content"?: Property.AlignContent | undefined;\n  /**\n   * The CSS **`align-items`** property sets the `align-self` value on all direct children as a group. In Flexbox, it controls the alignment of items on the Cross Axis. In Grid Layout, it controls the alignment of items on the Block Axis within their grid area.\n   *\n   * **Syntax**: `normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **52**  | **20**  |  **9**  | **12** | **11** |\n   * | 21 _-x-_ |         | 7 _-x-_ |        |        |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/align-items\n   */\n  "align-items"?: Property.AlignItems | undefined;\n  /**\n   * The **`align-self`** CSS property overrides a grid or flex item\'s `align-items` value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.\n   *\n   * **Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>`\n   *\n   * **Initial value**: `auto`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **36**  | **20**  |  **9**  | **12** | **11** |\n   * | 21 _-x-_ |         | 7 _-x-_ |        |        |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  |      IE      |\n   * | :----: | :-----: | :------: | :----: | :----------: |\n   * | **57** | **52**  | **10.1** | **16** | **10** _-x-_ |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/align-self\n   */\n  "align-self"?: Property.AlignSelf | undefined;\n  /**\n   * The **`align-tracks`** CSS property sets the alignment in the masonry axis for grid containers that have masonry in their block axis.\n   *\n   * **Syntax**: `[ normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position> ]#`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   |   n/a   |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/align-tracks\n   */\n  "align-tracks"?: Property.AlignTracks | undefined;\n  /**\n   * The **`animation-delay`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-delay\n   */\n  "animation-delay"?: Property.AnimationDelay<TTime> | undefined;\n  /**\n   * The **`animation-direction`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.\n   *\n   * **Syntax**: `<single-animation-direction>#`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-direction\n   */\n  "animation-direction"?: Property.AnimationDirection | undefined;\n  /**\n   * The **`animation-duration`** CSS property sets the length of time that an animation takes to complete one cycle.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-duration\n   */\n  "animation-duration"?: Property.AnimationDuration<TTime> | undefined;\n  /**\n   * The **`animation-fill-mode`** CSS property sets how a CSS animation applies styles to its target before and after its execution.\n   *\n   * **Syntax**: `<single-animation-fill-mode>#`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 5 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-fill-mode\n   */\n  "animation-fill-mode"?: Property.AnimationFillMode | undefined;\n  /**\n   * The **`animation-iteration-count`** CSS property sets the number of times an animation sequence should be played before stopping.\n   *\n   * **Syntax**: `<single-animation-iteration-count>#`\n   *\n   * **Initial value**: `1`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-iteration-count\n   */\n  "animation-iteration-count"?: Property.AnimationIterationCount | undefined;\n  /**\n   * The **`animation-name`** CSS property specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element.\n   *\n   * **Syntax**: `[ none | <keyframes-name> ]#`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-name\n   */\n  "animation-name"?: Property.AnimationName | undefined;\n  /**\n   * The **`animation-play-state`** CSS property sets whether an animation is running or paused.\n   *\n   * **Syntax**: `<single-animation-play-state>#`\n   *\n   * **Initial value**: `running`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-play-state\n   */\n  "animation-play-state"?: Property.AnimationPlayState | undefined;\n  /**\n   * The **`animation-timeline`** CSS property specifies the names of one or more `@scroll-timeline` at-rules describing the scroll animations to apply to the element.\n   *\n   * **Syntax**: `<single-animation-timeline>#`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   |   n/a   |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-timeline\n   */\n  "animation-timeline"?: Property.AnimationTimeline | undefined;\n  /**\n   * The **`animation-timing-function`** CSS property sets how an animation progresses through the duration of each cycle.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation-timing-function\n   */\n  "animation-timing-function"?: Property.AnimationTimingFunction | undefined;\n  /**\n   * The **`appearance`** CSS property is used to display an element using platform-native styling, based on the operating system\'s theme. The **`-moz-appearance`** and **`-webkit-appearance`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **`-webkit-appearance`**, for compatibility reasons.\n   *\n   * **Syntax**: `none | auto | textfield | menulist-button | <compat-auto>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome  | Firefox |  Safari  |   Edge   | IE  |\n   * | :-----: | :-----: | :------: | :------: | :-: |\n   * | **84**  | **80**  | **15.4** |  **84**  | No  |\n   * | 1 _-x-_ | 1 _-x-_ | 3 _-x-_  | 12 _-x-_ |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/appearance\n   */\n  appearance?: Property.Appearance | undefined;\n  /**\n   * The **`aspect-ratio`** CSS property sets a **preferred aspect ratio** for the box, which will be used in the calculation of auto sizes and some other layout functions.\n   *\n   * **Syntax**: `auto | <ratio>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **88** | **89**  | **15** | **88** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/aspect-ratio\n   */\n  "aspect-ratio"?: Property.AspectRatio | undefined;\n  /**\n   * The **`backdrop-filter`** CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything _behind_ the element, to see the effect you must make the element or its background at least partially transparent.\n   *\n   * **Syntax**: `none | <filter-function-list>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |   Safari    |  Edge  | IE  |\n   * | :----: | :-----: | :---------: | :----: | :-: |\n   * | **76** |   n/a   | **9** _-x-_ | **17** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/backdrop-filter\n   */\n  "backdrop-filter"?: Property.BackdropFilter | undefined;\n  /**\n   * The **`backface-visibility`** CSS property sets whether the back face of an element is visible when turned towards the user.\n   *\n   * **Syntax**: `visible | hidden`\n   *\n   * **Initial value**: `visible`\n   *\n   * |  Chrome  | Firefox  |  Safari   |  Edge  |   IE   |\n   * | :------: | :------: | :-------: | :----: | :----: |\n   * |  **36**  |  **16**  | **15.4**  | **12** | **10** |\n   * | 12 _-x-_ | 10 _-x-_ | 5.1 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/backface-visibility\n   */\n  "backface-visibility"?: Property.BackfaceVisibility | undefined;\n  /**\n   * The **`background-attachment`** CSS property sets whether a background image\'s position is fixed within the viewport, or scrolls with its containing block.\n   *\n   * **Syntax**: `<attachment>#`\n   *\n   * **Initial value**: `scroll`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-attachment\n   */\n  "background-attachment"?: Property.BackgroundAttachment | undefined;\n  /**\n   * The **`background-blend-mode`** CSS property sets how an element\'s background images should blend with each other and with the element\'s background color.\n   *\n   * **Syntax**: `<blend-mode>#`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **35** | **30**  | **8**  | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-blend-mode\n   */\n  "background-blend-mode"?: Property.BackgroundBlendMode | undefined;\n  /**\n   * The **`background-clip`** CSS property sets whether an element\'s background extends underneath its border box, padding box, or content box.\n   *\n   * **Syntax**: `<box>#`\n   *\n   * **Initial value**: `border-box`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  |  **4**  | **14**  | **12** | **9** |\n   * |        |         | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-clip\n   */\n  "background-clip"?: Property.BackgroundClip | undefined;\n  /**\n   * The **`background-color`** CSS property sets the background color of an element.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `transparent`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-color\n   */\n  "background-color"?: Property.BackgroundColor | undefined;\n  /**\n   * The **`background-image`** CSS property sets one or more background images on an element.\n   *\n   * **Syntax**: `<bg-image>#`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-image\n   */\n  "background-image"?: Property.BackgroundImage | undefined;\n  /**\n   * The **`background-origin`** CSS property sets the background\'s origin: from the border start, inside the border, or inside the padding.\n   *\n   * **Syntax**: `<box>#`\n   *\n   * **Initial value**: `padding-box`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **4**  | **3**  | **12** | **9** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-origin\n   */\n  "background-origin"?: Property.BackgroundOrigin | undefined;\n  /**\n   * The **`background-position-x`** CSS property sets the initial horizontal position for each background image. The position is relative to the position layer set by `background-origin`.\n   *\n   * **Syntax**: `[ center | [ [ left | right | x-start | x-end ]? <length-percentage>? ]! ]#`\n   *\n   * **Initial value**: `0%`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  | **49**  | **1**  | **12** | **6** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-position-x\n   */\n  "background-position-x"?: Property.BackgroundPositionX<TLength> | undefined;\n  /**\n   * The **`background-position-y`** CSS property sets the initial vertical position for each background image. The position is relative to the position layer set by `background-origin`.\n   *\n   * **Syntax**: `[ center | [ [ top | bottom | y-start | y-end ]? <length-percentage>? ]! ]#`\n   *\n   * **Initial value**: `0%`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  | **49**  | **1**  | **12** | **6** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-position-y\n   */\n  "background-position-y"?: Property.BackgroundPositionY<TLength> | undefined;\n  /**\n   * The **`background-repeat`** CSS property sets how background images are repeated. A background image can be repeated along the horizontal and vertical axes, or not repeated at all.\n   *\n   * **Syntax**: `<repeat-style>#`\n   *\n   * **Initial value**: `repeat`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-repeat\n   */\n  "background-repeat"?: Property.BackgroundRepeat | undefined;\n  /**\n   * The **`background-size`** CSS property sets the size of the element\'s background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\n   *\n   * **Syntax**: `<bg-size>#`\n   *\n   * **Initial value**: `auto auto`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\n   * | :-----: | :-----: | :-----: | :----: | :---: |\n   * |  **3**  |  **4**  |  **5**  | **12** | **9** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-size\n   */\n  "background-size"?: Property.BackgroundSize<TLength> | undefined;\n  /**\n   * **Syntax**: `clip | ellipsis | <string>`\n   *\n   * **Initial value**: `clip`\n   */\n  "block-overflow"?: Property.BlockOverflow | undefined;\n  /**\n   * The **`block-size`** CSS property defines the horizontal or vertical size of an element\'s block, depending on its writing mode. It corresponds to either the `width` or the `height` property, depending on the value of `writing-mode`.\n   *\n   * **Syntax**: `<\'width\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/block-size\n   */\n  "block-size"?: Property.BlockSize<TLength> | undefined;\n  /**\n   * The **`border-block-color`** CSS property defines the color of the logical block borders of an element, which maps to a physical border color depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-color` and `border-bottom-color`, or `border-right-color` and `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-color\'>{1,2}`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-color\n   */\n  "border-block-color"?: Property.BorderBlockColor | undefined;\n  /**\n   * The **`border-block-end-color`** CSS property defines the color of the logical block-end border of an element, which maps to a physical border color depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-color\'>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-end-color\n   */\n  "border-block-end-color"?: Property.BorderBlockEndColor | undefined;\n  /**\n   * The **`border-block-end-style`** CSS property defines the style of the logical block-end border of an element, which maps to a physical border style depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-end-style\n   */\n  "border-block-end-style"?: Property.BorderBlockEndStyle | undefined;\n  /**\n   * The **`border-block-end-width`** CSS property defines the width of the logical block-end border of an element, which maps to a physical border width depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-width\'>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-end-width\n   */\n  "border-block-end-width"?: Property.BorderBlockEndWidth<TLength> | undefined;\n  /**\n   * The **`border-block-start-color`** CSS property defines the color of the logical block-start border of an element, which maps to a physical border color depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-color\'>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-start-color\n   */\n  "border-block-start-color"?: Property.BorderBlockStartColor | undefined;\n  /**\n   * The **`border-block-start-style`** CSS property defines the style of the logical block start border of an element, which maps to a physical border style depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-start-style\n   */\n  "border-block-start-style"?: Property.BorderBlockStartStyle | undefined;\n  /**\n   * The **`border-block-start-width`** CSS property defines the width of the logical block-start border of an element, which maps to a physical border width depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-width\'>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-start-width\n   */\n  "border-block-start-width"?: Property.BorderBlockStartWidth<TLength> | undefined;\n  /**\n   * The **`border-block-style`** CSS property defines the style of the logical block borders of an element, which maps to a physical border style depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-style` and `border-bottom-style`, or `border-left-style` and `border-right-style` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-style\n   */\n  "border-block-style"?: Property.BorderBlockStyle | undefined;\n  /**\n   * The **`border-block-width`** CSS property defines the width of the logical block borders of an element, which maps to a physical border width depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-width` and `border-bottom-width`, or `border-left-width`, and `border-right-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-width\'>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-width\n   */\n  "border-block-width"?: Property.BorderBlockWidth<TLength> | undefined;\n  /**\n   * The **`border-bottom-color`** CSS property sets the color of an element\'s bottom border. It can also be set with the shorthand CSS properties `border-color` or `border-bottom`.\n   *\n   * **Syntax**: `<\'border-top-color\'>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-color\n   */\n  "border-bottom-color"?: Property.BorderBottomColor | undefined;\n  /**\n   * The **`border-bottom-left-radius`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\n   * | :-----: | :-----: | :-----: | :----: | :---: |\n   * |  **4**  |  **4**  |  **5**  | **12** | **9** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-left-radius\n   */\n  "border-bottom-left-radius"?: Property.BorderBottomLeftRadius<TLength> | undefined;\n  /**\n   * The **`border-bottom-right-radius`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\n   * | :-----: | :-----: | :-----: | :----: | :---: |\n   * |  **4**  |  **4**  |  **5**  | **12** | **9** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-right-radius\n   */\n  "border-bottom-right-radius"?: Property.BorderBottomRightRadius<TLength> | undefined;\n  /**\n   * The **`border-bottom-style`** CSS property sets the line style of an element\'s bottom `border`.\n   *\n   * **Syntax**: `<line-style>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-style\n   */\n  "border-bottom-style"?: Property.BorderBottomStyle | undefined;\n  /**\n   * The **`border-bottom-width`** CSS property sets the width of the bottom border of an element.\n   *\n   * **Syntax**: `<line-width>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom-width\n   */\n  "border-bottom-width"?: Property.BorderBottomWidth<TLength> | undefined;\n  /**\n   * The **`border-collapse`** CSS property sets whether cells inside a `<table>` have shared or separate borders.\n   *\n   * **Syntax**: `collapse | separate`\n   *\n   * **Initial value**: `separate`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  |  **1**  | **1.2** | **12** | **5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-collapse\n   */\n  "border-collapse"?: Property.BorderCollapse | undefined;\n  /**\n   * The **`border-end-end-radius`** CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element\'s `writing-mode`, `direction`, and `text-orientation`. This is useful when building styles to work regardless of the text orientation and writing mode.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **89** | **66**  | **15** | **89** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-end-end-radius\n   */\n  "border-end-end-radius"?: Property.BorderEndEndRadius<TLength> | undefined;\n  /**\n   * The **`border-end-start-radius`** CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element\'s `writing-mode`, `direction`, and `text-orientation`. This is useful when building styles to work regardless of the text orientation and writing mode.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **89** | **66**  | **15** | **89** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-end-start-radius\n   */\n  "border-end-start-radius"?: Property.BorderEndStartRadius<TLength> | undefined;\n  /**\n   * The **`border-image-outset`** CSS property sets the distance by which an element\'s border image is set out from its border box.\n   *\n   * **Syntax**: `[ <length> | <number> ]{1,4}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **15** | **15**  | **6**  | **12** | **11** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-outset\n   */\n  "border-image-outset"?: Property.BorderImageOutset<TLength> | undefined;\n  /**\n   * The **`border-image-repeat`** CSS property defines how the edge regions of a source image are adjusted to fit the dimensions of an element\'s border image.\n   *\n   * **Syntax**: `[ stretch | repeat | round | space ]{1,2}`\n   *\n   * **Initial value**: `stretch`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **15** | **15**  | **6**  | **12** | **11** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-repeat\n   */\n  "border-image-repeat"?: Property.BorderImageRepeat | undefined;\n  /**\n   * The **`border-image-slice`** CSS property divides the image specified by `border-image-source` into regions. These regions form the components of an element\'s border image.\n   *\n   * **Syntax**: `<number-percentage>{1,4} && fill?`\n   *\n   * **Initial value**: `100%`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **15** | **15**  | **6**  | **12** | **11** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-slice\n   */\n  "border-image-slice"?: Property.BorderImageSlice | undefined;\n  /**\n   * The **`border-image-source`** CSS property sets the source image used to create an element\'s border image.\n   *\n   * **Syntax**: `none | <image>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **15** | **15**  | **6**  | **12** | **11** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-source\n   */\n  "border-image-source"?: Property.BorderImageSource | undefined;\n  /**\n   * The **`border-image-width`** CSS property sets the width of an element\'s border image.\n   *\n   * **Syntax**: `[ <length-percentage> | <number> | auto ]{1,4}`\n   *\n   * **Initial value**: `1`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **15** | **13**  | **6**  | **12** | **11** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-image-width\n   */\n  "border-image-width"?: Property.BorderImageWidth<TLength> | undefined;\n  /**\n   * The **`border-inline-color`** CSS property defines the color of the logical inline borders of an element, which maps to a physical border color depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-color` and `border-bottom-color`, or `border-right-color` and `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-color\'>{1,2}`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-color\n   */\n  "border-inline-color"?: Property.BorderInlineColor | undefined;\n  /**\n   * The **`border-inline-end-color`** CSS property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-color\'>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome |           Firefox           |  Safari  |  Edge  | IE  |\n   * | :----: | :-------------------------: | :------: | :----: | :-: |\n   * | **69** |           **41**            | **12.1** | **79** | No  |\n   * |        | 3 _(-moz-border-end-color)_ |          |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-end-color\n   */\n  "border-inline-end-color"?: Property.BorderInlineEndColor | undefined;\n  /**\n   * The **`border-inline-end-style`** CSS property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome |           Firefox           |  Safari  |  Edge  | IE  |\n   * | :----: | :-------------------------: | :------: | :----: | :-: |\n   * | **69** |           **41**            | **12.1** | **79** | No  |\n   * |        | 3 _(-moz-border-end-style)_ |          |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-end-style\n   */\n  "border-inline-end-style"?: Property.BorderInlineEndStyle | undefined;\n  /**\n   * The **`border-inline-end-width`** CSS property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-width\'>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome |           Firefox           |  Safari  |  Edge  | IE  |\n   * | :----: | :-------------------------: | :------: | :----: | :-: |\n   * | **69** |           **41**            | **12.1** | **79** | No  |\n   * |        | 3 _(-moz-border-end-width)_ |          |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-end-width\n   */\n  "border-inline-end-width"?: Property.BorderInlineEndWidth<TLength> | undefined;\n  /**\n   * The **`border-inline-start-color`** CSS property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-color\'>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome |            Firefox            |  Safari  |  Edge  | IE  |\n   * | :----: | :---------------------------: | :------: | :----: | :-: |\n   * | **69** |            **41**             | **12.1** | **79** | No  |\n   * |        | 3 _(-moz-border-start-color)_ |          |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-start-color\n   */\n  "border-inline-start-color"?: Property.BorderInlineStartColor | undefined;\n  /**\n   * The **`border-inline-start-style`** CSS property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome |            Firefox            |  Safari  |  Edge  | IE  |\n   * | :----: | :---------------------------: | :------: | :----: | :-: |\n   * | **69** |            **41**             | **12.1** | **79** | No  |\n   * |        | 3 _(-moz-border-start-style)_ |          |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-start-style\n   */\n  "border-inline-start-style"?: Property.BorderInlineStartStyle | undefined;\n  /**\n   * The **`border-inline-start-width`** CSS property defines the width of the logical inline-start border of an element, which maps to a physical border width depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-width\'>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-start-width\n   */\n  "border-inline-start-width"?: Property.BorderInlineStartWidth<TLength> | undefined;\n  /**\n   * The **`border-inline-style`** CSS property defines the style of the logical inline borders of an element, which maps to a physical border style depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-style` and `border-bottom-style`, or `border-left-style` and `border-right-style` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-style\n   */\n  "border-inline-style"?: Property.BorderInlineStyle | undefined;\n  /**\n   * The **`border-inline-width`** CSS property defines the width of the logical inline borders of an element, which maps to a physical border width depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-width` and `border-bottom-width`, or `border-left-width`, and `border-right-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-width\'>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-width\n   */\n  "border-inline-width"?: Property.BorderInlineWidth<TLength> | undefined;\n  /**\n   * The **`border-left-color`** CSS property sets the color of an element\'s left border. It can also be set with the shorthand CSS properties `border-color` or `border-left`.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-left-color\n   */\n  "border-left-color"?: Property.BorderLeftColor | undefined;\n  /**\n   * The **`border-left-style`** CSS property sets the line style of an element\'s left `border`.\n   *\n   * **Syntax**: `<line-style>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-left-style\n   */\n  "border-left-style"?: Property.BorderLeftStyle | undefined;\n  /**\n   * The **`border-left-width`** CSS property sets the width of the left border of an element.\n   *\n   * **Syntax**: `<line-width>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-left-width\n   */\n  "border-left-width"?: Property.BorderLeftWidth<TLength> | undefined;\n  /**\n   * The **`border-right-color`** CSS property sets the color of an element\'s right border. It can also be set with the shorthand CSS properties `border-color` or `border-right`.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-right-color\n   */\n  "border-right-color"?: Property.BorderRightColor | undefined;\n  /**\n   * The **`border-right-style`** CSS property sets the line style of an element\'s right `border`.\n   *\n   * **Syntax**: `<line-style>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-right-style\n   */\n  "border-right-style"?: Property.BorderRightStyle | undefined;\n  /**\n   * The **`border-right-width`** CSS property sets the width of the right border of an element.\n   *\n   * **Syntax**: `<line-width>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-right-width\n   */\n  "border-right-width"?: Property.BorderRightWidth<TLength> | undefined;\n  /**\n   * The **`border-spacing`** CSS property sets the distance between the borders of adjacent `<table>` cells. This property applies only when `border-collapse` is `separate`.\n   *\n   * **Syntax**: `<length> <length>?`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-spacing\n   */\n  "border-spacing"?: Property.BorderSpacing<TLength> | undefined;\n  /**\n   * The **`border-start-end-radius`** CSS property defines a logical border radius on an element, which maps to a physical border radius depending on the element\'s `writing-mode`, `direction`, and `text-orientation`. This is useful when building styles to work regardless of the text orientation and writing mode.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **89** | **66**  | **15** | **89** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-start-end-radius\n   */\n  "border-start-end-radius"?: Property.BorderStartEndRadius<TLength> | undefined;\n  /**\n   * The **`border-start-start-radius`** CSS property defines a logical border radius on an element, which maps to a physical border radius that depends on the element\'s `writing-mode`, `direction`, and `text-orientation`. This is useful when building styles to work regardless of the text orientation and writing mode.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **89** | **66**  | **15** | **89** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-start-start-radius\n   */\n  "border-start-start-radius"?: Property.BorderStartStartRadius<TLength> | undefined;\n  /**\n   * The **`border-top-color`** CSS property sets the color of an element\'s top border. It can also be set with the shorthand CSS properties `border-color` or `border-top`.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-color\n   */\n  "border-top-color"?: Property.BorderTopColor | undefined;\n  /**\n   * The **`border-top-left-radius`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\n   * | :-----: | :-----: | :-----: | :----: | :---: |\n   * |  **4**  |  **4**  |  **5**  | **12** | **9** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-left-radius\n   */\n  "border-top-left-radius"?: Property.BorderTopLeftRadius<TLength> | undefined;\n  /**\n   * The **`border-top-right-radius`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\n   * | :-----: | :-----: | :-----: | :----: | :---: |\n   * |  **4**  |  **4**  |  **5**  | **12** | **9** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-right-radius\n   */\n  "border-top-right-radius"?: Property.BorderTopRightRadius<TLength> | undefined;\n  /**\n   * The **`border-top-style`** CSS property sets the line style of an element\'s top `border`.\n   *\n   * **Syntax**: `<line-style>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-style\n   */\n  "border-top-style"?: Property.BorderTopStyle | undefined;\n  /**\n   * The **`border-top-width`** CSS property sets the width of the top border of an element.\n   *\n   * **Syntax**: `<line-width>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-top-width\n   */\n  "border-top-width"?: Property.BorderTopWidth<TLength> | undefined;\n  /**\n   * The **`bottom`** CSS property participates in setting the vertical position of a positioned element. It has no effect on non-positioned elements.\n   *\n   * **Syntax**: `<length> | <percentage> | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/bottom\n   */\n  bottom?: Property.Bottom<TLength> | undefined;\n  /**\n   * The **`box-decoration-break`** CSS property specifies how an element\'s fragments should be rendered when broken across multiple lines, columns, or pages.\n   *\n   * **Syntax**: `slice | clone`\n   *\n   * **Initial value**: `slice`\n   *\n   * |    Chrome    | Firefox |   Safari    |     Edge     | IE  |\n   * | :----------: | :-----: | :---------: | :----------: | :-: |\n   * | **22** _-x-_ | **32**  | **7** _-x-_ | **79** _-x-_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/box-decoration-break\n   */\n  "box-decoration-break"?: Property.BoxDecorationBreak | undefined;\n  /**\n   * The **`box-shadow`** CSS property adds shadow effects around an element\'s frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.\n   *\n   * **Syntax**: `none | <shadow>#`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\n   * | :-----: | :-----: | :-----: | :----: | :---: |\n   * | **10**  |  **4**  | **5.1** | **12** | **9** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/box-shadow\n   */\n  "box-shadow"?: Property.BoxShadow | undefined;\n  /**\n   * The **`box-sizing`** CSS property sets how the total width and height of an element is calculated.\n   *\n   * **Syntax**: `content-box | border-box`\n   *\n   * **Initial value**: `content-box`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\n   * | :-----: | :-----: | :-----: | :----: | :---: |\n   * | **10**  | **29**  | **5.1** | **12** | **8** |\n   * | 1 _-x-_ | 1 _-x-_ | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/box-sizing\n   */\n  "box-sizing"?: Property.BoxSizing | undefined;\n  /**\n   * The **`break-after`** CSS property sets how page, column, or region breaks should behave after a generated box. If there is no generated box, the property is ignored.\n   *\n   * **Syntax**: `auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region`\n   *\n   * **Initial value**: `auto`\n   *\n   * ---\n   *\n   * _Supported in Multi-column Layout_\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **50** | **65**  |   No   | **12** | **10** |\n   *\n   * ---\n   *\n   * _Supported in Paged Media_\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **50** | **65**  | **10** | **12** | **10** |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/break-after\n   */\n  "break-after"?: Property.BreakAfter | undefined;\n  /**\n   * The **`break-before`** CSS property sets how page, column, or region breaks should behave before a generated box. If there is no generated box, the property is ignored.\n   *\n   * **Syntax**: `auto | avoid | always | all | avoid-page | page | left | right | recto | verso | avoid-column | column | avoid-region | region`\n   *\n   * **Initial value**: `auto`\n   *\n   * ---\n   *\n   * _Supported in Multi-column Layout_\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **50** | **65**  |   No   | **12** | **10** |\n   *\n   * ---\n   *\n   * _Supported in Paged Media_\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **50** | **65**  | **10** | **12** | **10** |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/break-before\n   */\n  "break-before"?: Property.BreakBefore | undefined;\n  /**\n   * The **`break-inside`** CSS property sets how page, column, or region breaks should behave inside a generated box. If there is no generated box, the property is ignored.\n   *\n   * **Syntax**: `auto | avoid | avoid-page | avoid-column | avoid-region`\n   *\n   * **Initial value**: `auto`\n   *\n   * ---\n   *\n   * _Supported in Multi-column Layout_\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **50** | **65**  | **10** | **12** | **10** |\n   *\n   * ---\n   *\n   * _Supported in Paged Media_\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **50** | **65**  | **10** | **12** | **10** |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/break-inside\n   */\n  "break-inside"?: Property.BreakInside | undefined;\n  /**\n   * The **`caption-side`** CSS property puts the content of a table\'s `<caption>` on the specified side. The values are relative to the `writing-mode` of the table.\n   *\n   * **Syntax**: `top | bottom | block-start | block-end | inline-start | inline-end`\n   *\n   * **Initial value**: `top`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/caption-side\n   */\n  "caption-side"?: Property.CaptionSide | undefined;\n  /**\n   * The **`caret-color`** CSS property sets the color of the **insertion caret**, the visible marker where the next character typed will be inserted. This is sometimes referred to as the **text input cursor**. The caret appears in elements such as `<input>` or those with the `contenteditable` attribute. The caret is typically a thin vertical line that flashes to help make it more noticeable. By default, it is black, but its color can be altered with this property.\n   *\n   * **Syntax**: `auto | <color>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **53**  | **11.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/caret-color\n   */\n  "caret-color"?: Property.CaretColor | undefined;\n  /**\n   * The **`clear`** CSS property sets whether an element must be moved below (cleared) floating elements that precede it. The `clear` property applies to floating and non-floating elements.\n   *\n   * **Syntax**: `none | left | right | both | inline-start | inline-end`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/clear\n   */\n  clear?: Property.Clear | undefined;\n  /**\n   * The **`clip-path`** CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden.\n   *\n   * **Syntax**: `<clip-source> | [ <basic-shape> || <geometry-box> ] | none`\n   *\n   * **Initial value**: `none`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **55**  | **3.5** | **9.1** | **12** | **10** |\n   * | 23 _-x-_ |         | 7 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/clip-path\n   */\n  "clip-path"?: Property.ClipPath | undefined;\n  /**\n   * The **`color`** CSS property sets the foreground color value of an element\'s text and text decorations, and sets the `<currentcolor>` value. `currentcolor` may be used as an indirect value on _other_ properties and is the default for other color properties, such as `border-color`.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `canvastext`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/color\n   */\n  color?: Property.Color | undefined;\n  /**\n   * The **`print-color-adjust`** CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element\'s appearance it determines to be necessary and prudent given the type and capabilities of the output device.\n   *\n   * **Syntax**: `economy | exact`\n   *\n   * **Initial value**: `economy`\n   *\n   * |    Chrome    |       Firefox       |  Safari  |     Edge     | IE  |\n   * | :----------: | :-----------------: | :------: | :----------: | :-: |\n   * | **17** _-x-_ |       **97**        | **15.4** | **79** _-x-_ | No  |\n   * |              | 48 _(color-adjust)_ | 6 _-x-_  |              |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/print-color-adjust\n   */\n  "color-adjust"?: Property.PrintColorAdjust | undefined;\n  /**\n   * The **`color-scheme`** CSS property allows an element to indicate which color schemes it can comfortably be rendered in.\n   *\n   * **Syntax**: `normal | [ light | dark | <custom-ident> ]+ && only?`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **81** | **96**  | **13** | **81** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/color-scheme\n   */\n  "color-scheme"?: Property.ColorScheme | undefined;\n  /**\n   * The **`column-count`** CSS property breaks an element\'s content into the specified number of columns.\n   *\n   * **Syntax**: `<integer> | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **50**  | **52**  |  **9**  | **12** | **10** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-count\n   */\n  "column-count"?: Property.ColumnCount | undefined;\n  /**\n   * The **`column-fill`** CSS property controls how an element\'s contents are balanced when broken into columns.\n   *\n   * **Syntax**: `auto | balance | balance-all`\n   *\n   * **Initial value**: `balance`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |   IE   |\n   * | :----: | :-----: | :-----: | :----: | :----: |\n   * | **50** | **52**  |  **9**  | **12** | **10** |\n   * |        |         | 8 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-fill\n   */\n  "column-fill"?: Property.ColumnFill | undefined;\n  /**\n   * The **`column-gap`** CSS property sets the size of the gap (gutter) between an element\'s columns.\n   *\n   * **Syntax**: `normal | <length-percentage>`\n   *\n   * **Initial value**: `normal`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **84** | **63**  | **14.1** | **84** | No  |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * |         Chrome         |        Firefox         |          Safari          |  Edge  | IE  |\n   * | :--------------------: | :--------------------: | :----------------------: | :----: | :-: |\n   * |         **66**         |         **61**         |          **12**          | **16** | No  |\n   * | 57 _(grid-column-gap)_ | 52 _(grid-column-gap)_ | 10.1 _(grid-column-gap)_ |        |     |\n   *\n   * ---\n   *\n   * _Supported in Multi-column Layout_\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **50**  | **52**  | **10**  | **12** | **10** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |        |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-gap\n   */\n  "column-gap"?: Property.ColumnGap<TLength> | undefined;\n  /**\n   * The **`column-rule-color`** CSS property sets the color of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **50**  | **52**  |  **9**  | **12** | **10** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-rule-color\n   */\n  "column-rule-color"?: Property.ColumnRuleColor | undefined;\n  /**\n   * The **`column-rule-style`** CSS property sets the style of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'border-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **50**  | **52**  |  **9**  | **12** | **10** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-rule-style\n   */\n  "column-rule-style"?: Property.ColumnRuleStyle | undefined;\n  /**\n   * The **`column-rule-width`** CSS property sets the width of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'border-width\'>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **50**  | **52**  |  **9**  | **12** | **10** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-rule-width\n   */\n  "column-rule-width"?: Property.ColumnRuleWidth<TLength> | undefined;\n  /**\n   * The **`column-span`** CSS property makes it possible for an element to span across all columns when its value is set to `all`.\n   *\n   * **Syntax**: `none | all`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n   * | :-----: | :-----: | :-------: | :----: | :----: |\n   * | **50**  | **71**  |   **9**   | **12** | **10** |\n   * | 6 _-x-_ |         | 5.1 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-span\n   */\n  "column-span"?: Property.ColumnSpan | undefined;\n  /**\n   * The **`column-width`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the `column-width` value. If the width of the container is narrower than the specified value, the single column\'s width will be smaller than the declared column width.\n   *\n   * **Syntax**: `<length> | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **50**  | **50**  |  **9**  | **12** | **10** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-width\n   */\n  "column-width"?: Property.ColumnWidth<TLength> | undefined;\n  /**\n   * The **`contain`** CSS property allows an author to indicate that an element and its contents are, as much as possible, _independent_ of the rest of the document tree. This allows the browser to recalculate layout, style, paint, size, or any combination of them for a limited area of the DOM and not the entire page, leading to obvious performance benefits.\n   *\n   * **Syntax**: `none | strict | content | [ size || layout || style || paint ]`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **52** | **69**  | **15.4** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/contain\n   */\n  contain?: Property.Contain | undefined;\n  /**\n   * The **`content`** CSS property replaces an element with a generated value. Objects inserted using the `content` property are **anonymous replaced elements**.\n   *\n   * **Syntax**: `normal | none | [ <content-replacement> | <content-list> ] [/ [ <string> | <counter> ]+ ]?`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/content\n   */\n  content?: Property.Content | undefined;\n  /**\n   * The **`content-visibility`** CSS property controls whether or not an element renders its contents at all, along with forcing a strong set of containments, allowing user agents to potentially omit large swathes of layout and rendering work until it becomes needed. Basically it enables the user agent to skip an element\'s rendering work (including layout and painting) until it is needed — which makes the initial page load much faster.\n   *\n   * **Syntax**: `visible | auto | hidden`\n   *\n   * **Initial value**: `visible`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **85** |   No    | **15.4** | **85** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/content-visibility\n   */\n  "content-visibility"?: Property.ContentVisibility | undefined;\n  /**\n   * The **`counter-increment`** CSS property increases or decreases the value of a CSS counter by a given value.\n   *\n   * **Syntax**: `[ <counter-name> <integer>? ]+ | none`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **2**  |  **1**  | **3**  | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/counter-increment\n   */\n  "counter-increment"?: Property.CounterIncrement | undefined;\n  /**\n   * The **`counter-reset`** CSS property resets a CSS counter to a given value. This property will create a new counter or reversed counter with the given name on the specified element.\n   *\n   * **Syntax**: `[ <counter-name> <integer>? | <reversed-counter-name> <integer>? ]+ | none`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **2**  |  **1**  | **3**  | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/counter-reset\n   */\n  "counter-reset"?: Property.CounterReset | undefined;\n  /**\n   * The **`counter-set`** CSS property sets a CSS counter to a given value. It manipulates the value of existing counters, and will only create new counters if there isn\'t already a counter of the given name on the element.\n   *\n   * **Syntax**: `[ <counter-name> <integer>? ]+ | none`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **85** | **68**  |   No   | **85** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/counter-set\n   */\n  "counter-set"?: Property.CounterSet | undefined;\n  /**\n   * The **`cursor`** CSS property sets the mouse cursor, if any, to show when the mouse pointer is over an element.\n   *\n   * **Syntax**: `[ [ <url> [ <x> <y> ]? , ]* [ auto | default | none | context-menu | help | pointer | progress | wait | cell | crosshair | text | vertical-text | alias | copy | move | no-drop | not-allowed | e-resize | n-resize | ne-resize | nw-resize | s-resize | se-resize | sw-resize | w-resize | ew-resize | ns-resize | nesw-resize | nwse-resize | col-resize | row-resize | all-scroll | zoom-in | zoom-out | grab | grabbing ] ]`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  |  **1**  | **1.2** | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/cursor\n   */\n  cursor?: Property.Cursor | undefined;\n  /**\n   * The **`direction`** CSS property sets the direction of text, table columns, and horizontal overflow. Use `rtl` for languages written from right to left (like Hebrew or Arabic), and `ltr` for those written from left to right (like English and most other languages).\n   *\n   * **Syntax**: `ltr | rtl`\n   *\n   * **Initial value**: `ltr`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **2**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/direction\n   */\n  direction?: Property.Direction | undefined;\n  /**\n   * The **`display`** CSS property sets whether an element is treated as a block or inline element and the layout used for its children, such as flow layout, grid or flex.\n   *\n   * **Syntax**: `[ <display-outside> || <display-inside> ] | <display-listitem> | <display-internal> | <display-box> | <display-legacy>`\n   *\n   * **Initial value**: `inline`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/display\n   */\n  display?: Property.Display | undefined;\n  /**\n   * The **`empty-cells`** CSS property sets whether borders and backgrounds appear around `<table>` cells that have no visible content.\n   *\n   * **Syntax**: `show | hide`\n   *\n   * **Initial value**: `show`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  |  **1**  | **1.2** | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/empty-cells\n   */\n  "empty-cells"?: Property.EmptyCells | undefined;\n  /**\n   * The **`filter`** CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders.\n   *\n   * **Syntax**: `none | <filter-function-list>`\n   *\n   * **Initial value**: `none`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  | IE  |\n   * | :------: | :-----: | :-----: | :----: | :-: |\n   * |  **53**  | **35**  | **9.1** | **12** | No  |\n   * | 18 _-x-_ |         | 6 _-x-_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/filter\n   */\n  filter?: Property.Filter | undefined;\n  /**\n   * The **`flex-basis`** CSS property sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with `box-sizing`.\n   *\n   * **Syntax**: `content | <\'width\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **29**  | **22**  |  **9**  | **12** | **11** |\n   * | 22 _-x-_ |         | 7 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/flex-basis\n   */\n  "flex-basis"?: Property.FlexBasis<TLength> | undefined;\n  /**\n   * The **`flex-direction`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).\n   *\n   * **Syntax**: `row | row-reverse | column | column-reverse`\n   *\n   * **Initial value**: `row`\n   *\n   * |  Chrome  | Firefox  | Safari  |  Edge  |    IE    |\n   * | :------: | :------: | :-----: | :----: | :------: |\n   * |  **29**  |  **81**  |  **9**  | **12** |  **11**  |\n   * | 21 _-x-_ | 49 _-x-_ | 7 _-x-_ |        | 10 _-x-_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/flex-direction\n   */\n  "flex-direction"?: Property.FlexDirection | undefined;\n  /**\n   * The **`flex-grow`** CSS property sets the flex grow factor of a flex item\'s main size.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `0`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |            IE            |\n   * | :------: | :-----: | :-----: | :----: | :----------------------: |\n   * |  **29**  | **20**  |  **9**  | **12** |          **11**          |\n   * | 22 _-x-_ |         | 7 _-x-_ |        | 10 _(-ms-flex-positive)_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/flex-grow\n   */\n  "flex-grow"?: Property.FlexGrow | undefined;\n  /**\n   * The **`flex-shrink`** CSS property sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to `flex-shrink`.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `1`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **29**  | **20**  |  **9**  | **12** | **10** |\n   * | 22 _-x-_ |         | 8 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/flex-shrink\n   */\n  "flex-shrink"?: Property.FlexShrink | undefined;\n  /**\n   * The **`flex-wrap`** CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked.\n   *\n   * **Syntax**: `nowrap | wrap | wrap-reverse`\n   *\n   * **Initial value**: `nowrap`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **29**  | **28**  |  **9**  | **12** | **11** |\n   * | 21 _-x-_ |         | 7 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/flex-wrap\n   */\n  "flex-wrap"?: Property.FlexWrap | undefined;\n  /**\n   * The **`float`** CSS property places an element on the left or right side of its container, allowing text and inline elements to wrap around it. The element is removed from the normal flow of the page, though still remaining a part of the flow (in contrast to absolute positioning).\n   *\n   * **Syntax**: `left | right | none | inline-start | inline-end`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/float\n   */\n  float?: Property.Float | undefined;\n  /**\n   * The **`font-family`** CSS property specifies a prioritized list of one or more font family names and/or generic family names for the selected element.\n   *\n   * **Syntax**: `[ <family-name> | <generic-family> ]#`\n   *\n   * **Initial value**: depends on user agent\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-family\n   */\n  "font-family"?: Property.FontFamily | undefined;\n  /**\n   * The **`font-feature-settings`** CSS property controls advanced typographic features in OpenType fonts.\n   *\n   * **Syntax**: `normal | <feature-tag-value>#`\n   *\n   * **Initial value**: `normal`\n   *\n   * |  Chrome  | Firefox  | Safari  |  Edge  |   IE   |\n   * | :------: | :------: | :-----: | :----: | :----: |\n   * |  **48**  |  **34**  | **9.1** | **15** | **10** |\n   * | 16 _-x-_ | 15 _-x-_ |         |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-feature-settings\n   */\n  "font-feature-settings"?: Property.FontFeatureSettings | undefined;\n  /**\n   * The **`font-kerning`** CSS property sets the use of the kerning information stored in a font.\n   *\n   * **Syntax**: `auto | normal | none`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :-----: | :----: | :-: |\n   * | **33** | **32**  |  **9**  | **79** | No  |\n   * |        |         | 6 _-x-_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-kerning\n   */\n  "font-kerning"?: Property.FontKerning | undefined;\n  /**\n   * The **`font-language-override`** CSS property controls the use of language-specific glyphs in a typeface.\n   *\n   * **Syntax**: `normal | <string>`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   | **34**  |   No   |  No  | No  |\n   * |        | 4 _-x-_ |        |      |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-language-override\n   */\n  "font-language-override"?: Property.FontLanguageOverride | undefined;\n  /**\n   * The **`font-optical-sizing`** CSS property sets whether text rendering is optimized for viewing at different sizes.\n   *\n   * **Syntax**: `auto | none`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **79** | **62**  | **11** | **17** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-optical-sizing\n   */\n  "font-optical-sizing"?: Property.FontOpticalSizing | undefined;\n  /**\n   * The **`font-size`** CSS property sets the size of the font. Changing the font size also updates the sizes of the font size-relative `<length>` units, such as `em`, `ex`, and so forth.\n   *\n   * **Syntax**: `<absolute-size> | <relative-size> | <length-percentage>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-size\n   */\n  "font-size"?: Property.FontSize<TLength> | undefined;\n  /**\n   * The **`font-size-adjust`** CSS property sets the size of lower-case letters relative to the current font size (which defines the size of upper-case letters).\n   *\n   * **Syntax**: `none | [ ex-height | cap-height | ch-width | ic-width | ic-height ]? [ from-font | <number> ]`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |  n/a   |  **1**  |   No   | n/a  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-size-adjust\n   */\n  "font-size-adjust"?: Property.FontSizeAdjust | undefined;\n  /**\n   * The **`font-smooth`** CSS property controls the application of anti-aliasing when fonts are rendered.\n   *\n   * **Syntax**: `auto | never | always | <absolute-size> | <length>`\n   *\n   * **Initial value**: `auto`\n   *\n   * |              Chrome              |              Firefox               |              Safari              |               Edge                | IE  |\n   * | :------------------------------: | :--------------------------------: | :------------------------------: | :-------------------------------: | :-: |\n   * | **5** _(-webkit-font-smoothing)_ | **25** _(-moz-osx-font-smoothing)_ | **4** _(-webkit-font-smoothing)_ | **79** _(-webkit-font-smoothing)_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-smooth\n   */\n  "font-smooth"?: Property.FontSmooth<TLength> | undefined;\n  /**\n   * The **`font-stretch`** CSS property selects a normal, condensed, or expanded face from a font.\n   *\n   * **Syntax**: `<font-stretch-absolute>`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **60** |  **9**  | **11** | **12** | **9** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-stretch\n   */\n  "font-stretch"?: Property.FontStretch | undefined;\n  /**\n   * The **`font-style`** CSS property sets whether a font should be styled with a normal, italic, or oblique face from its `font-family`.\n   *\n   * **Syntax**: `normal | italic | oblique <angle>?`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-style\n   */\n  "font-style"?: Property.FontStyle | undefined;\n  /**\n   * The **`font-synthesis`** CSS property controls which missing typefaces, bold, italic, or small-caps, may be synthesized by the browser.\n   *\n   * **Syntax**: `none | [ weight || style || small-caps ]`\n   *\n   * **Initial value**: `weight style`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **97** | **34**  | **9**  | **97** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-synthesis\n   */\n  "font-synthesis"?: Property.FontSynthesis | undefined;\n  /**\n   * The **`font-variant`** CSS shorthand property allows you to set all the font variants for a font.\n   *\n   * **Syntax**: `normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> || stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) || [ small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps ] || <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero || <east-asian-variant-values> || <east-asian-width-values> || ruby ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant\n   */\n  "font-variant"?: Property.FontVariant | undefined;\n  /**\n   * The **`font-variant-alternates`** CSS property controls the usage of alternate glyphs. These alternate glyphs may be referenced by alternative names defined in `@font-feature-values`.\n   *\n   * **Syntax**: `normal | [ stylistic( <feature-value-name> ) || historical-forms || styleset( <feature-value-name># ) || character-variant( <feature-value-name># ) || swash( <feature-value-name> ) || ornaments( <feature-value-name> ) || annotation( <feature-value-name> ) ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari  | Edge | IE  |\n   * | :----: | :-----: | :-----: | :--: | :-: |\n   * |   No   | **34**  | **9.1** |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-alternates\n   */\n  "font-variant-alternates"?: Property.FontVariantAlternates | undefined;\n  /**\n   * The **`font-variant-caps`** CSS property controls the use of alternate glyphs for capital letters.\n   *\n   * **Syntax**: `normal | small-caps | all-small-caps | petite-caps | all-petite-caps | unicase | titling-caps`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :-----: | :----: | :-: |\n   * | **52** | **34**  | **9.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-caps\n   */\n  "font-variant-caps"?: Property.FontVariantCaps | undefined;\n  /**\n   * The **`font-variant-east-asian`** CSS property controls the use of alternate glyphs for East Asian scripts, like Japanese and Chinese.\n   *\n   * **Syntax**: `normal | [ <east-asian-variant-values> || <east-asian-width-values> || ruby ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :-----: | :----: | :-: |\n   * | **63** | **34**  | **9.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-east-asian\n   */\n  "font-variant-east-asian"?: Property.FontVariantEastAsian | undefined;\n  /**\n   * The **`font-variant-ligatures`** CSS property controls which ligatures and contextual forms are used in textual content of the elements it applies to. This leads to more harmonized forms in the resulting text.\n   *\n   * **Syntax**: `normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  | IE  |\n   * | :------: | :-----: | :-----: | :----: | :-: |\n   * |  **34**  | **34**  | **9.1** | **79** | No  |\n   * | 31 _-x-_ |         | 7 _-x-_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-ligatures\n   */\n  "font-variant-ligatures"?: Property.FontVariantLigatures | undefined;\n  /**\n   * The **`font-variant-numeric`** CSS property controls the usage of alternate glyphs for numbers, fractions, and ordinal markers.\n   *\n   * **Syntax**: `normal | [ <numeric-figure-values> || <numeric-spacing-values> || <numeric-fraction-values> || ordinal || slashed-zero ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :-----: | :----: | :-: |\n   * | **52** | **34**  | **9.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-numeric\n   */\n  "font-variant-numeric"?: Property.FontVariantNumeric | undefined;\n  /**\n   * The **`font-variant-position`** CSS property controls the use of alternate, smaller glyphs that are positioned as superscript or subscript.\n   *\n   * **Syntax**: `normal | sub | super`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari  | Edge | IE  |\n   * | :----: | :-----: | :-----: | :--: | :-: |\n   * |   No   | **34**  | **9.1** |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-variant-position\n   */\n  "font-variant-position"?: Property.FontVariantPosition | undefined;\n  /**\n   * The **`font-variation-settings`** CSS property provides low-level control over variable font characteristics, by specifying the four letter axis names of the characteristics you want to vary, along with their values.\n   *\n   * **Syntax**: `normal | [ <string> <number> ]#`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **62** | **62**  | **11** | **17** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-variation-settings\n   */\n  "font-variation-settings"?: Property.FontVariationSettings | undefined;\n  /**\n   * The **`font-weight`** CSS property sets the weight (or boldness) of the font. The weights available depend on the `font-family` that is currently set.\n   *\n   * **Syntax**: `<font-weight-absolute> | bolder | lighter`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **2**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font-weight\n   */\n  "font-weight"?: Property.FontWeight | undefined;\n  /**\n   * The **`forced-color-adjust`** CSS property allows authors to opt certain elements out of forced colors mode. This then restores the control of those values to CSS.\n   *\n   * **Syntax**: `auto | none`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |              Edge               |                 IE                  |\n   * | :----: | :-----: | :----: | :-----------------------------: | :---------------------------------: |\n   * | **89** |   No    |   No   |             **79**              | **10** _(-ms-high-contrast-adjust)_ |\n   * |        |         |        | 12 _(-ms-high-contrast-adjust)_ |                                     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/forced-color-adjust\n   */\n  "forced-color-adjust"?: Property.ForcedColorAdjust | undefined;\n  /**\n   * The **`grid-auto-columns`** CSS property specifies the size of an implicitly-created grid column track or pattern of tracks.\n   *\n   * **Syntax**: `<track-size>+`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  |             IE              |\n   * | :----: | :-----: | :------: | :----: | :-------------------------: |\n   * | **57** | **70**  | **10.1** | **16** | **10** _(-ms-grid-columns)_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-auto-columns\n   */\n  "grid-auto-columns"?: Property.GridAutoColumns<TLength> | undefined;\n  /**\n   * The **`grid-auto-flow`** CSS property controls how the auto-placement algorithm works, specifying exactly how auto-placed items get flowed into the grid.\n   *\n   * **Syntax**: `[ row | column ] || dense`\n   *\n   * **Initial value**: `row`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-auto-flow\n   */\n  "grid-auto-flow"?: Property.GridAutoFlow | undefined;\n  /**\n   * The **`grid-auto-rows`** CSS property specifies the size of an implicitly-created grid row track or pattern of tracks.\n   *\n   * **Syntax**: `<track-size>+`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  |            IE            |\n   * | :----: | :-----: | :------: | :----: | :----------------------: |\n   * | **57** | **70**  | **10.1** | **16** | **10** _(-ms-grid-rows)_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-auto-rows\n   */\n  "grid-auto-rows"?: Property.GridAutoRows<TLength> | undefined;\n  /**\n   * The **`grid-column-end`** CSS property specifies a grid item\'s end position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the block-end edge of its grid area.\n   *\n   * **Syntax**: `<grid-line>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-column-end\n   */\n  "grid-column-end"?: Property.GridColumnEnd | undefined;\n  /**\n   * The **`grid-column-start`** CSS property specifies a grid item\'s start position within the grid column by contributing a line, a span, or nothing (automatic) to its grid placement. This start position defines the block-start edge of the grid area.\n   *\n   * **Syntax**: `<grid-line>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-column-start\n   */\n  "grid-column-start"?: Property.GridColumnStart | undefined;\n  /**\n   * The **`grid-row-end`** CSS property specifies a grid item\'s end position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-end edge of its grid area.\n   *\n   * **Syntax**: `<grid-line>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-row-end\n   */\n  "grid-row-end"?: Property.GridRowEnd | undefined;\n  /**\n   * The **`grid-row-start`** CSS property specifies a grid item\'s start position within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start edge of its grid area.\n   *\n   * **Syntax**: `<grid-line>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-row-start\n   */\n  "grid-row-start"?: Property.GridRowStart | undefined;\n  /**\n   * The **`grid-template-areas`** CSS property specifies named grid areas, establishing the cells in the grid and assigning them names.\n   *\n   * **Syntax**: `none | <string>+`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-template-areas\n   */\n  "grid-template-areas"?: Property.GridTemplateAreas | undefined;\n  /**\n   * The **`grid-template-columns`** CSS property defines the line names and track sizing functions of the grid columns.\n   *\n   * **Syntax**: `none | <track-list> | <auto-track-list> | subgrid <line-name-list>?`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  |             IE              |\n   * | :----: | :-----: | :------: | :----: | :-------------------------: |\n   * | **57** | **52**  | **10.1** | **16** | **10** _(-ms-grid-columns)_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-template-columns\n   */\n  "grid-template-columns"?: Property.GridTemplateColumns<TLength> | undefined;\n  /**\n   * The **`grid-template-rows`** CSS property defines the line names and track sizing functions of the grid rows.\n   *\n   * **Syntax**: `none | <track-list> | <auto-track-list> | subgrid <line-name-list>?`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  |            IE            |\n   * | :----: | :-----: | :------: | :----: | :----------------------: |\n   * | **57** | **52**  | **10.1** | **16** | **10** _(-ms-grid-rows)_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-template-rows\n   */\n  "grid-template-rows"?: Property.GridTemplateRows<TLength> | undefined;\n  /**\n   * The **`hanging-punctuation`** CSS property specifies whether a punctuation mark should hang at the start or end of a line of text. Hanging punctuation may be placed outside the line box.\n   *\n   * **Syntax**: `none | [ first || [ force-end | allow-end ] || last ]`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   |   No    | **10** |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/hanging-punctuation\n   */\n  "hanging-punctuation"?: Property.HangingPunctuation | undefined;\n  /**\n   * The **`height`** CSS property specifies the height of an element. By default, the property defines the height of the content area. If `box-sizing` is set to `border-box`, however, it instead determines the height of the border area.\n   *\n   * **Syntax**: `auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/height\n   */\n  height?: Property.Height<TLength> | undefined;\n  /**\n   * The **`hyphenate-character`** CSS property sets the character (or string) used at the end of a line before a hyphenation break.\n   *\n   * **Syntax**: `auto | <string>`\n   *\n   * **Initial value**: `auto`\n   *\n   * |   Chrome    | Firefox |    Safari     |     Edge     | IE  |\n   * | :---------: | :-----: | :-----------: | :----------: | :-: |\n   * | **6** _-x-_ | **98**  | **5.1** _-x-_ | **79** _-x-_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/hyphenate-character\n   */\n  "hyphenate-character"?: Property.HyphenateCharacter | undefined;\n  /**\n   * The **`hyphens`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.\n   *\n   * **Syntax**: `none | manual | auto`\n   *\n   * **Initial value**: `manual`\n   *\n   * |  Chrome  | Firefox |    Safari     |  Edge  |      IE      |\n   * | :------: | :-----: | :-----------: | :----: | :----------: |\n   * |  **55**  | **43**  | **5.1** _-x-_ | **79** | **10** _-x-_ |\n   * | 13 _-x-_ | 6 _-x-_ |               |        |              |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/hyphens\n   */\n  hyphens?: Property.Hyphens | undefined;\n  /**\n   * The **`image-orientation`** CSS property specifies a layout-independent correction to the orientation of an image.\n   *\n   * **Syntax**: `from-image | <angle> | [ <angle>? flip ]`\n   *\n   * **Initial value**: `from-image`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **81** | **26**  | **13.1** | **81** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/image-orientation\n   */\n  "image-orientation"?: Property.ImageOrientation | undefined;\n  /**\n   * The **`image-rendering`** CSS property sets an image scaling algorithm. The property applies to an element itself, to any images set in its other properties, and to its descendants.\n   *\n   * **Syntax**: `auto | crisp-edges | pixelated`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **13** | **3.6** | **6**  | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/image-rendering\n   */\n  "image-rendering"?: Property.ImageRendering | undefined;\n  /**\n   * **Syntax**: `[ from-image || <resolution> ] && snap?`\n   *\n   * **Initial value**: `1dppx`\n   */\n  "image-resolution"?: Property.ImageResolution | undefined;\n  /**\n   * The `initial-letter` CSS property sets styling for dropped, raised, and sunken initial letters.\n   *\n   * **Syntax**: `normal | [ <number> <integer>? ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox |   Safari    | Edge | IE  |\n   * | :----: | :-----: | :---------: | :--: | :-: |\n   * |   No   |   No    | **9** _-x-_ |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/initial-letter\n   */\n  "initial-letter"?: Property.InitialLetter | undefined;\n  /**\n   * The **`inline-size`** CSS property defines the horizontal or vertical size of an element\'s block, depending on its writing mode. It corresponds to either the `width` or the `height` property, depending on the value of `writing-mode`.\n   *\n   * **Syntax**: `<\'width\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/inline-size\n   */\n  "inline-size"?: Property.InlineSize<TLength> | undefined;\n  /**\n   * **Syntax**: `auto | none`\n   *\n   * **Initial value**: `auto`\n   */\n  "input-security"?: Property.InputSecurity | undefined;\n  /**\n   * The **`inset`** CSS property is a shorthand that corresponds to the `top`, `right`, `bottom`, and/or `left` properties. It has the same multi-value syntax of the `margin` shorthand.\n   *\n   * **Syntax**: `<\'top\'>{1,4}`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/inset\n   */\n  inset?: Property.Inset<TLength> | undefined;\n  /**\n   * The **`inset-block`** CSS property defines the logical block start and end offsets of an element, which maps to physical offsets depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top` and `bottom`, or `right` and `left` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>{1,2}`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **63**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/inset-block\n   */\n  "inset-block"?: Property.InsetBlock<TLength> | undefined;\n  /**\n   * The **`inset-block-end`** CSS property defines the logical block end offset of an element, which maps to a physical inset depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **63**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/inset-block-end\n   */\n  "inset-block-end"?: Property.InsetBlockEnd<TLength> | undefined;\n  /**\n   * The **`inset-block-start`** CSS property defines the logical block start offset of an element, which maps to a physical inset depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **63**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/inset-block-start\n   */\n  "inset-block-start"?: Property.InsetBlockStart<TLength> | undefined;\n  /**\n   * The **`inset-inline`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top` and `bottom`, or `right` and `left` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>{1,2}`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **63**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/inset-inline\n   */\n  "inset-inline"?: Property.InsetInline<TLength> | undefined;\n  /**\n   * The **`inset-inline-end`** CSS property defines the logical inline end inset of an element, which maps to a physical offset depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **63**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/inset-inline-end\n   */\n  "inset-inline-end"?: Property.InsetInlineEnd<TLength> | undefined;\n  /**\n   * The **`inset-inline-start`** CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **63**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/inset-inline-start\n   */\n  "inset-inline-start"?: Property.InsetInlineStart<TLength> | undefined;\n  /**\n   * The **`isolation`** CSS property determines whether an element must create a new stacking context.\n   *\n   * **Syntax**: `auto | isolate`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **41** | **36**  | **8**  | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/isolation\n   */\n  isolation?: Property.Isolation | undefined;\n  /**\n   * The CSS **`justify-content`** property defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container.\n   *\n   * **Syntax**: `normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **52**  | **20**  |  **9**  | **12** | **11** |\n   * | 21 _-x-_ |         | 7 _-x-_ |        |        |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/justify-content\n   */\n  "justify-content"?: Property.JustifyContent | undefined;\n  /**\n   * The CSS **`justify-items`** property defines the default `justify-self` for all items of the box, giving them all a default way of justifying each box along the appropriate axis.\n   *\n   * **Syntax**: `normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ] | legacy | legacy && [ left | right | center ]`\n   *\n   * **Initial value**: `legacy`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **52** | **20**  | **9**  | **12** | **11** |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **45**  | **10.1** | **16** | No  |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/justify-items\n   */\n  "justify-items"?: Property.JustifyItems | undefined;\n  /**\n   * The CSS **`justify-self`** property sets the way a box is justified inside its alignment container along the appropriate axis.\n   *\n   * **Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]`\n   *\n   * **Initial value**: `auto`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **45**  | **10.1** | **16** | No  |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  |      IE      |\n   * | :----: | :-----: | :------: | :----: | :----------: |\n   * | **57** | **45**  | **10.1** | **16** | **10** _-x-_ |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/justify-self\n   */\n  "justify-self"?: Property.JustifySelf | undefined;\n  /**\n   * The **`justify-tracks`** CSS property sets the alignment in the masonry axis for grid containers that have masonry in their inline axis.\n   *\n   * **Syntax**: `[ normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ] ]#`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   |   n/a   |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/justify-tracks\n   */\n  "justify-tracks"?: Property.JustifyTracks | undefined;\n  /**\n   * The **`left`** CSS property participates in specifying the horizontal position of a positioned element. It has no effect on non-positioned elements.\n   *\n   * **Syntax**: `<length> | <percentage> | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/left\n   */\n  left?: Property.Left<TLength> | undefined;\n  /**\n   * The **`letter-spacing`** CSS property sets the horizontal spacing behavior between text characters. This value is added to the natural spacing between characters while rendering the text. Positive values of `letter-spacing` causes characters to spread farther apart, while negative values of `letter-spacing` bring characters closer together.\n   *\n   * **Syntax**: `normal | <length>`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/letter-spacing\n   */\n  "letter-spacing"?: Property.LetterSpacing<TLength> | undefined;\n  /**\n   * The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.\n   *\n   * **Syntax**: `auto | loose | normal | strict | anywhere`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE    |\n   * | :-----: | :-----: | :-----: | :----: | :-----: |\n   * | **58**  | **69**  | **11**  | **14** | **5.5** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |         |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/line-break\n   */\n  "line-break"?: Property.LineBreak | undefined;\n  /**\n   * The **`line-height`** CSS property sets the height of a line box. It\'s commonly used to set the distance between lines of text. On block-level elements, it specifies the minimum height of line boxes within the element. On non-replaced inline elements, it specifies the height that is used to calculate line box height.\n   *\n   * **Syntax**: `normal | <number> | <length> | <percentage>`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/line-height\n   */\n  "line-height"?: Property.LineHeight<TLength> | undefined;\n  /**\n   * The **`line-height-step`** CSS property sets the step unit for line box heights. When the property is set, line box heights are rounded up to the closest multiple of the unit.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |  n/a   |   No    |   No   | n/a  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/line-height-step\n   */\n  "line-height-step"?: Property.LineHeightStep<TLength> | undefined;\n  /**\n   * The **`list-style-image`** CSS property sets an image to be used as the list item marker.\n   *\n   * **Syntax**: `<image> | none`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/list-style-image\n   */\n  "list-style-image"?: Property.ListStyleImage | undefined;\n  /**\n   * The **`list-style-position`** CSS property sets the position of the `::marker` relative to a list item.\n   *\n   * **Syntax**: `inside | outside`\n   *\n   * **Initial value**: `outside`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/list-style-position\n   */\n  "list-style-position"?: Property.ListStylePosition | undefined;\n  /**\n   * The **`list-style-type`** CSS property sets the marker (such as a disc, character, or custom counter style) of a list item element.\n   *\n   * **Syntax**: `<counter-style> | <string> | none`\n   *\n   * **Initial value**: `disc`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/list-style-type\n   */\n  "list-style-type"?: Property.ListStyleType | undefined;\n  /**\n   * The **`margin-block`** CSS shorthand property defines the logical block start and end margins of an element, which maps to physical margins depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'margin-left\'>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-block\n   */\n  "margin-block"?: Property.MarginBlock<TLength> | undefined;\n  /**\n   * The **`margin-block-end`** CSS property defines the logical block end margin of an element, which maps to a physical margin depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'margin-left\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-block-end\n   */\n  "margin-block-end"?: Property.MarginBlockEnd<TLength> | undefined;\n  /**\n   * The **`margin-block-start`** CSS property defines the logical block start margin of an element, which maps to a physical margin depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'margin-left\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-block-start\n   */\n  "margin-block-start"?: Property.MarginBlockStart<TLength> | undefined;\n  /**\n   * The **`margin-bottom`** CSS property sets the margin area on the bottom of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\n   *\n   * **Syntax**: `<length> | <percentage> | auto`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-bottom\n   */\n  "margin-bottom"?: Property.MarginBottom<TLength> | undefined;\n  /**\n   * The **`margin-inline`** CSS shorthand property is a shorthand property that defines both the logical inline start and end margins of an element, which maps to physical margins depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'margin-left\'>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-inline\n   */\n  "margin-inline"?: Property.MarginInline<TLength> | undefined;\n  /**\n   * The **`margin-inline-end`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element\'s writing mode, directionality, and text orientation. In other words, it corresponds to the `margin-top`, `margin-right`, `margin-bottom` or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'margin-left\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * |          Chrome          |        Firefox        |          Safari          |  Edge  | IE  |\n   * | :----------------------: | :-------------------: | :----------------------: | :----: | :-: |\n   * |          **69**          |        **41**         |         **12.1**         | **79** | No  |\n   * | 2 _(-webkit-margin-end)_ | 3 _(-moz-margin-end)_ | 3 _(-webkit-margin-end)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-inline-end\n   */\n  "margin-inline-end"?: Property.MarginInlineEnd<TLength> | undefined;\n  /**\n   * The **`margin-inline-start`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `margin-top`, `margin-right`, `margin-bottom`, or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'margin-left\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * |           Chrome           |         Firefox         |           Safari           |  Edge  | IE  |\n   * | :------------------------: | :---------------------: | :------------------------: | :----: | :-: |\n   * |           **69**           |         **41**          |          **12.1**          | **79** | No  |\n   * | 2 _(-webkit-margin-start)_ | 3 _(-moz-margin-start)_ | 3 _(-webkit-margin-start)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-inline-start\n   */\n  "margin-inline-start"?: Property.MarginInlineStart<TLength> | undefined;\n  /**\n   * The **`margin-left`** CSS property sets the margin area on the left side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\n   *\n   * **Syntax**: `<length> | <percentage> | auto`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-left\n   */\n  "margin-left"?: Property.MarginLeft<TLength> | undefined;\n  /**\n   * The **`margin-right`** CSS property sets the margin area on the right side of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\n   *\n   * **Syntax**: `<length> | <percentage> | auto`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-right\n   */\n  "margin-right"?: Property.MarginRight<TLength> | undefined;\n  /**\n   * The **`margin-top`** CSS property sets the margin area on the top of an element. A positive value places it farther from its neighbors, while a negative value places it closer.\n   *\n   * **Syntax**: `<length> | <percentage> | auto`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin-top\n   */\n  "margin-top"?: Property.MarginTop<TLength> | undefined;\n  /**\n   * The **`mask-border-mode`** CSS property specifies the blending mode used in a mask border.\n   *\n   * **Syntax**: `luminance | alpha`\n   *\n   * **Initial value**: `alpha`\n   */\n  "mask-border-mode"?: Property.MaskBorderMode | undefined;\n  /**\n   * The **`mask-border-outset`** CSS property specifies the distance by which an element\'s mask border is set out from its border box.\n   *\n   * **Syntax**: `[ <length> | <number> ]{1,4}`\n   *\n   * **Initial value**: `0`\n   *\n   * |                 Chrome                  | Firefox |                  Safari                   |                   Edge                   | IE  |\n   * | :-------------------------------------: | :-----: | :---------------------------------------: | :--------------------------------------: | :-: |\n   * | **1** _(-webkit-mask-box-image-outset)_ |   No    | **3.1** _(-webkit-mask-box-image-outset)_ | **79** _(-webkit-mask-box-image-outset)_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-outset\n   */\n  "mask-border-outset"?: Property.MaskBorderOutset<TLength> | undefined;\n  /**\n   * The **`mask-border-repeat`** CSS property sets how the edge regions of a source image are adjusted to fit the dimensions of an element\'s mask border.\n   *\n   * **Syntax**: `[ stretch | repeat | round | space ]{1,2}`\n   *\n   * **Initial value**: `stretch`\n   *\n   * |                 Chrome                  | Firefox |                  Safari                   |                   Edge                   | IE  |\n   * | :-------------------------------------: | :-----: | :---------------------------------------: | :--------------------------------------: | :-: |\n   * | **1** _(-webkit-mask-box-image-repeat)_ |   No    | **3.1** _(-webkit-mask-box-image-repeat)_ | **79** _(-webkit-mask-box-image-repeat)_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-repeat\n   */\n  "mask-border-repeat"?: Property.MaskBorderRepeat | undefined;\n  /**\n   * The **`mask-border-slice`** CSS property divides the image set by `mask-border-source` into regions. These regions are used to form the components of an element\'s mask border.\n   *\n   * **Syntax**: `<number-percentage>{1,4} fill?`\n   *\n   * **Initial value**: `0`\n   *\n   * |                 Chrome                 | Firefox |                  Safari                  |                  Edge                   | IE  |\n   * | :------------------------------------: | :-----: | :--------------------------------------: | :-------------------------------------: | :-: |\n   * | **1** _(-webkit-mask-box-image-slice)_ |   No    | **3.1** _(-webkit-mask-box-image-slice)_ | **79** _(-webkit-mask-box-image-slice)_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-slice\n   */\n  "mask-border-slice"?: Property.MaskBorderSlice | undefined;\n  /**\n   * The **`mask-border-source`** CSS property sets the source image used to create an element\'s mask border.\n   *\n   * **Syntax**: `none | <image>`\n   *\n   * **Initial value**: `none`\n   *\n   * |                 Chrome                  | Firefox |                  Safari                   |                   Edge                   | IE  |\n   * | :-------------------------------------: | :-----: | :---------------------------------------: | :--------------------------------------: | :-: |\n   * | **1** _(-webkit-mask-box-image-source)_ |   No    | **3.1** _(-webkit-mask-box-image-source)_ | **79** _(-webkit-mask-box-image-source)_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-source\n   */\n  "mask-border-source"?: Property.MaskBorderSource | undefined;\n  /**\n   * The **`mask-border-width`** CSS property sets the width of an element\'s mask border.\n   *\n   * **Syntax**: `[ <length-percentage> | <number> | auto ]{1,4}`\n   *\n   * **Initial value**: `auto`\n   *\n   * |                 Chrome                 | Firefox |                  Safari                  |                  Edge                   | IE  |\n   * | :------------------------------------: | :-----: | :--------------------------------------: | :-------------------------------------: | :-: |\n   * | **1** _(-webkit-mask-box-image-width)_ |   No    | **3.1** _(-webkit-mask-box-image-width)_ | **79** _(-webkit-mask-box-image-width)_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border-width\n   */\n  "mask-border-width"?: Property.MaskBorderWidth<TLength> | undefined;\n  /**\n   * The **`mask-clip`** CSS property determines the area which is affected by a mask. The painted content of an element must be restricted to this area.\n   *\n   * **Syntax**: `[ <geometry-box> | no-clip ]#`\n   *\n   * **Initial value**: `border-box`\n   *\n   * |   Chrome    | Firefox |  Safari  |     Edge     | IE  |\n   * | :---------: | :-----: | :------: | :----------: | :-: |\n   * | **1** _-x-_ | **53**  | **15.4** | **79** _-x-_ | No  |\n   * |             |         | 4 _-x-_  |              |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-clip\n   */\n  "mask-clip"?: Property.MaskClip | undefined;\n  /**\n   * The **`mask-composite`** CSS property represents a compositing operation used on the current mask layer with the mask layers below it.\n   *\n   * **Syntax**: `<compositing-operator>#`\n   *\n   * **Initial value**: `add`\n   *\n   * | Chrome | Firefox |  Safari  | Edge  | IE  |\n   * | :----: | :-----: | :------: | :---: | :-: |\n   * |   No   | **53**  | **15.4** | 18-79 | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-composite\n   */\n  "mask-composite"?: Property.MaskComposite | undefined;\n  /**\n   * The **`mask-image`** CSS property sets the image that is used as mask layer for an element. By default this means the alpha channel of the mask image will be multiplied with the alpha channel of the element. This can be controlled with the `mask-mode` property.\n   *\n   * **Syntax**: `<mask-reference>#`\n   *\n   * **Initial value**: `none`\n   *\n   * |   Chrome    | Firefox |  Safari  | Edge  | IE  |\n   * | :---------: | :-----: | :------: | :---: | :-: |\n   * | **1** _-x-_ | **53**  | **15.4** | 16-79 | No  |\n   * |             |         | 4 _-x-_  |       |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-image\n   */\n  "mask-image"?: Property.MaskImage | undefined;\n  /**\n   * The **`mask-mode`** CSS property sets whether the mask reference defined by `mask-image` is treated as a luminance or alpha mask.\n   *\n   * **Syntax**: `<masking-mode>#`\n   *\n   * **Initial value**: `match-source`\n   *\n   * | Chrome | Firefox |  Safari  | Edge | IE  |\n   * | :----: | :-----: | :------: | :--: | :-: |\n   * |   No   | **53**  | **15.4** |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-mode\n   */\n  "mask-mode"?: Property.MaskMode | undefined;\n  /**\n   * The **`mask-origin`** CSS property sets the origin of a mask.\n   *\n   * **Syntax**: `<geometry-box>#`\n   *\n   * **Initial value**: `border-box`\n   *\n   * |   Chrome    | Firefox |  Safari  |     Edge     | IE  |\n   * | :---------: | :-----: | :------: | :----------: | :-: |\n   * | **1** _-x-_ | **53**  | **15.4** | **79** _-x-_ | No  |\n   * |             |         | 4 _-x-_  |              |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-origin\n   */\n  "mask-origin"?: Property.MaskOrigin | undefined;\n  /**\n   * The **`mask-position`** CSS property sets the initial position, relative to the mask position layer set by `mask-origin`, for each defined mask image.\n   *\n   * **Syntax**: `<position>#`\n   *\n   * **Initial value**: `center`\n   *\n   * |   Chrome    | Firefox |  Safari   | Edge  | IE  |\n   * | :---------: | :-----: | :-------: | :---: | :-: |\n   * | **1** _-x-_ | **53**  | **15.4**  | 18-79 | No  |\n   * |             |         | 3.1 _-x-_ |       |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-position\n   */\n  "mask-position"?: Property.MaskPosition<TLength> | undefined;\n  /**\n   * The **`mask-repeat`** CSS property sets how mask images are repeated. A mask image can be repeated along the horizontal axis, the vertical axis, both axes, or not repeated at all.\n   *\n   * **Syntax**: `<repeat-style>#`\n   *\n   * **Initial value**: `no-repeat`\n   *\n   * |   Chrome    | Firefox |  Safari   | Edge  | IE  |\n   * | :---------: | :-----: | :-------: | :---: | :-: |\n   * | **1** _-x-_ | **53**  | **15.4**  | 18-79 | No  |\n   * |             |         | 3.1 _-x-_ |       |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-repeat\n   */\n  "mask-repeat"?: Property.MaskRepeat | undefined;\n  /**\n   * The **`mask-size`** CSS property specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio.\n   *\n   * **Syntax**: `<bg-size>#`\n   *\n   * **Initial value**: `auto`\n   *\n   * |   Chrome    | Firefox |  Safari  | Edge  | IE  |\n   * | :---------: | :-----: | :------: | :---: | :-: |\n   * | **4** _-x-_ | **53**  | **15.4** | 18-79 | No  |\n   * |             |         | 4 _-x-_  |       |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-size\n   */\n  "mask-size"?: Property.MaskSize<TLength> | undefined;\n  /**\n   * The **`mask-type`** CSS property sets whether an SVG `<mask>` element is used as a _luminance_ or an _alpha_ mask. It applies to the `<mask>` element itself.\n   *\n   * **Syntax**: `luminance | alpha`\n   *\n   * **Initial value**: `luminance`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **24** | **35**  | **7**  | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-type\n   */\n  "mask-type"?: Property.MaskType | undefined;\n  /**\n   * The `math-style` property indicates whether MathML equations should render with normal or compact height.\n   *\n   * **Syntax**: `normal | compact`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox |  Safari  | Edge | IE  |\n   * | :----: | :-----: | :------: | :--: | :-: |\n   * |  n/a   |   n/a   | **14.1** |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/math-style\n   */\n  "math-style"?: Property.MathStyle | undefined;\n  /**\n   * The **`max-block-size`** CSS property specifies the maximum size of an element in the direction opposite that of the writing direction as specified by `writing-mode`. That is, if the writing direction is horizontal, then `max-block-size` is equivalent to `max-height`; if the writing direction is vertical, `max-block-size` is the same as `max-width`.\n   *\n   * **Syntax**: `<\'max-width\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/max-block-size\n   */\n  "max-block-size"?: Property.MaxBlockSize<TLength> | undefined;\n  /**\n   * The **`max-height`** CSS property sets the maximum height of an element. It prevents the used value of the `height` property from becoming larger than the value specified for `max-height`.\n   *\n   * **Syntax**: `none | <length-percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **18** |  **1**  | **1.3** | **12** | **7** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/max-height\n   */\n  "max-height"?: Property.MaxHeight<TLength> | undefined;\n  /**\n   * The **`max-inline-size`** CSS property defines the horizontal or vertical maximum size of an element\'s block, depending on its writing mode. It corresponds to either the `max-width` or the `max-height` property, depending on the value of `writing-mode`.\n   *\n   * **Syntax**: `<\'max-width\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |   Safari   |  Edge  | IE  |\n   * | :----: | :-----: | :--------: | :----: | :-: |\n   * | **57** | **41**  |  **12.1**  | **79** | No  |\n   * |        |         | 10.1 _-x-_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/max-inline-size\n   */\n  "max-inline-size"?: Property.MaxInlineSize<TLength> | undefined;\n  /**\n   * **Syntax**: `none | <integer>`\n   *\n   * **Initial value**: `none`\n   */\n  "max-lines"?: Property.MaxLines | undefined;\n  /**\n   * The **`max-width`** CSS property sets the maximum width of an element. It prevents the used value of the `width` property from becoming larger than the value specified by `max-width`.\n   *\n   * **Syntax**: `none | <length-percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **7** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/max-width\n   */\n  "max-width"?: Property.MaxWidth<TLength> | undefined;\n  /**\n   * The **`min-block-size`** CSS property defines the minimum horizontal or vertical size of an element\'s block, depending on its writing mode. It corresponds to either the `min-width` or the `min-height` property, depending on the value of `writing-mode`.\n   *\n   * **Syntax**: `<\'min-width\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/min-block-size\n   */\n  "min-block-size"?: Property.MinBlockSize<TLength> | undefined;\n  /**\n   * The **`min-height`** CSS property sets the minimum height of an element. It prevents the used value of the `height` property from becoming smaller than the value specified for `min-height`.\n   *\n   * **Syntax**: `auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  |  **3**  | **1.3** | **12** | **7** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/min-height\n   */\n  "min-height"?: Property.MinHeight<TLength> | undefined;\n  /**\n   * The **`min-inline-size`** CSS property defines the horizontal or vertical minimal size of an element\'s block, depending on its writing mode. It corresponds to either the `min-width` or the `min-height` property, depending on the value of `writing-mode`.\n   *\n   * **Syntax**: `<\'min-width\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/min-inline-size\n   */\n  "min-inline-size"?: Property.MinInlineSize<TLength> | undefined;\n  /**\n   * The **`min-width`** CSS property sets the minimum width of an element. It prevents the used value of the `width` property from becoming smaller than the value specified for `min-width`.\n   *\n   * **Syntax**: `auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **7** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/min-width\n   */\n  "min-width"?: Property.MinWidth<TLength> | undefined;\n  /**\n   * The **`mix-blend-mode`** CSS property sets how an element\'s content should blend with the content of the element\'s parent and the element\'s background.\n   *\n   * **Syntax**: `<blend-mode>`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **41** | **32**  | **8**  | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mix-blend-mode\n   */\n  "mix-blend-mode"?: Property.MixBlendMode | undefined;\n  /**\n   * The **`offset-distance`** CSS property specifies a position along an `offset-path` for an element to be placed.\n   *\n   * **Syntax**: `<length-percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * |         Chrome         | Firefox | Safari |  Edge  | IE  |\n   * | :--------------------: | :-----: | :----: | :----: | :-: |\n   * |         **55**         | **72**  |   No   | **79** | No  |\n   * | 46 _(motion-distance)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset-distance\n   */\n  "motion-distance"?: Property.OffsetDistance<TLength> | undefined;\n  /**\n   * The **`offset-path`** CSS property specifies a motion path for an element to follow and defines the element\'s positioning within the parent container or SVG coordinate system.\n   *\n   * **Syntax**: `none | ray( [ <angle> && <size> && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]`\n   *\n   * **Initial value**: `none`\n   *\n   * |       Chrome       | Firefox | Safari |  Edge  | IE  |\n   * | :----------------: | :-----: | :----: | :----: | :-: |\n   * |       **55**       | **72**  |   No   | **79** | No  |\n   * | 46 _(motion-path)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset-path\n   */\n  "motion-path"?: Property.OffsetPath | undefined;\n  /**\n   * The **`offset-rotate`** CSS property defines the orientation/direction of the element as it is positioned along the `offset-path`.\n   *\n   * **Syntax**: `[ auto | reverse ] || <angle>`\n   *\n   * **Initial value**: `auto`\n   *\n   * |         Chrome         | Firefox | Safari |  Edge  | IE  |\n   * | :--------------------: | :-----: | :----: | :----: | :-: |\n   * |         **56**         | **72**  |   No   | **79** | No  |\n   * | 46 _(motion-rotation)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset-rotate\n   */\n  "motion-rotation"?: Property.OffsetRotate | undefined;\n  /**\n   * The **`object-fit`** CSS property sets how the content of a replaced element, such as an `<img>` or `<video>`, should be resized to fit its container.\n   *\n   * **Syntax**: `fill | contain | cover | none | scale-down`\n   *\n   * **Initial value**: `fill`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **32** | **36**  | **10** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/object-fit\n   */\n  "object-fit"?: Property.ObjectFit | undefined;\n  /**\n   * The **`object-position`** CSS property specifies the alignment of the selected replaced element\'s contents within the element\'s box. Areas of the box which aren\'t covered by the replaced element\'s object will show the element\'s background.\n   *\n   * **Syntax**: `<position>`\n   *\n   * **Initial value**: `50% 50%`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **32** | **36**  | **10** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/object-position\n   */\n  "object-position"?: Property.ObjectPosition<TLength> | undefined;\n  /**\n   * **Syntax**: `auto | <position>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **79** | **72**  |   No   | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset-anchor\n   */\n  "offset-anchor"?: Property.OffsetAnchor<TLength> | undefined;\n  /**\n   * The **`offset-distance`** CSS property specifies a position along an `offset-path` for an element to be placed.\n   *\n   * **Syntax**: `<length-percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * |         Chrome         | Firefox | Safari |  Edge  | IE  |\n   * | :--------------------: | :-----: | :----: | :----: | :-: |\n   * |         **55**         | **72**  |   No   | **79** | No  |\n   * | 46 _(motion-distance)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset-distance\n   */\n  "offset-distance"?: Property.OffsetDistance<TLength> | undefined;\n  /**\n   * The **`offset-path`** CSS property specifies a motion path for an element to follow and defines the element\'s positioning within the parent container or SVG coordinate system.\n   *\n   * **Syntax**: `none | ray( [ <angle> && <size> && contain? ] ) | <path()> | <url> | [ <basic-shape> || <geometry-box> ]`\n   *\n   * **Initial value**: `none`\n   *\n   * |       Chrome       | Firefox | Safari |  Edge  | IE  |\n   * | :----------------: | :-----: | :----: | :----: | :-: |\n   * |       **55**       | **72**  |   No   | **79** | No  |\n   * | 46 _(motion-path)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset-path\n   */\n  "offset-path"?: Property.OffsetPath | undefined;\n  /**\n   * The **`offset-rotate`** CSS property defines the orientation/direction of the element as it is positioned along the `offset-path`.\n   *\n   * **Syntax**: `[ auto | reverse ] || <angle>`\n   *\n   * **Initial value**: `auto`\n   *\n   * |         Chrome         | Firefox | Safari |  Edge  | IE  |\n   * | :--------------------: | :-----: | :----: | :----: | :-: |\n   * |         **56**         | **72**  |   No   | **79** | No  |\n   * | 46 _(motion-rotation)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset-rotate\n   */\n  "offset-rotate"?: Property.OffsetRotate | undefined;\n  /**\n   * The **`offset-rotate`** CSS property defines the orientation/direction of the element as it is positioned along the `offset-path`.\n   *\n   * **Syntax**: `[ auto | reverse ] || <angle>`\n   *\n   * **Initial value**: `auto`\n   *\n   * |         Chrome         | Firefox | Safari |  Edge  | IE  |\n   * | :--------------------: | :-----: | :----: | :----: | :-: |\n   * |         **56**         | **72**  |   No   | **79** | No  |\n   * | 46 _(motion-rotation)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset-rotate\n   */\n  "offset-rotation"?: Property.OffsetRotate | undefined;\n  /**\n   * The **`opacity`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.\n   *\n   * **Syntax**: `<alpha-value>`\n   *\n   * **Initial value**: `1`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **2**  | **12** | **9** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/opacity\n   */\n  opacity?: Property.Opacity | undefined;\n  /**\n   * The **`order`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending `order` value and then by their source code order.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `0`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |    IE    |\n   * | :------: | :-----: | :-----: | :----: | :------: |\n   * |  **29**  | **20**  |  **9**  | **12** |  **11**  |\n   * | 21 _-x-_ |         | 7 _-x-_ |        | 10 _-x-_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/order\n   */\n  order?: Property.Order | undefined;\n  /**\n   * The **`orphans`** CSS property sets the minimum number of lines in a block container that must be shown at the _bottom_ of a page, region, or column.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `2`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **25** |   No    | **1.3** | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/orphans\n   */\n  orphans?: Property.Orphans | undefined;\n  /**\n   * The **`outline-color`** CSS property sets the color of an element\'s outline.\n   *\n   * **Syntax**: `<color> | invert`\n   *\n   * **Initial value**: `invert`, for browsers supporting it, `currentColor` for the other\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  | **1.5** | **1.2** | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/outline-color\n   */\n  "outline-color"?: Property.OutlineColor | undefined;\n  /**\n   * The **`outline-offset`** CSS property sets the amount of space between an outline and the edge or border of an element.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :-----: | :----: | :-: |\n   * | **1**  | **1.5** | **1.2** | **15** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/outline-offset\n   */\n  "outline-offset"?: Property.OutlineOffset<TLength> | undefined;\n  /**\n   * The **`outline-style`** CSS property sets the style of an element\'s outline. An outline is a line that is drawn around an element, outside the `border`.\n   *\n   * **Syntax**: `auto | <\'border-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  | **1.5** | **1.2** | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/outline-style\n   */\n  "outline-style"?: Property.OutlineStyle | undefined;\n  /**\n   * The CSS **`outline-width`** property sets the thickness of an element\'s outline. An outline is a line that is drawn around an element, outside the `border`.\n   *\n   * **Syntax**: `<line-width>`\n   *\n   * **Initial value**: `medium`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  | **1.5** | **1.2** | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/outline-width\n   */\n  "outline-width"?: Property.OutlineWidth<TLength> | undefined;\n  /**\n   * **Syntax**: `auto | none`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **56** | **66**  |   No   | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-anchor\n   */\n  "overflow-anchor"?: Property.OverflowAnchor | undefined;\n  /**\n   * **Syntax**: `visible | hidden | clip | scroll | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   | **69**  |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-block\n   */\n  "overflow-block"?: Property.OverflowBlock | undefined;\n  /**\n   * The **`overflow-clip-box`** CSS property specifies relative to which box the clipping happens when there is an overflow. It is short hand for the `overflow-clip-box-inline` and `overflow-clip-box-block` properties.\n   *\n   * **Syntax**: `padding-box | content-box`\n   *\n   * **Initial value**: `padding-box`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   | **29**  |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Mozilla/Gecko/Chrome/CSS/overflow-clip-box\n   */\n  "overflow-clip-box"?: Property.OverflowClipBox | undefined;\n  /**\n   * **Syntax**: `<visual-box> || <length [0,∞]>`\n   *\n   * **Initial value**: `0px`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **90** |   No    |   No   | **90** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-clip-margin\n   */\n  "overflow-clip-margin"?: Property.OverflowClipMargin<TLength> | undefined;\n  /**\n   * **Syntax**: `visible | hidden | clip | scroll | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   | **69**  |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-inline\n   */\n  "overflow-inline"?: Property.OverflowInline | undefined;\n  /**\n   * The **`overflow-wrap`** CSS property applies to inline elements, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box.\n   *\n   * **Syntax**: `normal | break-word | anywhere`\n   *\n   * **Initial value**: `normal`\n   *\n   * |     Chrome      |      Firefox      |     Safari      |       Edge       |          IE           |\n   * | :-------------: | :---------------: | :-------------: | :--------------: | :-------------------: |\n   * |     **23**      |      **49**       |      **7**      |      **18**      | **5.5** _(word-wrap)_ |\n   * | 1 _(word-wrap)_ | 3.5 _(word-wrap)_ | 1 _(word-wrap)_ | 12 _(word-wrap)_ |                       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-wrap\n   */\n  "overflow-wrap"?: Property.OverflowWrap | undefined;\n  /**\n   * The **`overflow-x`** CSS property sets what shows when content overflows a block-level element\'s left and right edges. This may be nothing, a scroll bar, or the overflow content.\n   *\n   * **Syntax**: `visible | hidden | clip | scroll | auto`\n   *\n   * **Initial value**: `visible`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  | **3.5** | **3**  | **12** | **5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-x\n   */\n  "overflow-x"?: Property.OverflowX | undefined;\n  /**\n   * The **`overflow-y`** CSS property sets what shows when content overflows a block-level element\'s top and bottom edges. This may be nothing, a scroll bar, or the overflow content.\n   *\n   * **Syntax**: `visible | hidden | clip | scroll | auto`\n   *\n   * **Initial value**: `visible`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  | **3.5** | **3**  | **12** | **5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overflow-y\n   */\n  "overflow-y"?: Property.OverflowY | undefined;\n  /**\n   * The **`overscroll-behavior-block`** CSS property sets the browser\'s behavior when the block direction boundary of a scrolling area is reached.\n   *\n   * **Syntax**: `contain | none | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **77** | **73**  |   No   | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-block\n   */\n  "overscroll-behavior-block"?: Property.OverscrollBehaviorBlock | undefined;\n  /**\n   * The **`overscroll-behavior-inline`** CSS property sets the browser\'s behavior when the inline direction boundary of a scrolling area is reached.\n   *\n   * **Syntax**: `contain | none | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **77** | **73**  |   No   | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-inline\n   */\n  "overscroll-behavior-inline"?: Property.OverscrollBehaviorInline | undefined;\n  /**\n   * The **`overscroll-behavior-x`** CSS property sets the browser\'s behavior when the horizontal boundary of a scrolling area is reached.\n   *\n   * **Syntax**: `contain | none | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **63** | **59**  |   No   | **18** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-x\n   */\n  "overscroll-behavior-x"?: Property.OverscrollBehaviorX | undefined;\n  /**\n   * The **`overscroll-behavior-y`** CSS property sets the browser\'s behavior when the vertical boundary of a scrolling area is reached.\n   *\n   * **Syntax**: `contain | none | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **63** | **59**  |   No   | **18** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior-y\n   */\n  "overscroll-behavior-y"?: Property.OverscrollBehaviorY | undefined;\n  /**\n   * The **`padding-block`** CSS shorthand property defines the logical block start and end padding of an element, which maps to physical padding properties depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-block\n   */\n  "padding-block"?: Property.PaddingBlock<TLength> | undefined;\n  /**\n   * The **`padding-block-end`** CSS property defines the logical block end padding of an element, which maps to a physical padding depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-block-end\n   */\n  "padding-block-end"?: Property.PaddingBlockEnd<TLength> | undefined;\n  /**\n   * The **`padding-block-start`** CSS property defines the logical block start padding of an element, which maps to a physical padding depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-block-start\n   */\n  "padding-block-start"?: Property.PaddingBlockStart<TLength> | undefined;\n  /**\n   * The **`padding-bottom`** CSS property sets the height of the padding area on the bottom of an element.\n   *\n   * **Syntax**: `<length> | <percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-bottom\n   */\n  "padding-bottom"?: Property.PaddingBottom<TLength> | undefined;\n  /**\n   * The **`padding-inline`** CSS shorthand property defines the logical inline start and end padding of an element, which maps to physical padding properties depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-inline\n   */\n  "padding-inline"?: Property.PaddingInline<TLength> | undefined;\n  /**\n   * The **`padding-inline-end`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * |          Chrome           |        Firefox         |          Safari           |  Edge  | IE  |\n   * | :-----------------------: | :--------------------: | :-----------------------: | :----: | :-: |\n   * |          **69**           |         **41**         |         **12.1**          | **79** | No  |\n   * | 2 _(-webkit-padding-end)_ | 3 _(-moz-padding-end)_ | 3 _(-webkit-padding-end)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-inline-end\n   */\n  "padding-inline-end"?: Property.PaddingInlineEnd<TLength> | undefined;\n  /**\n   * The **`padding-inline-start`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>`\n   *\n   * **Initial value**: `0`\n   *\n   * |           Chrome            |         Firefox          |           Safari            |  Edge  | IE  |\n   * | :-------------------------: | :----------------------: | :-------------------------: | :----: | :-: |\n   * |           **69**            |          **41**          |          **12.1**           | **79** | No  |\n   * | 2 _(-webkit-padding-start)_ | 3 _(-moz-padding-start)_ | 3 _(-webkit-padding-start)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-inline-start\n   */\n  "padding-inline-start"?: Property.PaddingInlineStart<TLength> | undefined;\n  /**\n   * The **`padding-left`** CSS property sets the width of the padding area to the left of an element.\n   *\n   * **Syntax**: `<length> | <percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-left\n   */\n  "padding-left"?: Property.PaddingLeft<TLength> | undefined;\n  /**\n   * The **`padding-right`** CSS property sets the width of the padding area on the right of an element.\n   *\n   * **Syntax**: `<length> | <percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-right\n   */\n  "padding-right"?: Property.PaddingRight<TLength> | undefined;\n  /**\n   * The **`padding-top`** CSS property sets the height of the padding area on the top of an element.\n   *\n   * **Syntax**: `<length> | <percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding-top\n   */\n  "padding-top"?: Property.PaddingTop<TLength> | undefined;\n  /**\n   * The **`page-break-after`** CSS property adjusts page breaks _after_ the current element.\n   *\n   * **Syntax**: `auto | always | avoid | left | right | recto | verso`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  |  **1**  | **1.2** | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/page-break-after\n   */\n  "page-break-after"?: Property.PageBreakAfter | undefined;\n  /**\n   * The **`page-break-before`** CSS property adjusts page breaks _before_ the current element.\n   *\n   * **Syntax**: `auto | always | avoid | left | right | recto | verso`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  |  **1**  | **1.2** | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/page-break-before\n   */\n  "page-break-before"?: Property.PageBreakBefore | undefined;\n  /**\n   * The **`page-break-inside`** CSS property adjusts page breaks _inside_ the current element.\n   *\n   * **Syntax**: `auto | avoid`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  | **19**  | **1.3** | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/page-break-inside\n   */\n  "page-break-inside"?: Property.PageBreakInside | undefined;\n  /**\n   * The **`paint-order`** CSS property lets you control the order in which the fill and stroke (and painting markers) of text content and shapes are drawn.\n   *\n   * **Syntax**: `normal | [ fill || stroke || markers ]`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **35** | **60**  | **8**  | **17** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/paint-order\n   */\n  "paint-order"?: Property.PaintOrder | undefined;\n  /**\n   * The **`perspective`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.\n   *\n   * **Syntax**: `none | <length>`\n   *\n   * **Initial value**: `none`\n   *\n   * |  Chrome  | Firefox  | Safari  |  Edge  |   IE   |\n   * | :------: | :------: | :-----: | :----: | :----: |\n   * |  **36**  |  **16**  |  **9**  | **12** | **10** |\n   * | 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/perspective\n   */\n  perspective?: Property.Perspective<TLength> | undefined;\n  /**\n   * The **`perspective-origin`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the `perspective` property.\n   *\n   * **Syntax**: `<position>`\n   *\n   * **Initial value**: `50% 50%`\n   *\n   * |  Chrome  | Firefox  | Safari  |  Edge  |   IE   |\n   * | :------: | :------: | :-----: | :----: | :----: |\n   * |  **36**  |  **16**  |  **9**  | **12** | **10** |\n   * | 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/perspective-origin\n   */\n  "perspective-origin"?: Property.PerspectiveOrigin<TLength> | undefined;\n  /**\n   * The **`place-content`** CSS shorthand property allows you to align content along both the block and inline directions at once (i.e. the `align-content` and `justify-content` properties) in a relevant layout system such as Grid or Flexbox.\n   *\n   * **Syntax**: `<\'align-content\'> <\'justify-content\'>?`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **59** | **45**  | **9**  | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/place-content\n   */\n  "place-content"?: Property.PlaceContent | undefined;\n  /**\n   * The **`pointer-events`** CSS property sets under what circumstances (if any) a particular graphic element can become the target of pointer events.\n   *\n   * **Syntax**: `auto | none | visiblePainted | visibleFill | visibleStroke | visible | painted | fill | stroke | all | inherit`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * | **1**  | **1.5** | **4**  | **12** | **11** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/pointer-events\n   */\n  "pointer-events"?: Property.PointerEvents | undefined;\n  /**\n   * The **`position`** CSS property sets how an element is positioned in a document. The `top`, `right`, `bottom`, and `left` properties determine the final location of positioned elements.\n   *\n   * **Syntax**: `static | relative | absolute | sticky | fixed`\n   *\n   * **Initial value**: `static`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/position\n   */\n  position?: Property.Position | undefined;\n  /**\n   * The **`print-color-adjust`** CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element\'s appearance it determines to be necessary and prudent given the type and capabilities of the output device.\n   *\n   * **Syntax**: `economy | exact`\n   *\n   * **Initial value**: `economy`\n   *\n   * |    Chrome    |       Firefox       |  Safari  |     Edge     | IE  |\n   * | :----------: | :-----------------: | :------: | :----------: | :-: |\n   * | **17** _-x-_ |       **97**        | **15.4** | **79** _-x-_ | No  |\n   * |              | 48 _(color-adjust)_ | 6 _-x-_  |              |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/print-color-adjust\n   */\n  "print-color-adjust"?: Property.PrintColorAdjust | undefined;\n  /**\n   * The **`quotes`** CSS property sets how the browser should render quotation marks that are added using the `open-quotes` or `close-quotes` values of the CSS `content` property.\n   *\n   * **Syntax**: `none | auto | [ <string> <string> ]+`\n   *\n   * **Initial value**: depends on user agent\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **11** | **1.5** | **9**  | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/quotes\n   */\n  quotes?: Property.Quotes | undefined;\n  /**\n   * The **`resize`** CSS property sets whether an element is resizable, and if so, in which directions.\n   *\n   * **Syntax**: `none | both | horizontal | vertical | block | inline`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **1**  |  **4**  | **3**  | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/resize\n   */\n  resize?: Property.Resize | undefined;\n  /**\n   * The **`right`** CSS property participates in specifying the horizontal position of a positioned element. It has no effect on non-positioned elements.\n   *\n   * **Syntax**: `<length> | <percentage> | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/right\n   */\n  right?: Property.Right<TLength> | undefined;\n  /**\n   * The **`rotate`** CSS property allows you to specify rotation transforms individually and independently of the `transform` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the `transform` property.\n   *\n   * **Syntax**: `none | <angle> | [ x | y | z | <number>{3} ] && <angle>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  | Edge | IE  |\n   * | :----: | :-----: | :------: | :--: | :-: |\n   * |   No   | **72**  | **14.1** |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/rotate\n   */\n  rotate?: Property.Rotate | undefined;\n  /**\n   * The **`row-gap`** CSS property sets the size of the gap (gutter) between an element\'s grid rows.\n   *\n   * **Syntax**: `normal | <length-percentage>`\n   *\n   * **Initial value**: `normal`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **84** | **63**  | **14.1** | **84** | No  |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * |       Chrome        |       Firefox       |        Safari         |  Edge  | IE  |\n   * | :-----------------: | :-----------------: | :-------------------: | :----: | :-: |\n   * |       **66**        |       **61**        |        **12**         | **16** | No  |\n   * | 57 _(grid-row-gap)_ | 52 _(grid-row-gap)_ | 10.1 _(grid-row-gap)_ |        |     |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/row-gap\n   */\n  "row-gap"?: Property.RowGap<TLength> | undefined;\n  /**\n   * The **`ruby-align`** CSS property defines the distribution of the different ruby elements over the base.\n   *\n   * **Syntax**: `start | center | space-between | space-around`\n   *\n   * **Initial value**: `space-around`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   | **38**  |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/ruby-align\n   */\n  "ruby-align"?: Property.RubyAlign | undefined;\n  /**\n   * **Syntax**: `separate | collapse | auto`\n   *\n   * **Initial value**: `separate`\n   */\n  "ruby-merge"?: Property.RubyMerge | undefined;\n  /**\n   * The **`ruby-position`** CSS property defines the position of a ruby element relatives to its base element. It can be positioned over the element (`over`), under it (`under`), or between the characters on their right side (`inter-character`).\n   *\n   * **Syntax**: `[ alternate || [ over | under ] ] | inter-character`\n   *\n   * **Initial value**: `alternate`\n   *\n   * | Chrome  | Firefox |   Safari    | Edge  | IE  |\n   * | :-----: | :-----: | :---------: | :---: | :-: |\n   * | **84**  | **38**  | **7** _-x-_ | 12-79 | No  |\n   * | 1 _-x-_ |         |             |       |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/ruby-position\n   */\n  "ruby-position"?: Property.RubyPosition | undefined;\n  /**\n   * The **`scale`** CSS property allows you to specify scale transforms individually and independently of the `transform` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the `transform` value.\n   *\n   * **Syntax**: `none | <number>{1,3}`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  | Edge | IE  |\n   * | :----: | :-----: | :------: | :--: | :-: |\n   * |   No   | **72**  | **14.1** |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scale\n   */\n  scale?: Property.Scale | undefined;\n  /**\n   * The **`scroll-behavior`** CSS property sets the behavior for a scrolling box when scrolling is triggered by the navigation or CSSOM scrolling APIs.\n   *\n   * **Syntax**: `auto | smooth`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **61** | **36**  | **15.4** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-behavior\n   */\n  "scroll-behavior"?: Property.ScrollBehavior | undefined;\n  /**\n   * The **`scroll-margin`** shorthand property sets all of the scroll margins of an element at once, assigning values much like the `margin` property does for margins of an element.\n   *\n   * **Syntax**: `<length>{1,4}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |          Safari           |  Edge  | IE  |\n   * | :----: | :-----: | :-----------------------: | :----: | :-: |\n   * | **69** | **90**  |         **14.1**          | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin\n   */\n  "scroll-margin"?: Property.ScrollMargin<TLength> | undefined;\n  /**\n   * The `scroll-margin-block` shorthand property sets the scroll margins of an element in the block dimension.\n   *\n   * **Syntax**: `<length>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block\n   */\n  "scroll-margin-block"?: Property.ScrollMarginBlock<TLength> | undefined;\n  /**\n   * The `scroll-margin-block-end` property defines the margin of the scroll snap area at the end of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-end\n   */\n  "scroll-margin-block-end"?: Property.ScrollMarginBlockEnd<TLength> | undefined;\n  /**\n   * The `scroll-margin-block-start` property defines the margin of the scroll snap area at the start of the block dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-block-start\n   */\n  "scroll-margin-block-start"?: Property.ScrollMarginBlockStart<TLength> | undefined;\n  /**\n   * The `scroll-margin-bottom` property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |              Safari              |  Edge  | IE  |\n   * | :----: | :-----: | :------------------------------: | :----: | :-: |\n   * | **69** | **68**  |             **14.1**             | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin-bottom)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-bottom\n   */\n  "scroll-margin-bottom"?: Property.ScrollMarginBottom<TLength> | undefined;\n  /**\n   * The `scroll-margin-inline` shorthand property sets the scroll margins of an element in the inline dimension.\n   *\n   * **Syntax**: `<length>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline\n   */\n  "scroll-margin-inline"?: Property.ScrollMarginInline<TLength> | undefined;\n  /**\n   * The `scroll-margin-inline-end` property defines the margin of the scroll snap area at the end of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-end\n   */\n  "scroll-margin-inline-end"?: Property.ScrollMarginInlineEnd<TLength> | undefined;\n  /**\n   * The `scroll-margin-inline-start` property defines the margin of the scroll snap area at the start of the inline dimension that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-inline-start\n   */\n  "scroll-margin-inline-start"?: Property.ScrollMarginInlineStart<TLength> | undefined;\n  /**\n   * The `scroll-margin-left` property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |             Safari             |  Edge  | IE  |\n   * | :----: | :-----: | :----------------------------: | :----: | :-: |\n   * | **69** | **68**  |            **14.1**            | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin-left)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-left\n   */\n  "scroll-margin-left"?: Property.ScrollMarginLeft<TLength> | undefined;\n  /**\n   * The `scroll-margin-right` property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |             Safari              |  Edge  | IE  |\n   * | :----: | :-----: | :-----------------------------: | :----: | :-: |\n   * | **69** | **68**  |            **14.1**             | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin-right)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-right\n   */\n  "scroll-margin-right"?: Property.ScrollMarginRight<TLength> | undefined;\n  /**\n   * The `scroll-margin-top` property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |            Safari             |  Edge  | IE  |\n   * | :----: | :-----: | :---------------------------: | :----: | :-: |\n   * | **69** | **68**  |           **14.1**            | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin-top)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-top\n   */\n  "scroll-margin-top"?: Property.ScrollMarginTop<TLength> | undefined;\n  /**\n   * The **`scroll-padding`** shorthand property sets scroll padding on all sides of an element at once, much like the `padding` property does for padding on an element.\n   *\n   * **Syntax**: `[ auto | <length-percentage> ]{1,4}`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding\n   */\n  "scroll-padding"?: Property.ScrollPadding<TLength> | undefined;\n  /**\n   * The `scroll-padding-block` shorthand property sets the scroll padding of an element in the block dimension.\n   *\n   * **Syntax**: `[ auto | <length-percentage> ]{1,2}`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **69** | **68**  | **15** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block\n   */\n  "scroll-padding-block"?: Property.ScrollPaddingBlock<TLength> | undefined;\n  /**\n   * The `scroll-padding-block-end` property defines offsets for the end edge in the block dimension of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.\n   *\n   * **Syntax**: `auto | <length-percentage>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **69** | **68**  | **15** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-end\n   */\n  "scroll-padding-block-end"?: Property.ScrollPaddingBlockEnd<TLength> | undefined;\n  /**\n   * The `scroll-padding-block-start` property defines offsets for the start edge in the block dimension of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.\n   *\n   * **Syntax**: `auto | <length-percentage>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **69** | **68**  | **15** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-block-start\n   */\n  "scroll-padding-block-start"?: Property.ScrollPaddingBlockStart<TLength> | undefined;\n  /**\n   * The `scroll-padding-bottom` property defines offsets for the bottom of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.\n   *\n   * **Syntax**: `auto | <length-percentage>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-bottom\n   */\n  "scroll-padding-bottom"?: Property.ScrollPaddingBottom<TLength> | undefined;\n  /**\n   * The `scroll-padding-inline` shorthand property sets the scroll padding of an element in the inline dimension.\n   *\n   * **Syntax**: `[ auto | <length-percentage> ]{1,2}`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **69** | **68**  | **15** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline\n   */\n  "scroll-padding-inline"?: Property.ScrollPaddingInline<TLength> | undefined;\n  /**\n   * The `scroll-padding-inline-end` property defines offsets for the end edge in the inline dimension of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.\n   *\n   * **Syntax**: `auto | <length-percentage>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **69** | **68**  | **15** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-end\n   */\n  "scroll-padding-inline-end"?: Property.ScrollPaddingInlineEnd<TLength> | undefined;\n  /**\n   * The `scroll-padding-inline-start` property defines offsets for the start edge in the inline dimension of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.\n   *\n   * **Syntax**: `auto | <length-percentage>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **69** | **68**  | **15** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-inline-start\n   */\n  "scroll-padding-inline-start"?: Property.ScrollPaddingInlineStart<TLength> | undefined;\n  /**\n   * The `scroll-padding-left` property defines offsets for the left of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.\n   *\n   * **Syntax**: `auto | <length-percentage>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-left\n   */\n  "scroll-padding-left"?: Property.ScrollPaddingLeft<TLength> | undefined;\n  /**\n   * The `scroll-padding-right` property defines offsets for the right of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.\n   *\n   * **Syntax**: `auto | <length-percentage>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-right\n   */\n  "scroll-padding-right"?: Property.ScrollPaddingRight<TLength> | undefined;\n  /**\n   * The **`scroll-padding-top`** property defines offsets for the top of the _optimal viewing region_ of the scrollport: the region used as the target region for placing things in view of the user. This allows the author to exclude regions of the scrollport that are obscured by other content (such as fixed-positioned toolbars or sidebars) or to put more breathing room between a targeted element and the edges of the scrollport.\n   *\n   * **Syntax**: `auto | <length-percentage>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **68**  | **14.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-padding-top\n   */\n  "scroll-padding-top"?: Property.ScrollPaddingTop<TLength> | undefined;\n  /**\n   * The `scroll-snap-align` property specifies the box\'s snap position as an alignment of its snap area (as the alignment subject) within its snap container\'s snapport (as the alignment container). The two values specify the snapping alignment in the block axis and inline axis, respectively. If only one value is specified, the second value defaults to the same value.\n   *\n   * **Syntax**: `[ none | start | end | center ]{1,2}`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **69** | **68**  | **11** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-snap-align\n   */\n  "scroll-snap-align"?: Property.ScrollSnapAlign | undefined;\n  /**\n   * The **`scroll-margin`** shorthand property sets all of the scroll margins of an element at once, assigning values much like the `margin` property does for margins of an element.\n   *\n   * **Syntax**: `<length>{1,4}`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |          Safari           |  Edge  | IE  |\n   * | :----: | :-----: | :-----------------------: | :----: | :-: |\n   * | **69** |  68-90  |         **14.1**          | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin\n   */\n  "scroll-snap-margin"?: Property.ScrollMargin<TLength> | undefined;\n  /**\n   * The `scroll-margin-bottom` property defines the bottom margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |              Safari              |  Edge  | IE  |\n   * | :----: | :-----: | :------------------------------: | :----: | :-: |\n   * | **69** | **68**  |             **14.1**             | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin-bottom)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-bottom\n   */\n  "scroll-snap-margin-bottom"?: Property.ScrollMarginBottom<TLength> | undefined;\n  /**\n   * The `scroll-margin-left` property defines the left margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |             Safari             |  Edge  | IE  |\n   * | :----: | :-----: | :----------------------------: | :----: | :-: |\n   * | **69** | **68**  |            **14.1**            | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin-left)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-left\n   */\n  "scroll-snap-margin-left"?: Property.ScrollMarginLeft<TLength> | undefined;\n  /**\n   * The `scroll-margin-right` property defines the right margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |             Safari              |  Edge  | IE  |\n   * | :----: | :-----: | :-----------------------------: | :----: | :-: |\n   * | **69** | **68**  |            **14.1**             | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin-right)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-right\n   */\n  "scroll-snap-margin-right"?: Property.ScrollMarginRight<TLength> | undefined;\n  /**\n   * The `scroll-margin-top` property defines the top margin of the scroll snap area that is used for snapping this box to the snapport. The scroll snap area is determined by taking the transformed border box, finding its rectangular bounding box (axis-aligned in the scroll container\'s coordinate space), then adding the specified outsets.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |            Safari             |  Edge  | IE  |\n   * | :----: | :-----: | :---------------------------: | :----: | :-: |\n   * | **69** | **68**  |           **14.1**            | **79** | No  |\n   * |        |         | 11 _(scroll-snap-margin-top)_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-margin-top\n   */\n  "scroll-snap-margin-top"?: Property.ScrollMarginTop<TLength> | undefined;\n  /**\n   * The **`scroll-snap-stop`** CSS property defines whether the scroll container is allowed to "pass over" possible snap positions.\n   *\n   * **Syntax**: `normal | always`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **75** |   No    | **15** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-snap-stop\n   */\n  "scroll-snap-stop"?: Property.ScrollSnapStop | undefined;\n  /**\n   * The **`scroll-snap-type`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.\n   *\n   * **Syntax**: `none | [ x | y | block | inline | both ] [ mandatory | proximity ]?`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |      IE      |\n   * | :----: | :-----: | :-----: | :----: | :----------: |\n   * | **69** |  39-68  | **11**  | **79** | **10** _-x-_ |\n   * |        |         | 9 _-x-_ |        |              |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scroll-snap-type\n   */\n  "scroll-snap-type"?: Property.ScrollSnapType | undefined;\n  /**\n   * The **`scrollbar-color`** CSS property sets the color of the scrollbar track and thumb.\n   *\n   * **Syntax**: `auto | <color>{2}`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   | **64**  |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scrollbar-color\n   */\n  "scrollbar-color"?: Property.ScrollbarColor | undefined;\n  /**\n   * The **`scrollbar-gutter`** CSS property allows authors to reserve space for the scrollbar, preventing unwanted layout changes as the content grows while also avoiding unnecessary visuals when scrolling isn\'t needed.\n   *\n   * **Syntax**: `auto | stable && both-edges?`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **94** | **97**  |   No   | **94** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scrollbar-gutter\n   */\n  "scrollbar-gutter"?: Property.ScrollbarGutter | undefined;\n  /**\n   * The **`scrollbar-width`** property allows the author to set the maximum thickness of an element\'s scrollbars when they are shown.\n   *\n   * **Syntax**: `auto | thin | none`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari | Edge | IE  |\n   * | :----: | :-----: | :----: | :--: | :-: |\n   * |   No   | **64**  |   No   |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/scrollbar-width\n   */\n  "scrollbar-width"?: Property.ScrollbarWidth | undefined;\n  /**\n   * The **`shape-image-threshold`** CSS property sets the alpha channel threshold used to extract the shape using an image as the value for `shape-outside`.\n   *\n   * **Syntax**: `<alpha-value>`\n   *\n   * **Initial value**: `0.0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **37** | **62**  | **10.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/shape-image-threshold\n   */\n  "shape-image-threshold"?: Property.ShapeImageThreshold | undefined;\n  /**\n   * The **`shape-margin`** CSS property sets a margin for a CSS shape created using `shape-outside`.\n   *\n   * **Syntax**: `<length-percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **37** | **62**  | **10.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/shape-margin\n   */\n  "shape-margin"?: Property.ShapeMargin<TLength> | undefined;\n  /**\n   * The **`shape-outside`** CSS property defines a shape—which may be non-rectangular—around which adjacent inline content should wrap. By default, inline content wraps around its margin box; `shape-outside` provides a way to customize this wrapping, making it possible to wrap text around complex objects rather than simple boxes.\n   *\n   * **Syntax**: `none | [ <shape-box> || <basic-shape> ] | <image>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **37** | **62**  | **10.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/shape-outside\n   */\n  "shape-outside"?: Property.ShapeOutside | undefined;\n  /**\n   * The **`tab-size`** CSS property is used to customize the width of tab characters (U+0009).\n   *\n   * **Syntax**: `<integer> | <length>`\n   *\n   * **Initial value**: `8`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **21** | **91**  | **7**  | **79** | No  |\n   * |        | 4 _-x-_ |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/tab-size\n   */\n  "tab-size"?: Property.TabSize<TLength> | undefined;\n  /**\n   * The **`table-layout`** CSS property sets the algorithm used to lay out `<table>` cells, rows, and columns.\n   *\n   * **Syntax**: `auto | fixed`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **14** |  **1**  | **1**  | **12** | **5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/table-layout\n   */\n  "table-layout"?: Property.TableLayout | undefined;\n  /**\n   * The **`text-align`** CSS property sets the horizontal alignment of the content inside a block element or table-cell box. This means it works like `vertical-align` but in the horizontal direction.\n   *\n   * **Syntax**: `start | end | left | right | center | justify | match-parent`\n   *\n   * **Initial value**: `start`, or a nameless value that acts as `left` if _direction_ is `ltr`, `right` if _direction_ is `rtl` if `start` is not supported by the browser.\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-align\n   */\n  "text-align"?: Property.TextAlign | undefined;\n  /**\n   * The **`text-align-last`** CSS property sets how the last line of a block or a line, right before a forced line break, is aligned.\n   *\n   * **Syntax**: `auto | start | end | left | right | center | justify`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **47** | **49**  |   No   | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-align-last\n   */\n  "text-align-last"?: Property.TextAlignLast | undefined;\n  /**\n   * The **`text-combine-upright`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\n   *\n   * **Syntax**: `none | all | [ digits <integer>? ]`\n   *\n   * **Initial value**: `none`\n   *\n   * |           Chrome           | Firefox |              Safari              | Edge  |                   IE                   |\n   * | :------------------------: | :-----: | :------------------------------: | :---: | :------------------------------------: |\n   * |           **48**           | **48**  | **5.1** _(-webkit-text-combine)_ | 15-79 | **11** _(-ms-text-combine-horizontal)_ |\n   * | 9 _(-webkit-text-combine)_ |         |                                  |       |                                        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-combine-upright\n   */\n  "text-combine-upright"?: Property.TextCombineUpright | undefined;\n  /**\n   * The **`text-decoration-color`** CSS property sets the color of decorations added to text by `text-decoration-line`.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **36**  | **12.1** | **79** | No  |\n   * |        |         | 8 _-x-_  |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-color\n   */\n  "text-decoration-color"?: Property.TextDecorationColor | undefined;\n  /**\n   * The **`text-decoration-line`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.\n   *\n   * **Syntax**: `none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **36**  | **12.1** | **79** | No  |\n   * |        |         | 8 _-x-_  |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-line\n   */\n  "text-decoration-line"?: Property.TextDecorationLine | undefined;\n  /**\n   * The **`text-decoration-skip`** CSS property sets what parts of an element\'s content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors.\n   *\n   * **Syntax**: `none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]`\n   *\n   * **Initial value**: `objects`\n   *\n   * | Chrome | Firefox |  Safari  | Edge | IE  |\n   * | :----: | :-----: | :------: | :--: | :-: |\n   * | 57-64  |   No    | **12.1** |  No  | No  |\n   * |        |         | 7 _-x-_  |      |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip\n   */\n  "text-decoration-skip"?: Property.TextDecorationSkip | undefined;\n  /**\n   * The **`text-decoration-skip-ink`** CSS property specifies how overlines and underlines are drawn when they pass over glyph ascenders and descenders.\n   *\n   * **Syntax**: `auto | all | none`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **64** | **70**  | **15.4** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-skip-ink\n   */\n  "text-decoration-skip-ink"?: Property.TextDecorationSkipInk | undefined;\n  /**\n   * The **`text-decoration-style`** CSS property sets the style of the lines specified by `text-decoration-line`. The style applies to all lines that are set with `text-decoration-line`.\n   *\n   * **Syntax**: `solid | double | dotted | dashed | wavy`\n   *\n   * **Initial value**: `solid`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **36**  | **12.1** | **79** | No  |\n   * |        |         | 8 _-x-_  |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-style\n   */\n  "text-decoration-style"?: Property.TextDecorationStyle | undefined;\n  /**\n   * The **`text-decoration-thickness`** CSS property sets the stroke thickness of the decoration line that is used on text in an element, such as a line-through, underline, or overline.\n   *\n   * **Syntax**: `auto | from-font | <length> | <percentage> `\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **89** | **70**  | **12.1** | **89** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-thickness\n   */\n  "text-decoration-thickness"?: Property.TextDecorationThickness<TLength> | undefined;\n  /**\n   * The **`text-decoration-thickness`** CSS property sets the stroke thickness of the decoration line that is used on text in an element, such as a line-through, underline, or overline.\n   *\n   * **Syntax**: `auto | from-font | <length> | <percentage> `\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  | Edge  | IE  |\n   * | :----: | :-----: | :------: | :---: | :-: |\n   * | 87-89  | **70**  | **12.1** | 87-89 | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration-thickness\n   */\n  "text-decoration-width"?: Property.TextDecorationThickness<TLength> | undefined;\n  /**\n   * The **`text-emphasis-color`** CSS property sets the color of emphasis marks. This value can also be set using the `text-emphasis` shorthand.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * |    Chrome    | Firefox | Safari |     Edge     | IE  |\n   * | :----------: | :-----: | :----: | :----------: | :-: |\n   * | **25** _-x-_ | **46**  | **7**  | **79** _-x-_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-emphasis-color\n   */\n  "text-emphasis-color"?: Property.TextEmphasisColor | undefined;\n  /**\n   * The **`text-emphasis-position`** CSS property sets where emphasis marks are drawn. Like ruby text, if there isn\'t enough room for emphasis marks, the line height is increased.\n   *\n   * **Syntax**: `[ over | under ] && [ right | left ]`\n   *\n   * **Initial value**: `over right`\n   *\n   * |    Chrome    | Firefox | Safari |     Edge     | IE  |\n   * | :----------: | :-----: | :----: | :----------: | :-: |\n   * | **25** _-x-_ | **46**  | **7**  | **79** _-x-_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-emphasis-position\n   */\n  "text-emphasis-position"?: Property.TextEmphasisPosition | undefined;\n  /**\n   * The **`text-emphasis-style`** CSS property sets the appearance of emphasis marks. It can also be set, and reset, using the `text-emphasis` shorthand.\n   *\n   * **Syntax**: `none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>`\n   *\n   * **Initial value**: `none`\n   *\n   * |    Chrome    | Firefox | Safari |     Edge     | IE  |\n   * | :----------: | :-----: | :----: | :----------: | :-: |\n   * | **25** _-x-_ | **46**  | **7**  | **79** _-x-_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-emphasis-style\n   */\n  "text-emphasis-style"?: Property.TextEmphasisStyle | undefined;\n  /**\n   * The **`text-indent`** CSS property sets the length of empty space (indentation) that is put before lines of text in a block.\n   *\n   * **Syntax**: `<length-percentage> && hanging? && each-line?`\n   *\n   * **Initial value**: `0`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-indent\n   */\n  "text-indent"?: Property.TextIndent<TLength> | undefined;\n  /**\n   * The **`text-justify`** CSS property sets what type of justification should be applied to text when `text-align``: justify;` is set on an element.\n   *\n   * **Syntax**: `auto | inter-character | inter-word | none`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE   |\n   * | :----: | :-----: | :----: | :----: | :----: |\n   * |  n/a   | **55**  |   No   | **12** | **11** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-justify\n   */\n  "text-justify"?: Property.TextJustify | undefined;\n  /**\n   * The **`text-orientation`** CSS property sets the orientation of the text characters in a line. It only affects text in vertical mode (when `writing-mode` is not `horizontal-tb`). It is useful for controlling the display of languages that use vertical script, and also for making vertical table headers.\n   *\n   * **Syntax**: `mixed | upright | sideways`\n   *\n   * **Initial value**: `mixed`\n   *\n   * |  Chrome  | Firefox |  Safari   |  Edge  | IE  |\n   * | :------: | :-----: | :-------: | :----: | :-: |\n   * |  **48**  | **41**  |  **14**   | **79** | No  |\n   * | 11 _-x-_ |         | 5.1 _-x-_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-orientation\n   */\n  "text-orientation"?: Property.TextOrientation | undefined;\n  /**\n   * The **`text-overflow`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis (\'`…`\'), or display a custom string.\n   *\n   * **Syntax**: `[ clip | ellipsis | <string> ]{1,2}`\n   *\n   * **Initial value**: `clip`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  |  **7**  | **1.3** | **12** | **6** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-overflow\n   */\n  "text-overflow"?: Property.TextOverflow | undefined;\n  /**\n   * The **`text-rendering`** CSS property provides information to the rendering engine about what to optimize for when rendering text.\n   *\n   * **Syntax**: `auto | optimizeSpeed | optimizeLegibility | geometricPrecision`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **4**  |  **1**  | **5**  | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-rendering\n   */\n  "text-rendering"?: Property.TextRendering | undefined;\n  /**\n   * The **`text-shadow`** CSS property adds shadows to text. It accepts a comma-separated list of shadows to be applied to the text and any of its `decorations`. Each shadow is described by some combination of X and Y offsets from the element, blur radius, and color.\n   *\n   * **Syntax**: `none | <shadow-t>#`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |   IE   |\n   * | :----: | :-----: | :-----: | :----: | :----: |\n   * | **2**  | **3.5** | **1.1** | **12** | **10** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-shadow\n   */\n  "text-shadow"?: Property.TextShadow | undefined;\n  /**\n   * The **`text-size-adjust`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.\n   *\n   * **Syntax**: `none | auto | <percentage>`\n   *\n   * **Initial value**: `auto` for smartphone browsers supporting inflation, `none` in other cases (and then not modifiable).\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **54** |   No    |   No   | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-size-adjust\n   */\n  "text-size-adjust"?: Property.TextSizeAdjust | undefined;\n  /**\n   * The **`text-transform`** CSS property specifies how to capitalize an element\'s text. It can be used to make text appear in all-uppercase or all-lowercase, or with each word capitalized. It also can help improve legibility for ruby.\n   *\n   * **Syntax**: `none | capitalize | uppercase | lowercase | full-width | full-size-kana`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-transform\n   */\n  "text-transform"?: Property.TextTransform | undefined;\n  /**\n   * The **`text-underline-offset`** CSS property sets the offset distance of an underline text decoration line (applied using `text-decoration`) from its original position.\n   *\n   * **Syntax**: `auto | <length> | <percentage> `\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **70**  | **12.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-underline-offset\n   */\n  "text-underline-offset"?: Property.TextUnderlineOffset<TLength> | undefined;\n  /**\n   * The **`text-underline-position`** CSS property specifies the position of the underline which is set using the `text-decoration` property\'s `underline` value.\n   *\n   * **Syntax**: `auto | from-font | [ under || [ left | right ] ]`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :------: | :----: | :---: |\n   * | **33** | **74**  | **12.1** | **12** | **6** |\n   * |        |         | 9 _-x-_  |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-underline-position\n   */\n  "text-underline-position"?: Property.TextUnderlinePosition | undefined;\n  /**\n   * The **`top`** CSS property participates in specifying the vertical position of a positioned element. It has no effect on non-positioned elements.\n   *\n   * **Syntax**: `<length> | <percentage> | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/top\n   */\n  top?: Property.Top<TLength> | undefined;\n  /**\n   * The **`touch-action`** CSS property sets how an element\'s region can be manipulated by a touchscreen user (for example, by zooming features built into the browser).\n   *\n   * **Syntax**: `auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |    IE    |\n   * | :----: | :-----: | :----: | :----: | :------: |\n   * | **36** | **52**  | **13** | **12** |  **11**  |\n   * |        |         |        |        | 10 _-x-_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/touch-action\n   */\n  "touch-action"?: Property.TouchAction | undefined;\n  /**\n   * The **`transform`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\n   *\n   * **Syntax**: `none | <transform-list>`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome  | Firefox |  Safari   |  Edge  |   IE    |\n   * | :-----: | :-----: | :-------: | :----: | :-----: |\n   * | **36**  | **16**  |   **9**   | **12** | **10**  |\n   * | 1 _-x-_ |         | 3.1 _-x-_ |        | 9 _-x-_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transform\n   */\n  transform?: Property.Transform | undefined;\n  /**\n   * The **`transform-box`** CSS property defines the layout box to which the `transform` and `transform-origin` properties relate.\n   *\n   * **Syntax**: `content-box | border-box | fill-box | stroke-box | view-box`\n   *\n   * **Initial value**: `view-box`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **64** | **55**  | **11** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transform-box\n   */\n  "transform-box"?: Property.TransformBox | undefined;\n  /**\n   * The **`transform-origin`** CSS property sets the origin for an element\'s transformations.\n   *\n   * **Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n   *\n   * **Initial value**: `50% 50% 0`\n   *\n   * | Chrome  |  Firefox  | Safari  |  Edge  |   IE    |\n   * | :-----: | :-------: | :-----: | :----: | :-----: |\n   * | **36**  |  **16**   |  **9**  | **12** | **10**  |\n   * | 1 _-x-_ | 3.5 _-x-_ | 2 _-x-_ |        | 9 _-x-_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transform-origin\n   */\n  "transform-origin"?: Property.TransformOrigin<TLength> | undefined;\n  /**\n   * The **`transform-style`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.\n   *\n   * **Syntax**: `flat | preserve-3d`\n   *\n   * **Initial value**: `flat`\n   *\n   * |  Chrome  | Firefox  | Safari  |  Edge  | IE  |\n   * | :------: | :------: | :-----: | :----: | :-: |\n   * |  **36**  |  **16**  |  **9**  | **12** | No  |\n   * | 12 _-x-_ | 10 _-x-_ | 4 _-x-_ |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transform-style\n   */\n  "transform-style"?: Property.TransformStyle | undefined;\n  /**\n   * The **`transition-delay`** CSS property specifies the duration to wait before starting a property\'s transition effect when its value changes.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **26**  | **16**  |  **9**  | **12** | **10** |\n   * | 1 _-x-_ | 4 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transition-delay\n   */\n  "transition-delay"?: Property.TransitionDelay<TTime> | undefined;\n  /**\n   * The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   *\n   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n   * | :-----: | :-----: | :-------: | :----: | :----: |\n   * | **26**  | **16**  |   **9**   | **12** | **10** |\n   * | 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transition-duration\n   */\n  "transition-duration"?: Property.TransitionDuration<TTime> | undefined;\n  /**\n   * The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n   *\n   * **Syntax**: `none | <single-transition-property>#`\n   *\n   * **Initial value**: all\n   *\n   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n   * | :-----: | :-----: | :-------: | :----: | :----: |\n   * | **26**  | **16**  |   **9**   | **12** | **10** |\n   * | 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transition-property\n   */\n  "transition-property"?: Property.TransitionProperty | undefined;\n  /**\n   * The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   *\n   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n   * | :-----: | :-----: | :-------: | :----: | :----: |\n   * | **26**  | **16**  |   **9**   | **12** | **10** |\n   * | 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transition-timing-function\n   */\n  "transition-timing-function"?: Property.TransitionTimingFunction | undefined;\n  /**\n   * The **`translate`** CSS property allows you to specify translation transforms individually and independently of the `transform` property. This maps better to typical user interface usage, and saves having to remember the exact order of transform functions to specify in the `transform` value.\n   *\n   * **Syntax**: `none | <length-percentage> [ <length-percentage> <length>? ]?`\n   *\n   * **Initial value**: `none`\n   *\n   * | Chrome | Firefox |  Safari  | Edge | IE  |\n   * | :----: | :-----: | :------: | :--: | :-: |\n   * |   No   | **72**  | **14.1** |  No  | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/translate\n   */\n  translate?: Property.Translate<TLength> | undefined;\n  /**\n   * The **`unicode-bidi`** CSS property, together with the `direction` property, determines how bidirectional text in a document is handled. For example, if a block of content contains both left-to-right and right-to-left text, the user-agent uses a complex Unicode algorithm to decide how to display the text. The `unicode-bidi` property overrides this algorithm and allows the developer to control the text embedding.\n   *\n   * **Syntax**: `normal | embed | isolate | bidi-override | isolate-override | plaintext`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |   IE    |\n   * | :----: | :-----: | :-----: | :----: | :-----: |\n   * | **2**  |  **1**  | **1.3** | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/unicode-bidi\n   */\n  "unicode-bidi"?: Property.UnicodeBidi | undefined;\n  /**\n   * The **`user-select`** CSS property controls whether the user can select text. This doesn\'t have any effect on content loaded as part of a browser\'s user interface (its chrome), except in textboxes.\n   *\n   * **Syntax**: `auto | text | none | contain | all`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome  | Firefox |   Safari    |   Edge   |      IE      |\n   * | :-----: | :-----: | :---------: | :------: | :----------: |\n   * | **54**  | **69**  | **3** _-x-_ |  **79**  | **10** _-x-_ |\n   * | 1 _-x-_ | 1 _-x-_ |             | 12 _-x-_ |              |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/user-select\n   */\n  "user-select"?: Property.UserSelect | undefined;\n  /**\n   * The **`vertical-align`** CSS property sets vertical alignment of an inline, inline-block or table-cell box.\n   *\n   * **Syntax**: `baseline | sub | super | text-top | text-bottom | middle | top | bottom | <percentage> | <length>`\n   *\n   * **Initial value**: `baseline`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/vertical-align\n   */\n  "vertical-align"?: Property.VerticalAlign<TLength> | undefined;\n  /**\n   * The **`visibility`** CSS property shows or hides an element without changing the layout of a document. The property can also hide rows or columns in a `<table>`.\n   *\n   * **Syntax**: `visible | hidden | collapse`\n   *\n   * **Initial value**: `visible`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/visibility\n   */\n  visibility?: Property.Visibility | undefined;\n  /**\n   * The **`white-space`** CSS property sets how white space inside an element is handled.\n   *\n   * **Syntax**: `normal | pre | nowrap | pre-wrap | pre-line | break-spaces`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/white-space\n   */\n  "white-space"?: Property.WhiteSpace | undefined;\n  /**\n   * The **`widows`** CSS property sets the minimum number of lines in a block container that must be shown at the _top_ of a page, region, or column.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `2`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **25** |   No    | **1.3** | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/widows\n   */\n  widows?: Property.Widows | undefined;\n  /**\n   * The **`width`** CSS property sets an element\'s width. By default, it sets the width of the content area, but if `box-sizing` is set to `border-box`, it sets the width of the border area.\n   *\n   * **Syntax**: `auto | <length> | <percentage> | min-content | max-content | fit-content | fit-content(<length-percentage>)`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/width\n   */\n  width?: Property.Width<TLength> | undefined;\n  /**\n   * The **`will-change`** CSS property hints to browsers how an element is expected to change. Browsers may set up optimizations before an element is actually changed. These kinds of optimizations can increase the responsiveness of a page by doing potentially expensive work before they are actually required.\n   *\n   * **Syntax**: `auto | <animateable-feature>#`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :-----: | :----: | :-: |\n   * | **36** | **36**  | **9.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/will-change\n   */\n  "will-change"?: Property.WillChange | undefined;\n  /**\n   * The **`word-break`** CSS property sets whether line breaks appear wherever the text would otherwise overflow its content box.\n   *\n   * **Syntax**: `normal | break-all | keep-all | break-word`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  | **15**  | **3**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/word-break\n   */\n  "word-break"?: Property.WordBreak | undefined;\n  /**\n   * The **`word-spacing`** CSS property sets the length of space between words and between tags.\n   *\n   * **Syntax**: `normal | <length>`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **6** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/word-spacing\n   */\n  "word-spacing"?: Property.WordSpacing<TLength> | undefined;\n  /**\n   * The **`overflow-wrap`** CSS property applies to inline elements, setting whether the browser should insert line breaks within an otherwise unbreakable string to prevent text from overflowing its line box.\n   *\n   * **Syntax**: `normal | break-word`\n   *\n   * **Initial value**: `normal`\n   */\n  "word-wrap"?: Property.WordWrap | undefined;\n  /**\n   * The **`writing-mode`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (`html` element for HTML documents).\n   *\n   * **Syntax**: `horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr`\n   *\n   * **Initial value**: `horizontal-tb`\n   *\n   * | Chrome  | Firefox |  Safari   |  Edge  |  IE   |\n   * | :-----: | :-----: | :-------: | :----: | :---: |\n   * | **48**  | **41**  | **10.1**  | **12** | **9** |\n   * | 8 _-x-_ |         | 5.1 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/writing-mode\n   */\n  "writing-mode"?: Property.WritingMode | undefined;\n  /**\n   * The **`z-index`** CSS property sets the z-order of a positioned element and its descendants or flex items. Overlapping elements with a larger z-index cover those with a smaller one.\n   *\n   * **Syntax**: `auto | <integer>`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/z-index\n   */\n  "z-index"?: Property.ZIndex | undefined;\n  /**\n   * The non-standard **_`zoom`_** CSS property can be used to control the magnification level of an element. `transform: scale()` should be used instead of this property, if possible. However, unlike CSS Transforms, `zoom` affects the layout size of the element.\n   *\n   * **Syntax**: `normal | reset | <number> | <percentage>`\n   *\n   * **Initial value**: `normal`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |   IE    |\n   * | :----: | :-----: | :-----: | :----: | :-----: |\n   * | **1**  |   No    | **3.1** | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/zoom\n   */\n  zoom?: Property.Zoom | undefined;\n}\n\nexport interface StandardShorthandPropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}> {\n  /**\n   * The **`all`** shorthand CSS property resets all of an element\'s properties except `unicode-bidi`, `direction`, and CSS Custom Properties. It can set properties to their initial or inherited values, or to the values specified in another stylesheet origin.\n   *\n   * **Syntax**: `initial | inherit | unset | revert`\n   *\n   * **Initial value**: There is no practical initial value for it.\n   *\n   * | Chrome | Firefox | Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :-----: | :----: | :-: |\n   * | **37** | **27**  | **9.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/all\n   */\n  all?: Property.All | undefined;\n  /**\n   * The **`animation`** shorthand CSS property applies an animation between styles. It is a shorthand for `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and `animation-play-state`.\n   *\n   * **Syntax**: `<single-animation>#`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **43**  | **16**  |  **9**  | **12** | **10** |\n   * | 3 _-x-_ | 5 _-x-_ | 4 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/animation\n   */\n  animation?: Property.Animation<TTime> | undefined;\n  /**\n   * The **`background`** shorthand CSS property sets all background style properties at once, such as color, image, origin and size, or repeat method.\n   *\n   * **Syntax**: `[ <bg-layer> , ]* <final-bg-layer>`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background\n   */\n  background?: Property.Background<TLength> | undefined;\n  /**\n   * The **`background-position`** CSS property sets the initial position for each background image. The position is relative to the position layer set by `background-origin`.\n   *\n   * **Syntax**: `<bg-position>#`\n   *\n   * **Initial value**: `0% 0%`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/background-position\n   */\n  "background-position"?: Property.BackgroundPosition<TLength> | undefined;\n  /**\n   * The **`border`** shorthand CSS property sets an element\'s border. It sets the values of `border-width`, `border-style`, and `border-color`.\n   *\n   * **Syntax**: `<line-width> || <line-style> || <color>`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border\n   */\n  border?: Property.Border<TLength> | undefined;\n  /**\n   * The **`border-block`** CSS property is a shorthand property for setting the individual logical block border property values in a single place in the style sheet.\n   *\n   * **Syntax**: `<\'border-top-width\'> || <\'border-top-style\'> || <color>`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block\n   */\n  "border-block"?: Property.BorderBlock<TLength> | undefined;\n  /**\n   * The **`border-block-end`** CSS property is a shorthand property for setting the individual logical block-end border property values in a single place in the style sheet.\n   *\n   * **Syntax**: `<\'border-top-width\'> || <\'border-top-style\'> || <color>`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-end\n   */\n  "border-block-end"?: Property.BorderBlockEnd<TLength> | undefined;\n  /**\n   * The **`border-block-start`** CSS property is a shorthand property for setting the individual logical block-start border property values in a single place in the style sheet.\n   *\n   * **Syntax**: `<\'border-top-width\'> || <\'border-top-style\'> || <color>`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-block-start\n   */\n  "border-block-start"?: Property.BorderBlockStart<TLength> | undefined;\n  /**\n   * The **`border-bottom`** shorthand CSS property sets an element\'s bottom border. It sets the values of `border-bottom-width`, `border-bottom-style` and `border-bottom-color`.\n   *\n   * **Syntax**: `<line-width> || <line-style> || <color>`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-bottom\n   */\n  "border-bottom"?: Property.BorderBottom<TLength> | undefined;\n  /**\n   * The **`border-color`** shorthand CSS property sets the color of an element\'s border.\n   *\n   * **Syntax**: `<color>{1,4}`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-color\n   */\n  "border-color"?: Property.BorderColor | undefined;\n  /**\n   * The **`border-image`** CSS property draws an image around a given element. It replaces the element\'s regular border.\n   *\n   * **Syntax**: `<\'border-image-source\'> || <\'border-image-slice\'> [ / <\'border-image-width\'> | / <\'border-image-width\'>? / <\'border-image-outset\'> ]? || <\'border-image-repeat\'>`\n   *\n   * | Chrome  |  Firefox  | Safari  |  Edge  |   IE   |\n   * | :-----: | :-------: | :-----: | :----: | :----: |\n   * | **16**  |  **15**   |  **6**  | **12** | **11** |\n   * | 7 _-x-_ | 3.5 _-x-_ | 3 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-image\n   */\n  "border-image"?: Property.BorderImage | undefined;\n  /**\n   * The **`border-inline`** CSS property is a shorthand property for setting the individual logical inline border property values in a single place in the style sheet.\n   *\n   * **Syntax**: `<\'border-top-width\'> || <\'border-top-style\'> || <color>`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **87** | **66**  | **14.1** | **87** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline\n   */\n  "border-inline"?: Property.BorderInline<TLength> | undefined;\n  /**\n   * The **`border-inline-end`** CSS property is a shorthand property for setting the individual logical inline-end border property values in a single place in the style sheet.\n   *\n   * **Syntax**: `<\'border-top-width\'> || <\'border-top-style\'> || <color>`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-end\n   */\n  "border-inline-end"?: Property.BorderInlineEnd<TLength> | undefined;\n  /**\n   * The **`border-inline-start`** CSS property is a shorthand property for setting the individual logical inline-start border property values in a single place in the style sheet.\n   *\n   * **Syntax**: `<\'border-top-width\'> || <\'border-top-style\'> || <color>`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **69** | **41**  | **12.1** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-inline-start\n   */\n  "border-inline-start"?: Property.BorderInlineStart<TLength> | undefined;\n  /**\n   * The **`border-left`** shorthand CSS property sets all the properties of an element\'s left border.\n   *\n   * **Syntax**: `<line-width> || <line-style> || <color>`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-left\n   */\n  "border-left"?: Property.BorderLeft<TLength> | undefined;\n  /**\n   * The **`border-radius`** CSS property rounds the corners of an element\'s outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.\n   *\n   * **Syntax**: `<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |  IE   |\n   * | :-----: | :-----: | :-----: | :----: | :---: |\n   * |  **4**  |  **4**  |  **5**  | **12** | **9** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |       |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-radius\n   */\n  "border-radius"?: Property.BorderRadius<TLength> | undefined;\n  /**\n   * The **`border-right`** shorthand CSS property sets all the properties of an element\'s right border.\n   *\n   * **Syntax**: `<line-width> || <line-style> || <color>`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |   IE    |\n   * | :----: | :-----: | :----: | :----: | :-----: |\n   * | **1**  |  **1**  | **1**  | **12** | **5.5** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-right\n   */\n  "border-right"?: Property.BorderRight<TLength> | undefined;\n  /**\n   * The **`border-style`** shorthand CSS property sets the line style for all four sides of an element\'s border.\n   *\n   * **Syntax**: `<line-style>{1,4}`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-style\n   */\n  "border-style"?: Property.BorderStyle | undefined;\n  /**\n   * The **`border-top`** shorthand CSS property sets all the properties of an element\'s top border.\n   *\n   * **Syntax**: `<line-width> || <line-style> || <color>`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-top\n   */\n  "border-top"?: Property.BorderTop<TLength> | undefined;\n  /**\n   * The **`border-width`** shorthand CSS property sets the width of an element\'s border.\n   *\n   * **Syntax**: `<line-width>{1,4}`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/border-width\n   */\n  "border-width"?: Property.BorderWidth<TLength> | undefined;\n  /**\n   * The **`column-rule`** shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'column-rule-width\'> || <\'column-rule-style\'> || <\'column-rule-color\'>`\n   *\n   * | Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :-----: | :-----: | :-----: | :----: | :----: |\n   * | **50**  | **52**  |  **9**  | **12** | **10** |\n   * | 1 _-x-_ |         | 3 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/column-rule\n   */\n  "column-rule"?: Property.ColumnRule<TLength> | undefined;\n  /**\n   * The **`columns`** CSS shorthand property sets the number of columns to use when drawing an element\'s contents, as well as those columns\' widths.\n   *\n   * **Syntax**: `<\'column-width\'> || <\'column-count\'>`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |   IE   |\n   * | :----: | :-----: | :-----: | :----: | :----: |\n   * | **50** | **52**  |  **9**  | **12** | **10** |\n   * |        |         | 3 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/columns\n   */\n  columns?: Property.Columns<TLength> | undefined;\n  /**\n   * The **`flex`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.\n   *\n   * **Syntax**: `none | [ <\'flex-grow\'> <\'flex-shrink\'>? || <\'flex-basis\'> ]`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |    IE    |\n   * | :------: | :-----: | :-----: | :----: | :------: |\n   * |  **29**  | **20**  |  **9**  | **12** |  **11**  |\n   * | 21 _-x-_ |         | 7 _-x-_ |        | 10 _-x-_ |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/flex\n   */\n  flex?: Property.Flex<TLength> | undefined;\n  /**\n   * The **`flex-flow`** CSS shorthand property specifies the direction of a flex container, as well as its wrapping behavior.\n   *\n   * **Syntax**: `<\'flex-direction\'> || <\'flex-wrap\'>`\n   *\n   * |  Chrome  | Firefox | Safari  |  Edge  |   IE   |\n   * | :------: | :-----: | :-----: | :----: | :----: |\n   * |  **29**  | **28**  |  **9**  | **12** | **11** |\n   * | 21 _-x-_ |         | 7 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/flex-flow\n   */\n  "flex-flow"?: Property.FlexFlow | undefined;\n  /**\n   * The **`font`** CSS shorthand property sets all the different properties of an element\'s font. Alternatively, it sets an element\'s font to a system font.\n   *\n   * **Syntax**: `[ [ <\'font-style\'> || <font-variant-css21> || <\'font-weight\'> || <\'font-stretch\'> ]? <\'font-size\'> [ / <\'line-height\'> ]? <\'font-family\'> ] | caption | icon | menu | message-box | small-caption | status-bar`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/font\n   */\n  font?: Property.Font | undefined;\n  /**\n   * The **`gap`** CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for `row-gap` and `column-gap`.\n   *\n   * **Syntax**: `<\'row-gap\'> <\'column-gap\'>?`\n   *\n   * ---\n   *\n   * _Supported in Flex Layout_\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **84** | **63**  | **14.1** | **84** | No  |\n   *\n   * ---\n   *\n   * _Supported in Grid Layout_\n   *\n   * |     Chrome      |     Firefox     |      Safari       |  Edge  | IE  |\n   * | :-------------: | :-------------: | :---------------: | :----: | :-: |\n   * |     **66**      |     **61**      |      **12**       | **16** | No  |\n   * | 57 _(grid-gap)_ | 52 _(grid-gap)_ | 10.1 _(grid-gap)_ |        |     |\n   *\n   * ---\n   *\n   * _Supported in Multi-column Layout_\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **66** | **61**  |   No   | **16** | No  |\n   *\n   * ---\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/gap\n   */\n  gap?: Property.Gap<TLength> | undefined;\n  /**\n   * The **`grid`** CSS property is a shorthand property that sets all of the explicit and implicit grid properties in a single declaration.\n   *\n   * **Syntax**: `<\'grid-template\'> | <\'grid-template-rows\'> / [ auto-flow && dense? ] <\'grid-auto-columns\'>? | [ auto-flow && dense? ] <\'grid-auto-rows\'>? / <\'grid-template-columns\'>`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid\n   */\n  grid?: Property.Grid | undefined;\n  /**\n   * The **`grid-area`** CSS shorthand property specifies a grid item\'s size and location within a grid by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the edges of its grid area.\n   *\n   * **Syntax**: `<grid-line> [ / <grid-line> ]{0,3}`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-area\n   */\n  "grid-area"?: Property.GridArea | undefined;\n  /**\n   * The **`grid-column`** CSS shorthand property specifies a grid item\'s size and location within a grid column by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.\n   *\n   * **Syntax**: `<grid-line> [ / <grid-line> ]?`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-column\n   */\n  "grid-column"?: Property.GridColumn | undefined;\n  /**\n   * The **`grid-row`** CSS shorthand property specifies a grid item\'s size and location within the grid row by contributing a line, a span, or nothing (automatic) to its grid placement, thereby specifying the inline-start and inline-end edge of its grid area.\n   *\n   * **Syntax**: `<grid-line> [ / <grid-line> ]?`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-row\n   */\n  "grid-row"?: Property.GridRow | undefined;\n  /**\n   * The **`grid-template`** CSS property is a shorthand property for defining grid columns, rows, and areas.\n   *\n   * **Syntax**: `none | [ <\'grid-template-rows\'> / <\'grid-template-columns\'> ] | [ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?`\n   *\n   * | Chrome | Firefox |  Safari  |  Edge  | IE  |\n   * | :----: | :-----: | :------: | :----: | :-: |\n   * | **57** | **52**  | **10.1** | **16** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/grid-template\n   */\n  "grid-template"?: Property.GridTemplate | undefined;\n  /**\n   * **Syntax**: `none | <integer>`\n   *\n   * **Initial value**: `none`\n   */\n  "line-clamp"?: Property.LineClamp | undefined;\n  /**\n   * The **`list-style`** CSS shorthand property allows you to set all the list style properties at once.\n   *\n   * **Syntax**: `<\'list-style-type\'> || <\'list-style-position\'> || <\'list-style-image\'>`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/list-style\n   */\n  "list-style"?: Property.ListStyle | undefined;\n  /**\n   * The **`margin`** CSS shorthand property sets the margin area on all four sides of an element.\n   *\n   * **Syntax**: `[ <length> | <percentage> | auto ]{1,4}`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/margin\n   */\n  margin?: Property.Margin<TLength> | undefined;\n  /**\n   * The **`mask`** CSS shorthand property hides an element (partially or fully) by masking or clipping the image at specific points.\n   *\n   * **Syntax**: `<mask-layer>#`\n   *\n   * | Chrome | Firefox | Safari  | Edge  | IE  |\n   * | :----: | :-----: | :-----: | :---: | :-: |\n   * | **1**  |  **2**  | **3.1** | 12-79 | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask\n   */\n  mask?: Property.Mask<TLength> | undefined;\n  /**\n   * The **`mask-border`** CSS shorthand property lets you create a mask along the edge of an element\'s border.\n   *\n   * **Syntax**: `<\'mask-border-source\'> || <\'mask-border-slice\'> [ / <\'mask-border-width\'>? [ / <\'mask-border-outset\'> ]? ]? || <\'mask-border-repeat\'> || <\'mask-border-mode\'>`\n   *\n   * |              Chrome              | Firefox |               Safari               |               Edge                | IE  |\n   * | :------------------------------: | :-----: | :--------------------------------: | :-------------------------------: | :-: |\n   * | **1** _(-webkit-mask-box-image)_ |   No    | **3.1** _(-webkit-mask-box-image)_ | **79** _(-webkit-mask-box-image)_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/mask-border\n   */\n  "mask-border"?: Property.MaskBorder | undefined;\n  /**\n   * The **`offset`** CSS shorthand property sets all the properties required for animating an element along a defined path.\n   *\n   * **Syntax**: `[ <\'offset-position\'>? [ <\'offset-path\'> [ <\'offset-distance\'> || <\'offset-rotate\'> ]? ]? ]! [ / <\'offset-anchor\'> ]?`\n   *\n   * |    Chrome     | Firefox | Safari |  Edge  | IE  |\n   * | :-----------: | :-----: | :----: | :----: | :-: |\n   * |    **55**     | **72**  |   No   | **79** | No  |\n   * | 46 _(motion)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset\n   */\n  motion?: Property.Offset<TLength> | undefined;\n  /**\n   * The **`offset`** CSS shorthand property sets all the properties required for animating an element along a defined path.\n   *\n   * **Syntax**: `[ <\'offset-position\'>? [ <\'offset-path\'> [ <\'offset-distance\'> || <\'offset-rotate\'> ]? ]? ]! [ / <\'offset-anchor\'> ]?`\n   *\n   * |    Chrome     | Firefox | Safari |  Edge  | IE  |\n   * | :-----------: | :-----: | :----: | :----: | :-: |\n   * |    **55**     | **72**  |   No   | **79** | No  |\n   * | 46 _(motion)_ |         |        |        |     |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/offset\n   */\n  offset?: Property.Offset<TLength> | undefined;\n  /**\n   * The **`outline`** CSS shorthand property set all the outline properties in a single declaration.\n   *\n   * **Syntax**: `[ <\'outline-color\'> || <\'outline-style\'> || <\'outline-width\'> ]`\n   *\n   * | Chrome | Firefox | Safari  |  Edge  |  IE   |\n   * | :----: | :-----: | :-----: | :----: | :---: |\n   * | **1**  | **1.5** | **1.2** | **12** | **8** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/outline\n   */\n  outline?: Property.Outline<TLength> | undefined;\n  /**\n   * The **`overflow`** CSS shorthand property sets the desired behavior for an element\'s overflow — i.e. when an element\'s content is too big to fit in its block formatting context — in both directions.\n   *\n   * **Syntax**: `[ visible | hidden | clip | scroll | auto ]{1,2}`\n   *\n   * **Initial value**: `visible`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overflow\n   */\n  overflow?: Property.Overflow | undefined;\n  /**\n   * The **`overscroll-behavior`** CSS property sets what a browser does when reaching the boundary of a scrolling area. It\'s a shorthand for `overscroll-behavior-x` and `overscroll-behavior-y`.\n   *\n   * **Syntax**: `[ contain | none | auto ]{1,2}`\n   *\n   * **Initial value**: `auto`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **63** | **59**  |   No   | **18** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/overscroll-behavior\n   */\n  "overscroll-behavior"?: Property.OverscrollBehavior | undefined;\n  /**\n   * The **`padding`** CSS shorthand property sets the padding area on all four sides of an element at once.\n   *\n   * **Syntax**: `[ <length> | <percentage> ]{1,4}`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **4** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/padding\n   */\n  padding?: Property.Padding<TLength> | undefined;\n  /**\n   * The CSS **`place-items`** shorthand property allows you to align items along both the block and inline directions at once (i.e. the `align-items` and `justify-items` properties) in a relevant layout system such as Grid or Flexbox. If the second value is not set, the first value is also used for it.\n   *\n   * **Syntax**: `<\'align-items\'> <\'justify-items\'>?`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **59** | **45**  | **11** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/place-items\n   */\n  "place-items"?: Property.PlaceItems | undefined;\n  /**\n   * The **`place-self`** CSS shorthand property allows you to align an individual item in both the block and inline directions at once (i.e. the `align-self` and `justify-self` properties) in a relevant layout system such as Grid or Flexbox. If the second value is not present, the first value is also used for it.\n   *\n   * **Syntax**: `<\'align-self\'> <\'justify-self\'>?`\n   *\n   * | Chrome | Firefox | Safari |  Edge  | IE  |\n   * | :----: | :-----: | :----: | :----: | :-: |\n   * | **59** | **45**  | **11** | **79** | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/place-self\n   */\n  "place-self"?: Property.PlaceSelf | undefined;\n  /**\n   * The **`text-decoration`** shorthand CSS property sets the appearance of decorative lines on text. It is a shorthand for `text-decoration-line`, `text-decoration-color`, `text-decoration-style`, and the newer `text-decoration-thickness` property.\n   *\n   * **Syntax**: `<\'text-decoration-line\'> || <\'text-decoration-style\'> || <\'text-decoration-color\'> || <\'text-decoration-thickness\'>`\n   *\n   * | Chrome | Firefox | Safari |  Edge  |  IE   |\n   * | :----: | :-----: | :----: | :----: | :---: |\n   * | **1**  |  **1**  | **1**  | **12** | **3** |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-decoration\n   */\n  "text-decoration"?: Property.TextDecoration<TLength> | undefined;\n  /**\n   * The **`text-emphasis`** CSS property applies emphasis marks to text (except spaces and control characters). It is a shorthand for `text-emphasis-style` and `text-emphasis-color`.\n   *\n   * **Syntax**: `<\'text-emphasis-style\'> || <\'text-emphasis-color\'>`\n   *\n   * |    Chrome    | Firefox | Safari |     Edge     | IE  |\n   * | :----------: | :-----: | :----: | :----------: | :-: |\n   * | **25** _-x-_ | **46**  | **7**  | **79** _-x-_ | No  |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/text-emphasis\n   */\n  "text-emphasis"?: Property.TextEmphasis | undefined;\n  /**\n   * The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n   *\n   * **Syntax**: `<single-transition>#`\n   *\n   * | Chrome  | Firefox |  Safari   |  Edge  |   IE   |\n   * | :-----: | :-----: | :-------: | :----: | :----: |\n   * | **26**  | **16**  |   **9**   | **12** | **10** |\n   * | 1 _-x-_ | 4 _-x-_ | 3.1 _-x-_ |        |        |\n   *\n   * @see https://developer.mozilla.org/docs/Web/CSS/transition\n   */\n  transition?: Property.Transition<TTime> | undefined;\n}\n\nexport interface StandardPropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}>\n  extends StandardLonghandPropertiesHyphen<TLength, TTime>,\n    StandardShorthandPropertiesHyphen<TLength, TTime> {}\n\nexport interface VendorLonghandPropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}> {\n  /**\n   * The **`animation-delay`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  "-moz-animation-delay"?: Property.AnimationDelay<TTime> | undefined;\n  /**\n   * The **`animation-direction`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.\n   *\n   * **Syntax**: `<single-animation-direction>#`\n   *\n   * **Initial value**: `normal`\n   */\n  "-moz-animation-direction"?: Property.AnimationDirection | undefined;\n  /**\n   * The **`animation-duration`** CSS property sets the length of time that an animation takes to complete one cycle.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  "-moz-animation-duration"?: Property.AnimationDuration<TTime> | undefined;\n  /**\n   * The **`animation-fill-mode`** CSS property sets how a CSS animation applies styles to its target before and after its execution.\n   *\n   * **Syntax**: `<single-animation-fill-mode>#`\n   *\n   * **Initial value**: `none`\n   */\n  "-moz-animation-fill-mode"?: Property.AnimationFillMode | undefined;\n  /**\n   * The **`animation-iteration-count`** CSS property sets the number of times an animation sequence should be played before stopping.\n   *\n   * **Syntax**: `<single-animation-iteration-count>#`\n   *\n   * **Initial value**: `1`\n   */\n  "-moz-animation-iteration-count"?: Property.AnimationIterationCount | undefined;\n  /**\n   * The **`animation-name`** CSS property specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element.\n   *\n   * **Syntax**: `[ none | <keyframes-name> ]#`\n   *\n   * **Initial value**: `none`\n   */\n  "-moz-animation-name"?: Property.AnimationName | undefined;\n  /**\n   * The **`animation-play-state`** CSS property sets whether an animation is running or paused.\n   *\n   * **Syntax**: `<single-animation-play-state>#`\n   *\n   * **Initial value**: `running`\n   */\n  "-moz-animation-play-state"?: Property.AnimationPlayState | undefined;\n  /**\n   * The **`animation-timing-function`** CSS property sets how an animation progresses through the duration of each cycle.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   */\n  "-moz-animation-timing-function"?: Property.AnimationTimingFunction | undefined;\n  /**\n   * The **`appearance`** CSS property is used to display an element using platform-native styling, based on the operating system\'s theme. The **`-moz-appearance`** and **`-webkit-appearance`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **`-webkit-appearance`**, for compatibility reasons.\n   *\n   * **Syntax**: `none | button | button-arrow-down | button-arrow-next | button-arrow-previous | button-arrow-up | button-bevel | button-focus | caret | checkbox | checkbox-container | checkbox-label | checkmenuitem | dualbutton | groupbox | listbox | listitem | menuarrow | menubar | menucheckbox | menuimage | menuitem | menuitemtext | menulist | menulist-button | menulist-text | menulist-textfield | menupopup | menuradio | menuseparator | meterbar | meterchunk | progressbar | progressbar-vertical | progresschunk | progresschunk-vertical | radio | radio-container | radio-label | radiomenuitem | range | range-thumb | resizer | resizerpanel | scale-horizontal | scalethumbend | scalethumb-horizontal | scalethumbstart | scalethumbtick | scalethumb-vertical | scale-vertical | scrollbarbutton-down | scrollbarbutton-left | scrollbarbutton-right | scrollbarbutton-up | scrollbarthumb-horizontal | scrollbarthumb-vertical | scrollbartrack-horizontal | scrollbartrack-vertical | searchfield | separator | sheet | spinner | spinner-downbutton | spinner-textfield | spinner-upbutton | splitter | statusbar | statusbarpanel | tab | tabpanel | tabpanels | tab-scroll-arrow-back | tab-scroll-arrow-forward | textfield | textfield-multiline | toolbar | toolbarbutton | toolbarbutton-dropdown | toolbargripper | toolbox | tooltip | treeheader | treeheadercell | treeheadersortarrow | treeitem | treeline | treetwisty | treetwistyopen | treeview | -moz-mac-unified-toolbar | -moz-win-borderless-glass | -moz-win-browsertabbar-toolbox | -moz-win-communicationstext | -moz-win-communications-toolbox | -moz-win-exclude-glass | -moz-win-glass | -moz-win-mediatext | -moz-win-media-toolbox | -moz-window-button-box | -moz-window-button-box-maximized | -moz-window-button-close | -moz-window-button-maximize | -moz-window-button-minimize | -moz-window-button-restore | -moz-window-frame-bottom | -moz-window-frame-left | -moz-window-frame-right | -moz-window-titlebar | -moz-window-titlebar-maximized`\n   *\n   * **Initial value**: `none` (but this value is overridden in the user agent CSS)\n   */\n  "-moz-appearance"?: Property.MozAppearance | undefined;\n  /**\n   * The **`backface-visibility`** CSS property sets whether the back face of an element is visible when turned towards the user.\n   *\n   * **Syntax**: `visible | hidden`\n   *\n   * **Initial value**: `visible`\n   */\n  "-moz-backface-visibility"?: Property.BackfaceVisibility | undefined;\n  /**\n   * In Mozilla applications like Firefox, the **`-moz-border-bottom-colors`** CSS property sets a list of colors for the bottom border.\n   *\n   * **Syntax**: `<color>+ | none`\n   *\n   * **Initial value**: `none`\n   */\n  "-moz-border-bottom-colors"?: Property.MozBorderBottomColors | undefined;\n  /**\n   * The **`border-inline-end-color`** CSS property defines the color of the logical inline-end border of an element, which maps to a physical border color depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-color\'>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  "-moz-border-end-color"?: Property.BorderInlineEndColor | undefined;\n  /**\n   * The **`border-inline-end-style`** CSS property defines the style of the logical inline end border of an element, which maps to a physical border style depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-style\'>`\n   *\n   * **Initial value**: `none`\n   */\n  "-moz-border-end-style"?: Property.BorderInlineEndStyle | undefined;\n  /**\n   * The **`border-inline-end-width`** CSS property defines the width of the logical inline-end border of an element, which maps to a physical border width depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-width`, `border-right-width`, `border-bottom-width`, or `border-left-width` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-width\'>`\n   *\n   * **Initial value**: `medium`\n   */\n  "-moz-border-end-width"?: Property.BorderInlineEndWidth<TLength> | undefined;\n  /**\n   * In Mozilla applications like Firefox, the **`-moz-border-left-colors`** CSS property sets a list of colors for the left border.\n   *\n   * **Syntax**: `<color>+ | none`\n   *\n   * **Initial value**: `none`\n   */\n  "-moz-border-left-colors"?: Property.MozBorderLeftColors | undefined;\n  /**\n   * In Mozilla applications like Firefox, the **`-moz-border-right-colors`** CSS property sets a list of colors for the right border.\n   *\n   * **Syntax**: `<color>+ | none`\n   *\n   * **Initial value**: `none`\n   */\n  "-moz-border-right-colors"?: Property.MozBorderRightColors | undefined;\n  /**\n   * The **`border-inline-start-color`** CSS property defines the color of the logical inline start border of an element, which maps to a physical border color depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-color`, `border-right-color`, `border-bottom-color`, or `border-left-color` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-color\'>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  "-moz-border-start-color"?: Property.BorderInlineStartColor | undefined;\n  /**\n   * The **`border-inline-start-style`** CSS property defines the style of the logical inline start border of an element, which maps to a physical border style depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `border-top-style`, `border-right-style`, `border-bottom-style`, or `border-left-style` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'border-top-style\'>`\n   *\n   * **Initial value**: `none`\n   */\n  "-moz-border-start-style"?: Property.BorderInlineStartStyle | undefined;\n  /**\n   * In Mozilla applications like Firefox, the **`-moz-border-top-colors`** CSS property sets a list of colors for the top border.\n   *\n   * **Syntax**: `<color>+ | none`\n   *\n   * **Initial value**: `none`\n   */\n  "-moz-border-top-colors"?: Property.MozBorderTopColors | undefined;\n  /**\n   * The **`box-sizing`** CSS property sets how the total width and height of an element is calculated.\n   *\n   * **Syntax**: `content-box | border-box`\n   *\n   * **Initial value**: `content-box`\n   */\n  "-moz-box-sizing"?: Property.BoxSizing | undefined;\n  /**\n   * The **`column-count`** CSS property breaks an element\'s content into the specified number of columns.\n   *\n   * **Syntax**: `<integer> | auto`\n   *\n   * **Initial value**: `auto`\n   */\n  "-moz-column-count"?: Property.ColumnCount | undefined;\n  /**\n   * The **`column-fill`** CSS property controls how an element\'s contents are balanced when broken into columns.\n   *\n   * **Syntax**: `auto | balance | balance-all`\n   *\n   * **Initial value**: `balance`\n   */\n  "-moz-column-fill"?: Property.ColumnFill | undefined;\n  /**\n   * The **`column-gap`** CSS property sets the size of the gap (gutter) between an element\'s columns.\n   *\n   * **Syntax**: `normal | <length-percentage>`\n   *\n   * **Initial value**: `normal`\n   */\n  "-moz-column-gap"?: Property.ColumnGap<TLength> | undefined;\n  /**\n   * The **`column-rule-color`** CSS property sets the color of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  "-moz-column-rule-color"?: Property.ColumnRuleColor | undefined;\n  /**\n   * The **`column-rule-style`** CSS property sets the style of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'border-style\'>`\n   *\n   * **Initial value**: `none`\n   */\n  "-moz-column-rule-style"?: Property.ColumnRuleStyle | undefined;\n  /**\n   * The **`column-rule-width`** CSS property sets the width of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'border-width\'>`\n   *\n   * **Initial value**: `medium`\n   */\n  "-moz-column-rule-width"?: Property.ColumnRuleWidth<TLength> | undefined;\n  /**\n   * The **`column-width`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the `column-width` value. If the width of the container is narrower than the specified value, the single column\'s width will be smaller than the declared column width.\n   *\n   * **Syntax**: `<length> | auto`\n   *\n   * **Initial value**: `auto`\n   */\n  "-moz-column-width"?: Property.ColumnWidth<TLength> | undefined;\n  /**\n   * The **`-moz-context-properties`** property can be used within privileged contexts in Firefox to share the values of specified properties of the element with a child SVG image.\n   *\n   * **Syntax**: `none | [ fill | fill-opacity | stroke | stroke-opacity ]#`\n   *\n   * **Initial value**: `none`\n   */\n  "-moz-context-properties"?: Property.MozContextProperties | undefined;\n  /**\n   * The **`font-feature-settings`** CSS property controls advanced typographic features in OpenType fonts.\n   *\n   * **Syntax**: `normal | <feature-tag-value>#`\n   *\n   * **Initial value**: `normal`\n   */\n  "-moz-font-feature-settings"?: Property.FontFeatureSettings | undefined;\n  /**\n   * The **`font-language-override`** CSS property controls the use of language-specific glyphs in a typeface.\n   *\n   * **Syntax**: `normal | <string>`\n   *\n   * **Initial value**: `normal`\n   */\n  "-moz-font-language-override"?: Property.FontLanguageOverride | undefined;\n  /**\n   * The **`hyphens`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.\n   *\n   * **Syntax**: `none | manual | auto`\n   *\n   * **Initial value**: `manual`\n   */\n  "-moz-hyphens"?: Property.Hyphens | undefined;\n  /**\n   * For certain XUL elements and pseudo-elements that use an image from the `list-style-image` property, this property specifies a region of the image that is used in place of the whole image. This allows elements to use different pieces of the same image to improve performance.\n   *\n   * **Syntax**: `<shape> | auto`\n   *\n   * **Initial value**: `auto`\n   */\n  "-moz-image-region"?: Property.MozImageRegion | undefined;\n  /**\n   * The **`margin-inline-end`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element\'s writing mode, directionality, and text orientation. In other words, it corresponds to the `margin-top`, `margin-right`, `margin-bottom` or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'margin-left\'>`\n   *\n   * **Initial value**: `0`\n   */\n  "-moz-margin-end"?: Property.MarginInlineEnd<TLength> | undefined;\n  /**\n   * The **`margin-inline-start`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `margin-top`, `margin-right`, `margin-bottom`, or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'margin-left\'>`\n   *\n   * **Initial value**: `0`\n   */\n  "-moz-margin-start"?: Property.MarginInlineStart<TLength> | undefined;\n  /**\n   * The **`-moz-orient`** CSS property specifies the orientation of the element to which it\'s applied.\n   *\n   * **Syntax**: `inline | block | horizontal | vertical`\n   *\n   * **Initial value**: `inline`\n   */\n  "-moz-orient"?: Property.MozOrient | undefined;\n  /**\n   * The **`font-smooth`** CSS property controls the application of anti-aliasing when fonts are rendered.\n   *\n   * **Syntax**: `auto | never | always | <absolute-size> | <length>`\n   *\n   * **Initial value**: `auto`\n   */\n  "-moz-osx-font-smoothing"?: Property.FontSmooth<TLength> | undefined;\n  /**\n   * The **`padding-inline-end`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>`\n   *\n   * **Initial value**: `0`\n   */\n  "-moz-padding-end"?: Property.PaddingInlineEnd<TLength> | undefined;\n  /**\n   * The **`padding-inline-start`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>`\n   *\n   * **Initial value**: `0`\n   */\n  "-moz-padding-start"?: Property.PaddingInlineStart<TLength> | undefined;\n  /**\n   * The **`perspective`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.\n   *\n   * **Syntax**: `none | <length>`\n   *\n   * **Initial value**: `none`\n   */\n  "-moz-perspective"?: Property.Perspective<TLength> | undefined;\n  /**\n   * The **`perspective-origin`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the `perspective` property.\n   *\n   * **Syntax**: `<position>`\n   *\n   * **Initial value**: `50% 50%`\n   */\n  "-moz-perspective-origin"?: Property.PerspectiveOrigin<TLength> | undefined;\n  /**\n   * **`-moz-stack-sizing`** is an extended CSS property. Normally, a `<xul:stack>` will change its size so that all of its child elements are completely visible. For example, moving a child of the stack far to the right will widen the stack so the child remains visible.\n   *\n   * **Syntax**: `ignore | stretch-to-fit`\n   *\n   * **Initial value**: `stretch-to-fit`\n   */\n  "-moz-stack-sizing"?: Property.MozStackSizing | undefined;\n  /**\n   * The **`tab-size`** CSS property is used to customize the width of tab characters (U+0009).\n   *\n   * **Syntax**: `<integer> | <length>`\n   *\n   * **Initial value**: `8`\n   */\n  "-moz-tab-size"?: Property.TabSize<TLength> | undefined;\n  /**\n   * The **`-moz-text-blink`** non-standard Mozilla CSS extension specifies the blink mode.\n   *\n   * **Syntax**: `none | blink`\n   *\n   * **Initial value**: `none`\n   */\n  "-moz-text-blink"?: Property.MozTextBlink | undefined;\n  /**\n   * The **`text-size-adjust`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.\n   *\n   * **Syntax**: `none | auto | <percentage>`\n   *\n   * **Initial value**: `auto` for smartphone browsers supporting inflation, `none` in other cases (and then not modifiable).\n   */\n  "-moz-text-size-adjust"?: Property.TextSizeAdjust | undefined;\n  /**\n   * The **`transform-origin`** CSS property sets the origin for an element\'s transformations.\n   *\n   * **Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n   *\n   * **Initial value**: `50% 50% 0`\n   */\n  "-moz-transform-origin"?: Property.TransformOrigin<TLength> | undefined;\n  /**\n   * The **`transform-style`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.\n   *\n   * **Syntax**: `flat | preserve-3d`\n   *\n   * **Initial value**: `flat`\n   */\n  "-moz-transform-style"?: Property.TransformStyle | undefined;\n  /**\n   * The **`transition-delay`** CSS property specifies the duration to wait before starting a property\'s transition effect when its value changes.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  "-moz-transition-delay"?: Property.TransitionDelay<TTime> | undefined;\n  /**\n   * The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  "-moz-transition-duration"?: Property.TransitionDuration<TTime> | undefined;\n  /**\n   * The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n   *\n   * **Syntax**: `none | <single-transition-property>#`\n   *\n   * **Initial value**: all\n   */\n  "-moz-transition-property"?: Property.TransitionProperty | undefined;\n  /**\n   * The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   */\n  "-moz-transition-timing-function"?: Property.TransitionTimingFunction | undefined;\n  /**\n   * The **`-moz-user-focus`** CSS property is used to indicate whether an element can have the focus.\n   *\n   * **Syntax**: `ignore | normal | select-after | select-before | select-menu | select-same | select-all | none`\n   *\n   * **Initial value**: `none`\n   */\n  "-moz-user-focus"?: Property.MozUserFocus | undefined;\n  /**\n   * The **`user-modify`** property has no effect in Firefox. It was originally planned to determine whether or not the content of an element can be edited by a user.\n   *\n   * **Syntax**: `read-only | read-write | write-only`\n   *\n   * **Initial value**: `read-only`\n   */\n  "-moz-user-modify"?: Property.MozUserModify | undefined;\n  /**\n   * The **`user-select`** CSS property controls whether the user can select text. This doesn\'t have any effect on content loaded as part of a browser\'s user interface (its chrome), except in textboxes.\n   *\n   * **Syntax**: `auto | text | none | contain | all`\n   *\n   * **Initial value**: `auto`\n   */\n  "-moz-user-select"?: Property.UserSelect | undefined;\n  /**\n   * The **`-moz-window-dragging`** CSS property specifies whether a window is draggable or not. It only works in Chrome code, and only on Mac OS X.\n   *\n   * **Syntax**: `drag | no-drag`\n   *\n   * **Initial value**: `drag`\n   */\n  "-moz-window-dragging"?: Property.MozWindowDragging | undefined;\n  /**\n   * The **`-moz-window-shadow`** CSS property specifies whether a window will have a shadow. It only works on Mac OS X.\n   *\n   * **Syntax**: `default | menu | tooltip | sheet | none`\n   *\n   * **Initial value**: `default`\n   */\n  "-moz-window-shadow"?: Property.MozWindowShadow | undefined;\n  /**\n   * The **`-ms-accelerator`** CSS property is a Microsoft extension that sets or retrieves a string indicating whether the object represents a keyboard shortcut.\n   *\n   * **Syntax**: `false | true`\n   *\n   * **Initial value**: `false`\n   */\n  "-ms-accelerator"?: Property.MsAccelerator | undefined;\n  /**\n   * The **`align-self`** CSS property overrides a grid or flex item\'s `align-items` value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.\n   *\n   * **Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>`\n   *\n   * **Initial value**: `auto`\n   */\n  "-ms-align-self"?: Property.AlignSelf | undefined;\n  /**\n   * The **`-ms-block-progression`** CSS property is a Microsoft extension that specifies the block progression and layout orientation.\n   *\n   * **Syntax**: `tb | rl | bt | lr`\n   *\n   * **Initial value**: `tb`\n   */\n  "-ms-block-progression"?: Property.MsBlockProgression | undefined;\n  /**\n   * The **`-ms-content-zoom-chaining`** CSS property is a Microsoft extension specifying the zoom behavior that occurs when a user hits the zoom limit during page manipulation.\n   *\n   * **Syntax**: `none | chained`\n   *\n   * **Initial value**: `none`\n   */\n  "-ms-content-zoom-chaining"?: Property.MsContentZoomChaining | undefined;\n  /**\n   * The **`-ms-content-zoom-limit-max`** CSS property is a Microsoft extension that specifies the selected elements\' maximum zoom factor.\n   *\n   * **Syntax**: `<percentage>`\n   *\n   * **Initial value**: `400%`\n   */\n  "-ms-content-zoom-limit-max"?: Property.MsContentZoomLimitMax | undefined;\n  /**\n   * The **`-ms-content-zoom-limit-min`** CSS property is a Microsoft extension that specifies the minimum zoom factor.\n   *\n   * **Syntax**: `<percentage>`\n   *\n   * **Initial value**: `100%`\n   */\n  "-ms-content-zoom-limit-min"?: Property.MsContentZoomLimitMin | undefined;\n  /**\n   * The **`-ms-content-zoom-snap-points`** CSS property is a Microsoft extension that specifies where zoom snap-points are located.\n   *\n   * **Syntax**: `snapInterval( <percentage>, <percentage> ) | snapList( <percentage># )`\n   *\n   * **Initial value**: `snapInterval(0%, 100%)`\n   */\n  "-ms-content-zoom-snap-points"?: Property.MsContentZoomSnapPoints | undefined;\n  /**\n   * The **`-ms-content-zoom-snap-type`** CSS property is a Microsoft extension that specifies how zooming is affected by defined snap-points.\n   *\n   * **Syntax**: `none | proximity | mandatory`\n   *\n   * **Initial value**: `none`\n   */\n  "-ms-content-zoom-snap-type"?: Property.MsContentZoomSnapType | undefined;\n  /**\n   * The **`-ms-content-zooming`** CSS property is a Microsoft extension that specifies whether zooming is enabled.\n   *\n   * **Syntax**: `none | zoom`\n   *\n   * **Initial value**: zoom for the top level element, none for all other elements\n   */\n  "-ms-content-zooming"?: Property.MsContentZooming | undefined;\n  /**\n   * The `-ms-filter` CSS property is a Microsoft extension that sets or retrieves the filter or collection of filters applied to an object.\n   *\n   * **Syntax**: `<string>`\n   *\n   * **Initial value**: "" (the empty string)\n   */\n  "-ms-filter"?: Property.MsFilter | undefined;\n  /**\n   * The **`flex-direction`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).\n   *\n   * **Syntax**: `row | row-reverse | column | column-reverse`\n   *\n   * **Initial value**: `row`\n   */\n  "-ms-flex-direction"?: Property.FlexDirection | undefined;\n  /**\n   * The **`flex-grow`** CSS property sets the flex grow factor of a flex item\'s main size.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `0`\n   */\n  "-ms-flex-positive"?: Property.FlexGrow | undefined;\n  /**\n   * The **`-ms-flow-from`** CSS property is a Microsoft extension that gets or sets a value identifying a region container in the document that accepts the content flow from the data source.\n   *\n   * **Syntax**: `[ none | <custom-ident> ]#`\n   *\n   * **Initial value**: `none`\n   */\n  "-ms-flow-from"?: Property.MsFlowFrom | undefined;\n  /**\n   * The **`-ms-flow-into`** CSS property is a Microsoft extension that gets or sets a value identifying an iframe container in the document that serves as the region\'s data source.\n   *\n   * **Syntax**: `[ none | <custom-ident> ]#`\n   *\n   * **Initial value**: `none`\n   */\n  "-ms-flow-into"?: Property.MsFlowInto | undefined;\n  /**\n   * The **`grid-template-columns`** CSS property defines the line names and track sizing functions of the grid columns.\n   *\n   * **Syntax**: `none | <track-list> | <auto-track-list>`\n   *\n   * **Initial value**: `none`\n   */\n  "-ms-grid-columns"?: Property.MsGridColumns<TLength> | undefined;\n  /**\n   * The **`grid-template-rows`** CSS property defines the line names and track sizing functions of the grid rows.\n   *\n   * **Syntax**: `none | <track-list> | <auto-track-list>`\n   *\n   * **Initial value**: `none`\n   */\n  "-ms-grid-rows"?: Property.MsGridRows<TLength> | undefined;\n  /**\n   * The **`-ms-high-contrast-adjust`** CSS property is a Microsoft extension that gets or sets a value indicating whether to override any CSS properties that would have been set in high contrast mode.\n   *\n   * **Syntax**: `auto | none`\n   *\n   * **Initial value**: `auto`\n   */\n  "-ms-high-contrast-adjust"?: Property.MsHighContrastAdjust | undefined;\n  /**\n   * The **`-ms-hyphenate-limit-chars`** CSS property is a Microsoft extension that specifies one to three values indicating the minimum number of characters in a hyphenated word. If the word does not meet the required minimum number of characters in the word, before the hyphen, or after the hyphen, then the word is not hyphenated.\n   *\n   * **Syntax**: `auto | <integer>{1,3}`\n   *\n   * **Initial value**: `auto`\n   */\n  "-ms-hyphenate-limit-chars"?: Property.MsHyphenateLimitChars | undefined;\n  /**\n   * The **`-ms-hyphenate-limit-lines`** CSS property is a Microsoft extension specifying the maximum number of consecutive lines in an element that may be ended with a hyphenated word.\n   *\n   * **Syntax**: `no-limit | <integer>`\n   *\n   * **Initial value**: `no-limit`\n   */\n  "-ms-hyphenate-limit-lines"?: Property.MsHyphenateLimitLines | undefined;\n  /**\n   * The `**-ms-hyphenate-limit-zone**` CSS property is a Microsoft extension specifying the width of the hyphenation zone.\n   *\n   * **Syntax**: `<percentage> | <length>`\n   *\n   * **Initial value**: `0`\n   */\n  "-ms-hyphenate-limit-zone"?: Property.MsHyphenateLimitZone<TLength> | undefined;\n  /**\n   * The **`hyphens`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.\n   *\n   * **Syntax**: `none | manual | auto`\n   *\n   * **Initial value**: `manual`\n   */\n  "-ms-hyphens"?: Property.Hyphens | undefined;\n  /**\n   * The **`-ms-ime-align`** CSS property is a Microsoft extension aligning the Input Method Editor (IME) candidate window box relative to the element on which the IME composition is active. The extension is implemented in Microsoft Edge and Internet Explorer 11.\n   *\n   * **Syntax**: `auto | after`\n   *\n   * **Initial value**: `auto`\n   */\n  "-ms-ime-align"?: Property.MsImeAlign | undefined;\n  /**\n   * The CSS **`justify-self`** property sets the way a box is justified inside its alignment container along the appropriate axis.\n   *\n   * **Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? [ <self-position> | left | right ]`\n   *\n   * **Initial value**: `auto`\n   */\n  "-ms-justify-self"?: Property.JustifySelf | undefined;\n  /**\n   * The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.\n   *\n   * **Syntax**: `auto | loose | normal | strict | anywhere`\n   *\n   * **Initial value**: `auto`\n   */\n  "-ms-line-break"?: Property.LineBreak | undefined;\n  /**\n   * The **`order`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending `order` value and then by their source code order.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `0`\n   */\n  "-ms-order"?: Property.Order | undefined;\n  /**\n   * The **`-ms-overflow-style`** CSS property is a Microsoft extension controlling the behavior of scrollbars when the content of an element overflows.\n   *\n   * **Syntax**: `auto | none | scrollbar | -ms-autohiding-scrollbar`\n   *\n   * **Initial value**: `auto`\n   */\n  "-ms-overflow-style"?: Property.MsOverflowStyle | undefined;\n  /**\n   * The **`overflow-x`** CSS property sets what shows when content overflows a block-level element\'s left and right edges. This may be nothing, a scroll bar, or the overflow content.\n   *\n   * **Syntax**: `visible | hidden | clip | scroll | auto`\n   *\n   * **Initial value**: `visible`\n   */\n  "-ms-overflow-x"?: Property.OverflowX | undefined;\n  /**\n   * The **`overflow-y`** CSS property sets what shows when content overflows a block-level element\'s top and bottom edges. This may be nothing, a scroll bar, or the overflow content.\n   *\n   * **Syntax**: `visible | hidden | clip | scroll | auto`\n   *\n   * **Initial value**: `visible`\n   */\n  "-ms-overflow-y"?: Property.OverflowY | undefined;\n  /**\n   * The `**-ms-scroll-chaining**` CSS property is a Microsoft extension that specifies the scrolling behavior that occurs when a user hits the scroll limit during a manipulation.\n   *\n   * **Syntax**: `chained | none`\n   *\n   * **Initial value**: `chained`\n   */\n  "-ms-scroll-chaining"?: Property.MsScrollChaining | undefined;\n  /**\n   * The `**-ms-scroll-limit-x-max**` CSS property is a Microsoft extension that specifies the maximum value for the `Element.scrollLeft` property.\n   *\n   * **Syntax**: `auto | <length>`\n   *\n   * **Initial value**: `auto`\n   */\n  "-ms-scroll-limit-x-max"?: Property.MsScrollLimitXMax<TLength> | undefined;\n  /**\n   * The **`-ms-scroll-limit-x-min`** CSS property is a Microsoft extension that specifies the minimum value for the `Element.scrollLeft` property.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   */\n  "-ms-scroll-limit-x-min"?: Property.MsScrollLimitXMin<TLength> | undefined;\n  /**\n   * The **`-ms-scroll-limit-y-max`** CSS property is a Microsoft extension that specifies the maximum value for the `Element.scrollTop` property.\n   *\n   * **Syntax**: `auto | <length>`\n   *\n   * **Initial value**: `auto`\n   */\n  "-ms-scroll-limit-y-max"?: Property.MsScrollLimitYMax<TLength> | undefined;\n  /**\n   * The **`-ms-scroll-limit-y-min`** CSS property is a Microsoft extension that specifies the minimum value for the `Element.scrollTop` property.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   */\n  "-ms-scroll-limit-y-min"?: Property.MsScrollLimitYMin<TLength> | undefined;\n  /**\n   * The **`-ms-scroll-rails`** CSS property is a Microsoft extension that specifies whether scrolling locks to the primary axis of motion.\n   *\n   * **Syntax**: `none | railed`\n   *\n   * **Initial value**: `railed`\n   */\n  "-ms-scroll-rails"?: Property.MsScrollRails | undefined;\n  /**\n   * The **`-ms-scroll-snap-points-x`** CSS property is a Microsoft extension that specifies where snap-points will be located along the x-axis.\n   *\n   * **Syntax**: `snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )`\n   *\n   * **Initial value**: `snapInterval(0px, 100%)`\n   */\n  "-ms-scroll-snap-points-x"?: Property.MsScrollSnapPointsX | undefined;\n  /**\n   * The **`-ms-scroll-snap-points-y`** CSS property is a Microsoft extension that specifies where snap-points will be located along the y-axis.\n   *\n   * **Syntax**: `snapInterval( <length-percentage>, <length-percentage> ) | snapList( <length-percentage># )`\n   *\n   * **Initial value**: `snapInterval(0px, 100%)`\n   */\n  "-ms-scroll-snap-points-y"?: Property.MsScrollSnapPointsY | undefined;\n  /**\n   * The **`scroll-snap-type`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.\n   *\n   * **Syntax**: `none | proximity | mandatory`\n   *\n   * **Initial value**: `none`\n   */\n  "-ms-scroll-snap-type"?: Property.MsScrollSnapType | undefined;\n  /**\n   * The **`-ms-scroll-translation`** CSS property is a Microsoft extension that specifies whether vertical-to-horizontal scroll wheel translation occurs on the specified element.\n   *\n   * **Syntax**: `none | vertical-to-horizontal`\n   *\n   * **Initial value**: `none`\n   */\n  "-ms-scroll-translation"?: Property.MsScrollTranslation | undefined;\n  /**\n   * The **`-ms-scrollbar-3dlight-color`** CSS property is a Microsoft extension specifying the color of the top and left edges of the scroll box and scroll arrows of a scroll bar.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: depends on user agent\n   */\n  "-ms-scrollbar-3dlight-color"?: Property.MsScrollbar3dlightColor | undefined;\n  /**\n   * The **`-ms-scrollbar-arrow-color`** CSS property is a Microsoft extension that specifies the color of the arrow elements of a scroll arrow.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `ButtonText`\n   */\n  "-ms-scrollbar-arrow-color"?: Property.MsScrollbarArrowColor | undefined;\n  /**\n   * The `**-ms-scrollbar-base-color**` CSS property is a Microsoft extension that specifies the base color of the main elements of a scroll bar.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: depends on user agent\n   */\n  "-ms-scrollbar-base-color"?: Property.MsScrollbarBaseColor | undefined;\n  /**\n   * The **`-ms-scrollbar-darkshadow-color`** CSS property is a Microsoft extension that specifies the color of a scroll bar\'s gutter.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `ThreeDDarkShadow`\n   */\n  "-ms-scrollbar-darkshadow-color"?: Property.MsScrollbarDarkshadowColor | undefined;\n  /**\n   * The `**-ms-scrollbar-face-color**` CSS property is a Microsoft extension that specifies the color of the scroll box and scroll arrows of a scroll bar.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `ThreeDFace`\n   */\n  "-ms-scrollbar-face-color"?: Property.MsScrollbarFaceColor | undefined;\n  /**\n   * The `**-ms-scrollbar-highlight-color**` CSS property is a Microsoft extension that specifies the color of the slider tray, the top and left edges of the scroll box, and the scroll arrows of a scroll bar.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `ThreeDHighlight`\n   */\n  "-ms-scrollbar-highlight-color"?: Property.MsScrollbarHighlightColor | undefined;\n  /**\n   * The **`-ms-scrollbar-shadow-color`** CSS property is a Microsoft extension that specifies the color of the bottom and right edges of the scroll box and scroll arrows of a scroll bar.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `ThreeDDarkShadow`\n   */\n  "-ms-scrollbar-shadow-color"?: Property.MsScrollbarShadowColor | undefined;\n  /**\n   * The **`-ms-text-autospace`** CSS property is a Microsoft extension that specifies the autospacing and narrow space width adjustment of text.\n   *\n   * **Syntax**: `none | ideograph-alpha | ideograph-numeric | ideograph-parenthesis | ideograph-space`\n   *\n   * **Initial value**: `none`\n   */\n  "-ms-text-autospace"?: Property.MsTextAutospace | undefined;\n  /**\n   * The **`text-combine-upright`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\n   *\n   * **Syntax**: `none | all | [ digits <integer>? ]`\n   *\n   * **Initial value**: `none`\n   */\n  "-ms-text-combine-horizontal"?: Property.TextCombineUpright | undefined;\n  /**\n   * The **`text-overflow`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis (\'`…`\'), or display a custom string.\n   *\n   * **Syntax**: `[ clip | ellipsis | <string> ]{1,2}`\n   *\n   * **Initial value**: `clip`\n   */\n  "-ms-text-overflow"?: Property.TextOverflow | undefined;\n  /**\n   * The **`touch-action`** CSS property sets how an element\'s region can be manipulated by a touchscreen user (for example, by zooming features built into the browser).\n   *\n   * **Syntax**: `auto | none | [ [ pan-x | pan-left | pan-right ] || [ pan-y | pan-up | pan-down ] || pinch-zoom ] | manipulation`\n   *\n   * **Initial value**: `auto`\n   */\n  "-ms-touch-action"?: Property.TouchAction | undefined;\n  /**\n   * The **`-ms-touch-select`** CSS property is a Microsoft extension that toggles the gripper visual elements that enable touch text selection.\n   *\n   * **Syntax**: `grippers | none`\n   *\n   * **Initial value**: `grippers`\n   */\n  "-ms-touch-select"?: Property.MsTouchSelect | undefined;\n  /**\n   * The **`transform`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\n   *\n   * **Syntax**: `none | <transform-list>`\n   *\n   * **Initial value**: `none`\n   */\n  "-ms-transform"?: Property.Transform | undefined;\n  /**\n   * The **`transform-origin`** CSS property sets the origin for an element\'s transformations.\n   *\n   * **Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n   *\n   * **Initial value**: `50% 50% 0`\n   */\n  "-ms-transform-origin"?: Property.TransformOrigin<TLength> | undefined;\n  /**\n   * The **`transition-delay`** CSS property specifies the duration to wait before starting a property\'s transition effect when its value changes.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  "-ms-transition-delay"?: Property.TransitionDelay<TTime> | undefined;\n  /**\n   * The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  "-ms-transition-duration"?: Property.TransitionDuration<TTime> | undefined;\n  /**\n   * The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n   *\n   * **Syntax**: `none | <single-transition-property>#`\n   *\n   * **Initial value**: all\n   */\n  "-ms-transition-property"?: Property.TransitionProperty | undefined;\n  /**\n   * The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   */\n  "-ms-transition-timing-function"?: Property.TransitionTimingFunction | undefined;\n  /**\n   * The `**user-select**` CSS property controls whether the user can select text. This doesn\'t have any effect on content loaded as chrome, except in textboxes.\n   *\n   * **Syntax**: `none | element | text`\n   *\n   * **Initial value**: `text`\n   */\n  "-ms-user-select"?: Property.MsUserSelect | undefined;\n  /**\n   * The **`word-break`** CSS property sets whether line breaks appear wherever the text would otherwise overflow its content box.\n   *\n   * **Syntax**: `normal | break-all | keep-all | break-word`\n   *\n   * **Initial value**: `normal`\n   */\n  "-ms-word-break"?: Property.WordBreak | undefined;\n  /**\n   * The **`-ms-wrap-flow`** CSS property is a Microsoft extension that specifies how exclusions impact inline content within block-level elements.\n   *\n   * **Syntax**: `auto | both | start | end | maximum | clear`\n   *\n   * **Initial value**: `auto`\n   */\n  "-ms-wrap-flow"?: Property.MsWrapFlow | undefined;\n  /**\n   * The **`-ms-wrap-margin`** CSS property is a Microsoft extension that specifies a margin that offsets the inner wrap shape from other shapes.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   */\n  "-ms-wrap-margin"?: Property.MsWrapMargin<TLength> | undefined;\n  /**\n   * The **`-ms-wrap-through`** CSS property is a Microsoft extension that specifies how content should wrap around an exclusion element.\n   *\n   * **Syntax**: `wrap | none`\n   *\n   * **Initial value**: `wrap`\n   */\n  "-ms-wrap-through"?: Property.MsWrapThrough | undefined;\n  /**\n   * The **`writing-mode`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (`html` element for HTML documents).\n   *\n   * **Syntax**: `horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr`\n   *\n   * **Initial value**: `horizontal-tb`\n   */\n  "-ms-writing-mode"?: Property.WritingMode | undefined;\n  /**\n   * The CSS **`align-content`** property sets the distribution of space between and around content items along a flexbox\'s cross-axis or a grid\'s block axis.\n   *\n   * **Syntax**: `normal | <baseline-position> | <content-distribution> | <overflow-position>? <content-position>`\n   *\n   * **Initial value**: `normal`\n   */\n  "-webkit-align-content"?: Property.AlignContent | undefined;\n  /**\n   * The CSS **`align-items`** property sets the `align-self` value on all direct children as a group. In Flexbox, it controls the alignment of items on the Cross Axis. In Grid Layout, it controls the alignment of items on the Block Axis within their grid area.\n   *\n   * **Syntax**: `normal | stretch | <baseline-position> | [ <overflow-position>? <self-position> ]`\n   *\n   * **Initial value**: `normal`\n   */\n  "-webkit-align-items"?: Property.AlignItems | undefined;\n  /**\n   * The **`align-self`** CSS property overrides a grid or flex item\'s `align-items` value. In Grid, it aligns the item inside the grid area. In Flexbox, it aligns the item on the cross axis.\n   *\n   * **Syntax**: `auto | normal | stretch | <baseline-position> | <overflow-position>? <self-position>`\n   *\n   * **Initial value**: `auto`\n   */\n  "-webkit-align-self"?: Property.AlignSelf | undefined;\n  /**\n   * The **`animation-delay`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  "-webkit-animation-delay"?: Property.AnimationDelay<TTime> | undefined;\n  /**\n   * The **`animation-direction`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.\n   *\n   * **Syntax**: `<single-animation-direction>#`\n   *\n   * **Initial value**: `normal`\n   */\n  "-webkit-animation-direction"?: Property.AnimationDirection | undefined;\n  /**\n   * The **`animation-duration`** CSS property sets the length of time that an animation takes to complete one cycle.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  "-webkit-animation-duration"?: Property.AnimationDuration<TTime> | undefined;\n  /**\n   * The **`animation-fill-mode`** CSS property sets how a CSS animation applies styles to its target before and after its execution.\n   *\n   * **Syntax**: `<single-animation-fill-mode>#`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-animation-fill-mode"?: Property.AnimationFillMode | undefined;\n  /**\n   * The **`animation-iteration-count`** CSS property sets the number of times an animation sequence should be played before stopping.\n   *\n   * **Syntax**: `<single-animation-iteration-count>#`\n   *\n   * **Initial value**: `1`\n   */\n  "-webkit-animation-iteration-count"?: Property.AnimationIterationCount | undefined;\n  /**\n   * The **`animation-name`** CSS property specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element.\n   *\n   * **Syntax**: `[ none | <keyframes-name> ]#`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-animation-name"?: Property.AnimationName | undefined;\n  /**\n   * The **`animation-play-state`** CSS property sets whether an animation is running or paused.\n   *\n   * **Syntax**: `<single-animation-play-state>#`\n   *\n   * **Initial value**: `running`\n   */\n  "-webkit-animation-play-state"?: Property.AnimationPlayState | undefined;\n  /**\n   * The **`animation-timing-function`** CSS property sets how an animation progresses through the duration of each cycle.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   */\n  "-webkit-animation-timing-function"?: Property.AnimationTimingFunction | undefined;\n  /**\n   * The **`appearance`** CSS property is used to display an element using platform-native styling, based on the operating system\'s theme. The **`-moz-appearance`** and **`-webkit-appearance`** properties are non-standard versions of this property, used (respectively) by Gecko (Firefox) and by WebKit-based (e.g., Safari) and Blink-based (e.g., Chrome, Opera) browsers to achieve the same thing. Note that Firefox and Edge also support **`-webkit-appearance`**, for compatibility reasons.\n   *\n   * **Syntax**: `none | button | button-bevel | caret | checkbox | default-button | inner-spin-button | listbox | listitem | media-controls-background | media-controls-fullscreen-background | media-current-time-display | media-enter-fullscreen-button | media-exit-fullscreen-button | media-fullscreen-button | media-mute-button | media-overlay-play-button | media-play-button | media-seek-back-button | media-seek-forward-button | media-slider | media-sliderthumb | media-time-remaining-display | media-toggle-closed-captions-button | media-volume-slider | media-volume-slider-container | media-volume-sliderthumb | menulist | menulist-button | menulist-text | menulist-textfield | meter | progress-bar | progress-bar-value | push-button | radio | searchfield | searchfield-cancel-button | searchfield-decoration | searchfield-results-button | searchfield-results-decoration | slider-horizontal | slider-vertical | sliderthumb-horizontal | sliderthumb-vertical | square-button | textarea | textfield | -apple-pay-button`\n   *\n   * **Initial value**: `none` (but this value is overridden in the user agent CSS)\n   */\n  "-webkit-appearance"?: Property.WebkitAppearance | undefined;\n  /**\n   * The **`backdrop-filter`** CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything _behind_ the element, to see the effect you must make the element or its background at least partially transparent.\n   *\n   * **Syntax**: `none | <filter-function-list>`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-backdrop-filter"?: Property.BackdropFilter | undefined;\n  /**\n   * The **`backface-visibility`** CSS property sets whether the back face of an element is visible when turned towards the user.\n   *\n   * **Syntax**: `visible | hidden`\n   *\n   * **Initial value**: `visible`\n   */\n  "-webkit-backface-visibility"?: Property.BackfaceVisibility | undefined;\n  /**\n   * The **`background-clip`** CSS property sets whether an element\'s background extends underneath its border box, padding box, or content box.\n   *\n   * **Syntax**: `<box>#`\n   *\n   * **Initial value**: `border-box`\n   */\n  "-webkit-background-clip"?: Property.BackgroundClip | undefined;\n  /**\n   * The **`background-origin`** CSS property sets the background\'s origin: from the border start, inside the border, or inside the padding.\n   *\n   * **Syntax**: `<box>#`\n   *\n   * **Initial value**: `padding-box`\n   */\n  "-webkit-background-origin"?: Property.BackgroundOrigin | undefined;\n  /**\n   * The **`background-size`** CSS property sets the size of the element\'s background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\n   *\n   * **Syntax**: `<bg-size>#`\n   *\n   * **Initial value**: `auto auto`\n   */\n  "-webkit-background-size"?: Property.BackgroundSize<TLength> | undefined;\n  /**\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  "-webkit-border-before-color"?: Property.WebkitBorderBeforeColor | undefined;\n  /**\n   * **Syntax**: `<\'border-style\'>`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-border-before-style"?: Property.WebkitBorderBeforeStyle | undefined;\n  /**\n   * **Syntax**: `<\'border-width\'>`\n   *\n   * **Initial value**: `medium`\n   */\n  "-webkit-border-before-width"?: Property.WebkitBorderBeforeWidth<TLength> | undefined;\n  /**\n   * The **`border-bottom-left-radius`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   */\n  "-webkit-border-bottom-left-radius"?: Property.BorderBottomLeftRadius<TLength> | undefined;\n  /**\n   * The **`border-bottom-right-radius`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   */\n  "-webkit-border-bottom-right-radius"?: Property.BorderBottomRightRadius<TLength> | undefined;\n  /**\n   * The **`border-image-slice`** CSS property divides the image specified by `border-image-source` into regions. These regions form the components of an element\'s border image.\n   *\n   * **Syntax**: `<number-percentage>{1,4} && fill?`\n   *\n   * **Initial value**: `100%`\n   */\n  "-webkit-border-image-slice"?: Property.BorderImageSlice | undefined;\n  /**\n   * The **`border-top-left-radius`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   */\n  "-webkit-border-top-left-radius"?: Property.BorderTopLeftRadius<TLength> | undefined;\n  /**\n   * The **`border-top-right-radius`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   */\n  "-webkit-border-top-right-radius"?: Property.BorderTopRightRadius<TLength> | undefined;\n  /**\n   * The **`box-decoration-break`** CSS property specifies how an element\'s fragments should be rendered when broken across multiple lines, columns, or pages.\n   *\n   * **Syntax**: `slice | clone`\n   *\n   * **Initial value**: `slice`\n   */\n  "-webkit-box-decoration-break"?: Property.BoxDecorationBreak | undefined;\n  /**\n   * The **`-webkit-box-reflect`** CSS property lets you reflect the content of an element in one specific direction.\n   *\n   * **Syntax**: `[ above | below | right | left ]? <length>? <image>?`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-box-reflect"?: Property.WebkitBoxReflect<TLength> | undefined;\n  /**\n   * The **`box-shadow`** CSS property adds shadow effects around an element\'s frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.\n   *\n   * **Syntax**: `none | <shadow>#`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-box-shadow"?: Property.BoxShadow | undefined;\n  /**\n   * The **`box-sizing`** CSS property sets how the total width and height of an element is calculated.\n   *\n   * **Syntax**: `content-box | border-box`\n   *\n   * **Initial value**: `content-box`\n   */\n  "-webkit-box-sizing"?: Property.BoxSizing | undefined;\n  /**\n   * The **`clip-path`** CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden.\n   *\n   * **Syntax**: `<clip-source> | [ <basic-shape> || <geometry-box> ] | none`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-clip-path"?: Property.ClipPath | undefined;\n  /**\n   * The **`column-count`** CSS property breaks an element\'s content into the specified number of columns.\n   *\n   * **Syntax**: `<integer> | auto`\n   *\n   * **Initial value**: `auto`\n   */\n  "-webkit-column-count"?: Property.ColumnCount | undefined;\n  /**\n   * The **`column-fill`** CSS property controls how an element\'s contents are balanced when broken into columns.\n   *\n   * **Syntax**: `auto | balance | balance-all`\n   *\n   * **Initial value**: `balance`\n   */\n  "-webkit-column-fill"?: Property.ColumnFill | undefined;\n  /**\n   * The **`column-gap`** CSS property sets the size of the gap (gutter) between an element\'s columns.\n   *\n   * **Syntax**: `normal | <length-percentage>`\n   *\n   * **Initial value**: `normal`\n   */\n  "-webkit-column-gap"?: Property.ColumnGap<TLength> | undefined;\n  /**\n   * The **`column-rule-color`** CSS property sets the color of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  "-webkit-column-rule-color"?: Property.ColumnRuleColor | undefined;\n  /**\n   * The **`column-rule-style`** CSS property sets the style of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'border-style\'>`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-column-rule-style"?: Property.ColumnRuleStyle | undefined;\n  /**\n   * The **`column-rule-width`** CSS property sets the width of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'border-width\'>`\n   *\n   * **Initial value**: `medium`\n   */\n  "-webkit-column-rule-width"?: Property.ColumnRuleWidth<TLength> | undefined;\n  /**\n   * The **`column-span`** CSS property makes it possible for an element to span across all columns when its value is set to `all`.\n   *\n   * **Syntax**: `none | all`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-column-span"?: Property.ColumnSpan | undefined;\n  /**\n   * The **`column-width`** CSS property sets the ideal column width in a multi-column layout. The container will have as many columns as can fit without any of them having a width less than the `column-width` value. If the width of the container is narrower than the specified value, the single column\'s width will be smaller than the declared column width.\n   *\n   * **Syntax**: `<length> | auto`\n   *\n   * **Initial value**: `auto`\n   */\n  "-webkit-column-width"?: Property.ColumnWidth<TLength> | undefined;\n  /**\n   * The **`filter`** CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders.\n   *\n   * **Syntax**: `none | <filter-function-list>`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-filter"?: Property.Filter | undefined;\n  /**\n   * The **`flex-basis`** CSS property sets the initial main size of a flex item. It sets the size of the content box unless otherwise set with `box-sizing`.\n   *\n   * **Syntax**: `content | <\'width\'>`\n   *\n   * **Initial value**: `auto`\n   */\n  "-webkit-flex-basis"?: Property.FlexBasis<TLength> | undefined;\n  /**\n   * The **`flex-direction`** CSS property sets how flex items are placed in the flex container defining the main axis and the direction (normal or reversed).\n   *\n   * **Syntax**: `row | row-reverse | column | column-reverse`\n   *\n   * **Initial value**: `row`\n   */\n  "-webkit-flex-direction"?: Property.FlexDirection | undefined;\n  /**\n   * The **`flex-grow`** CSS property sets the flex grow factor of a flex item\'s main size.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `0`\n   */\n  "-webkit-flex-grow"?: Property.FlexGrow | undefined;\n  /**\n   * The **`flex-shrink`** CSS property sets the flex shrink factor of a flex item. If the size of all flex items is larger than the flex container, items shrink to fit according to `flex-shrink`.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `1`\n   */\n  "-webkit-flex-shrink"?: Property.FlexShrink | undefined;\n  /**\n   * The **`flex-wrap`** CSS property sets whether flex items are forced onto one line or can wrap onto multiple lines. If wrapping is allowed, it sets the direction that lines are stacked.\n   *\n   * **Syntax**: `nowrap | wrap | wrap-reverse`\n   *\n   * **Initial value**: `nowrap`\n   */\n  "-webkit-flex-wrap"?: Property.FlexWrap | undefined;\n  /**\n   * The **`font-feature-settings`** CSS property controls advanced typographic features in OpenType fonts.\n   *\n   * **Syntax**: `normal | <feature-tag-value>#`\n   *\n   * **Initial value**: `normal`\n   */\n  "-webkit-font-feature-settings"?: Property.FontFeatureSettings | undefined;\n  /**\n   * The **`font-kerning`** CSS property sets the use of the kerning information stored in a font.\n   *\n   * **Syntax**: `auto | normal | none`\n   *\n   * **Initial value**: `auto`\n   */\n  "-webkit-font-kerning"?: Property.FontKerning | undefined;\n  /**\n   * The **`font-smooth`** CSS property controls the application of anti-aliasing when fonts are rendered.\n   *\n   * **Syntax**: `auto | never | always | <absolute-size> | <length>`\n   *\n   * **Initial value**: `auto`\n   */\n  "-webkit-font-smoothing"?: Property.FontSmooth<TLength> | undefined;\n  /**\n   * The **`font-variant-ligatures`** CSS property controls which ligatures and contextual forms are used in textual content of the elements it applies to. This leads to more harmonized forms in the resulting text.\n   *\n   * **Syntax**: `normal | none | [ <common-lig-values> || <discretionary-lig-values> || <historical-lig-values> || <contextual-alt-values> ]`\n   *\n   * **Initial value**: `normal`\n   */\n  "-webkit-font-variant-ligatures"?: Property.FontVariantLigatures | undefined;\n  /**\n   * The **`hyphenate-character`** CSS property sets the character (or string) used at the end of a line before a hyphenation break.\n   *\n   * **Syntax**: `auto | <string>`\n   *\n   * **Initial value**: `auto`\n   */\n  "-webkit-hyphenate-character"?: Property.HyphenateCharacter | undefined;\n  /**\n   * The **`hyphens`** CSS property specifies how words should be hyphenated when text wraps across multiple lines. It can prevent hyphenation entirely, hyphenate at manually-specified points within the text, or let the browser automatically insert hyphens where appropriate.\n   *\n   * **Syntax**: `none | manual | auto`\n   *\n   * **Initial value**: `manual`\n   */\n  "-webkit-hyphens"?: Property.Hyphens | undefined;\n  /**\n   * The `initial-letter` CSS property sets styling for dropped, raised, and sunken initial letters.\n   *\n   * **Syntax**: `normal | [ <number> <integer>? ]`\n   *\n   * **Initial value**: `normal`\n   */\n  "-webkit-initial-letter"?: Property.InitialLetter | undefined;\n  /**\n   * The CSS **`justify-content`** property defines how the browser distributes space between and around content items along the main-axis of a flex container, and the inline axis of a grid container.\n   *\n   * **Syntax**: `normal | <content-distribution> | <overflow-position>? [ <content-position> | left | right ]`\n   *\n   * **Initial value**: `normal`\n   */\n  "-webkit-justify-content"?: Property.JustifyContent | undefined;\n  /**\n   * The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.\n   *\n   * **Syntax**: `auto | loose | normal | strict | anywhere`\n   *\n   * **Initial value**: `auto`\n   */\n  "-webkit-line-break"?: Property.LineBreak | undefined;\n  /**\n   * The **`-webkit-line-clamp`** CSS property allows limiting of the contents of a block container to the specified number of lines.\n   *\n   * **Syntax**: `none | <integer>`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-line-clamp"?: Property.WebkitLineClamp | undefined;\n  /**\n   * The **`margin-inline-end`** CSS property defines the logical inline end margin of an element, which maps to a physical margin depending on the element\'s writing mode, directionality, and text orientation. In other words, it corresponds to the `margin-top`, `margin-right`, `margin-bottom` or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'margin-left\'>`\n   *\n   * **Initial value**: `0`\n   */\n  "-webkit-margin-end"?: Property.MarginInlineEnd<TLength> | undefined;\n  /**\n   * The **`margin-inline-start`** CSS property defines the logical inline start margin of an element, which maps to a physical margin depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `margin-top`, `margin-right`, `margin-bottom`, or `margin-left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'margin-left\'>`\n   *\n   * **Initial value**: `0`\n   */\n  "-webkit-margin-start"?: Property.MarginInlineStart<TLength> | undefined;\n  /**\n   * If a `-webkit-mask-image` is specified, `-webkit-mask-attachment` determines whether the mask image\'s position is fixed within the viewport, or scrolls along with its containing block.\n   *\n   * **Syntax**: `<attachment>#`\n   *\n   * **Initial value**: `scroll`\n   */\n  "-webkit-mask-attachment"?: Property.WebkitMaskAttachment | undefined;\n  /**\n   * The **`mask-border-outset`** CSS property specifies the distance by which an element\'s mask border is set out from its border box.\n   *\n   * **Syntax**: `[ <length> | <number> ]{1,4}`\n   *\n   * **Initial value**: `0`\n   */\n  "-webkit-mask-box-image-outset"?: Property.MaskBorderOutset<TLength> | undefined;\n  /**\n   * The **`mask-border-repeat`** CSS property sets how the edge regions of a source image are adjusted to fit the dimensions of an element\'s mask border.\n   *\n   * **Syntax**: `[ stretch | repeat | round | space ]{1,2}`\n   *\n   * **Initial value**: `stretch`\n   */\n  "-webkit-mask-box-image-repeat"?: Property.MaskBorderRepeat | undefined;\n  /**\n   * The **`mask-border-slice`** CSS property divides the image set by `mask-border-source` into regions. These regions are used to form the components of an element\'s mask border.\n   *\n   * **Syntax**: `<number-percentage>{1,4} fill?`\n   *\n   * **Initial value**: `0`\n   */\n  "-webkit-mask-box-image-slice"?: Property.MaskBorderSlice | undefined;\n  /**\n   * The **`mask-border-source`** CSS property sets the source image used to create an element\'s mask border.\n   *\n   * **Syntax**: `none | <image>`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-mask-box-image-source"?: Property.MaskBorderSource | undefined;\n  /**\n   * The **`mask-border-width`** CSS property sets the width of an element\'s mask border.\n   *\n   * **Syntax**: `[ <length-percentage> | <number> | auto ]{1,4}`\n   *\n   * **Initial value**: `auto`\n   */\n  "-webkit-mask-box-image-width"?: Property.MaskBorderWidth<TLength> | undefined;\n  /**\n   * The **`mask-clip`** CSS property determines the area which is affected by a mask. The painted content of an element must be restricted to this area.\n   *\n   * **Syntax**: `[ <box> | border | padding | content | text ]#`\n   *\n   * **Initial value**: `border`\n   */\n  "-webkit-mask-clip"?: Property.WebkitMaskClip | undefined;\n  /**\n   * The **`-webkit-mask-composite`** property specifies the manner in which multiple mask images applied to the same element are composited with one another. Mask images are composited in the opposite order that they are declared with the `-webkit-mask-image` property.\n   *\n   * **Syntax**: `<composite-style>#`\n   *\n   * **Initial value**: `source-over`\n   */\n  "-webkit-mask-composite"?: Property.WebkitMaskComposite | undefined;\n  /**\n   * The **`mask-image`** CSS property sets the image that is used as mask layer for an element. By default this means the alpha channel of the mask image will be multiplied with the alpha channel of the element. This can be controlled with the `mask-mode` property.\n   *\n   * **Syntax**: `<mask-reference>#`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-mask-image"?: Property.WebkitMaskImage | undefined;\n  /**\n   * The **`mask-origin`** CSS property sets the origin of a mask.\n   *\n   * **Syntax**: `[ <box> | border | padding | content ]#`\n   *\n   * **Initial value**: `padding`\n   */\n  "-webkit-mask-origin"?: Property.WebkitMaskOrigin | undefined;\n  /**\n   * The **`mask-position`** CSS property sets the initial position, relative to the mask position layer set by `mask-origin`, for each defined mask image.\n   *\n   * **Syntax**: `<position>#`\n   *\n   * **Initial value**: `0% 0%`\n   */\n  "-webkit-mask-position"?: Property.WebkitMaskPosition<TLength> | undefined;\n  /**\n   * The `-webkit-mask-position-x` CSS property sets the initial horizontal position of a mask image.\n   *\n   * **Syntax**: `[ <length-percentage> | left | center | right ]#`\n   *\n   * **Initial value**: `0%`\n   */\n  "-webkit-mask-position-x"?: Property.WebkitMaskPositionX<TLength> | undefined;\n  /**\n   * The `-webkit-mask-position-y` CSS property sets the initial vertical position of a mask image.\n   *\n   * **Syntax**: `[ <length-percentage> | top | center | bottom ]#`\n   *\n   * **Initial value**: `0%`\n   */\n  "-webkit-mask-position-y"?: Property.WebkitMaskPositionY<TLength> | undefined;\n  /**\n   * The **`mask-repeat`** CSS property sets how mask images are repeated. A mask image can be repeated along the horizontal axis, the vertical axis, both axes, or not repeated at all.\n   *\n   * **Syntax**: `<repeat-style>#`\n   *\n   * **Initial value**: `repeat`\n   */\n  "-webkit-mask-repeat"?: Property.WebkitMaskRepeat | undefined;\n  /**\n   * The `-webkit-mask-repeat-x` property specifies whether and how a mask image is repeated (tiled) horizontally.\n   *\n   * **Syntax**: `repeat | no-repeat | space | round`\n   *\n   * **Initial value**: `repeat`\n   */\n  "-webkit-mask-repeat-x"?: Property.WebkitMaskRepeatX | undefined;\n  /**\n   * The `-webkit-mask-repeat-y` property sets whether and how a mask image is repeated (tiled) vertically.\n   *\n   * **Syntax**: `repeat | no-repeat | space | round`\n   *\n   * **Initial value**: `repeat`\n   */\n  "-webkit-mask-repeat-y"?: Property.WebkitMaskRepeatY | undefined;\n  /**\n   * The **`mask-size`** CSS property specifies the sizes of the mask images. The size of the image can be fully or partially constrained in order to preserve its intrinsic ratio.\n   *\n   * **Syntax**: `<bg-size>#`\n   *\n   * **Initial value**: `auto auto`\n   */\n  "-webkit-mask-size"?: Property.WebkitMaskSize<TLength> | undefined;\n  /**\n   * The **`max-inline-size`** CSS property defines the horizontal or vertical maximum size of an element\'s block, depending on its writing mode. It corresponds to either the `max-width` or the `max-height` property, depending on the value of `writing-mode`.\n   *\n   * **Syntax**: `<\'max-width\'>`\n   *\n   * **Initial value**: `0`\n   */\n  "-webkit-max-inline-size"?: Property.MaxInlineSize<TLength> | undefined;\n  /**\n   * The **`order`** CSS property sets the order to lay out an item in a flex or grid container. Items in a container are sorted by ascending `order` value and then by their source code order.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `0`\n   */\n  "-webkit-order"?: Property.Order | undefined;\n  /**\n   * The `-webkit-overflow-scrolling` CSS property controls whether or not touch devices use momentum-based scrolling for a given element.\n   *\n   * **Syntax**: `auto | touch`\n   *\n   * **Initial value**: `auto`\n   */\n  "-webkit-overflow-scrolling"?: Property.WebkitOverflowScrolling | undefined;\n  /**\n   * The **`padding-inline-end`** CSS property defines the logical inline end padding of an element, which maps to a physical padding depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>`\n   *\n   * **Initial value**: `0`\n   */\n  "-webkit-padding-end"?: Property.PaddingInlineEnd<TLength> | undefined;\n  /**\n   * The **`padding-inline-start`** CSS property defines the logical inline start padding of an element, which maps to a physical padding depending on the element\'s writing mode, directionality, and text orientation.\n   *\n   * **Syntax**: `<\'padding-left\'>`\n   *\n   * **Initial value**: `0`\n   */\n  "-webkit-padding-start"?: Property.PaddingInlineStart<TLength> | undefined;\n  /**\n   * The **`perspective`** CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective.\n   *\n   * **Syntax**: `none | <length>`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-perspective"?: Property.Perspective<TLength> | undefined;\n  /**\n   * The **`perspective-origin`** CSS property determines the position at which the viewer is looking. It is used as the _vanishing point_ by the `perspective` property.\n   *\n   * **Syntax**: `<position>`\n   *\n   * **Initial value**: `50% 50%`\n   */\n  "-webkit-perspective-origin"?: Property.PerspectiveOrigin<TLength> | undefined;\n  /**\n   * The **`print-color-adjust`** CSS property sets what, if anything, the user agent may do to optimize the appearance of the element on the output device. By default, the browser is allowed to make any adjustments to the element\'s appearance it determines to be necessary and prudent given the type and capabilities of the output device.\n   *\n   * **Syntax**: `economy | exact`\n   *\n   * **Initial value**: `economy`\n   */\n  "-webkit-print-color-adjust"?: Property.PrintColorAdjust | undefined;\n  /**\n   * The **`ruby-position`** CSS property defines the position of a ruby element relatives to its base element. It can be positioned over the element (`over`), under it (`under`), or between the characters on their right side (`inter-character`).\n   *\n   * **Syntax**: `[ alternate || [ over | under ] ] | inter-character`\n   *\n   * **Initial value**: `alternate`\n   */\n  "-webkit-ruby-position"?: Property.RubyPosition | undefined;\n  /**\n   * The **`scroll-snap-type`** CSS property sets how strictly snap points are enforced on the scroll container in case there is one.\n   *\n   * **Syntax**: `none | [ x | y | block | inline | both ] [ mandatory | proximity ]?`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-scroll-snap-type"?: Property.ScrollSnapType | undefined;\n  /**\n   * The **`shape-margin`** CSS property sets a margin for a CSS shape created using `shape-outside`.\n   *\n   * **Syntax**: `<length-percentage>`\n   *\n   * **Initial value**: `0`\n   */\n  "-webkit-shape-margin"?: Property.ShapeMargin<TLength> | undefined;\n  /**\n   * **`-webkit-tap-highlight-color`** is a non-standard CSS property that sets the color of the highlight that appears over a link while it\'s being tapped. The highlighting indicates to the user that their tap is being successfully recognized, and indicates which element they\'re tapping on.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `black`\n   */\n  "-webkit-tap-highlight-color"?: Property.WebkitTapHighlightColor | undefined;\n  /**\n   * The **`text-combine-upright`** CSS property sets the combination of characters into the space of a single character. If the combined text is wider than 1em, the user agent must fit the contents within 1em. The resulting composition is treated as a single upright glyph for layout and decoration. This property only has an effect in vertical writing modes.\n   *\n   * **Syntax**: `none | all | [ digits <integer>? ]`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-text-combine"?: Property.TextCombineUpright | undefined;\n  /**\n   * The **`text-decoration-color`** CSS property sets the color of decorations added to text by `text-decoration-line`.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  "-webkit-text-decoration-color"?: Property.TextDecorationColor | undefined;\n  /**\n   * The **`text-decoration-line`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.\n   *\n   * **Syntax**: `none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-text-decoration-line"?: Property.TextDecorationLine | undefined;\n  /**\n   * The **`text-decoration-skip`** CSS property sets what parts of an element\'s content any text decoration affecting the element must skip over. It controls all text decoration lines drawn by the element and also any text decoration lines drawn by its ancestors.\n   *\n   * **Syntax**: `none | [ objects || [ spaces | [ leading-spaces || trailing-spaces ] ] || edges || box-decoration ]`\n   *\n   * **Initial value**: `objects`\n   */\n  "-webkit-text-decoration-skip"?: Property.TextDecorationSkip | undefined;\n  /**\n   * The **`text-decoration-style`** CSS property sets the style of the lines specified by `text-decoration-line`. The style applies to all lines that are set with `text-decoration-line`.\n   *\n   * **Syntax**: `solid | double | dotted | dashed | wavy`\n   *\n   * **Initial value**: `solid`\n   */\n  "-webkit-text-decoration-style"?: Property.TextDecorationStyle | undefined;\n  /**\n   * The **`text-emphasis-color`** CSS property sets the color of emphasis marks. This value can also be set using the `text-emphasis` shorthand.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  "-webkit-text-emphasis-color"?: Property.TextEmphasisColor | undefined;\n  /**\n   * The **`text-emphasis-position`** CSS property sets where emphasis marks are drawn. Like ruby text, if there isn\'t enough room for emphasis marks, the line height is increased.\n   *\n   * **Syntax**: `[ over | under ] && [ right | left ]`\n   *\n   * **Initial value**: `over right`\n   */\n  "-webkit-text-emphasis-position"?: Property.TextEmphasisPosition | undefined;\n  /**\n   * The **`text-emphasis-style`** CSS property sets the appearance of emphasis marks. It can also be set, and reset, using the `text-emphasis` shorthand.\n   *\n   * **Syntax**: `none | [ [ filled | open ] || [ dot | circle | double-circle | triangle | sesame ] ] | <string>`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-text-emphasis-style"?: Property.TextEmphasisStyle | undefined;\n  /**\n   * The **`-webkit-text-fill-color`** CSS property specifies the fill color of characters of text. If this property is not set, the value of the `color` property is used.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  "-webkit-text-fill-color"?: Property.WebkitTextFillColor | undefined;\n  /**\n   * The **`text-orientation`** CSS property sets the orientation of the text characters in a line. It only affects text in vertical mode (when `writing-mode` is not `horizontal-tb`). It is useful for controlling the display of languages that use vertical script, and also for making vertical table headers.\n   *\n   * **Syntax**: `mixed | upright | sideways`\n   *\n   * **Initial value**: `mixed`\n   */\n  "-webkit-text-orientation"?: Property.TextOrientation | undefined;\n  /**\n   * The **`text-size-adjust`** CSS property controls the text inflation algorithm used on some smartphones and tablets. Other browsers will ignore this property.\n   *\n   * **Syntax**: `none | auto | <percentage>`\n   *\n   * **Initial value**: `auto` for smartphone browsers supporting inflation, `none` in other cases (and then not modifiable).\n   */\n  "-webkit-text-size-adjust"?: Property.TextSizeAdjust | undefined;\n  /**\n   * The **`-webkit-text-stroke-color`** CSS property specifies the stroke color of characters of text. If this property is not set, the value of the `color` property is used.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   */\n  "-webkit-text-stroke-color"?: Property.WebkitTextStrokeColor | undefined;\n  /**\n   * The **`-webkit-text-stroke-width`** CSS property specifies the width of the stroke for text.\n   *\n   * **Syntax**: `<length>`\n   *\n   * **Initial value**: `0`\n   */\n  "-webkit-text-stroke-width"?: Property.WebkitTextStrokeWidth<TLength> | undefined;\n  /**\n   * The **`text-underline-position`** CSS property specifies the position of the underline which is set using the `text-decoration` property\'s `underline` value.\n   *\n   * **Syntax**: `auto | from-font | [ under || [ left | right ] ]`\n   *\n   * **Initial value**: `auto`\n   */\n  "-webkit-text-underline-position"?: Property.TextUnderlinePosition | undefined;\n  /**\n   * The `-webkit-touch-callout` CSS property controls the display of the default callout shown when you touch and hold a touch target.\n   *\n   * **Syntax**: `default | none`\n   *\n   * **Initial value**: `default`\n   */\n  "-webkit-touch-callout"?: Property.WebkitTouchCallout | undefined;\n  /**\n   * The **`transform`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\n   *\n   * **Syntax**: `none | <transform-list>`\n   *\n   * **Initial value**: `none`\n   */\n  "-webkit-transform"?: Property.Transform | undefined;\n  /**\n   * The **`transform-origin`** CSS property sets the origin for an element\'s transformations.\n   *\n   * **Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n   *\n   * **Initial value**: `50% 50% 0`\n   */\n  "-webkit-transform-origin"?: Property.TransformOrigin<TLength> | undefined;\n  /**\n   * The **`transform-style`** CSS property sets whether children of an element are positioned in the 3D space or are flattened in the plane of the element.\n   *\n   * **Syntax**: `flat | preserve-3d`\n   *\n   * **Initial value**: `flat`\n   */\n  "-webkit-transform-style"?: Property.TransformStyle | undefined;\n  /**\n   * The **`transition-delay`** CSS property specifies the duration to wait before starting a property\'s transition effect when its value changes.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  "-webkit-transition-delay"?: Property.TransitionDelay<TTime> | undefined;\n  /**\n   * The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   */\n  "-webkit-transition-duration"?: Property.TransitionDuration<TTime> | undefined;\n  /**\n   * The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n   *\n   * **Syntax**: `none | <single-transition-property>#`\n   *\n   * **Initial value**: all\n   */\n  "-webkit-transition-property"?: Property.TransitionProperty | undefined;\n  /**\n   * The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   */\n  "-webkit-transition-timing-function"?: Property.TransitionTimingFunction | undefined;\n  /**\n   * **Syntax**: `read-only | read-write | read-write-plaintext-only`\n   *\n   * **Initial value**: `read-only`\n   */\n  "-webkit-user-modify"?: Property.WebkitUserModify | undefined;\n  /**\n   * The **`user-select`** CSS property controls whether the user can select text. This doesn\'t have any effect on content loaded as part of a browser\'s user interface (its chrome), except in textboxes.\n   *\n   * **Syntax**: `auto | text | none | contain | all`\n   *\n   * **Initial value**: `auto`\n   */\n  "-webkit-user-select"?: Property.UserSelect | undefined;\n  /**\n   * The **`writing-mode`** CSS property sets whether lines of text are laid out horizontally or vertically, as well as the direction in which blocks progress. When set for an entire document, it should be set on the root element (`html` element for HTML documents).\n   *\n   * **Syntax**: `horizontal-tb | vertical-rl | vertical-lr | sideways-rl | sideways-lr`\n   *\n   * **Initial value**: `horizontal-tb`\n   */\n  "-webkit-writing-mode"?: Property.WritingMode | undefined;\n}\n\nexport interface VendorShorthandPropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}> {\n  /**\n   * The **`animation`** shorthand CSS property applies an animation between styles. It is a shorthand for `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and `animation-play-state`.\n   *\n   * **Syntax**: `<single-animation>#`\n   */\n  "-moz-animation"?: Property.Animation<TTime> | undefined;\n  /**\n   * The **`border-image`** CSS property draws an image around a given element. It replaces the element\'s regular border.\n   *\n   * **Syntax**: `<\'border-image-source\'> || <\'border-image-slice\'> [ / <\'border-image-width\'> | / <\'border-image-width\'>? / <\'border-image-outset\'> ]? || <\'border-image-repeat\'>`\n   */\n  "-moz-border-image"?: Property.BorderImage | undefined;\n  /**\n   * The **`column-rule`** shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'column-rule-width\'> || <\'column-rule-style\'> || <\'column-rule-color\'>`\n   */\n  "-moz-column-rule"?: Property.ColumnRule<TLength> | undefined;\n  /**\n   * The **`columns`** CSS shorthand property sets the number of columns to use when drawing an element\'s contents, as well as those columns\' widths.\n   *\n   * **Syntax**: `<\'column-width\'> || <\'column-count\'>`\n   */\n  "-moz-columns"?: Property.Columns<TLength> | undefined;\n  /**\n   * The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n   *\n   * **Syntax**: `<single-transition>#`\n   */\n  "-moz-transition"?: Property.Transition<TTime> | undefined;\n  /**\n   * The **`-ms-content-zoom-limit`** CSS shorthand property is a Microsoft extension that specifies values for the `-ms-content-zoom-limit-min` and `-ms-content-zoom-limit-max` properties.\n   *\n   * **Syntax**: `<\'-ms-content-zoom-limit-min\'> <\'-ms-content-zoom-limit-max\'>`\n   */\n  "-ms-content-zoom-limit"?: Property.MsContentZoomLimit | undefined;\n  /**\n   * The **`-ms-content-zoom-snap`** CSS shorthand property is a Microsoft extension that specifies values for the `-ms-content-zoom-snap-type` and `-ms-content-zoom-snap-points` properties.\n   *\n   * **Syntax**: `<\'-ms-content-zoom-snap-type\'> || <\'-ms-content-zoom-snap-points\'>`\n   */\n  "-ms-content-zoom-snap"?: Property.MsContentZoomSnap | undefined;\n  /**\n   * The **`flex`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.\n   *\n   * **Syntax**: `none | [ <\'flex-grow\'> <\'flex-shrink\'>? || <\'flex-basis\'> ]`\n   */\n  "-ms-flex"?: Property.Flex<TLength> | undefined;\n  /**\n   * The **\\-ms-scroll-limit** CSS property is a Microsoft extension that specifies values for the `-ms-scroll-limit-x-min`, `-ms-scroll-limit-y-min`, `-ms-scroll-limit-x-max`, and `-ms-scroll-limit-y-max` properties.\n   *\n   * **Syntax**: `<\'-ms-scroll-limit-x-min\'> <\'-ms-scroll-limit-y-min\'> <\'-ms-scroll-limit-x-max\'> <\'-ms-scroll-limit-y-max\'>`\n   */\n  "-ms-scroll-limit"?: Property.MsScrollLimit | undefined;\n  /**\n   * The **`-ms-scroll-snap-x`** CSS shorthand property is a Microsoft extension that specifies values for the `-ms-scroll-snap-type` and `-ms-scroll-snap-points-x` properties.\n   *\n   * **Syntax**: `<\'-ms-scroll-snap-type\'> <\'-ms-scroll-snap-points-x\'>`\n   */\n  "-ms-scroll-snap-x"?: Property.MsScrollSnapX | undefined;\n  /**\n   * The **`-ms-scroll-snap-x`** CSS shorthand property is a Microsoft extension that specifies values for the `-ms-scroll-snap-type` and `-ms-scroll-snap-points-y` properties.\n   *\n   * **Syntax**: `<\'-ms-scroll-snap-type\'> <\'-ms-scroll-snap-points-y\'>`\n   */\n  "-ms-scroll-snap-y"?: Property.MsScrollSnapY | undefined;\n  /**\n   * The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n   *\n   * **Syntax**: `<single-transition>#`\n   */\n  "-ms-transition"?: Property.Transition<TTime> | undefined;\n  /**\n   * The **`animation`** shorthand CSS property applies an animation between styles. It is a shorthand for `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and `animation-play-state`.\n   *\n   * **Syntax**: `<single-animation>#`\n   */\n  "-webkit-animation"?: Property.Animation<TTime> | undefined;\n  /**\n   * The **`-webkit-border-before`** CSS property is a shorthand property for setting the individual logical block start border property values in a single place in the style sheet.\n   *\n   * **Syntax**: `<\'border-width\'> || <\'border-style\'> || <color>`\n   */\n  "-webkit-border-before"?: Property.WebkitBorderBefore<TLength> | undefined;\n  /**\n   * The **`border-image`** CSS property draws an image around a given element. It replaces the element\'s regular border.\n   *\n   * **Syntax**: `<\'border-image-source\'> || <\'border-image-slice\'> [ / <\'border-image-width\'> | / <\'border-image-width\'>? / <\'border-image-outset\'> ]? || <\'border-image-repeat\'>`\n   */\n  "-webkit-border-image"?: Property.BorderImage | undefined;\n  /**\n   * The **`border-radius`** CSS property rounds the corners of an element\'s outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.\n   *\n   * **Syntax**: `<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?`\n   */\n  "-webkit-border-radius"?: Property.BorderRadius<TLength> | undefined;\n  /**\n   * The **`column-rule`** shorthand CSS property sets the width, style, and color of the line drawn between columns in a multi-column layout.\n   *\n   * **Syntax**: `<\'column-rule-width\'> || <\'column-rule-style\'> || <\'column-rule-color\'>`\n   */\n  "-webkit-column-rule"?: Property.ColumnRule<TLength> | undefined;\n  /**\n   * The **`columns`** CSS shorthand property sets the number of columns to use when drawing an element\'s contents, as well as those columns\' widths.\n   *\n   * **Syntax**: `<\'column-width\'> || <\'column-count\'>`\n   */\n  "-webkit-columns"?: Property.Columns<TLength> | undefined;\n  /**\n   * The **`flex`** CSS shorthand property sets how a flex _item_ will grow or shrink to fit the space available in its flex container.\n   *\n   * **Syntax**: `none | [ <\'flex-grow\'> <\'flex-shrink\'>? || <\'flex-basis\'> ]`\n   */\n  "-webkit-flex"?: Property.Flex<TLength> | undefined;\n  /**\n   * The **`flex-flow`** CSS shorthand property specifies the direction of a flex container, as well as its wrapping behavior.\n   *\n   * **Syntax**: `<\'flex-direction\'> || <\'flex-wrap\'>`\n   */\n  "-webkit-flex-flow"?: Property.FlexFlow | undefined;\n  /**\n   * The **`mask`** CSS shorthand property hides an element (partially or fully) by masking or clipping the image at specific points.\n   *\n   * **Syntax**: `[ <mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || [ <box> | border | padding | content | text ] || [ <box> | border | padding | content ] ]#`\n   */\n  "-webkit-mask"?: Property.WebkitMask<TLength> | undefined;\n  /**\n   * The **`mask-border`** CSS shorthand property lets you create a mask along the edge of an element\'s border.\n   *\n   * **Syntax**: `<\'mask-border-source\'> || <\'mask-border-slice\'> [ / <\'mask-border-width\'>? [ / <\'mask-border-outset\'> ]? ]? || <\'mask-border-repeat\'> || <\'mask-border-mode\'>`\n   */\n  "-webkit-mask-box-image"?: Property.MaskBorder | undefined;\n  /**\n   * The **`text-emphasis`** CSS property applies emphasis marks to text (except spaces and control characters). It is a shorthand for `text-emphasis-style` and `text-emphasis-color`.\n   *\n   * **Syntax**: `<\'text-emphasis-style\'> || <\'text-emphasis-color\'>`\n   */\n  "-webkit-text-emphasis"?: Property.TextEmphasis | undefined;\n  /**\n   * The **`-webkit-text-stroke`** CSS property specifies the width and color of strokes for text characters. This is a shorthand property for the longhand properties `-webkit-text-stroke-width` and `-webkit-text-stroke-color`.\n   *\n   * **Syntax**: `<length> || <color>`\n   */\n  "-webkit-text-stroke"?: Property.WebkitTextStroke<TLength> | undefined;\n  /**\n   * The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n   *\n   * **Syntax**: `<single-transition>#`\n   */\n  "-webkit-transition"?: Property.Transition<TTime> | undefined;\n}\n\nexport interface VendorPropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}>\n  extends VendorLonghandPropertiesHyphen<TLength, TTime>,\n    VendorShorthandPropertiesHyphen<TLength, TTime> {}\n\nexport interface ObsoletePropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}> {\n  /**\n   * In combination with `elevation`, the **`azimuth`** CSS property enables different audio sources to be positioned spatially for aural presentation. This is important in that it provides a natural way to tell several voices apart, as each can be positioned to originate at a different location on the sound stage. Stereo output produce a lateral sound stage, while binaural headphones and multi-speaker setups allow for a fully three-dimensional stage.\n   *\n   * **Syntax**: `<angle> | [ [ left-side | far-left | left | center-left | center | center-right | right | far-right | right-side ] || behind ] | leftwards | rightwards`\n   *\n   * **Initial value**: `center`\n   *\n   * @deprecated\n   */\n  azimuth?: Property.Azimuth | undefined;\n  /**\n   * The **`box-align`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\n   *\n   * **Syntax**: `start | center | end | baseline | stretch`\n   *\n   * **Initial value**: `stretch`\n   *\n   * @deprecated\n   */\n  "box-align"?: Property.BoxAlign | undefined;\n  /**\n   * The **`box-direction`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n   *\n   * **Syntax**: `normal | reverse | inherit`\n   *\n   * **Initial value**: `normal`\n   *\n   * @deprecated\n   */\n  "box-direction"?: Property.BoxDirection | undefined;\n  /**\n   * The **`-moz-box-flex`** and **`-webkit-box-flex`** CSS properties specify how a `-moz-box` or `-webkit-box` grows to fill the box that contains it, in the direction of the containing box\'s layout.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  "box-flex"?: Property.BoxFlex | undefined;\n  /**\n   * The **`box-flex-group`** CSS property assigns the flexbox\'s child elements to a flex group.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  "box-flex-group"?: Property.BoxFlexGroup | undefined;\n  /**\n   * The **`box-lines`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).\n   *\n   * **Syntax**: `single | multiple`\n   *\n   * **Initial value**: `single`\n   *\n   * @deprecated\n   */\n  "box-lines"?: Property.BoxLines | undefined;\n  /**\n   * The **`box-ordinal-group`** CSS property assigns the flexbox\'s child elements to an ordinal group.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  "box-ordinal-group"?: Property.BoxOrdinalGroup | undefined;\n  /**\n   * The **`box-orient`** CSS property sets whether an element lays out its contents horizontally or vertically.\n   *\n   * **Syntax**: `horizontal | vertical | inline-axis | block-axis | inherit`\n   *\n   * **Initial value**: `inline-axis` (`horizontal` in XUL)\n   *\n   * @deprecated\n   */\n  "box-orient"?: Property.BoxOrient | undefined;\n  /**\n   * The **`-moz-box-pack`** and **`-webkit-box-pack`** CSS properties specify how a `-moz-box` or `-webkit-box` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\n   *\n   * **Syntax**: `start | center | end | justify`\n   *\n   * **Initial value**: `start`\n   *\n   * @deprecated\n   */\n  "box-pack"?: Property.BoxPack | undefined;\n  /**\n   * The **`clip`** CSS property defines a visible portion of an element. The `clip` property applies only to absolutely positioned elements — that is, elements with `position:absolute` or `position:fixed`.\n   *\n   * **Syntax**: `<shape> | auto`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  clip?: Property.Clip | undefined;\n  /**\n   * The **`column-gap`** CSS property sets the size of the gap (gutter) between an element\'s columns.\n   *\n   * **Syntax**: `<length-percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  "grid-column-gap"?: Property.GridColumnGap<TLength> | undefined;\n  /**\n   * The **`gap`** CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for `row-gap` and `column-gap`.\n   *\n   * **Syntax**: `<\'grid-row-gap\'> <\'grid-column-gap\'>?`\n   *\n   * @deprecated\n   */\n  "grid-gap"?: Property.GridGap<TLength> | undefined;\n  /**\n   * The **`row-gap`** CSS property sets the size of the gap (gutter) between an element\'s grid rows.\n   *\n   * **Syntax**: `<length-percentage>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  "grid-row-gap"?: Property.GridRowGap<TLength> | undefined;\n  /**\n   * The **`ime-mode`** CSS property controls the state of the input method editor (IME) for text fields. This property is obsolete.\n   *\n   * **Syntax**: `auto | normal | active | inactive | disabled`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  "ime-mode"?: Property.ImeMode | undefined;\n  /**\n   * The **`inset-block`** CSS property defines the logical block start and end offsets of an element, which maps to physical offsets depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top` and `bottom`, or `right` and `left` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>{1,2}`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  "offset-block"?: Property.InsetBlock<TLength> | undefined;\n  /**\n   * The **`inset-block-end`** CSS property defines the logical block end offset of an element, which maps to a physical inset depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  "offset-block-end"?: Property.InsetBlockEnd<TLength> | undefined;\n  /**\n   * The **`inset-block-start`** CSS property defines the logical block start offset of an element, which maps to a physical inset depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  "offset-block-start"?: Property.InsetBlockStart<TLength> | undefined;\n  /**\n   * The **`inset-inline`** CSS property defines the logical start and end offsets of an element in the inline direction, which maps to physical offsets depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top` and `bottom`, or `right` and `left` properties depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>{1,2}`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  "offset-inline"?: Property.InsetInline<TLength> | undefined;\n  /**\n   * The **`inset-inline-end`** CSS property defines the logical inline end inset of an element, which maps to a physical offset depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  "offset-inline-end"?: Property.InsetInlineEnd<TLength> | undefined;\n  /**\n   * The **`inset-inline-start`** CSS property defines the logical inline start inset of an element, which maps to a physical offset depending on the element\'s writing mode, directionality, and text orientation. It corresponds to the `top`, `right`, `bottom`, or `left` property depending on the values defined for `writing-mode`, `direction`, and `text-orientation`.\n   *\n   * **Syntax**: `<\'top\'>`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  "offset-inline-start"?: Property.InsetInlineStart<TLength> | undefined;\n  /**\n   * The **`scroll-snap-coordinate`** CSS property defines the x and y coordinate positions within an element that will align with its nearest ancestor scroll container\'s `scroll-snap-destination` for each respective axis.\n   *\n   * **Syntax**: `none | <position>#`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  "scroll-snap-coordinate"?: Property.ScrollSnapCoordinate<TLength> | undefined;\n  /**\n   * The **`scroll-snap-destination`** CSS property defines the position in x and y coordinates within the scroll container\'s visual viewport which element snap points align with.\n   *\n   * **Syntax**: `<position>`\n   *\n   * **Initial value**: `0px 0px`\n   *\n   * @deprecated\n   */\n  "scroll-snap-destination"?: Property.ScrollSnapDestination<TLength> | undefined;\n  /**\n   * The **`scroll-snap-points-x`** CSS property defines the horizontal positioning of snap points within the content of the scroll container they are applied to.\n   *\n   * **Syntax**: `none | repeat( <length-percentage> )`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  "scroll-snap-points-x"?: Property.ScrollSnapPointsX | undefined;\n  /**\n   * The **`scroll-snap-points-y`** CSS property defines the vertical positioning of snap points within the content of the scroll container they are applied to.\n   *\n   * **Syntax**: `none | repeat( <length-percentage> )`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  "scroll-snap-points-y"?: Property.ScrollSnapPointsY | undefined;\n  /**\n   * The **`scroll-snap-type-x`** CSS property defines how strictly snap points are enforced on the horizontal axis of the scroll container in case there is one.\n   *\n   * **Syntax**: `none | mandatory | proximity`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  "scroll-snap-type-x"?: Property.ScrollSnapTypeX | undefined;\n  /**\n   * The **`scroll-snap-type-y`** CSS property defines how strictly snap points are enforced on the vertical axis of the scroll container in case there is one.\n   *\n   * **Syntax**: `none | mandatory | proximity`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  "scroll-snap-type-y"?: Property.ScrollSnapTypeY | undefined;\n  /**\n   * The **`-ms-scrollbar-track-color`** CSS property is a Microsoft extension that specifies the color of the track element of a scrollbar.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `Scrollbar`\n   *\n   * @deprecated\n   */\n  "scrollbar-track-color"?: Property.MsScrollbarTrackColor | undefined;\n  /**\n   * The **`box-align`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\n   *\n   * **Syntax**: `start | center | end | baseline | stretch`\n   *\n   * **Initial value**: `stretch`\n   *\n   * @deprecated\n   */\n  "-khtml-box-align"?: Property.BoxAlign | undefined;\n  /**\n   * The **`box-direction`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n   *\n   * **Syntax**: `normal | reverse | inherit`\n   *\n   * **Initial value**: `normal`\n   *\n   * @deprecated\n   */\n  "-khtml-box-direction"?: Property.BoxDirection | undefined;\n  /**\n   * The **`-moz-box-flex`** and **`-webkit-box-flex`** CSS properties specify how a `-moz-box` or `-webkit-box` grows to fill the box that contains it, in the direction of the containing box\'s layout.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  "-khtml-box-flex"?: Property.BoxFlex | undefined;\n  /**\n   * The **`box-flex-group`** CSS property assigns the flexbox\'s child elements to a flex group.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  "-khtml-box-flex-group"?: Property.BoxFlexGroup | undefined;\n  /**\n   * The **`box-lines`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).\n   *\n   * **Syntax**: `single | multiple`\n   *\n   * **Initial value**: `single`\n   *\n   * @deprecated\n   */\n  "-khtml-box-lines"?: Property.BoxLines | undefined;\n  /**\n   * The **`box-ordinal-group`** CSS property assigns the flexbox\'s child elements to an ordinal group.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  "-khtml-box-ordinal-group"?: Property.BoxOrdinalGroup | undefined;\n  /**\n   * The **`box-orient`** CSS property sets whether an element lays out its contents horizontally or vertically.\n   *\n   * **Syntax**: `horizontal | vertical | inline-axis | block-axis | inherit`\n   *\n   * **Initial value**: `inline-axis` (`horizontal` in XUL)\n   *\n   * @deprecated\n   */\n  "-khtml-box-orient"?: Property.BoxOrient | undefined;\n  /**\n   * The **`-moz-box-pack`** and **`-webkit-box-pack`** CSS properties specify how a `-moz-box` or `-webkit-box` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\n   *\n   * **Syntax**: `start | center | end | justify`\n   *\n   * **Initial value**: `start`\n   *\n   * @deprecated\n   */\n  "-khtml-box-pack"?: Property.BoxPack | undefined;\n  /**\n   * The **`line-break`** CSS property sets how to break lines of Chinese, Japanese, or Korean (CJK) text when working with punctuation and symbols.\n   *\n   * **Syntax**: `auto | loose | normal | strict | anywhere`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  "-khtml-line-break"?: Property.LineBreak | undefined;\n  /**\n   * The **`opacity`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.\n   *\n   * **Syntax**: `<alpha-value>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  "-khtml-opacity"?: Property.Opacity | undefined;\n  /**\n   * The **`user-select`** CSS property controls whether the user can select text. This doesn\'t have any effect on content loaded as part of a browser\'s user interface (its chrome), except in textboxes.\n   *\n   * **Syntax**: `auto | text | none | contain | all`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  "-khtml-user-select"?: Property.UserSelect | undefined;\n  /**\n   * The **`background-clip`** CSS property sets whether an element\'s background extends underneath its border box, padding box, or content box.\n   *\n   * **Syntax**: `<box>#`\n   *\n   * **Initial value**: `border-box`\n   *\n   * @deprecated\n   */\n  "-moz-background-clip"?: Property.BackgroundClip | undefined;\n  /**\n   * The **`box-decoration-break`** CSS property specifies how an element\'s fragments should be rendered when broken across multiple lines, columns, or pages.\n   *\n   * **Syntax**: `slice | clone`\n   *\n   * **Initial value**: `slice`\n   *\n   * @deprecated\n   */\n  "-moz-background-inline-policy"?: Property.BoxDecorationBreak | undefined;\n  /**\n   * The **`background-origin`** CSS property sets the background\'s origin: from the border start, inside the border, or inside the padding.\n   *\n   * **Syntax**: `<box>#`\n   *\n   * **Initial value**: `padding-box`\n   *\n   * @deprecated\n   */\n  "-moz-background-origin"?: Property.BackgroundOrigin | undefined;\n  /**\n   * The **`background-size`** CSS property sets the size of the element\'s background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\n   *\n   * **Syntax**: `<bg-size>#`\n   *\n   * **Initial value**: `auto auto`\n   *\n   * @deprecated\n   */\n  "-moz-background-size"?: Property.BackgroundSize<TLength> | undefined;\n  /**\n   * The **`-moz-binding`** CSS property is used by Mozilla-based applications to attach an XBL binding to a DOM element.\n   *\n   * **Syntax**: `<url> | none`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  "-moz-binding"?: Property.MozBinding | undefined;\n  /**\n   * The **`border-radius`** CSS property rounds the corners of an element\'s outer border edge. You can set a single radius to make circular corners, or two radii to make elliptical corners.\n   *\n   * **Syntax**: `<length-percentage>{1,4} [ / <length-percentage>{1,4} ]?`\n   *\n   * @deprecated\n   */\n  "-moz-border-radius"?: Property.BorderRadius<TLength> | undefined;\n  /**\n   * The **`border-bottom-left-radius`** CSS property rounds the bottom-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  "-moz-border-radius-bottomleft"?: Property.BorderBottomLeftRadius<TLength> | undefined;\n  /**\n   * The **`border-bottom-right-radius`** CSS property rounds the bottom-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  "-moz-border-radius-bottomright"?: Property.BorderBottomRightRadius<TLength> | undefined;\n  /**\n   * The **`border-top-left-radius`** CSS property rounds the top-left corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  "-moz-border-radius-topleft"?: Property.BorderTopLeftRadius<TLength> | undefined;\n  /**\n   * The **`border-top-right-radius`** CSS property rounds the top-right corner of an element by specifying the radius (or the radius of the semi-major and semi-minor axes) of the ellipse defining the curvature of the corner.\n   *\n   * **Syntax**: `<length-percentage>{1,2}`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  "-moz-border-radius-topright"?: Property.BorderTopRightRadius<TLength> | undefined;\n  /**\n   * The **`box-align`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\n   *\n   * **Syntax**: `start | center | end | baseline | stretch`\n   *\n   * **Initial value**: `stretch`\n   *\n   * @deprecated\n   */\n  "-moz-box-align"?: Property.BoxAlign | undefined;\n  /**\n   * The **`box-direction`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n   *\n   * **Syntax**: `normal | reverse | inherit`\n   *\n   * **Initial value**: `normal`\n   *\n   * @deprecated\n   */\n  "-moz-box-direction"?: Property.BoxDirection | undefined;\n  /**\n   * The **`-moz-box-flex`** and **`-webkit-box-flex`** CSS properties specify how a `-moz-box` or `-webkit-box` grows to fill the box that contains it, in the direction of the containing box\'s layout.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  "-moz-box-flex"?: Property.BoxFlex | undefined;\n  /**\n   * The **`box-ordinal-group`** CSS property assigns the flexbox\'s child elements to an ordinal group.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  "-moz-box-ordinal-group"?: Property.BoxOrdinalGroup | undefined;\n  /**\n   * The **`box-orient`** CSS property sets whether an element lays out its contents horizontally or vertically.\n   *\n   * **Syntax**: `horizontal | vertical | inline-axis | block-axis | inherit`\n   *\n   * **Initial value**: `inline-axis` (`horizontal` in XUL)\n   *\n   * @deprecated\n   */\n  "-moz-box-orient"?: Property.BoxOrient | undefined;\n  /**\n   * The **`-moz-box-pack`** and **`-webkit-box-pack`** CSS properties specify how a `-moz-box` or `-webkit-box` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\n   *\n   * **Syntax**: `start | center | end | justify`\n   *\n   * **Initial value**: `start`\n   *\n   * @deprecated\n   */\n  "-moz-box-pack"?: Property.BoxPack | undefined;\n  /**\n   * The **`box-shadow`** CSS property adds shadow effects around an element\'s frame. You can set multiple effects separated by commas. A box shadow is described by X and Y offsets relative to the element, blur and spread radius, and color.\n   *\n   * **Syntax**: `none | <shadow>#`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  "-moz-box-shadow"?: Property.BoxShadow | undefined;\n  /**\n   * The non-standard **`-moz-float-edge`** CSS property specifies whether the height and width properties of the element include the margin, border, or padding thickness.\n   *\n   * **Syntax**: `border-box | content-box | margin-box | padding-box`\n   *\n   * **Initial value**: `content-box`\n   *\n   * @deprecated\n   */\n  "-moz-float-edge"?: Property.MozFloatEdge | undefined;\n  /**\n   * The **`-moz-force-broken-image-icon`** extended CSS property can be used to force the broken image icon to be shown even when a broken image has an `alt` attribute.\n   *\n   * **Syntax**: `0 | 1`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  "-moz-force-broken-image-icon"?: Property.MozForceBrokenImageIcon | undefined;\n  /**\n   * The **`opacity`** CSS property sets the opacity of an element. Opacity is the degree to which content behind an element is hidden, and is the opposite of transparency.\n   *\n   * **Syntax**: `<alpha-value>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  "-moz-opacity"?: Property.Opacity | undefined;\n  /**\n   * The **`outline`** CSS shorthand property set all the outline properties in a single declaration.\n   *\n   * **Syntax**: `[ <\'outline-color\'> || <\'outline-style\'> || <\'outline-width\'> ]`\n   *\n   * @deprecated\n   */\n  "-moz-outline"?: Property.Outline<TLength> | undefined;\n  /**\n   * The **`outline-color`** CSS property sets the color of an element\'s outline.\n   *\n   * **Syntax**: `<color> | invert`\n   *\n   * **Initial value**: `invert`, for browsers supporting it, `currentColor` for the other\n   *\n   * @deprecated\n   */\n  "-moz-outline-color"?: Property.OutlineColor | undefined;\n  /**\n   * In Mozilla applications like Firefox, the **`-moz-outline-radius`** CSS shorthand property can be used to give an element\'s `outline` rounded corners.\n   *\n   * **Syntax**: `<outline-radius>{1,4} [ / <outline-radius>{1,4} ]?`\n   *\n   * @deprecated\n   */\n  "-moz-outline-radius"?: Property.MozOutlineRadius<TLength> | undefined;\n  /**\n   * In Mozilla applications, the **`-moz-outline-radius-bottomleft`** CSS property can be used to round the bottom-left corner of an element\'s `outline`.\n   *\n   * **Syntax**: `<outline-radius>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  "-moz-outline-radius-bottomleft"?: Property.MozOutlineRadiusBottomleft<TLength> | undefined;\n  /**\n   * In Mozilla applications, the **`-moz-outline-radius-bottomright`** CSS property can be used to round the bottom-right corner of an element\'s `outline`.\n   *\n   * **Syntax**: `<outline-radius>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  "-moz-outline-radius-bottomright"?: Property.MozOutlineRadiusBottomright<TLength> | undefined;\n  /**\n   * In Mozilla applications, the **`-moz-outline-radius-topleft`** CSS property can be used to round the top-left corner of an element\'s `outline`.\n   *\n   * **Syntax**: `<outline-radius>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  "-moz-outline-radius-topleft"?: Property.MozOutlineRadiusTopleft<TLength> | undefined;\n  /**\n   * In Mozilla applications, the **`-moz-outline-radius-topright`** CSS property can be used to round the top-right corner of an element\'s `outline`.\n   *\n   * **Syntax**: `<outline-radius>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  "-moz-outline-radius-topright"?: Property.MozOutlineRadiusTopright<TLength> | undefined;\n  /**\n   * The **`outline-style`** CSS property sets the style of an element\'s outline. An outline is a line that is drawn around an element, outside the `border`.\n   *\n   * **Syntax**: `auto | <\'border-style\'>`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  "-moz-outline-style"?: Property.OutlineStyle | undefined;\n  /**\n   * The CSS **`outline-width`** property sets the thickness of an element\'s outline. An outline is a line that is drawn around an element, outside the `border`.\n   *\n   * **Syntax**: `<line-width>`\n   *\n   * **Initial value**: `medium`\n   *\n   * @deprecated\n   */\n  "-moz-outline-width"?: Property.OutlineWidth<TLength> | undefined;\n  /**\n   * The **`text-align-last`** CSS property sets how the last line of a block or a line, right before a forced line break, is aligned.\n   *\n   * **Syntax**: `auto | start | end | left | right | center | justify`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  "-moz-text-align-last"?: Property.TextAlignLast | undefined;\n  /**\n   * The **`text-decoration-color`** CSS property sets the color of decorations added to text by `text-decoration-line`.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `currentcolor`\n   *\n   * @deprecated\n   */\n  "-moz-text-decoration-color"?: Property.TextDecorationColor | undefined;\n  /**\n   * The **`text-decoration-line`** CSS property sets the kind of decoration that is used on text in an element, such as an underline or overline.\n   *\n   * **Syntax**: `none | [ underline || overline || line-through || blink ] | spelling-error | grammar-error`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  "-moz-text-decoration-line"?: Property.TextDecorationLine | undefined;\n  /**\n   * The **`text-decoration-style`** CSS property sets the style of the lines specified by `text-decoration-line`. The style applies to all lines that are set with `text-decoration-line`.\n   *\n   * **Syntax**: `solid | double | dotted | dashed | wavy`\n   *\n   * **Initial value**: `solid`\n   *\n   * @deprecated\n   */\n  "-moz-text-decoration-style"?: Property.TextDecorationStyle | undefined;\n  /**\n   * In Mozilla applications, **`-moz-user-input`** determines if an element will accept user input.\n   *\n   * **Syntax**: `auto | none | enabled | disabled`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  "-moz-user-input"?: Property.MozUserInput | undefined;\n  /**\n   * The **`ime-mode`** CSS property controls the state of the input method editor (IME) for text fields. This property is obsolete.\n   *\n   * **Syntax**: `auto | normal | active | inactive | disabled`\n   *\n   * **Initial value**: `auto`\n   *\n   * @deprecated\n   */\n  "-ms-ime-mode"?: Property.ImeMode | undefined;\n  /**\n   * The **`-ms-scrollbar-track-color`** CSS property is a Microsoft extension that specifies the color of the track element of a scrollbar.\n   *\n   * **Syntax**: `<color>`\n   *\n   * **Initial value**: `Scrollbar`\n   *\n   * @deprecated\n   */\n  "-ms-scrollbar-track-color"?: Property.MsScrollbarTrackColor | undefined;\n  /**\n   * The **`animation`** shorthand CSS property applies an animation between styles. It is a shorthand for `animation-name`, `animation-duration`, `animation-timing-function`, `animation-delay`, `animation-iteration-count`, `animation-direction`, `animation-fill-mode`, and `animation-play-state`.\n   *\n   * **Syntax**: `<single-animation>#`\n   *\n   * @deprecated\n   */\n  "-o-animation"?: Property.Animation<TTime> | undefined;\n  /**\n   * The **`animation-delay`** CSS property specifies the amount of time to wait from applying the animation to an element before beginning to perform the animation. The animation can start later, immediately from its beginning, or immediately and partway through the animation.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   *\n   * @deprecated\n   */\n  "-o-animation-delay"?: Property.AnimationDelay<TTime> | undefined;\n  /**\n   * The **`animation-direction`** CSS property sets whether an animation should play forward, backward, or alternate back and forth between playing the sequence forward and backward.\n   *\n   * **Syntax**: `<single-animation-direction>#`\n   *\n   * **Initial value**: `normal`\n   *\n   * @deprecated\n   */\n  "-o-animation-direction"?: Property.AnimationDirection | undefined;\n  /**\n   * The **`animation-duration`** CSS property sets the length of time that an animation takes to complete one cycle.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   *\n   * @deprecated\n   */\n  "-o-animation-duration"?: Property.AnimationDuration<TTime> | undefined;\n  /**\n   * The **`animation-fill-mode`** CSS property sets how a CSS animation applies styles to its target before and after its execution.\n   *\n   * **Syntax**: `<single-animation-fill-mode>#`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  "-o-animation-fill-mode"?: Property.AnimationFillMode | undefined;\n  /**\n   * The **`animation-iteration-count`** CSS property sets the number of times an animation sequence should be played before stopping.\n   *\n   * **Syntax**: `<single-animation-iteration-count>#`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  "-o-animation-iteration-count"?: Property.AnimationIterationCount | undefined;\n  /**\n   * The **`animation-name`** CSS property specifies the names of one or more `@keyframes` at-rules describing the animation or animations to apply to the element.\n   *\n   * **Syntax**: `[ none | <keyframes-name> ]#`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  "-o-animation-name"?: Property.AnimationName | undefined;\n  /**\n   * The **`animation-play-state`** CSS property sets whether an animation is running or paused.\n   *\n   * **Syntax**: `<single-animation-play-state>#`\n   *\n   * **Initial value**: `running`\n   *\n   * @deprecated\n   */\n  "-o-animation-play-state"?: Property.AnimationPlayState | undefined;\n  /**\n   * The **`animation-timing-function`** CSS property sets how an animation progresses through the duration of each cycle.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   *\n   * @deprecated\n   */\n  "-o-animation-timing-function"?: Property.AnimationTimingFunction | undefined;\n  /**\n   * The **`background-size`** CSS property sets the size of the element\'s background image. The image can be left to its natural size, stretched, or constrained to fit the available space.\n   *\n   * **Syntax**: `<bg-size>#`\n   *\n   * **Initial value**: `auto auto`\n   *\n   * @deprecated\n   */\n  "-o-background-size"?: Property.BackgroundSize<TLength> | undefined;\n  /**\n   * The **`border-image`** CSS property draws an image around a given element. It replaces the element\'s regular border.\n   *\n   * **Syntax**: `<\'border-image-source\'> || <\'border-image-slice\'> [ / <\'border-image-width\'> | / <\'border-image-width\'>? / <\'border-image-outset\'> ]? || <\'border-image-repeat\'>`\n   *\n   * @deprecated\n   */\n  "-o-border-image"?: Property.BorderImage | undefined;\n  /**\n   * The **`object-fit`** CSS property sets how the content of a replaced element, such as an `<img>` or `<video>`, should be resized to fit its container.\n   *\n   * **Syntax**: `fill | contain | cover | none | scale-down`\n   *\n   * **Initial value**: `fill`\n   *\n   * @deprecated\n   */\n  "-o-object-fit"?: Property.ObjectFit | undefined;\n  /**\n   * The **`object-position`** CSS property specifies the alignment of the selected replaced element\'s contents within the element\'s box. Areas of the box which aren\'t covered by the replaced element\'s object will show the element\'s background.\n   *\n   * **Syntax**: `<position>`\n   *\n   * **Initial value**: `50% 50%`\n   *\n   * @deprecated\n   */\n  "-o-object-position"?: Property.ObjectPosition<TLength> | undefined;\n  /**\n   * The **`tab-size`** CSS property is used to customize the width of tab characters (U+0009).\n   *\n   * **Syntax**: `<integer> | <length>`\n   *\n   * **Initial value**: `8`\n   *\n   * @deprecated\n   */\n  "-o-tab-size"?: Property.TabSize<TLength> | undefined;\n  /**\n   * The **`text-overflow`** CSS property sets how hidden overflow content is signaled to users. It can be clipped, display an ellipsis (\'`…`\'), or display a custom string.\n   *\n   * **Syntax**: `[ clip | ellipsis | <string> ]{1,2}`\n   *\n   * **Initial value**: `clip`\n   *\n   * @deprecated\n   */\n  "-o-text-overflow"?: Property.TextOverflow | undefined;\n  /**\n   * The **`transform`** CSS property lets you rotate, scale, skew, or translate an element. It modifies the coordinate space of the CSS visual formatting model.\n   *\n   * **Syntax**: `none | <transform-list>`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  "-o-transform"?: Property.Transform | undefined;\n  /**\n   * The **`transform-origin`** CSS property sets the origin for an element\'s transformations.\n   *\n   * **Syntax**: `[ <length-percentage> | left | center | right | top | bottom ] | [ [ <length-percentage> | left | center | right ] && [ <length-percentage> | top | center | bottom ] ] <length>?`\n   *\n   * **Initial value**: `50% 50% 0`\n   *\n   * @deprecated\n   */\n  "-o-transform-origin"?: Property.TransformOrigin<TLength> | undefined;\n  /**\n   * The **`transition`** CSS property is a shorthand property for `transition-property`, `transition-duration`, `transition-timing-function`, and `transition-delay`.\n   *\n   * **Syntax**: `<single-transition>#`\n   *\n   * @deprecated\n   */\n  "-o-transition"?: Property.Transition<TTime> | undefined;\n  /**\n   * The **`transition-delay`** CSS property specifies the duration to wait before starting a property\'s transition effect when its value changes.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   *\n   * @deprecated\n   */\n  "-o-transition-delay"?: Property.TransitionDelay<TTime> | undefined;\n  /**\n   * The **`transition-duration`** CSS property sets the length of time a transition animation should take to complete. By default, the value is `0s`, meaning that no animation will occur.\n   *\n   * **Syntax**: `<time>#`\n   *\n   * **Initial value**: `0s`\n   *\n   * @deprecated\n   */\n  "-o-transition-duration"?: Property.TransitionDuration<TTime> | undefined;\n  /**\n   * The **`transition-property`** CSS property sets the CSS properties to which a transition effect should be applied.\n   *\n   * **Syntax**: `none | <single-transition-property>#`\n   *\n   * **Initial value**: all\n   *\n   * @deprecated\n   */\n  "-o-transition-property"?: Property.TransitionProperty | undefined;\n  /**\n   * The **`transition-timing-function`** CSS property sets how intermediate values are calculated for CSS properties being affected by a transition effect.\n   *\n   * **Syntax**: `<easing-function>#`\n   *\n   * **Initial value**: `ease`\n   *\n   * @deprecated\n   */\n  "-o-transition-timing-function"?: Property.TransitionTimingFunction | undefined;\n  /**\n   * The **`box-align`** CSS property specifies how an element aligns its contents across its layout in a perpendicular direction. The effect of the property is only visible if there is extra space in the box.\n   *\n   * **Syntax**: `start | center | end | baseline | stretch`\n   *\n   * **Initial value**: `stretch`\n   *\n   * @deprecated\n   */\n  "-webkit-box-align"?: Property.BoxAlign | undefined;\n  /**\n   * The **`box-direction`** CSS property specifies whether a box lays out its contents normally (from the top or left edge), or in reverse (from the bottom or right edge).\n   *\n   * **Syntax**: `normal | reverse | inherit`\n   *\n   * **Initial value**: `normal`\n   *\n   * @deprecated\n   */\n  "-webkit-box-direction"?: Property.BoxDirection | undefined;\n  /**\n   * The **`-moz-box-flex`** and **`-webkit-box-flex`** CSS properties specify how a `-moz-box` or `-webkit-box` grows to fill the box that contains it, in the direction of the containing box\'s layout.\n   *\n   * **Syntax**: `<number>`\n   *\n   * **Initial value**: `0`\n   *\n   * @deprecated\n   */\n  "-webkit-box-flex"?: Property.BoxFlex | undefined;\n  /**\n   * The **`box-flex-group`** CSS property assigns the flexbox\'s child elements to a flex group.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  "-webkit-box-flex-group"?: Property.BoxFlexGroup | undefined;\n  /**\n   * The **`box-lines`** CSS property determines whether the box may have a single or multiple lines (rows for horizontally oriented boxes, columns for vertically oriented boxes).\n   *\n   * **Syntax**: `single | multiple`\n   *\n   * **Initial value**: `single`\n   *\n   * @deprecated\n   */\n  "-webkit-box-lines"?: Property.BoxLines | undefined;\n  /**\n   * The **`box-ordinal-group`** CSS property assigns the flexbox\'s child elements to an ordinal group.\n   *\n   * **Syntax**: `<integer>`\n   *\n   * **Initial value**: `1`\n   *\n   * @deprecated\n   */\n  "-webkit-box-ordinal-group"?: Property.BoxOrdinalGroup | undefined;\n  /**\n   * The **`box-orient`** CSS property sets whether an element lays out its contents horizontally or vertically.\n   *\n   * **Syntax**: `horizontal | vertical | inline-axis | block-axis | inherit`\n   *\n   * **Initial value**: `inline-axis` (`horizontal` in XUL)\n   *\n   * @deprecated\n   */\n  "-webkit-box-orient"?: Property.BoxOrient | undefined;\n  /**\n   * The **`-moz-box-pack`** and **`-webkit-box-pack`** CSS properties specify how a `-moz-box` or `-webkit-box` packs its contents in the direction of its layout. The effect of this is only visible if there is extra space in the box.\n   *\n   * **Syntax**: `start | center | end | justify`\n   *\n   * **Initial value**: `start`\n   *\n   * @deprecated\n   */\n  "-webkit-box-pack"?: Property.BoxPack | undefined;\n  /**\n   * The **`scroll-snap-points-x`** CSS property defines the horizontal positioning of snap points within the content of the scroll container they are applied to.\n   *\n   * **Syntax**: `none | repeat( <length-percentage> )`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  "-webkit-scroll-snap-points-x"?: Property.ScrollSnapPointsX | undefined;\n  /**\n   * The **`scroll-snap-points-y`** CSS property defines the vertical positioning of snap points within the content of the scroll container they are applied to.\n   *\n   * **Syntax**: `none | repeat( <length-percentage> )`\n   *\n   * **Initial value**: `none`\n   *\n   * @deprecated\n   */\n  "-webkit-scroll-snap-points-y"?: Property.ScrollSnapPointsY | undefined;\n}\n\nexport interface SvgPropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}> {\n  "alignment-baseline"?: Property.AlignmentBaseline | undefined;\n  "baseline-shift"?: Property.BaselineShift<TLength> | undefined;\n  clip?: Property.Clip | undefined;\n  "clip-path"?: Property.ClipPath | undefined;\n  "clip-rule"?: Property.ClipRule | undefined;\n  color?: Property.Color | undefined;\n  "color-interpolation"?: Property.ColorInterpolation | undefined;\n  "color-rendering"?: Property.ColorRendering | undefined;\n  cursor?: Property.Cursor | undefined;\n  direction?: Property.Direction | undefined;\n  display?: Property.Display | undefined;\n  "dominant-baseline"?: Property.DominantBaseline | undefined;\n  fill?: Property.Fill | undefined;\n  "fill-opacity"?: Property.FillOpacity | undefined;\n  "fill-rule"?: Property.FillRule | undefined;\n  filter?: Property.Filter | undefined;\n  "flood-color"?: Property.FloodColor | undefined;\n  "flood-opacity"?: Property.FloodOpacity | undefined;\n  font?: Property.Font | undefined;\n  "font-family"?: Property.FontFamily | undefined;\n  "font-size"?: Property.FontSize<TLength> | undefined;\n  "font-size-adjust"?: Property.FontSizeAdjust | undefined;\n  "font-stretch"?: Property.FontStretch | undefined;\n  "font-style"?: Property.FontStyle | undefined;\n  "font-variant"?: Property.FontVariant | undefined;\n  "font-weight"?: Property.FontWeight | undefined;\n  "glyph-orientation-vertical"?: Property.GlyphOrientationVertical | undefined;\n  "image-rendering"?: Property.ImageRendering | undefined;\n  "letter-spacing"?: Property.LetterSpacing<TLength> | undefined;\n  "lighting-color"?: Property.LightingColor | undefined;\n  "line-height"?: Property.LineHeight<TLength> | undefined;\n  marker?: Property.Marker | undefined;\n  "marker-end"?: Property.MarkerEnd | undefined;\n  "marker-mid"?: Property.MarkerMid | undefined;\n  "marker-start"?: Property.MarkerStart | undefined;\n  mask?: Property.Mask<TLength> | undefined;\n  opacity?: Property.Opacity | undefined;\n  overflow?: Property.Overflow | undefined;\n  "paint-order"?: Property.PaintOrder | undefined;\n  "pointer-events"?: Property.PointerEvents | undefined;\n  "shape-rendering"?: Property.ShapeRendering | undefined;\n  "stop-color"?: Property.StopColor | undefined;\n  "stop-opacity"?: Property.StopOpacity | undefined;\n  stroke?: Property.Stroke | undefined;\n  "stroke-dasharray"?: Property.StrokeDasharray<TLength> | undefined;\n  "stroke-dashoffset"?: Property.StrokeDashoffset<TLength> | undefined;\n  "stroke-linecap"?: Property.StrokeLinecap | undefined;\n  "stroke-linejoin"?: Property.StrokeLinejoin | undefined;\n  "stroke-miterlimit"?: Property.StrokeMiterlimit | undefined;\n  "stroke-opacity"?: Property.StrokeOpacity | undefined;\n  "stroke-width"?: Property.StrokeWidth<TLength> | undefined;\n  "text-anchor"?: Property.TextAnchor | undefined;\n  "text-decoration"?: Property.TextDecoration<TLength> | undefined;\n  "text-rendering"?: Property.TextRendering | undefined;\n  "unicode-bidi"?: Property.UnicodeBidi | undefined;\n  "vector-effect"?: Property.VectorEffect | undefined;\n  visibility?: Property.Visibility | undefined;\n  "white-space"?: Property.WhiteSpace | undefined;\n  "word-spacing"?: Property.WordSpacing<TLength> | undefined;\n  "writing-mode"?: Property.WritingMode | undefined;\n}\n\nexport interface PropertiesHyphen<TLength = (string & {}) | 0, TTime = string & {}>\n  extends StandardPropertiesHyphen<TLength, TTime>,\n    VendorPropertiesHyphen<TLength, TTime>,\n    ObsoletePropertiesHyphen<TLength, TTime>,\n    SvgPropertiesHyphen<TLength, TTime> {}\n\nexport type StandardLonghandPropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<StandardLonghandProperties<TLength, TTime>>;\n\nexport type StandardShorthandPropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<StandardShorthandProperties<TLength, TTime>>;\n\nexport interface StandardPropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}>\n  extends StandardLonghandPropertiesFallback<TLength, TTime>,\n    StandardShorthandPropertiesFallback<TLength, TTime> {}\n\nexport type VendorLonghandPropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<VendorLonghandProperties<TLength, TTime>>;\n\nexport type VendorShorthandPropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<VendorShorthandProperties<TLength, TTime>>;\n\nexport interface VendorPropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}>\n  extends VendorLonghandPropertiesFallback<TLength, TTime>,\n    VendorShorthandPropertiesFallback<TLength, TTime> {}\n\nexport type ObsoletePropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<ObsoleteProperties<TLength, TTime>>;\n\nexport type SvgPropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<SvgProperties<TLength, TTime>>;\n\nexport interface PropertiesFallback<TLength = (string & {}) | 0, TTime = string & {}>\n  extends StandardPropertiesFallback<TLength, TTime>,\n    VendorPropertiesFallback<TLength, TTime>,\n    ObsoletePropertiesFallback<TLength, TTime>,\n    SvgPropertiesFallback<TLength, TTime> {}\n\nexport type StandardLonghandPropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<StandardLonghandPropertiesHyphen<TLength, TTime>>;\n\nexport type StandardShorthandPropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<StandardShorthandPropertiesHyphen<TLength, TTime>>;\n\nexport interface StandardPropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}>\n  extends StandardLonghandPropertiesHyphenFallback<TLength, TTime>,\n    StandardShorthandPropertiesHyphenFallback<TLength, TTime> {}\n\nexport type VendorLonghandPropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<VendorLonghandPropertiesHyphen<TLength, TTime>>;\n\nexport type VendorShorthandPropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<VendorShorthandPropertiesHyphen<TLength, TTime>>;\n\nexport interface VendorPropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}>\n  extends VendorLonghandPropertiesHyphenFallback<TLength, TTime>,\n    VendorShorthandPropertiesHyphenFallback<TLength, TTime> {}\n\nexport type ObsoletePropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<ObsoletePropertiesHyphen<TLength, TTime>>;\n\nexport type SvgPropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<SvgPropertiesHyphen<TLength, TTime>>;\n\nexport interface PropertiesHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}>\n  extends StandardPropertiesHyphenFallback<TLength, TTime>,\n    VendorPropertiesHyphenFallback<TLength, TTime>,\n    ObsoletePropertiesHyphenFallback<TLength, TTime>,\n    SvgPropertiesHyphenFallback<TLength, TTime> {}\n\nexport type AtRules =\n  | "@charset"\n  | "@counter-style"\n  | "@document"\n  | "@font-face"\n  | "@font-feature-values"\n  | "@import"\n  | "@keyframes"\n  | "@layer"\n  | "@media"\n  | "@namespace"\n  | "@page"\n  | "@property"\n  | "@scroll-timeline"\n  | "@supports"\n  | "@viewport";\n\nexport type AdvancedPseudos =\n  | ":-moz-any()"\n  | ":-moz-dir"\n  | ":-webkit-any()"\n  | "::cue"\n  | "::cue-region"\n  | "::part"\n  | "::slotted"\n  | ":dir"\n  | ":has"\n  | ":host"\n  | ":host-context"\n  | ":is"\n  | ":lang"\n  | ":matches()"\n  | ":not"\n  | ":nth-child"\n  | ":nth-last-child"\n  | ":nth-last-of-type"\n  | ":nth-of-type"\n  | ":where";\n\nexport type SimplePseudos =\n  | ":-khtml-any-link"\n  | ":-moz-any-link"\n  | ":-moz-focusring"\n  | ":-moz-full-screen"\n  | ":-moz-placeholder"\n  | ":-moz-read-only"\n  | ":-moz-read-write"\n  | ":-moz-ui-invalid"\n  | ":-moz-ui-valid"\n  | ":-ms-fullscreen"\n  | ":-ms-input-placeholder"\n  | ":-webkit-any-link"\n  | ":-webkit-full-screen"\n  | "::-moz-placeholder"\n  | "::-moz-progress-bar"\n  | "::-moz-range-progress"\n  | "::-moz-range-thumb"\n  | "::-moz-range-track"\n  | "::-moz-selection"\n  | "::-ms-backdrop"\n  | "::-ms-browse"\n  | "::-ms-check"\n  | "::-ms-clear"\n  | "::-ms-fill"\n  | "::-ms-fill-lower"\n  | "::-ms-fill-upper"\n  | "::-ms-input-placeholder"\n  | "::-ms-reveal"\n  | "::-ms-thumb"\n  | "::-ms-ticks-after"\n  | "::-ms-ticks-before"\n  | "::-ms-tooltip"\n  | "::-ms-track"\n  | "::-ms-value"\n  | "::-webkit-backdrop"\n  | "::-webkit-input-placeholder"\n  | "::-webkit-progress-bar"\n  | "::-webkit-progress-inner-value"\n  | "::-webkit-progress-value"\n  | "::-webkit-slider-runnable-track"\n  | "::-webkit-slider-thumb"\n  | "::after"\n  | "::backdrop"\n  | "::before"\n  | "::cue"\n  | "::cue-region"\n  | "::first-letter"\n  | "::first-line"\n  | "::grammar-error"\n  | "::marker"\n  | "::placeholder"\n  | "::selection"\n  | "::spelling-error"\n  | "::target-text"\n  | ":active"\n  | ":after"\n  | ":any-link"\n  | ":before"\n  | ":blank"\n  | ":checked"\n  | ":current"\n  | ":default"\n  | ":defined"\n  | ":disabled"\n  | ":empty"\n  | ":enabled"\n  | ":first"\n  | ":first-child"\n  | ":first-letter"\n  | ":first-line"\n  | ":first-of-type"\n  | ":focus"\n  | ":focus-visible"\n  | ":focus-within"\n  | ":fullscreen"\n  | ":future"\n  | ":hover"\n  | ":in-range"\n  | ":indeterminate"\n  | ":invalid"\n  | ":last-child"\n  | ":last-of-type"\n  | ":left"\n  | ":link"\n  | ":local-link"\n  | ":nth-col"\n  | ":nth-last-col"\n  | ":only-child"\n  | ":only-of-type"\n  | ":optional"\n  | ":out-of-range"\n  | ":past"\n  | ":paused"\n  | ":picture-in-picture"\n  | ":placeholder-shown"\n  | ":read-only"\n  | ":read-write"\n  | ":required"\n  | ":right"\n  | ":root"\n  | ":scope"\n  | ":target"\n  | ":target-within"\n  | ":user-invalid"\n  | ":user-valid"\n  | ":valid"\n  | ":visited";\n\nexport type Pseudos = AdvancedPseudos | SimplePseudos;\n\nexport type HtmlAttributes =\n  | "[abbr]"\n  | "[accept-charset]"\n  | "[accept]"\n  | "[accesskey]"\n  | "[action]"\n  | "[align]"\n  | "[alink]"\n  | "[allow]"\n  | "[allowfullscreen]"\n  | "[allowpaymentrequest]"\n  | "[alt]"\n  | "[archive]"\n  | "[async]"\n  | "[autobuffer]"\n  | "[autocapitalize]"\n  | "[autocomplete]"\n  | "[autofocus]"\n  | "[autoplay]"\n  | "[axis]"\n  | "[background]"\n  | "[behavior]"\n  | "[bgcolor]"\n  | "[border]"\n  | "[bottommargin]"\n  | "[buffered]"\n  | "[cellpadding]"\n  | "[cellspacing]"\n  | "[char]"\n  | "[charoff]"\n  | "[charset]"\n  | "[checked]"\n  | "[cite]"\n  | "[class]"\n  | "[classid]"\n  | "[clear]"\n  | "[code]"\n  | "[codebase]"\n  | "[codetype]"\n  | "[color]"\n  | "[cols]"\n  | "[colspan]"\n  | "[command]"\n  | "[compact]"\n  | "[content]"\n  | "[contenteditable]"\n  | "[contextmenu]"\n  | "[controls]"\n  | "[coords]"\n  | "[crossorigin]"\n  | "[data]"\n  | "[datafld]"\n  | "[datasrc]"\n  | "[datetime]"\n  | "[declare]"\n  | "[decoding]"\n  | "[default]"\n  | "[defer]"\n  | "[dir]"\n  | "[direction]"\n  | "[dirname]"\n  | "[disabled]"\n  | "[download]"\n  | "[draggable]"\n  | "[enctype]"\n  | "[enterkeyhint]"\n  | "[exportparts]"\n  | "[face]"\n  | "[for]"\n  | "[form]"\n  | "[formaction]"\n  | "[formenctype]"\n  | "[formmethod]"\n  | "[formnovalidate]"\n  | "[formtarget]"\n  | "[frame]"\n  | "[frameborder]"\n  | "[headers]"\n  | "[height]"\n  | "[hidden]"\n  | "[high]"\n  | "[href]"\n  | "[hreflang]"\n  | "[hspace]"\n  | "[http-equiv]"\n  | "[icon]"\n  | "[id]"\n  | "[imagesizes]"\n  | "[imagesrcset]"\n  | "[inputmode]"\n  | "[integrity]"\n  | "[intrinsicsize]"\n  | "[is]"\n  | "[ismap]"\n  | "[itemid]"\n  | "[itemprop]"\n  | "[itemref]"\n  | "[itemscope]"\n  | "[itemtype]"\n  | "[kind]"\n  | "[label]"\n  | "[lang]"\n  | "[language]"\n  | "[leftmargin]"\n  | "[link]"\n  | "[loading]"\n  | "[longdesc]"\n  | "[loop]"\n  | "[low]"\n  | "[manifest]"\n  | "[marginheight]"\n  | "[marginwidth]"\n  | "[max]"\n  | "[maxlength]"\n  | "[mayscript]"\n  | "[media]"\n  | "[method]"\n  | "[methods]"\n  | "[min]"\n  | "[minlength]"\n  | "[moz-opaque]"\n  | "[mozallowfullscreen]"\n  | "[mozcurrentsampleoffset]"\n  | "[msallowfullscreen]"\n  | "[multiple]"\n  | "[muted]"\n  | "[name]"\n  | "[nohref]"\n  | "[nomodule]"\n  | "[nonce]"\n  | "[noresize]"\n  | "[noshade]"\n  | "[novalidate]"\n  | "[nowrap]"\n  | "[object]"\n  | "[onafterprint]"\n  | "[onbeforeprint]"\n  | "[onbeforeunload]"\n  | "[onblur]"\n  | "[onerror]"\n  | "[onfocus]"\n  | "[onhashchange]"\n  | "[onlanguagechange]"\n  | "[onload]"\n  | "[onmessage]"\n  | "[onoffline]"\n  | "[ononline]"\n  | "[onpopstate]"\n  | "[onredo]"\n  | "[onresize]"\n  | "[onstorage]"\n  | "[onundo]"\n  | "[onunload]"\n  | "[open]"\n  | "[optimum]"\n  | "[part]"\n  | "[ping]"\n  | "[placeholder]"\n  | "[played]"\n  | "[poster]"\n  | "[prefetch]"\n  | "[preload]"\n  | "[profile]"\n  | "[radiogroup]"\n  | "[readonly]"\n  | "[referrerpolicy]"\n  | "[rel]"\n  | "[required]"\n  | "[rev]"\n  | "[reversed]"\n  | "[rightmargin]"\n  | "[rows]"\n  | "[rowspan]"\n  | "[rules]"\n  | "[sandbox-allow-downloads]"\n  | "[sandbox-allow-modals]"\n  | "[sandbox-allow-popups-to-escape-sandbox]"\n  | "[sandbox-allow-popups]"\n  | "[sandbox-allow-presentation]"\n  | "[sandbox-allow-same-origin]"\n  | "[sandbox-allow-storage-access-by-user-activation]"\n  | "[sandbox-allow-top-navigation-by-user-activation]"\n  | "[sandbox]"\n  | "[scope]"\n  | "[scoped]"\n  | "[scrollamount]"\n  | "[scrolldelay]"\n  | "[scrolling]"\n  | "[selected]"\n  | "[shadowroot]"\n  | "[shape]"\n  | "[size]"\n  | "[sizes]"\n  | "[slot]"\n  | "[span]"\n  | "[spellcheck]"\n  | "[src]"\n  | "[srcdoc]"\n  | "[srclang]"\n  | "[srcset]"\n  | "[standby]"\n  | "[start]"\n  | "[style]"\n  | "[summary]"\n  | "[tabindex]"\n  | "[target]"\n  | "[text]"\n  | "[title]"\n  | "[topmargin]"\n  | "[translate]"\n  | "[truespeed]"\n  | "[type]"\n  | "[usemap]"\n  | "[valign]"\n  | "[value]"\n  | "[valuetype]"\n  | "[version]"\n  | "[vlink]"\n  | "[volume]"\n  | "[vspace]"\n  | "[webkitallowfullscreen]"\n  | "[width]"\n  | "[wrap]"\n  | "[xmlns]";\n\nexport type SvgAttributes =\n  | "[accent-height]"\n  | "[alignment-baseline]"\n  | "[allowReorder]"\n  | "[alphabetic]"\n  | "[animation]"\n  | "[arabic-form]"\n  | "[ascent]"\n  | "[attributeName]"\n  | "[attributeType]"\n  | "[azimuth]"\n  | "[baseFrequency]"\n  | "[baseProfile]"\n  | "[baseline-shift]"\n  | "[bbox]"\n  | "[bias]"\n  | "[by]"\n  | "[calcMode]"\n  | "[cap-height]"\n  | "[class]"\n  | "[clip-path]"\n  | "[clip-rule]"\n  | "[clipPathUnits]"\n  | "[clip]"\n  | "[color-interpolation-filters]"\n  | "[color-interpolation]"\n  | "[color-profile]"\n  | "[color-rendering]"\n  | "[color]"\n  | "[contentScriptType]"\n  | "[contentStyleType]"\n  | "[cursor]"\n  | "[cx]"\n  | "[cy]"\n  | "[d]"\n  | "[descent]"\n  | "[diffuseConstant]"\n  | "[direction]"\n  | "[display]"\n  | "[divisor]"\n  | "[document]"\n  | "[dominant-baseline]"\n  | "[download]"\n  | "[dur]"\n  | "[dx]"\n  | "[dy]"\n  | "[edgeMode]"\n  | "[elevation]"\n  | "[enable-background]"\n  | "[fill-opacity]"\n  | "[fill-rule]"\n  | "[fill]"\n  | "[filterRes]"\n  | "[filterUnits]"\n  | "[filter]"\n  | "[flood-color]"\n  | "[flood-opacity]"\n  | "[font-family]"\n  | "[font-size-adjust]"\n  | "[font-size]"\n  | "[font-stretch]"\n  | "[font-style]"\n  | "[font-variant]"\n  | "[font-weight]"\n  | "[format]"\n  | "[fr]"\n  | "[from]"\n  | "[fx]"\n  | "[fy]"\n  | "[g1]"\n  | "[g2]"\n  | "[global]"\n  | "[glyph-name]"\n  | "[glyph-orientation-horizontal]"\n  | "[glyph-orientation-vertical]"\n  | "[glyphRef]"\n  | "[gradientTransform]"\n  | "[gradientUnits]"\n  | "[graphical]"\n  | "[hanging]"\n  | "[hatchContentUnits]"\n  | "[hatchUnits]"\n  | "[height]"\n  | "[horiz-adv-x]"\n  | "[horiz-origin-x]"\n  | "[horiz-origin-y]"\n  | "[href]"\n  | "[hreflang]"\n  | "[id]"\n  | "[ideographic]"\n  | "[image-rendering]"\n  | "[in2]"\n  | "[in]"\n  | "[k1]"\n  | "[k2]"\n  | "[k3]"\n  | "[k4]"\n  | "[k]"\n  | "[kernelMatrix]"\n  | "[kernelUnitLength]"\n  | "[kerning]"\n  | "[keyPoints]"\n  | "[lang]"\n  | "[lengthAdjust]"\n  | "[letter-spacing]"\n  | "[lighting-color]"\n  | "[limitingConeAngle]"\n  | "[marker-end]"\n  | "[marker-mid]"\n  | "[marker-start]"\n  | "[markerHeight]"\n  | "[markerUnits]"\n  | "[markerWidth]"\n  | "[maskContentUnits]"\n  | "[maskUnits]"\n  | "[mask]"\n  | "[mathematical]"\n  | "[media]"\n  | "[mode]"\n  | "[name]"\n  | "[numOctaves]"\n  | "[offset]"\n  | "[opacity]"\n  | "[operator]"\n  | "[order]"\n  | "[orient]"\n  | "[orientation]"\n  | "[origin]"\n  | "[overflow]"\n  | "[overline-position]"\n  | "[overline-thickness]"\n  | "[paint-order]"\n  | "[panose-1]"\n  | "[path]"\n  | "[patternContentUnits]"\n  | "[patternTransform]"\n  | "[patternUnits]"\n  | "[ping]"\n  | "[pitch]"\n  | "[pointer-events]"\n  | "[pointsAtX]"\n  | "[pointsAtY]"\n  | "[pointsAtZ]"\n  | "[points]"\n  | "[preserveAlpha]"\n  | "[preserveAspectRatio]"\n  | "[primitiveUnits]"\n  | "[r]"\n  | "[radius]"\n  | "[refX]"\n  | "[refY]"\n  | "[referrerpolicy]"\n  | "[rel]"\n  | "[repeatCount]"\n  | "[requiredExtensions]"\n  | "[requiredFeatures]"\n  | "[rotate]"\n  | "[rx]"\n  | "[ry]"\n  | "[scale]"\n  | "[seed]"\n  | "[shape-rendering]"\n  | "[side]"\n  | "[slope]"\n  | "[solid-color]"\n  | "[solid-opacity]"\n  | "[spacing]"\n  | "[specularConstant]"\n  | "[specularExponent]"\n  | "[spreadMethod]"\n  | "[startOffset]"\n  | "[stdDeviation]"\n  | "[stemh]"\n  | "[stemv]"\n  | "[stitchTiles]"\n  | "[stop-color]"\n  | "[stop-opacity]"\n  | "[strikethrough-position]"\n  | "[strikethrough-thickness]"\n  | "[string]"\n  | "[stroke-dasharray]"\n  | "[stroke-dashoffset]"\n  | "[stroke-linecap]"\n  | "[stroke-linejoin]"\n  | "[stroke-miterlimit]"\n  | "[stroke-opacity]"\n  | "[stroke-width]"\n  | "[stroke]"\n  | "[style]"\n  | "[surfaceScale]"\n  | "[systemLanguage]"\n  | "[tabindex]"\n  | "[targetX]"\n  | "[targetY]"\n  | "[target]"\n  | "[text-anchor]"\n  | "[text-decoration]"\n  | "[text-overflow]"\n  | "[text-rendering]"\n  | "[textLength]"\n  | "[title]"\n  | "[to]"\n  | "[transform-origin]"\n  | "[transform]"\n  | "[type]"\n  | "[u1]"\n  | "[u2]"\n  | "[underline-position]"\n  | "[underline-thickness]"\n  | "[unicode-bidi]"\n  | "[unicode-range]"\n  | "[unicode]"\n  | "[units-per-em]"\n  | "[v-alphabetic]"\n  | "[v-hanging]"\n  | "[v-ideographic]"\n  | "[v-mathematical]"\n  | "[values]"\n  | "[vector-effect]"\n  | "[version]"\n  | "[vert-adv-y]"\n  | "[vert-origin-x]"\n  | "[vert-origin-y]"\n  | "[viewBox]"\n  | "[viewTarget]"\n  | "[visibility]"\n  | "[white-space]"\n  | "[width]"\n  | "[widths]"\n  | "[word-spacing]"\n  | "[writing-mode]"\n  | "[x-height]"\n  | "[x1]"\n  | "[x2]"\n  | "[xChannelSelector]"\n  | "[x]"\n  | "[y1]"\n  | "[y2]"\n  | "[yChannelSelector]"\n  | "[y]"\n  | "[z]"\n  | "[zoomAndPan]";\n\nexport type Globals = "-moz-initial" | "inherit" | "initial" | "revert" | "unset";\n\nexport namespace Property {\n  export type AccentColor = Globals | DataType.Color | "auto";\n\n  export type AlignContent = Globals | DataType.ContentDistribution | DataType.ContentPosition | "baseline" | "normal" | (string & {});\n\n  export type AlignItems = Globals | DataType.SelfPosition | "baseline" | "normal" | "stretch" | (string & {});\n\n  export type AlignSelf = Globals | DataType.SelfPosition | "auto" | "baseline" | "normal" | "stretch" | (string & {});\n\n  export type AlignTracks = Globals | DataType.ContentDistribution | DataType.ContentPosition | "baseline" | "normal" | (string & {});\n\n  export type All = Globals;\n\n  export type Animation<TTime = string & {}> = Globals | DataType.SingleAnimation<TTime> | (string & {});\n\n  export type AnimationDelay<TTime = string & {}> = Globals | TTime | (string & {});\n\n  export type AnimationDirection = Globals | DataType.SingleAnimationDirection | (string & {});\n\n  export type AnimationDuration<TTime = string & {}> = Globals | TTime | (string & {});\n\n  export type AnimationFillMode = Globals | DataType.SingleAnimationFillMode | (string & {});\n\n  export type AnimationIterationCount = Globals | "infinite" | (string & {}) | (number & {});\n\n  export type AnimationName = Globals | "none" | (string & {});\n\n  export type AnimationPlayState = Globals | "paused" | "running" | (string & {});\n\n  export type AnimationTimeline = Globals | DataType.SingleAnimationTimeline | (string & {});\n\n  export type AnimationTimingFunction = Globals | DataType.EasingFunction | (string & {});\n\n  export type Appearance = Globals | DataType.CompatAuto | "auto" | "menulist-button" | "none" | "textfield";\n\n  export type AspectRatio = Globals | "auto" | (string & {});\n\n  export type Azimuth =\n    | Globals\n    | "behind"\n    | "center"\n    | "center-left"\n    | "center-right"\n    | "far-left"\n    | "far-right"\n    | "left"\n    | "left-side"\n    | "leftwards"\n    | "right"\n    | "right-side"\n    | "rightwards"\n    | (string & {});\n\n  export type BackdropFilter = Globals | "none" | (string & {});\n\n  export type BackfaceVisibility = Globals | "hidden" | "visible";\n\n  export type Background<TLength = (string & {}) | 0> = Globals | DataType.FinalBgLayer<TLength> | (string & {});\n\n  export type BackgroundAttachment = Globals | DataType.Attachment | (string & {});\n\n  export type BackgroundBlendMode = Globals | DataType.BlendMode | (string & {});\n\n  export type BackgroundClip = Globals | DataType.Box | (string & {});\n\n  export type BackgroundColor = Globals | DataType.Color;\n\n  export type BackgroundImage = Globals | "none" | (string & {});\n\n  export type BackgroundOrigin = Globals | DataType.Box | (string & {});\n\n  export type BackgroundPosition<TLength = (string & {}) | 0> = Globals | DataType.BgPosition<TLength> | (string & {});\n\n  export type BackgroundPositionX<TLength = (string & {}) | 0> = Globals | TLength | "center" | "left" | "right" | "x-end" | "x-start" | (string & {});\n\n  export type BackgroundPositionY<TLength = (string & {}) | 0> = Globals | TLength | "bottom" | "center" | "top" | "y-end" | "y-start" | (string & {});\n\n  export type BackgroundRepeat = Globals | DataType.RepeatStyle | (string & {});\n\n  export type BackgroundSize<TLength = (string & {}) | 0> = Globals | DataType.BgSize<TLength> | (string & {});\n\n  export type BlockOverflow = Globals | "clip" | "ellipsis" | (string & {});\n\n  export type BlockSize<TLength = (string & {}) | 0> =\n    | Globals\n    | TLength\n    | "-moz-fit-content"\n    | "-moz-max-content"\n    | "-moz-min-content"\n    | "-webkit-fill-available"\n    | "auto"\n    | "fit-content"\n    | "max-content"\n    | "min-content"\n    | (string & {});\n\n  export type Border<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});\n\n  export type BorderBlock<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});\n\n  export type BorderBlockColor = Globals | DataType.Color | (string & {});\n\n  export type BorderBlockEnd<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});\n\n  export type BorderBlockEndColor = Globals | DataType.Color;\n\n  export type BorderBlockEndStyle = Globals | DataType.LineStyle;\n\n  export type BorderBlockEndWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;\n\n  export type BorderBlockStart<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});\n\n  export type BorderBlockStartColor = Globals | DataType.Color;\n\n  export type BorderBlockStartStyle = Globals | DataType.LineStyle;\n\n  export type BorderBlockStartWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;\n\n  export type BorderBlockStyle = Globals | DataType.LineStyle;\n\n  export type BorderBlockWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;\n\n  export type BorderBottom<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});\n\n  export type BorderBottomColor = Globals | DataType.Color;\n\n  export type BorderBottomLeftRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type BorderBottomRightRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type BorderBottomStyle = Globals | DataType.LineStyle;\n\n  export type BorderBottomWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;\n\n  export type BorderCollapse = Globals | "collapse" | "separate";\n\n  export type BorderColor = Globals | DataType.Color | (string & {});\n\n  export type BorderEndEndRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type BorderEndStartRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type BorderImage = Globals | "none" | "repeat" | "round" | "space" | "stretch" | (string & {}) | (number & {});\n\n  export type BorderImageOutset<TLength = (string & {}) | 0> = Globals | TLength | (string & {}) | (number & {});\n\n  export type BorderImageRepeat = Globals | "repeat" | "round" | "space" | "stretch" | (string & {});\n\n  export type BorderImageSlice = Globals | (string & {}) | (number & {});\n\n  export type BorderImageSource = Globals | "none" | (string & {});\n\n  export type BorderImageWidth<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {}) | (number & {});\n\n  export type BorderInline<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});\n\n  export type BorderInlineColor = Globals | DataType.Color | (string & {});\n\n  export type BorderInlineEnd<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});\n\n  export type BorderInlineEndColor = Globals | DataType.Color;\n\n  export type BorderInlineEndStyle = Globals | DataType.LineStyle;\n\n  export type BorderInlineEndWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;\n\n  export type BorderInlineStart<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});\n\n  export type BorderInlineStartColor = Globals | DataType.Color;\n\n  export type BorderInlineStartStyle = Globals | DataType.LineStyle;\n\n  export type BorderInlineStartWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;\n\n  export type BorderInlineStyle = Globals | DataType.LineStyle;\n\n  export type BorderInlineWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;\n\n  export type BorderLeft<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});\n\n  export type BorderLeftColor = Globals | DataType.Color;\n\n  export type BorderLeftStyle = Globals | DataType.LineStyle;\n\n  export type BorderLeftWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;\n\n  export type BorderRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type BorderRight<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});\n\n  export type BorderRightColor = Globals | DataType.Color;\n\n  export type BorderRightStyle = Globals | DataType.LineStyle;\n\n  export type BorderRightWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;\n\n  export type BorderSpacing<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type BorderStartEndRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type BorderStartStartRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type BorderStyle = Globals | DataType.LineStyle | (string & {});\n\n  export type BorderTop<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});\n\n  export type BorderTopColor = Globals | DataType.Color;\n\n  export type BorderTopLeftRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type BorderTopRightRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type BorderTopStyle = Globals | DataType.LineStyle;\n\n  export type BorderTopWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;\n\n  export type BorderWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | (string & {});\n\n  export type Bottom<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type BoxAlign = Globals | "baseline" | "center" | "end" | "start" | "stretch";\n\n  export type BoxDecorationBreak = Globals | "clone" | "slice";\n\n  export type BoxDirection = Globals | "inherit" | "normal" | "reverse";\n\n  export type BoxFlex = Globals | (number & {}) | (string & {});\n\n  export type BoxFlexGroup = Globals | (number & {}) | (string & {});\n\n  export type BoxLines = Globals | "multiple" | "single";\n\n  export type BoxOrdinalGroup = Globals | (number & {}) | (string & {});\n\n  export type BoxOrient = Globals | "block-axis" | "horizontal" | "inherit" | "inline-axis" | "vertical";\n\n  export type BoxPack = Globals | "center" | "end" | "justify" | "start";\n\n  export type BoxShadow = Globals | "none" | (string & {});\n\n  export type BoxSizing = Globals | "border-box" | "content-box";\n\n  export type BreakAfter =\n    | Globals\n    | "all"\n    | "always"\n    | "auto"\n    | "avoid"\n    | "avoid-column"\n    | "avoid-page"\n    | "avoid-region"\n    | "column"\n    | "left"\n    | "page"\n    | "recto"\n    | "region"\n    | "right"\n    | "verso";\n\n  export type BreakBefore =\n    | Globals\n    | "all"\n    | "always"\n    | "auto"\n    | "avoid"\n    | "avoid-column"\n    | "avoid-page"\n    | "avoid-region"\n    | "column"\n    | "left"\n    | "page"\n    | "recto"\n    | "region"\n    | "right"\n    | "verso";\n\n  export type BreakInside = Globals | "auto" | "avoid" | "avoid-column" | "avoid-page" | "avoid-region";\n\n  export type CaptionSide = Globals | "block-end" | "block-start" | "bottom" | "inline-end" | "inline-start" | "top";\n\n  export type CaretColor = Globals | DataType.Color | "auto";\n\n  export type Clear = Globals | "both" | "inline-end" | "inline-start" | "left" | "none" | "right";\n\n  export type Clip = Globals | "auto" | (string & {});\n\n  export type ClipPath = Globals | DataType.GeometryBox | "none" | (string & {});\n\n  export type Color = Globals | DataType.Color;\n\n  export type PrintColorAdjust = Globals | "economy" | "exact";\n\n  export type ColorScheme = Globals | "dark" | "light" | "normal" | (string & {});\n\n  export type ColumnCount = Globals | "auto" | (number & {}) | (string & {});\n\n  export type ColumnFill = Globals | "auto" | "balance" | "balance-all";\n\n  export type ColumnGap<TLength = (string & {}) | 0> = Globals | TLength | "normal" | (string & {});\n\n  export type ColumnRule<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});\n\n  export type ColumnRuleColor = Globals | DataType.Color;\n\n  export type ColumnRuleStyle = Globals | DataType.LineStyle | (string & {});\n\n  export type ColumnRuleWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | (string & {});\n\n  export type ColumnSpan = Globals | "all" | "none";\n\n  export type ColumnWidth<TLength = (string & {}) | 0> = Globals | TLength | "auto";\n\n  export type Columns<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {}) | (number & {});\n\n  export type Contain = Globals | "content" | "layout" | "none" | "paint" | "size" | "strict" | "style" | (string & {});\n\n  export type Content = Globals | DataType.ContentList | "none" | "normal" | (string & {});\n\n  export type ContentVisibility = Globals | "auto" | "hidden" | "visible";\n\n  export type CounterIncrement = Globals | "none" | (string & {});\n\n  export type CounterReset = Globals | "none" | (string & {});\n\n  export type CounterSet = Globals | "none" | (string & {});\n\n  export type Cursor =\n    | Globals\n    | "-moz-grab"\n    | "-webkit-grab"\n    | "alias"\n    | "all-scroll"\n    | "auto"\n    | "cell"\n    | "col-resize"\n    | "context-menu"\n    | "copy"\n    | "crosshair"\n    | "default"\n    | "e-resize"\n    | "ew-resize"\n    | "grab"\n    | "grabbing"\n    | "help"\n    | "move"\n    | "n-resize"\n    | "ne-resize"\n    | "nesw-resize"\n    | "no-drop"\n    | "none"\n    | "not-allowed"\n    | "ns-resize"\n    | "nw-resize"\n    | "nwse-resize"\n    | "pointer"\n    | "progress"\n    | "row-resize"\n    | "s-resize"\n    | "se-resize"\n    | "sw-resize"\n    | "text"\n    | "vertical-text"\n    | "w-resize"\n    | "wait"\n    | "zoom-in"\n    | "zoom-out"\n    | (string & {});\n\n  export type Direction = Globals | "ltr" | "rtl";\n\n  export type Display =\n    | Globals\n    | DataType.DisplayOutside\n    | DataType.DisplayInside\n    | DataType.DisplayInternal\n    | DataType.DisplayLegacy\n    | "contents"\n    | "list-item"\n    | "none"\n    | (string & {});\n\n  export type EmptyCells = Globals | "hide" | "show";\n\n  export type Filter = Globals | "none" | (string & {});\n\n  export type Flex<TLength = (string & {}) | 0> = Globals | TLength | "auto" | "content" | "fit-content" | "max-content" | "min-content" | "none" | (string & {}) | (number & {});\n\n  export type FlexBasis<TLength = (string & {}) | 0> =\n    | Globals\n    | TLength\n    | "-moz-fit-content"\n    | "-moz-max-content"\n    | "-moz-min-content"\n    | "-webkit-auto"\n    | "auto"\n    | "content"\n    | "fit-content"\n    | "max-content"\n    | "min-content"\n    | (string & {});\n\n  export type FlexDirection = Globals | "column" | "column-reverse" | "row" | "row-reverse";\n\n  export type FlexFlow = Globals | "column" | "column-reverse" | "nowrap" | "row" | "row-reverse" | "wrap" | "wrap-reverse" | (string & {});\n\n  export type FlexGrow = Globals | (number & {}) | (string & {});\n\n  export type FlexShrink = Globals | (number & {}) | (string & {});\n\n  export type FlexWrap = Globals | "nowrap" | "wrap" | "wrap-reverse";\n\n  export type Float = Globals | "inline-end" | "inline-start" | "left" | "none" | "right";\n\n  export type Font = Globals | "caption" | "icon" | "menu" | "message-box" | "small-caption" | "status-bar" | (string & {});\n\n  export type FontFamily = Globals | DataType.GenericFamily | (string & {});\n\n  export type FontFeatureSettings = Globals | "normal" | (string & {});\n\n  export type FontKerning = Globals | "auto" | "none" | "normal";\n\n  export type FontLanguageOverride = Globals | "normal" | (string & {});\n\n  export type FontOpticalSizing = Globals | "auto" | "none";\n\n  export type FontSize<TLength = (string & {}) | 0> = Globals | DataType.AbsoluteSize | TLength | "larger" | "smaller" | (string & {});\n\n  export type FontSizeAdjust = Globals | "from-font" | "none" | (string & {}) | (number & {});\n\n  export type FontSmooth<TLength = (string & {}) | 0> = Globals | DataType.AbsoluteSize | TLength | "always" | "auto" | "never";\n\n  export type FontStretch = Globals | DataType.FontStretchAbsolute;\n\n  export type FontStyle = Globals | "italic" | "normal" | "oblique" | (string & {});\n\n  export type FontSynthesis = Globals | "none" | "small-caps" | "style" | "weight" | (string & {});\n\n  export type FontVariant =\n    | Globals\n    | DataType.EastAsianVariantValues\n    | "all-petite-caps"\n    | "all-small-caps"\n    | "common-ligatures"\n    | "contextual"\n    | "diagonal-fractions"\n    | "discretionary-ligatures"\n    | "full-width"\n    | "historical-forms"\n    | "historical-ligatures"\n    | "lining-nums"\n    | "no-common-ligatures"\n    | "no-contextual"\n    | "no-discretionary-ligatures"\n    | "no-historical-ligatures"\n    | "none"\n    | "normal"\n    | "oldstyle-nums"\n    | "ordinal"\n    | "petite-caps"\n    | "proportional-nums"\n    | "proportional-width"\n    | "ruby"\n    | "slashed-zero"\n    | "small-caps"\n    | "stacked-fractions"\n    | "tabular-nums"\n    | "titling-caps"\n    | "unicase"\n    | (string & {});\n\n  export type FontVariantAlternates = Globals | "historical-forms" | "normal" | (string & {});\n\n  export type FontVariantCaps = Globals | "all-petite-caps" | "all-small-caps" | "normal" | "petite-caps" | "small-caps" | "titling-caps" | "unicase";\n\n  export type FontVariantEastAsian = Globals | DataType.EastAsianVariantValues | "full-width" | "normal" | "proportional-width" | "ruby" | (string & {});\n\n  export type FontVariantLigatures =\n    | Globals\n    | "common-ligatures"\n    | "contextual"\n    | "discretionary-ligatures"\n    | "historical-ligatures"\n    | "no-common-ligatures"\n    | "no-contextual"\n    | "no-discretionary-ligatures"\n    | "no-historical-ligatures"\n    | "none"\n    | "normal"\n    | (string & {});\n\n  export type FontVariantNumeric =\n    | Globals\n    | "diagonal-fractions"\n    | "lining-nums"\n    | "normal"\n    | "oldstyle-nums"\n    | "ordinal"\n    | "proportional-nums"\n    | "slashed-zero"\n    | "stacked-fractions"\n    | "tabular-nums"\n    | (string & {});\n\n  export type FontVariantPosition = Globals | "normal" | "sub" | "super";\n\n  export type FontVariationSettings = Globals | "normal" | (string & {});\n\n  export type FontWeight = Globals | DataType.FontWeightAbsolute | "bolder" | "lighter";\n\n  export type ForcedColorAdjust = Globals | "auto" | "none";\n\n  export type Gap<TLength = (string & {}) | 0> = Globals | TLength | "normal" | (string & {});\n\n  export type Grid = Globals | "none" | (string & {});\n\n  export type GridArea = Globals | DataType.GridLine | (string & {});\n\n  export type GridAutoColumns<TLength = (string & {}) | 0> = Globals | DataType.TrackBreadth<TLength> | (string & {});\n\n  export type GridAutoFlow = Globals | "column" | "dense" | "row" | (string & {});\n\n  export type GridAutoRows<TLength = (string & {}) | 0> = Globals | DataType.TrackBreadth<TLength> | (string & {});\n\n  export type GridColumn = Globals | DataType.GridLine | (string & {});\n\n  export type GridColumnEnd = Globals | DataType.GridLine;\n\n  export type GridColumnGap<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type GridColumnStart = Globals | DataType.GridLine;\n\n  export type GridGap<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type GridRow = Globals | DataType.GridLine | (string & {});\n\n  export type GridRowEnd = Globals | DataType.GridLine;\n\n  export type GridRowGap<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type GridRowStart = Globals | DataType.GridLine;\n\n  export type GridTemplate = Globals | "none" | (string & {});\n\n  export type GridTemplateAreas = Globals | "none" | (string & {});\n\n  export type GridTemplateColumns<TLength = (string & {}) | 0> = Globals | DataType.TrackBreadth<TLength> | "none" | "subgrid" | (string & {});\n\n  export type GridTemplateRows<TLength = (string & {}) | 0> = Globals | DataType.TrackBreadth<TLength> | "none" | "subgrid" | (string & {});\n\n  export type HangingPunctuation = Globals | "allow-end" | "first" | "force-end" | "last" | "none" | (string & {});\n\n  export type Height<TLength = (string & {}) | 0> =\n    | Globals\n    | TLength\n    | "-moz-max-content"\n    | "-moz-min-content"\n    | "-webkit-fit-content"\n    | "auto"\n    | "fit-content"\n    | "max-content"\n    | "min-content"\n    | (string & {});\n\n  export type HyphenateCharacter = Globals | "auto" | (string & {});\n\n  export type Hyphens = Globals | "auto" | "manual" | "none";\n\n  export type ImageOrientation = Globals | "flip" | "from-image" | (string & {});\n\n  export type ImageRendering = Globals | "-moz-crisp-edges" | "-webkit-optimize-contrast" | "auto" | "crisp-edges" | "pixelated";\n\n  export type ImageResolution = Globals | "from-image" | (string & {});\n\n  export type ImeMode = Globals | "active" | "auto" | "disabled" | "inactive" | "normal";\n\n  export type InitialLetter = Globals | "normal" | (string & {}) | (number & {});\n\n  export type InlineSize<TLength = (string & {}) | 0> =\n    | Globals\n    | TLength\n    | "-moz-fit-content"\n    | "-moz-max-content"\n    | "-moz-min-content"\n    | "-webkit-fill-available"\n    | "auto"\n    | "fit-content"\n    | "max-content"\n    | "min-content"\n    | (string & {});\n\n  export type InputSecurity = Globals | "auto" | "none";\n\n  export type Inset<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type InsetBlock<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type InsetBlockEnd<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type InsetBlockStart<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type InsetInline<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type InsetInlineEnd<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type InsetInlineStart<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type Isolation = Globals | "auto" | "isolate";\n\n  export type JustifyContent = Globals | DataType.ContentDistribution | DataType.ContentPosition | "left" | "normal" | "right" | (string & {});\n\n  export type JustifyItems = Globals | DataType.SelfPosition | "baseline" | "left" | "legacy" | "normal" | "right" | "stretch" | (string & {});\n\n  export type JustifySelf = Globals | DataType.SelfPosition | "auto" | "baseline" | "left" | "normal" | "right" | "stretch" | (string & {});\n\n  export type JustifyTracks = Globals | DataType.ContentDistribution | DataType.ContentPosition | "left" | "normal" | "right" | (string & {});\n\n  export type Left<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type LetterSpacing<TLength = (string & {}) | 0> = Globals | TLength | "normal";\n\n  export type LineBreak = Globals | "anywhere" | "auto" | "loose" | "normal" | "strict";\n\n  export type LineClamp = Globals | "none" | (number & {}) | (string & {});\n\n  export type LineHeight<TLength = (string & {}) | 0> = Globals | TLength | "normal" | (string & {}) | (number & {});\n\n  export type LineHeightStep<TLength = (string & {}) | 0> = Globals | TLength;\n\n  export type ListStyle = Globals | "inside" | "none" | "outside" | (string & {});\n\n  export type ListStyleImage = Globals | "none" | (string & {});\n\n  export type ListStylePosition = Globals | "inside" | "outside";\n\n  export type ListStyleType = Globals | "none" | (string & {});\n\n  export type Margin<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type MarginBlock<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type MarginBlockEnd<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type MarginBlockStart<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type MarginBottom<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type MarginInline<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type MarginInlineEnd<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type MarginInlineStart<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type MarginLeft<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type MarginRight<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type MarginTop<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type Mask<TLength = (string & {}) | 0> = Globals | DataType.MaskLayer<TLength> | (string & {});\n\n  export type MaskBorder = Globals | "alpha" | "luminance" | "none" | "repeat" | "round" | "space" | "stretch" | (string & {}) | (number & {});\n\n  export type MaskBorderMode = Globals | "alpha" | "luminance";\n\n  export type MaskBorderOutset<TLength = (string & {}) | 0> = Globals | TLength | (string & {}) | (number & {});\n\n  export type MaskBorderRepeat = Globals | "repeat" | "round" | "space" | "stretch" | (string & {});\n\n  export type MaskBorderSlice = Globals | (string & {}) | (number & {});\n\n  export type MaskBorderSource = Globals | "none" | (string & {});\n\n  export type MaskBorderWidth<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {}) | (number & {});\n\n  export type MaskClip = Globals | DataType.GeometryBox | "no-clip" | (string & {});\n\n  export type MaskComposite = Globals | DataType.CompositingOperator | (string & {});\n\n  export type MaskImage = Globals | "none" | (string & {});\n\n  export type MaskMode = Globals | DataType.MaskingMode | (string & {});\n\n  export type MaskOrigin = Globals | DataType.GeometryBox | (string & {});\n\n  export type MaskPosition<TLength = (string & {}) | 0> = Globals | DataType.Position<TLength> | (string & {});\n\n  export type MaskRepeat = Globals | DataType.RepeatStyle | (string & {});\n\n  export type MaskSize<TLength = (string & {}) | 0> = Globals | DataType.BgSize<TLength> | (string & {});\n\n  export type MaskType = Globals | "alpha" | "luminance";\n\n  export type MathStyle = Globals | "compact" | "normal";\n\n  export type MaxBlockSize<TLength = (string & {}) | 0> =\n    | Globals\n    | TLength\n    | "-moz-max-content"\n    | "-moz-min-content"\n    | "-webkit-fill-available"\n    | "fit-content"\n    | "max-content"\n    | "min-content"\n    | "none"\n    | (string & {});\n\n  export type MaxHeight<TLength = (string & {}) | 0> =\n    | Globals\n    | TLength\n    | "-moz-fit-content"\n    | "-moz-max-content"\n    | "-moz-min-content"\n    | "-webkit-fit-content"\n    | "-webkit-max-content"\n    | "-webkit-min-content"\n    | "fit-content"\n    | "intrinsic"\n    | "max-content"\n    | "min-content"\n    | "none"\n    | (string & {});\n\n  export type MaxInlineSize<TLength = (string & {}) | 0> =\n    | Globals\n    | TLength\n    | "-moz-fit-content"\n    | "-moz-max-content"\n    | "-moz-min-content"\n    | "-webkit-fill-available"\n    | "fit-content"\n    | "max-content"\n    | "min-content"\n    | "none"\n    | (string & {});\n\n  export type MaxLines = Globals | "none" | (number & {}) | (string & {});\n\n  export type MaxWidth<TLength = (string & {}) | 0> =\n    | Globals\n    | TLength\n    | "-moz-fit-content"\n    | "-moz-max-content"\n    | "-moz-min-content"\n    | "-webkit-fit-content"\n    | "-webkit-max-content"\n    | "-webkit-min-content"\n    | "fit-content"\n    | "intrinsic"\n    | "max-content"\n    | "min-content"\n    | "none"\n    | (string & {});\n\n  export type MinBlockSize<TLength = (string & {}) | 0> =\n    | Globals\n    | TLength\n    | "-moz-max-content"\n    | "-moz-min-content"\n    | "-webkit-fill-available"\n    | "auto"\n    | "fit-content"\n    | "max-content"\n    | "min-content"\n    | (string & {});\n\n  export type MinHeight<TLength = (string & {}) | 0> =\n    | Globals\n    | TLength\n    | "-moz-fit-content"\n    | "-moz-max-content"\n    | "-moz-min-content"\n    | "-webkit-fit-content"\n    | "-webkit-max-content"\n    | "-webkit-min-content"\n    | "auto"\n    | "fit-content"\n    | "intrinsic"\n    | "max-content"\n    | "min-content"\n    | (string & {});\n\n  export type MinInlineSize<TLength = (string & {}) | 0> =\n    | Globals\n    | TLength\n    | "-moz-fit-content"\n    | "-moz-max-content"\n    | "-moz-min-content"\n    | "-webkit-fill-available"\n    | "auto"\n    | "fit-content"\n    | "max-content"\n    | "min-content"\n    | (string & {});\n\n  export type MinWidth<TLength = (string & {}) | 0> =\n    | Globals\n    | TLength\n    | "-moz-fit-content"\n    | "-moz-max-content"\n    | "-moz-min-content"\n    | "-webkit-fill-available"\n    | "-webkit-fit-content"\n    | "-webkit-max-content"\n    | "-webkit-min-content"\n    | "auto"\n    | "fit-content"\n    | "intrinsic"\n    | "max-content"\n    | "min-content"\n    | "min-intrinsic"\n    | (string & {});\n\n  export type MixBlendMode = Globals | DataType.BlendMode;\n\n  export type Offset<TLength = (string & {}) | 0> = Globals | DataType.Position<TLength> | DataType.GeometryBox | "auto" | "none" | (string & {});\n\n  export type OffsetDistance<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type OffsetPath = Globals | DataType.GeometryBox | "none" | (string & {});\n\n  export type OffsetRotate = Globals | "auto" | "reverse" | (string & {});\n\n  export type ObjectFit = Globals | "contain" | "cover" | "fill" | "none" | "scale-down";\n\n  export type ObjectPosition<TLength = (string & {}) | 0> = Globals | DataType.Position<TLength>;\n\n  export type OffsetAnchor<TLength = (string & {}) | 0> = Globals | DataType.Position<TLength> | "auto";\n\n  export type Opacity = Globals | (string & {}) | (number & {});\n\n  export type Order = Globals | (number & {}) | (string & {});\n\n  export type Orphans = Globals | (number & {}) | (string & {});\n\n  export type Outline<TLength = (string & {}) | 0> = Globals | DataType.Color | DataType.LineStyle | DataType.LineWidth<TLength> | "auto" | "invert" | (string & {});\n\n  export type OutlineColor = Globals | DataType.Color | "invert";\n\n  export type OutlineOffset<TLength = (string & {}) | 0> = Globals | TLength;\n\n  export type OutlineStyle = Globals | DataType.LineStyle | "auto" | (string & {});\n\n  export type OutlineWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength>;\n\n  export type Overflow = Globals | "-moz-hidden-unscrollable" | "auto" | "clip" | "hidden" | "scroll" | "visible" | (string & {});\n\n  export type OverflowAnchor = Globals | "auto" | "none";\n\n  export type OverflowBlock = Globals | "auto" | "clip" | "hidden" | "scroll" | "visible";\n\n  export type OverflowClipBox = Globals | "content-box" | "padding-box";\n\n  export type OverflowClipMargin<TLength = (string & {}) | 0> = Globals | DataType.VisualBox | TLength | (string & {});\n\n  export type OverflowInline = Globals | "auto" | "clip" | "hidden" | "scroll" | "visible";\n\n  export type OverflowWrap = Globals | "anywhere" | "break-word" | "normal";\n\n  export type OverflowX = Globals | "-moz-hidden-unscrollable" | "auto" | "clip" | "hidden" | "scroll" | "visible";\n\n  export type OverflowY = Globals | "-moz-hidden-unscrollable" | "auto" | "clip" | "hidden" | "scroll" | "visible";\n\n  export type OverscrollBehavior = Globals | "auto" | "contain" | "none" | (string & {});\n\n  export type OverscrollBehaviorBlock = Globals | "auto" | "contain" | "none";\n\n  export type OverscrollBehaviorInline = Globals | "auto" | "contain" | "none";\n\n  export type OverscrollBehaviorX = Globals | "auto" | "contain" | "none";\n\n  export type OverscrollBehaviorY = Globals | "auto" | "contain" | "none";\n\n  export type Padding<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type PaddingBlock<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type PaddingBlockEnd<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type PaddingBlockStart<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type PaddingBottom<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type PaddingInline<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type PaddingInlineEnd<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type PaddingInlineStart<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type PaddingLeft<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type PaddingRight<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type PaddingTop<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type PageBreakAfter = Globals | "always" | "auto" | "avoid" | "left" | "recto" | "right" | "verso";\n\n  export type PageBreakBefore = Globals | "always" | "auto" | "avoid" | "left" | "recto" | "right" | "verso";\n\n  export type PageBreakInside = Globals | "auto" | "avoid";\n\n  export type PaintOrder = Globals | "fill" | "markers" | "normal" | "stroke" | (string & {});\n\n  export type Perspective<TLength = (string & {}) | 0> = Globals | TLength | "none";\n\n  export type PerspectiveOrigin<TLength = (string & {}) | 0> = Globals | DataType.Position<TLength>;\n\n  export type PlaceContent = Globals | DataType.ContentDistribution | DataType.ContentPosition | "baseline" | "normal" | (string & {});\n\n  export type PlaceItems = Globals | DataType.SelfPosition | "baseline" | "normal" | "stretch" | (string & {});\n\n  export type PlaceSelf = Globals | DataType.SelfPosition | "auto" | "baseline" | "normal" | "stretch" | (string & {});\n\n  export type PointerEvents = Globals | "all" | "auto" | "fill" | "inherit" | "none" | "painted" | "stroke" | "visible" | "visibleFill" | "visiblePainted" | "visibleStroke";\n\n  export type Position = Globals | "-webkit-sticky" | "absolute" | "fixed" | "relative" | "static" | "sticky";\n\n  export type Quotes = Globals | "auto" | "none" | (string & {});\n\n  export type Resize = Globals | "block" | "both" | "horizontal" | "inline" | "none" | "vertical";\n\n  export type Right<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type Rotate = Globals | "none" | (string & {});\n\n  export type RowGap<TLength = (string & {}) | 0> = Globals | TLength | "normal" | (string & {});\n\n  export type RubyAlign = Globals | "center" | "space-around" | "space-between" | "start";\n\n  export type RubyMerge = Globals | "auto" | "collapse" | "separate";\n\n  export type RubyPosition = Globals | "alternate" | "inter-character" | "over" | "under" | (string & {});\n\n  export type Scale = Globals | "none" | (string & {}) | (number & {});\n\n  export type ScrollBehavior = Globals | "auto" | "smooth";\n\n  export type ScrollMargin<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type ScrollMarginBlock<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type ScrollMarginBlockEnd<TLength = (string & {}) | 0> = Globals | TLength;\n\n  export type ScrollMarginBlockStart<TLength = (string & {}) | 0> = Globals | TLength;\n\n  export type ScrollMarginBottom<TLength = (string & {}) | 0> = Globals | TLength;\n\n  export type ScrollMarginInline<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type ScrollMarginInlineEnd<TLength = (string & {}) | 0> = Globals | TLength;\n\n  export type ScrollMarginInlineStart<TLength = (string & {}) | 0> = Globals | TLength;\n\n  export type ScrollMarginLeft<TLength = (string & {}) | 0> = Globals | TLength;\n\n  export type ScrollMarginRight<TLength = (string & {}) | 0> = Globals | TLength;\n\n  export type ScrollMarginTop<TLength = (string & {}) | 0> = Globals | TLength;\n\n  export type ScrollPadding<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type ScrollPaddingBlock<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type ScrollPaddingBlockEnd<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type ScrollPaddingBlockStart<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type ScrollPaddingBottom<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type ScrollPaddingInline<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type ScrollPaddingInlineEnd<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type ScrollPaddingInlineStart<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type ScrollPaddingLeft<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type ScrollPaddingRight<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type ScrollPaddingTop<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type ScrollSnapAlign = Globals | "center" | "end" | "none" | "start" | (string & {});\n\n  export type ScrollSnapCoordinate<TLength = (string & {}) | 0> = Globals | DataType.Position<TLength> | "none" | (string & {});\n\n  export type ScrollSnapDestination<TLength = (string & {}) | 0> = Globals | DataType.Position<TLength>;\n\n  export type ScrollSnapPointsX = Globals | "none" | (string & {});\n\n  export type ScrollSnapPointsY = Globals | "none" | (string & {});\n\n  export type ScrollSnapStop = Globals | "always" | "normal";\n\n  export type ScrollSnapType = Globals | "block" | "both" | "inline" | "none" | "x" | "y" | (string & {});\n\n  export type ScrollSnapTypeX = Globals | "mandatory" | "none" | "proximity";\n\n  export type ScrollSnapTypeY = Globals | "mandatory" | "none" | "proximity";\n\n  export type ScrollbarColor = Globals | "auto" | (string & {});\n\n  export type ScrollbarGutter = Globals | "auto" | "stable" | (string & {});\n\n  export type MsScrollbarTrackColor = Globals | DataType.Color;\n\n  export type ScrollbarWidth = Globals | "auto" | "none" | "thin";\n\n  export type ShapeImageThreshold = Globals | (string & {}) | (number & {});\n\n  export type ShapeMargin<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type ShapeOutside = Globals | DataType.Box | "margin-box" | "none" | (string & {});\n\n  export type TabSize<TLength = (string & {}) | 0> = Globals | TLength | (number & {}) | (string & {});\n\n  export type TableLayout = Globals | "auto" | "fixed";\n\n  export type TextAlign = Globals | "center" | "end" | "justify" | "left" | "match-parent" | "right" | "start";\n\n  export type TextAlignLast = Globals | "auto" | "center" | "end" | "justify" | "left" | "right" | "start";\n\n  export type TextCombineUpright = Globals | "all" | "none" | (string & {});\n\n  export type TextDecoration<TLength = (string & {}) | 0> =\n    | Globals\n    | DataType.Color\n    | TLength\n    | "auto"\n    | "blink"\n    | "dashed"\n    | "dotted"\n    | "double"\n    | "from-font"\n    | "grammar-error"\n    | "line-through"\n    | "none"\n    | "overline"\n    | "solid"\n    | "spelling-error"\n    | "underline"\n    | "wavy"\n    | (string & {});\n\n  export type TextDecorationColor = Globals | DataType.Color;\n\n  export type TextDecorationLine = Globals | "blink" | "grammar-error" | "line-through" | "none" | "overline" | "spelling-error" | "underline" | (string & {});\n\n  export type TextDecorationSkip = Globals | "box-decoration" | "edges" | "leading-spaces" | "none" | "objects" | "spaces" | "trailing-spaces" | (string & {});\n\n  export type TextDecorationSkipInk = Globals | "all" | "auto" | "none";\n\n  export type TextDecorationStyle = Globals | "dashed" | "dotted" | "double" | "solid" | "wavy";\n\n  export type TextDecorationThickness<TLength = (string & {}) | 0> = Globals | TLength | "auto" | "from-font" | (string & {});\n\n  export type TextEmphasis = Globals | DataType.Color | "circle" | "dot" | "double-circle" | "filled" | "none" | "open" | "sesame" | "triangle" | (string & {});\n\n  export type TextEmphasisColor = Globals | DataType.Color;\n\n  export type TextEmphasisPosition = Globals | (string & {});\n\n  export type TextEmphasisStyle = Globals | "circle" | "dot" | "double-circle" | "filled" | "none" | "open" | "sesame" | "triangle" | (string & {});\n\n  export type TextIndent<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type TextJustify = Globals | "auto" | "inter-character" | "inter-word" | "none";\n\n  export type TextOrientation = Globals | "mixed" | "sideways" | "upright";\n\n  export type TextOverflow = Globals | "clip" | "ellipsis" | (string & {});\n\n  export type TextRendering = Globals | "auto" | "geometricPrecision" | "optimizeLegibility" | "optimizeSpeed";\n\n  export type TextShadow = Globals | "none" | (string & {});\n\n  export type TextSizeAdjust = Globals | "auto" | "none" | (string & {});\n\n  export type TextTransform = Globals | "capitalize" | "full-size-kana" | "full-width" | "lowercase" | "none" | "uppercase";\n\n  export type TextUnderlineOffset<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type TextUnderlinePosition = Globals | "auto" | "from-font" | "left" | "right" | "under" | (string & {});\n\n  export type Top<TLength = (string & {}) | 0> = Globals | TLength | "auto" | (string & {});\n\n  export type TouchAction =\n    | Globals\n    | "-ms-manipulation"\n    | "-ms-none"\n    | "-ms-pinch-zoom"\n    | "auto"\n    | "manipulation"\n    | "none"\n    | "pan-down"\n    | "pan-left"\n    | "pan-right"\n    | "pan-up"\n    | "pan-x"\n    | "pan-y"\n    | "pinch-zoom"\n    | (string & {});\n\n  export type Transform = Globals | "none" | (string & {});\n\n  export type TransformBox = Globals | "border-box" | "content-box" | "fill-box" | "stroke-box" | "view-box";\n\n  export type TransformOrigin<TLength = (string & {}) | 0> = Globals | TLength | "bottom" | "center" | "left" | "right" | "top" | (string & {});\n\n  export type TransformStyle = Globals | "flat" | "preserve-3d";\n\n  export type Transition<TTime = string & {}> = Globals | DataType.SingleTransition<TTime> | (string & {});\n\n  export type TransitionDelay<TTime = string & {}> = Globals | TTime | (string & {});\n\n  export type TransitionDuration<TTime = string & {}> = Globals | TTime | (string & {});\n\n  export type TransitionProperty = Globals | "all" | "none" | (string & {});\n\n  export type TransitionTimingFunction = Globals | DataType.EasingFunction | (string & {});\n\n  export type Translate<TLength = (string & {}) | 0> = Globals | TLength | "none" | (string & {});\n\n  export type UnicodeBidi =\n    | Globals\n    | "-moz-isolate"\n    | "-moz-isolate-override"\n    | "-moz-plaintext"\n    | "-webkit-isolate"\n    | "-webkit-isolate-override"\n    | "-webkit-plaintext"\n    | "bidi-override"\n    | "embed"\n    | "isolate"\n    | "isolate-override"\n    | "normal"\n    | "plaintext";\n\n  export type UserSelect = Globals | "-moz-none" | "all" | "auto" | "contain" | "element" | "none" | "text";\n\n  export type VerticalAlign<TLength = (string & {}) | 0> =\n    | Globals\n    | TLength\n    | "baseline"\n    | "bottom"\n    | "middle"\n    | "sub"\n    | "super"\n    | "text-bottom"\n    | "text-top"\n    | "top"\n    | (string & {});\n\n  export type Visibility = Globals | "collapse" | "hidden" | "visible";\n\n  export type WhiteSpace = Globals | "-moz-pre-wrap" | "break-spaces" | "normal" | "nowrap" | "pre" | "pre-line" | "pre-wrap";\n\n  export type Widows = Globals | (number & {}) | (string & {});\n\n  export type Width<TLength = (string & {}) | 0> =\n    | Globals\n    | TLength\n    | "-moz-fit-content"\n    | "-moz-max-content"\n    | "-moz-min-content"\n    | "-webkit-fit-content"\n    | "-webkit-max-content"\n    | "auto"\n    | "fit-content"\n    | "intrinsic"\n    | "max-content"\n    | "min-content"\n    | "min-intrinsic"\n    | (string & {});\n\n  export type WillChange = Globals | DataType.AnimateableFeature | "auto" | (string & {});\n\n  export type WordBreak = Globals | "break-all" | "break-word" | "keep-all" | "normal";\n\n  export type WordSpacing<TLength = (string & {}) | 0> = Globals | TLength | "normal";\n\n  export type WordWrap = Globals | "break-word" | "normal";\n\n  export type WritingMode = Globals | "horizontal-tb" | "sideways-lr" | "sideways-rl" | "vertical-lr" | "vertical-rl";\n\n  export type ZIndex = Globals | "auto" | (number & {}) | (string & {});\n\n  export type Zoom = Globals | "normal" | "reset" | (string & {}) | (number & {});\n\n  export type MozAppearance =\n    | Globals\n    | "-moz-mac-unified-toolbar"\n    | "-moz-win-borderless-glass"\n    | "-moz-win-browsertabbar-toolbox"\n    | "-moz-win-communications-toolbox"\n    | "-moz-win-communicationstext"\n    | "-moz-win-exclude-glass"\n    | "-moz-win-glass"\n    | "-moz-win-media-toolbox"\n    | "-moz-win-mediatext"\n    | "-moz-window-button-box"\n    | "-moz-window-button-box-maximized"\n    | "-moz-window-button-close"\n    | "-moz-window-button-maximize"\n    | "-moz-window-button-minimize"\n    | "-moz-window-button-restore"\n    | "-moz-window-frame-bottom"\n    | "-moz-window-frame-left"\n    | "-moz-window-frame-right"\n    | "-moz-window-titlebar"\n    | "-moz-window-titlebar-maximized"\n    | "button"\n    | "button-arrow-down"\n    | "button-arrow-next"\n    | "button-arrow-previous"\n    | "button-arrow-up"\n    | "button-bevel"\n    | "button-focus"\n    | "caret"\n    | "checkbox"\n    | "checkbox-container"\n    | "checkbox-label"\n    | "checkmenuitem"\n    | "dualbutton"\n    | "groupbox"\n    | "listbox"\n    | "listitem"\n    | "menuarrow"\n    | "menubar"\n    | "menucheckbox"\n    | "menuimage"\n    | "menuitem"\n    | "menuitemtext"\n    | "menulist"\n    | "menulist-button"\n    | "menulist-text"\n    | "menulist-textfield"\n    | "menupopup"\n    | "menuradio"\n    | "menuseparator"\n    | "meterbar"\n    | "meterchunk"\n    | "none"\n    | "progressbar"\n    | "progressbar-vertical"\n    | "progresschunk"\n    | "progresschunk-vertical"\n    | "radio"\n    | "radio-container"\n    | "radio-label"\n    | "radiomenuitem"\n    | "range"\n    | "range-thumb"\n    | "resizer"\n    | "resizerpanel"\n    | "scale-horizontal"\n    | "scale-vertical"\n    | "scalethumb-horizontal"\n    | "scalethumb-vertical"\n    | "scalethumbend"\n    | "scalethumbstart"\n    | "scalethumbtick"\n    | "scrollbarbutton-down"\n    | "scrollbarbutton-left"\n    | "scrollbarbutton-right"\n    | "scrollbarbutton-up"\n    | "scrollbarthumb-horizontal"\n    | "scrollbarthumb-vertical"\n    | "scrollbartrack-horizontal"\n    | "scrollbartrack-vertical"\n    | "searchfield"\n    | "separator"\n    | "sheet"\n    | "spinner"\n    | "spinner-downbutton"\n    | "spinner-textfield"\n    | "spinner-upbutton"\n    | "splitter"\n    | "statusbar"\n    | "statusbarpanel"\n    | "tab"\n    | "tab-scroll-arrow-back"\n    | "tab-scroll-arrow-forward"\n    | "tabpanel"\n    | "tabpanels"\n    | "textfield"\n    | "textfield-multiline"\n    | "toolbar"\n    | "toolbarbutton"\n    | "toolbarbutton-dropdown"\n    | "toolbargripper"\n    | "toolbox"\n    | "tooltip"\n    | "treeheader"\n    | "treeheadercell"\n    | "treeheadersortarrow"\n    | "treeitem"\n    | "treeline"\n    | "treetwisty"\n    | "treetwistyopen"\n    | "treeview";\n\n  export type MozBinding = Globals | "none" | (string & {});\n\n  export type MozBorderBottomColors = Globals | DataType.Color | "none" | (string & {});\n\n  export type MozBorderLeftColors = Globals | DataType.Color | "none" | (string & {});\n\n  export type MozBorderRightColors = Globals | DataType.Color | "none" | (string & {});\n\n  export type MozBorderTopColors = Globals | DataType.Color | "none" | (string & {});\n\n  export type MozContextProperties = Globals | "fill" | "fill-opacity" | "none" | "stroke" | "stroke-opacity" | (string & {});\n\n  export type MozFloatEdge = Globals | "border-box" | "content-box" | "margin-box" | "padding-box";\n\n  export type MozForceBrokenImageIcon = Globals | 0 | (string & {}) | 1;\n\n  export type MozImageRegion = Globals | "auto" | (string & {});\n\n  export type MozOrient = Globals | "block" | "horizontal" | "inline" | "vertical";\n\n  export type MozOutlineRadius<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type MozOutlineRadiusBottomleft<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type MozOutlineRadiusBottomright<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type MozOutlineRadiusTopleft<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type MozOutlineRadiusTopright<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type MozStackSizing = Globals | "ignore" | "stretch-to-fit";\n\n  export type MozTextBlink = Globals | "blink" | "none";\n\n  export type MozUserFocus = Globals | "ignore" | "none" | "normal" | "select-after" | "select-all" | "select-before" | "select-menu" | "select-same";\n\n  export type MozUserInput = Globals | "auto" | "disabled" | "enabled" | "none";\n\n  export type MozUserModify = Globals | "read-only" | "read-write" | "write-only";\n\n  export type MozWindowDragging = Globals | "drag" | "no-drag";\n\n  export type MozWindowShadow = Globals | "default" | "menu" | "none" | "sheet" | "tooltip";\n\n  export type MsAccelerator = Globals | "false" | "true";\n\n  export type MsBlockProgression = Globals | "bt" | "lr" | "rl" | "tb";\n\n  export type MsContentZoomChaining = Globals | "chained" | "none";\n\n  export type MsContentZoomLimit = Globals | (string & {});\n\n  export type MsContentZoomLimitMax = Globals | (string & {});\n\n  export type MsContentZoomLimitMin = Globals | (string & {});\n\n  export type MsContentZoomSnap = Globals | "mandatory" | "none" | "proximity" | (string & {});\n\n  export type MsContentZoomSnapPoints = Globals | (string & {});\n\n  export type MsContentZoomSnapType = Globals | "mandatory" | "none" | "proximity";\n\n  export type MsContentZooming = Globals | "none" | "zoom";\n\n  export type MsFilter = Globals | (string & {});\n\n  export type MsFlowFrom = Globals | "none" | (string & {});\n\n  export type MsFlowInto = Globals | "none" | (string & {});\n\n  export type MsGridColumns<TLength = (string & {}) | 0> = Globals | DataType.TrackBreadth<TLength> | "none" | (string & {});\n\n  export type MsGridRows<TLength = (string & {}) | 0> = Globals | DataType.TrackBreadth<TLength> | "none" | (string & {});\n\n  export type MsHighContrastAdjust = Globals | "auto" | "none";\n\n  export type MsHyphenateLimitChars = Globals | "auto" | (string & {}) | (number & {});\n\n  export type MsHyphenateLimitLines = Globals | "no-limit" | (number & {}) | (string & {});\n\n  export type MsHyphenateLimitZone<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type MsImeAlign = Globals | "after" | "auto";\n\n  export type MsOverflowStyle = Globals | "-ms-autohiding-scrollbar" | "auto" | "none" | "scrollbar";\n\n  export type MsScrollChaining = Globals | "chained" | "none";\n\n  export type MsScrollLimit = Globals | (string & {});\n\n  export type MsScrollLimitXMax<TLength = (string & {}) | 0> = Globals | TLength | "auto";\n\n  export type MsScrollLimitXMin<TLength = (string & {}) | 0> = Globals | TLength;\n\n  export type MsScrollLimitYMax<TLength = (string & {}) | 0> = Globals | TLength | "auto";\n\n  export type MsScrollLimitYMin<TLength = (string & {}) | 0> = Globals | TLength;\n\n  export type MsScrollRails = Globals | "none" | "railed";\n\n  export type MsScrollSnapPointsX = Globals | (string & {});\n\n  export type MsScrollSnapPointsY = Globals | (string & {});\n\n  export type MsScrollSnapType = Globals | "mandatory" | "none" | "proximity";\n\n  export type MsScrollSnapX = Globals | (string & {});\n\n  export type MsScrollSnapY = Globals | (string & {});\n\n  export type MsScrollTranslation = Globals | "none" | "vertical-to-horizontal";\n\n  export type MsScrollbar3dlightColor = Globals | DataType.Color;\n\n  export type MsScrollbarArrowColor = Globals | DataType.Color;\n\n  export type MsScrollbarBaseColor = Globals | DataType.Color;\n\n  export type MsScrollbarDarkshadowColor = Globals | DataType.Color;\n\n  export type MsScrollbarFaceColor = Globals | DataType.Color;\n\n  export type MsScrollbarHighlightColor = Globals | DataType.Color;\n\n  export type MsScrollbarShadowColor = Globals | DataType.Color;\n\n  export type MsTextAutospace = Globals | "ideograph-alpha" | "ideograph-numeric" | "ideograph-parenthesis" | "ideograph-space" | "none";\n\n  export type MsTouchSelect = Globals | "grippers" | "none";\n\n  export type MsUserSelect = Globals | "element" | "none" | "text";\n\n  export type MsWrapFlow = Globals | "auto" | "both" | "clear" | "end" | "maximum" | "start";\n\n  export type MsWrapMargin<TLength = (string & {}) | 0> = Globals | TLength;\n\n  export type MsWrapThrough = Globals | "none" | "wrap";\n\n  export type WebkitAppearance =\n    | Globals\n    | "-apple-pay-button"\n    | "button"\n    | "button-bevel"\n    | "caret"\n    | "checkbox"\n    | "default-button"\n    | "inner-spin-button"\n    | "listbox"\n    | "listitem"\n    | "media-controls-background"\n    | "media-controls-fullscreen-background"\n    | "media-current-time-display"\n    | "media-enter-fullscreen-button"\n    | "media-exit-fullscreen-button"\n    | "media-fullscreen-button"\n    | "media-mute-button"\n    | "media-overlay-play-button"\n    | "media-play-button"\n    | "media-seek-back-button"\n    | "media-seek-forward-button"\n    | "media-slider"\n    | "media-sliderthumb"\n    | "media-time-remaining-display"\n    | "media-toggle-closed-captions-button"\n    | "media-volume-slider"\n    | "media-volume-slider-container"\n    | "media-volume-sliderthumb"\n    | "menulist"\n    | "menulist-button"\n    | "menulist-text"\n    | "menulist-textfield"\n    | "meter"\n    | "none"\n    | "progress-bar"\n    | "progress-bar-value"\n    | "push-button"\n    | "radio"\n    | "searchfield"\n    | "searchfield-cancel-button"\n    | "searchfield-decoration"\n    | "searchfield-results-button"\n    | "searchfield-results-decoration"\n    | "slider-horizontal"\n    | "slider-vertical"\n    | "sliderthumb-horizontal"\n    | "sliderthumb-vertical"\n    | "square-button"\n    | "textarea"\n    | "textfield";\n\n  export type WebkitBorderBefore<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | DataType.LineStyle | DataType.Color | (string & {});\n\n  export type WebkitBorderBeforeColor = Globals | DataType.Color;\n\n  export type WebkitBorderBeforeStyle = Globals | DataType.LineStyle | (string & {});\n\n  export type WebkitBorderBeforeWidth<TLength = (string & {}) | 0> = Globals | DataType.LineWidth<TLength> | (string & {});\n\n  export type WebkitBoxReflect<TLength = (string & {}) | 0> = Globals | TLength | "above" | "below" | "left" | "right" | (string & {});\n\n  export type WebkitLineClamp = Globals | "none" | (number & {}) | (string & {});\n\n  export type WebkitMask<TLength = (string & {}) | 0> =\n    | Globals\n    | DataType.Position<TLength>\n    | DataType.RepeatStyle\n    | DataType.Box\n    | "border"\n    | "content"\n    | "none"\n    | "padding"\n    | "text"\n    | (string & {});\n\n  export type WebkitMaskAttachment = Globals | DataType.Attachment | (string & {});\n\n  export type WebkitMaskClip = Globals | DataType.Box | "border" | "content" | "padding" | "text" | (string & {});\n\n  export type WebkitMaskComposite = Globals | DataType.CompositeStyle | (string & {});\n\n  export type WebkitMaskImage = Globals | "none" | (string & {});\n\n  export type WebkitMaskOrigin = Globals | DataType.Box | "border" | "content" | "padding" | (string & {});\n\n  export type WebkitMaskPosition<TLength = (string & {}) | 0> = Globals | DataType.Position<TLength> | (string & {});\n\n  export type WebkitMaskPositionX<TLength = (string & {}) | 0> = Globals | TLength | "center" | "left" | "right" | (string & {});\n\n  export type WebkitMaskPositionY<TLength = (string & {}) | 0> = Globals | TLength | "bottom" | "center" | "top" | (string & {});\n\n  export type WebkitMaskRepeat = Globals | DataType.RepeatStyle | (string & {});\n\n  export type WebkitMaskRepeatX = Globals | "no-repeat" | "repeat" | "round" | "space";\n\n  export type WebkitMaskRepeatY = Globals | "no-repeat" | "repeat" | "round" | "space";\n\n  export type WebkitMaskSize<TLength = (string & {}) | 0> = Globals | DataType.BgSize<TLength> | (string & {});\n\n  export type WebkitOverflowScrolling = Globals | "auto" | "touch";\n\n  export type WebkitTapHighlightColor = Globals | DataType.Color;\n\n  export type WebkitTextFillColor = Globals | DataType.Color;\n\n  export type WebkitTextStroke<TLength = (string & {}) | 0> = Globals | DataType.Color | TLength | (string & {});\n\n  export type WebkitTextStrokeColor = Globals | DataType.Color;\n\n  export type WebkitTextStrokeWidth<TLength = (string & {}) | 0> = Globals | TLength;\n\n  export type WebkitTouchCallout = Globals | "default" | "none";\n\n  export type WebkitUserModify = Globals | "read-only" | "read-write" | "read-write-plaintext-only";\n\n  export type AlignmentBaseline =\n    | Globals\n    | "after-edge"\n    | "alphabetic"\n    | "auto"\n    | "baseline"\n    | "before-edge"\n    | "central"\n    | "hanging"\n    | "ideographic"\n    | "mathematical"\n    | "middle"\n    | "text-after-edge"\n    | "text-before-edge";\n\n  export type BaselineShift<TLength = (string & {}) | 0> = Globals | TLength | "baseline" | "sub" | "super" | (string & {});\n\n  export type ClipRule = Globals | "evenodd" | "nonzero";\n\n  export type ColorInterpolation = Globals | "auto" | "linearRGB" | "sRGB";\n\n  export type ColorRendering = Globals | "auto" | "optimizeQuality" | "optimizeSpeed";\n\n  export type DominantBaseline =\n    | Globals\n    | "alphabetic"\n    | "auto"\n    | "central"\n    | "hanging"\n    | "ideographic"\n    | "mathematical"\n    | "middle"\n    | "no-change"\n    | "reset-size"\n    | "text-after-edge"\n    | "text-before-edge"\n    | "use-script";\n\n  export type Fill = Globals | DataType.Paint;\n\n  export type FillOpacity = Globals | (number & {}) | (string & {});\n\n  export type FillRule = Globals | "evenodd" | "nonzero";\n\n  export type FloodColor = Globals | DataType.Color | "currentColor";\n\n  export type FloodOpacity = Globals | (number & {}) | (string & {});\n\n  export type GlyphOrientationVertical = Globals | "auto" | (string & {}) | (number & {});\n\n  export type LightingColor = Globals | DataType.Color | "currentColor";\n\n  export type Marker = Globals | "none" | (string & {});\n\n  export type MarkerEnd = Globals | "none" | (string & {});\n\n  export type MarkerMid = Globals | "none" | (string & {});\n\n  export type MarkerStart = Globals | "none" | (string & {});\n\n  export type ShapeRendering = Globals | "auto" | "crispEdges" | "geometricPrecision" | "optimizeSpeed";\n\n  export type StopColor = Globals | DataType.Color | "currentColor";\n\n  export type StopOpacity = Globals | (number & {}) | (string & {});\n\n  export type Stroke = Globals | DataType.Paint;\n\n  export type StrokeDasharray<TLength = (string & {}) | 0> = Globals | DataType.Dasharray<TLength> | "none";\n\n  export type StrokeDashoffset<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type StrokeLinecap = Globals | "butt" | "round" | "square";\n\n  export type StrokeLinejoin = Globals | "bevel" | "miter" | "round";\n\n  export type StrokeMiterlimit = Globals | (number & {}) | (string & {});\n\n  export type StrokeOpacity = Globals | (number & {}) | (string & {});\n\n  export type StrokeWidth<TLength = (string & {}) | 0> = Globals | TLength | (string & {});\n\n  export type TextAnchor = Globals | "end" | "middle" | "start";\n\n  export type VectorEffect = Globals | "non-scaling-stroke" | "none";\n}\n\nexport namespace AtRule {\n  export interface CounterStyle<TLength = (string & {}) | 0, TTime = string & {}> {\n    additiveSymbols?: string | undefined;\n    fallback?: string | undefined;\n    negative?: string | undefined;\n    pad?: string | undefined;\n    prefix?: string | undefined;\n    range?: Range | undefined;\n    speakAs?: SpeakAs | undefined;\n    suffix?: string | undefined;\n    symbols?: string | undefined;\n    system?: System | undefined;\n  }\n\n  export interface CounterStyleHyphen<TLength = (string & {}) | 0, TTime = string & {}> {\n    "additive-symbols"?: string | undefined;\n    fallback?: string | undefined;\n    negative?: string | undefined;\n    pad?: string | undefined;\n    prefix?: string | undefined;\n    range?: Range | undefined;\n    "speak-as"?: SpeakAs | undefined;\n    suffix?: string | undefined;\n    symbols?: string | undefined;\n    system?: System | undefined;\n  }\n\n  export type CounterStyleFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<CounterStyle<TLength, TTime>>;\n\n  export type CounterStyleHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<CounterStyleHyphen<TLength, TTime>>;\n\n  export interface FontFace<TLength = (string & {}) | 0, TTime = string & {}> {\n    MozFontFeatureSettings?: FontFeatureSettings | undefined;\n    ascentOverride?: AscentOverride | undefined;\n    descentOverride?: DescentOverride | undefined;\n    fontDisplay?: FontDisplay | undefined;\n    fontFamily?: string | undefined;\n    fontFeatureSettings?: FontFeatureSettings | undefined;\n    fontStretch?: FontStretch | undefined;\n    fontStyle?: FontStyle | undefined;\n    fontVariant?: FontVariant | undefined;\n    fontVariationSettings?: FontVariationSettings | undefined;\n    fontWeight?: FontWeight | undefined;\n    lineGapOverride?: LineGapOverride | undefined;\n    sizeAdjust?: string | undefined;\n    src?: string | undefined;\n    unicodeRange?: string | undefined;\n  }\n\n  export interface FontFaceHyphen<TLength = (string & {}) | 0, TTime = string & {}> {\n    "-moz-font-feature-settings"?: FontFeatureSettings | undefined;\n    "ascent-override"?: AscentOverride | undefined;\n    "descent-override"?: DescentOverride | undefined;\n    "font-display"?: FontDisplay | undefined;\n    "font-family"?: string | undefined;\n    "font-feature-settings"?: FontFeatureSettings | undefined;\n    "font-stretch"?: FontStretch | undefined;\n    "font-style"?: FontStyle | undefined;\n    "font-variant"?: FontVariant | undefined;\n    "font-variation-settings"?: FontVariationSettings | undefined;\n    "font-weight"?: FontWeight | undefined;\n    "line-gap-override"?: LineGapOverride | undefined;\n    "size-adjust"?: string | undefined;\n    src?: string | undefined;\n    "unicode-range"?: string | undefined;\n  }\n\n  export type FontFaceFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<FontFace<TLength, TTime>>;\n\n  export type FontFaceHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<FontFaceHyphen<TLength, TTime>>;\n\n  export interface Page<TLength = (string & {}) | 0, TTime = string & {}> {\n    bleed?: Bleed<TLength> | undefined;\n    marks?: Marks | undefined;\n    size?: Size<TLength> | undefined;\n  }\n\n  export interface PageHyphen<TLength = (string & {}) | 0, TTime = string & {}> {\n    bleed?: Bleed<TLength> | undefined;\n    marks?: Marks | undefined;\n    size?: Size<TLength> | undefined;\n  }\n\n  export type PageFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<Page<TLength, TTime>>;\n\n  export type PageHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<PageHyphen<TLength, TTime>>;\n\n  export interface Property<TLength = (string & {}) | 0, TTime = string & {}> {\n    inherits?: Inherits | undefined;\n    initialValue?: string | undefined;\n    syntax?: string | undefined;\n  }\n\n  export interface PropertyHyphen<TLength = (string & {}) | 0, TTime = string & {}> {\n    inherits?: Inherits | undefined;\n    "initial-value"?: string | undefined;\n    syntax?: string | undefined;\n  }\n\n  export type PropertyFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<Property<TLength, TTime>>;\n\n  export type PropertyHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<PropertyHyphen<TLength, TTime>>;\n\n  export interface Viewport<TLength = (string & {}) | 0, TTime = string & {}> {\n    height?: Height<TLength> | undefined;\n    maxHeight?: MaxHeight<TLength> | undefined;\n    maxWidth?: MaxWidth<TLength> | undefined;\n    maxZoom?: MaxZoom | undefined;\n    minHeight?: MinHeight<TLength> | undefined;\n    minWidth?: MinWidth<TLength> | undefined;\n    minZoom?: MinZoom | undefined;\n    orientation?: Orientation | undefined;\n    userZoom?: UserZoom | undefined;\n    viewportFit?: ViewportFit | undefined;\n    width?: Width<TLength> | undefined;\n    zoom?: Zoom | undefined;\n  }\n\n  export interface ViewportHyphen<TLength = (string & {}) | 0, TTime = string & {}> {\n    height?: Height<TLength> | undefined;\n    "max-height"?: MaxHeight<TLength> | undefined;\n    "max-width"?: MaxWidth<TLength> | undefined;\n    "max-zoom"?: MaxZoom | undefined;\n    "min-height"?: MinHeight<TLength> | undefined;\n    "min-width"?: MinWidth<TLength> | undefined;\n    "min-zoom"?: MinZoom | undefined;\n    orientation?: Orientation | undefined;\n    "user-zoom"?: UserZoom | undefined;\n    "viewport-fit"?: ViewportFit | undefined;\n    width?: Width<TLength> | undefined;\n    zoom?: Zoom | undefined;\n  }\n\n  export type ViewportFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<Viewport<TLength, TTime>>;\n\n  export type ViewportHyphenFallback<TLength = (string & {}) | 0, TTime = string & {}> = Fallback<ViewportHyphen<TLength, TTime>>;\n\n  type Range = "auto" | (string & {});\n\n  type SpeakAs = "auto" | "bullets" | "numbers" | "spell-out" | "words" | (string & {});\n\n  type System = "additive" | "alphabetic" | "cyclic" | "fixed" | "numeric" | "symbolic" | (string & {});\n\n  type FontFeatureSettings = "normal" | (string & {});\n\n  type AscentOverride = "normal" | (string & {});\n\n  type DescentOverride = "normal" | (string & {});\n\n  type FontDisplay = "auto" | "block" | "fallback" | "optional" | "swap";\n\n  type FontStretch = DataType.FontStretchAbsolute | (string & {});\n\n  type FontStyle = "italic" | "normal" | "oblique" | (string & {});\n\n  type FontVariant =\n    | DataType.EastAsianVariantValues\n    | "all-petite-caps"\n    | "all-small-caps"\n    | "common-ligatures"\n    | "contextual"\n    | "diagonal-fractions"\n    | "discretionary-ligatures"\n    | "full-width"\n    | "historical-forms"\n    | "historical-ligatures"\n    | "lining-nums"\n    | "no-common-ligatures"\n    | "no-contextual"\n    | "no-discretionary-ligatures"\n    | "no-historical-ligatures"\n    | "none"\n    | "normal"\n    | "oldstyle-nums"\n    | "ordinal"\n    | "petite-caps"\n    | "proportional-nums"\n    | "proportional-width"\n    | "ruby"\n    | "slashed-zero"\n    | "small-caps"\n    | "stacked-fractions"\n    | "tabular-nums"\n    | "titling-caps"\n    | "unicase"\n    | (string & {});\n\n  type FontVariationSettings = "normal" | (string & {});\n\n  type FontWeight = DataType.FontWeightAbsolute | (string & {});\n\n  type LineGapOverride = "normal" | (string & {});\n\n  type Bleed<TLength> = TLength | "auto";\n\n  type Marks = "crop" | "cross" | "none" | (string & {});\n\n  type Size<TLength> = DataType.PageSize | TLength | "auto" | "landscape" | "portrait" | (string & {});\n\n  type Inherits = "false" | "true";\n\n  type Height<TLength> = DataType.ViewportLength<TLength> | (string & {});\n\n  type MaxHeight<TLength> = DataType.ViewportLength<TLength>;\n\n  type MaxWidth<TLength> = DataType.ViewportLength<TLength>;\n\n  type MaxZoom = "auto" | (string & {}) | (number & {});\n\n  type MinHeight<TLength> = DataType.ViewportLength<TLength>;\n\n  type MinWidth<TLength> = DataType.ViewportLength<TLength>;\n\n  type MinZoom = "auto" | (string & {}) | (number & {});\n\n  type Orientation = "auto" | "landscape" | "portrait";\n\n  type UserZoom = "fixed" | "zoom";\n\n  type ViewportFit = "auto" | "contain" | "cover";\n\n  type Width<TLength> = DataType.ViewportLength<TLength> | (string & {});\n\n  type Zoom = "auto" | (string & {}) | (number & {});\n}\n\ndeclare namespace DataType {\n  type AbsoluteSize = "large" | "medium" | "small" | "x-large" | "x-small" | "xx-large" | "xx-small" | "xxx-large";\n\n  type AnimateableFeature = "contents" | "scroll-position" | (string & {});\n\n  type Attachment = "fixed" | "local" | "scroll";\n\n  type BgPosition<TLength> = TLength | "bottom" | "center" | "left" | "right" | "top" | (string & {});\n\n  type BgSize<TLength> = TLength | "auto" | "contain" | "cover" | (string & {});\n\n  type BlendMode =\n    | "color"\n    | "color-burn"\n    | "color-dodge"\n    | "darken"\n    | "difference"\n    | "exclusion"\n    | "hard-light"\n    | "hue"\n    | "lighten"\n    | "luminosity"\n    | "multiply"\n    | "normal"\n    | "overlay"\n    | "saturation"\n    | "screen"\n    | "soft-light";\n\n  type Box = "border-box" | "content-box" | "padding-box";\n\n  type Color = NamedColor | DeprecatedSystemColor | "currentcolor" | (string & {});\n\n  type CompatAuto =\n    | "button"\n    | "checkbox"\n    | "listbox"\n    | "menulist"\n    | "meter"\n    | "progress-bar"\n    | "push-button"\n    | "radio"\n    | "searchfield"\n    | "slider-horizontal"\n    | "square-button"\n    | "textarea";\n\n  type CompositeStyle =\n    | "clear"\n    | "copy"\n    | "destination-atop"\n    | "destination-in"\n    | "destination-out"\n    | "destination-over"\n    | "source-atop"\n    | "source-in"\n    | "source-out"\n    | "source-over"\n    | "xor";\n\n  type CompositingOperator = "add" | "exclude" | "intersect" | "subtract";\n\n  type ContentDistribution = "space-around" | "space-between" | "space-evenly" | "stretch";\n\n  type ContentList = Quote | "contents" | (string & {});\n\n  type ContentPosition = "center" | "end" | "flex-end" | "flex-start" | "start";\n\n  type CubicBezierTimingFunction = "ease" | "ease-in" | "ease-in-out" | "ease-out" | (string & {});\n\n  type Dasharray<TLength> = TLength | (string & {}) | (number & {});\n\n  type DeprecatedSystemColor =\n    | "ActiveBorder"\n    | "ActiveCaption"\n    | "AppWorkspace"\n    | "Background"\n    | "ButtonFace"\n    | "ButtonHighlight"\n    | "ButtonShadow"\n    | "ButtonText"\n    | "CaptionText"\n    | "GrayText"\n    | "Highlight"\n    | "HighlightText"\n    | "InactiveBorder"\n    | "InactiveCaption"\n    | "InactiveCaptionText"\n    | "InfoBackground"\n    | "InfoText"\n    | "Menu"\n    | "MenuText"\n    | "Scrollbar"\n    | "ThreeDDarkShadow"\n    | "ThreeDFace"\n    | "ThreeDHighlight"\n    | "ThreeDLightShadow"\n    | "ThreeDShadow"\n    | "Window"\n    | "WindowFrame"\n    | "WindowText";\n\n  type DisplayInside = "-ms-flexbox" | "-ms-grid" | "-webkit-flex" | "flex" | "flow" | "flow-root" | "grid" | "ruby" | "table";\n\n  type DisplayInternal =\n    | "ruby-base"\n    | "ruby-base-container"\n    | "ruby-text"\n    | "ruby-text-container"\n    | "table-caption"\n    | "table-cell"\n    | "table-column"\n    | "table-column-group"\n    | "table-footer-group"\n    | "table-header-group"\n    | "table-row"\n    | "table-row-group";\n\n  type DisplayLegacy = "-ms-inline-flexbox" | "-ms-inline-grid" | "-webkit-inline-flex" | "inline-block" | "inline-flex" | "inline-grid" | "inline-list-item" | "inline-table";\n\n  type DisplayOutside = "block" | "inline" | "run-in";\n\n  type EasingFunction = CubicBezierTimingFunction | StepTimingFunction | "linear";\n\n  type EastAsianVariantValues = "jis04" | "jis78" | "jis83" | "jis90" | "simplified" | "traditional";\n\n  type FinalBgLayer<TLength> = Color | BgPosition<TLength> | RepeatStyle | Attachment | Box | "none" | (string & {});\n\n  type FontStretchAbsolute =\n    | "condensed"\n    | "expanded"\n    | "extra-condensed"\n    | "extra-expanded"\n    | "normal"\n    | "semi-condensed"\n    | "semi-expanded"\n    | "ultra-condensed"\n    | "ultra-expanded"\n    | (string & {});\n\n  type FontWeightAbsolute = "bold" | "normal" | (number & {}) | (string & {});\n\n  type GenericFamily = "cursive" | "fantasy" | "monospace" | "sans-serif" | "serif";\n\n  type GeometryBox = Box | "fill-box" | "margin-box" | "stroke-box" | "view-box";\n\n  type GridLine = "auto" | (string & {}) | (number & {});\n\n  type LineStyle = "dashed" | "dotted" | "double" | "groove" | "hidden" | "inset" | "none" | "outset" | "ridge" | "solid";\n\n  type LineWidth<TLength> = TLength | "medium" | "thick" | "thin";\n\n  type MaskLayer<TLength> = Position<TLength> | RepeatStyle | GeometryBox | CompositingOperator | MaskingMode | "no-clip" | "none" | (string & {});\n\n  type MaskingMode = "alpha" | "luminance" | "match-source";\n\n  type NamedColor =\n    | "aliceblue"\n    | "antiquewhite"\n    | "aqua"\n    | "aquamarine"\n    | "azure"\n    | "beige"\n    | "bisque"\n    | "black"\n    | "blanchedalmond"\n    | "blue"\n    | "blueviolet"\n    | "brown"\n    | "burlywood"\n    | "cadetblue"\n    | "chartreuse"\n    | "chocolate"\n    | "coral"\n    | "cornflowerblue"\n    | "cornsilk"\n    | "crimson"\n    | "cyan"\n    | "darkblue"\n    | "darkcyan"\n    | "darkgoldenrod"\n    | "darkgray"\n    | "darkgreen"\n    | "darkgrey"\n    | "darkkhaki"\n    | "darkmagenta"\n    | "darkolivegreen"\n    | "darkorange"\n    | "darkorchid"\n    | "darkred"\n    | "darksalmon"\n    | "darkseagreen"\n    | "darkslateblue"\n    | "darkslategray"\n    | "darkslategrey"\n    | "darkturquoise"\n    | "darkviolet"\n    | "deeppink"\n    | "deepskyblue"\n    | "dimgray"\n    | "dimgrey"\n    | "dodgerblue"\n    | "firebrick"\n    | "floralwhite"\n    | "forestgreen"\n    | "fuchsia"\n    | "gainsboro"\n    | "ghostwhite"\n    | "gold"\n    | "goldenrod"\n    | "gray"\n    | "green"\n    | "greenyellow"\n    | "grey"\n    | "honeydew"\n    | "hotpink"\n    | "indianred"\n    | "indigo"\n    | "ivory"\n    | "khaki"\n    | "lavender"\n    | "lavenderblush"\n    | "lawngreen"\n    | "lemonchiffon"\n    | "lightblue"\n    | "lightcoral"\n    | "lightcyan"\n    | "lightgoldenrodyellow"\n    | "lightgray"\n    | "lightgreen"\n    | "lightgrey"\n    | "lightpink"\n    | "lightsalmon"\n    | "lightseagreen"\n    | "lightskyblue"\n    | "lightslategray"\n    | "lightslategrey"\n    | "lightsteelblue"\n    | "lightyellow"\n    | "lime"\n    | "limegreen"\n    | "linen"\n    | "magenta"\n    | "maroon"\n    | "mediumaquamarine"\n    | "mediumblue"\n    | "mediumorchid"\n    | "mediumpurple"\n    | "mediumseagreen"\n    | "mediumslateblue"\n    | "mediumspringgreen"\n    | "mediumturquoise"\n    | "mediumvioletred"\n    | "midnightblue"\n    | "mintcream"\n    | "mistyrose"\n    | "moccasin"\n    | "navajowhite"\n    | "navy"\n    | "oldlace"\n    | "olive"\n    | "olivedrab"\n    | "orange"\n    | "orangered"\n    | "orchid"\n    | "palegoldenrod"\n    | "palegreen"\n    | "paleturquoise"\n    | "palevioletred"\n    | "papayawhip"\n    | "peachpuff"\n    | "peru"\n    | "pink"\n    | "plum"\n    | "powderblue"\n    | "purple"\n    | "rebeccapurple"\n    | "red"\n    | "rosybrown"\n    | "royalblue"\n    | "saddlebrown"\n    | "salmon"\n    | "sandybrown"\n    | "seagreen"\n    | "seashell"\n    | "sienna"\n    | "silver"\n    | "skyblue"\n    | "slateblue"\n    | "slategray"\n    | "slategrey"\n    | "snow"\n    | "springgreen"\n    | "steelblue"\n    | "tan"\n    | "teal"\n    | "thistle"\n    | "tomato"\n    | "transparent"\n    | "turquoise"\n    | "violet"\n    | "wheat"\n    | "white"\n    | "whitesmoke"\n    | "yellow"\n    | "yellowgreen";\n\n  type PageSize = "A3" | "A4" | "A5" | "B4" | "B5" | "JIS-B4" | "JIS-B5" | "ledger" | "legal" | "letter";\n\n  type Paint = Color | "child" | "context-fill" | "context-stroke" | "none" | (string & {});\n\n  type Position<TLength> = TLength | "bottom" | "center" | "left" | "right" | "top" | (string & {});\n\n  type Quote = "close-quote" | "no-close-quote" | "no-open-quote" | "open-quote";\n\n  type RepeatStyle = "no-repeat" | "repeat" | "repeat-x" | "repeat-y" | "round" | "space" | (string & {});\n\n  type SelfPosition = "center" | "end" | "flex-end" | "flex-start" | "self-end" | "self-start" | "start";\n\n  type SingleAnimation<TTime> =\n    | EasingFunction\n    | SingleAnimationDirection\n    | SingleAnimationFillMode\n    | TTime\n    | "infinite"\n    | "none"\n    | "paused"\n    | "running"\n    | (string & {})\n    | (number & {});\n\n  type SingleAnimationDirection = "alternate" | "alternate-reverse" | "normal" | "reverse";\n\n  type SingleAnimationFillMode = "backwards" | "both" | "forwards" | "none";\n\n  type SingleAnimationTimeline = "auto" | "none" | (string & {});\n\n  type SingleTransition<TTime> = EasingFunction | TTime | "all" | "none" | (string & {});\n\n  type StepTimingFunction = "step-end" | "step-start" | (string & {});\n\n  type TrackBreadth<TLength> = TLength | "auto" | "max-content" | "min-content" | (string & {});\n\n  type ViewportLength<TLength> = TLength | "auto" | (string & {});\n\n  type VisualBox = "border-box" | "content-box" | "padding-box";\n}\n'},35103:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es5" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n'},78360:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/////////////////////////////\n/// Window APIs\n/////////////////////////////\n\ninterface AddEventListenerOptions extends EventListenerOptions {\n    once?: boolean;\n    passive?: boolean;\n    signal?: AbortSignal;\n}\n\ninterface AesCbcParams extends Algorithm {\n    iv: BufferSource;\n}\n\ninterface AesCtrParams extends Algorithm {\n    counter: BufferSource;\n    length: number;\n}\n\ninterface AesDerivedKeyParams extends Algorithm {\n    length: number;\n}\n\ninterface AesGcmParams extends Algorithm {\n    additionalData?: BufferSource;\n    iv: BufferSource;\n    tagLength?: number;\n}\n\ninterface AesKeyAlgorithm extends KeyAlgorithm {\n    length: number;\n}\n\ninterface AesKeyGenParams extends Algorithm {\n    length: number;\n}\n\ninterface Algorithm {\n    name: string;\n}\n\ninterface AnalyserOptions extends AudioNodeOptions {\n    fftSize?: number;\n    maxDecibels?: number;\n    minDecibels?: number;\n    smoothingTimeConstant?: number;\n}\n\ninterface AnimationEventInit extends EventInit {\n    animationName?: string;\n    elapsedTime?: number;\n    pseudoElement?: string;\n}\n\ninterface AnimationPlaybackEventInit extends EventInit {\n    currentTime?: CSSNumberish | null;\n    timelineTime?: CSSNumberish | null;\n}\n\ninterface AssignedNodesOptions {\n    flatten?: boolean;\n}\n\ninterface AudioBufferOptions {\n    length: number;\n    numberOfChannels?: number;\n    sampleRate: number;\n}\n\ninterface AudioBufferSourceOptions {\n    buffer?: AudioBuffer | null;\n    detune?: number;\n    loop?: boolean;\n    loopEnd?: number;\n    loopStart?: number;\n    playbackRate?: number;\n}\n\ninterface AudioConfiguration {\n    bitrate?: number;\n    channels?: string;\n    contentType: string;\n    samplerate?: number;\n    spatialRendering?: boolean;\n}\n\ninterface AudioContextOptions {\n    latencyHint?: AudioContextLatencyCategory | number;\n    sampleRate?: number;\n}\n\ninterface AudioNodeOptions {\n    channelCount?: number;\n    channelCountMode?: ChannelCountMode;\n    channelInterpretation?: ChannelInterpretation;\n}\n\ninterface AudioProcessingEventInit extends EventInit {\n    inputBuffer: AudioBuffer;\n    outputBuffer: AudioBuffer;\n    playbackTime: number;\n}\n\ninterface AudioTimestamp {\n    contextTime?: number;\n    performanceTime?: DOMHighResTimeStamp;\n}\n\ninterface AudioWorkletNodeOptions extends AudioNodeOptions {\n    numberOfInputs?: number;\n    numberOfOutputs?: number;\n    outputChannelCount?: number[];\n    parameterData?: Record<string, number>;\n    processorOptions?: any;\n}\n\ninterface AuthenticationExtensionsClientInputs {\n    appid?: string;\n    appidExclude?: string;\n    credProps?: boolean;\n    uvm?: boolean;\n}\n\ninterface AuthenticationExtensionsClientOutputs {\n    appid?: boolean;\n    credProps?: CredentialPropertiesOutput;\n    uvm?: UvmEntries;\n}\n\ninterface AuthenticatorSelectionCriteria {\n    authenticatorAttachment?: AuthenticatorAttachment;\n    requireResidentKey?: boolean;\n    residentKey?: ResidentKeyRequirement;\n    userVerification?: UserVerificationRequirement;\n}\n\ninterface BiquadFilterOptions extends AudioNodeOptions {\n    Q?: number;\n    detune?: number;\n    frequency?: number;\n    gain?: number;\n    type?: BiquadFilterType;\n}\n\ninterface BlobEventInit {\n    data: Blob;\n    timecode?: DOMHighResTimeStamp;\n}\n\ninterface BlobPropertyBag {\n    endings?: EndingType;\n    type?: string;\n}\n\ninterface CSSStyleSheetInit {\n    baseURL?: string;\n    disabled?: boolean;\n    media?: MediaList | string;\n}\n\ninterface CacheQueryOptions {\n    ignoreMethod?: boolean;\n    ignoreSearch?: boolean;\n    ignoreVary?: boolean;\n}\n\ninterface CanvasRenderingContext2DSettings {\n    alpha?: boolean;\n    colorSpace?: PredefinedColorSpace;\n    desynchronized?: boolean;\n    willReadFrequently?: boolean;\n}\n\ninterface ChannelMergerOptions extends AudioNodeOptions {\n    numberOfInputs?: number;\n}\n\ninterface ChannelSplitterOptions extends AudioNodeOptions {\n    numberOfOutputs?: number;\n}\n\ninterface ClientQueryOptions {\n    includeUncontrolled?: boolean;\n    type?: ClientTypes;\n}\n\ninterface ClipboardEventInit extends EventInit {\n    clipboardData?: DataTransfer | null;\n}\n\ninterface ClipboardItemOptions {\n    presentationStyle?: PresentationStyle;\n}\n\ninterface CloseEventInit extends EventInit {\n    code?: number;\n    reason?: string;\n    wasClean?: boolean;\n}\n\ninterface CompositionEventInit extends UIEventInit {\n    data?: string;\n}\n\ninterface ComputedEffectTiming extends EffectTiming {\n    activeDuration?: CSSNumberish;\n    currentIteration?: number | null;\n    endTime?: CSSNumberish;\n    localTime?: CSSNumberish | null;\n    progress?: number | null;\n    startTime?: CSSNumberish;\n}\n\ninterface ComputedKeyframe {\n    composite: CompositeOperationOrAuto;\n    computedOffset: number;\n    easing: string;\n    offset: number | null;\n    [property: string]: string | number | null | undefined;\n}\n\ninterface ConstantSourceOptions {\n    offset?: number;\n}\n\ninterface ConstrainBooleanParameters {\n    exact?: boolean;\n    ideal?: boolean;\n}\n\ninterface ConstrainDOMStringParameters {\n    exact?: string | string[];\n    ideal?: string | string[];\n}\n\ninterface ConstrainDoubleRange extends DoubleRange {\n    exact?: number;\n    ideal?: number;\n}\n\ninterface ConstrainULongRange extends ULongRange {\n    exact?: number;\n    ideal?: number;\n}\n\ninterface ConvolverOptions extends AudioNodeOptions {\n    buffer?: AudioBuffer | null;\n    disableNormalization?: boolean;\n}\n\ninterface CredentialCreationOptions {\n    publicKey?: PublicKeyCredentialCreationOptions;\n    signal?: AbortSignal;\n}\n\ninterface CredentialPropertiesOutput {\n    rk?: boolean;\n}\n\ninterface CredentialRequestOptions {\n    mediation?: CredentialMediationRequirement;\n    publicKey?: PublicKeyCredentialRequestOptions;\n    signal?: AbortSignal;\n}\n\ninterface CryptoKeyPair {\n    privateKey: CryptoKey;\n    publicKey: CryptoKey;\n}\n\ninterface CustomEventInit<T = any> extends EventInit {\n    detail?: T;\n}\n\ninterface DOMMatrix2DInit {\n    a?: number;\n    b?: number;\n    c?: number;\n    d?: number;\n    e?: number;\n    f?: number;\n    m11?: number;\n    m12?: number;\n    m21?: number;\n    m22?: number;\n    m41?: number;\n    m42?: number;\n}\n\ninterface DOMMatrixInit extends DOMMatrix2DInit {\n    is2D?: boolean;\n    m13?: number;\n    m14?: number;\n    m23?: number;\n    m24?: number;\n    m31?: number;\n    m32?: number;\n    m33?: number;\n    m34?: number;\n    m43?: number;\n    m44?: number;\n}\n\ninterface DOMPointInit {\n    w?: number;\n    x?: number;\n    y?: number;\n    z?: number;\n}\n\ninterface DOMQuadInit {\n    p1?: DOMPointInit;\n    p2?: DOMPointInit;\n    p3?: DOMPointInit;\n    p4?: DOMPointInit;\n}\n\ninterface DOMRectInit {\n    height?: number;\n    width?: number;\n    x?: number;\n    y?: number;\n}\n\ninterface DelayOptions extends AudioNodeOptions {\n    delayTime?: number;\n    maxDelayTime?: number;\n}\n\ninterface DeviceMotionEventAccelerationInit {\n    x?: number | null;\n    y?: number | null;\n    z?: number | null;\n}\n\ninterface DeviceMotionEventInit extends EventInit {\n    acceleration?: DeviceMotionEventAccelerationInit;\n    accelerationIncludingGravity?: DeviceMotionEventAccelerationInit;\n    interval?: number;\n    rotationRate?: DeviceMotionEventRotationRateInit;\n}\n\ninterface DeviceMotionEventRotationRateInit {\n    alpha?: number | null;\n    beta?: number | null;\n    gamma?: number | null;\n}\n\ninterface DeviceOrientationEventInit extends EventInit {\n    absolute?: boolean;\n    alpha?: number | null;\n    beta?: number | null;\n    gamma?: number | null;\n}\n\ninterface DisplayMediaStreamConstraints {\n    audio?: boolean | MediaTrackConstraints;\n    video?: boolean | MediaTrackConstraints;\n}\n\ninterface DocumentTimelineOptions {\n    originTime?: DOMHighResTimeStamp;\n}\n\ninterface DoubleRange {\n    max?: number;\n    min?: number;\n}\n\ninterface DragEventInit extends MouseEventInit {\n    dataTransfer?: DataTransfer | null;\n}\n\ninterface DynamicsCompressorOptions extends AudioNodeOptions {\n    attack?: number;\n    knee?: number;\n    ratio?: number;\n    release?: number;\n    threshold?: number;\n}\n\ninterface EcKeyAlgorithm extends KeyAlgorithm {\n    namedCurve: NamedCurve;\n}\n\ninterface EcKeyGenParams extends Algorithm {\n    namedCurve: NamedCurve;\n}\n\ninterface EcKeyImportParams extends Algorithm {\n    namedCurve: NamedCurve;\n}\n\ninterface EcdhKeyDeriveParams extends Algorithm {\n    public: CryptoKey;\n}\n\ninterface EcdsaParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n}\n\ninterface EffectTiming {\n    delay?: number;\n    direction?: PlaybackDirection;\n    duration?: number | string;\n    easing?: string;\n    endDelay?: number;\n    fill?: FillMode;\n    iterationStart?: number;\n    iterations?: number;\n    playbackRate?: number;\n}\n\ninterface ElementCreationOptions {\n    is?: string;\n}\n\ninterface ElementDefinitionOptions {\n    extends?: string;\n}\n\ninterface ErrorEventInit extends EventInit {\n    colno?: number;\n    error?: any;\n    filename?: string;\n    lineno?: number;\n    message?: string;\n}\n\ninterface EventInit {\n    bubbles?: boolean;\n    cancelable?: boolean;\n    composed?: boolean;\n}\n\ninterface EventListenerOptions {\n    capture?: boolean;\n}\n\ninterface EventModifierInit extends UIEventInit {\n    altKey?: boolean;\n    ctrlKey?: boolean;\n    metaKey?: boolean;\n    modifierAltGraph?: boolean;\n    modifierCapsLock?: boolean;\n    modifierFn?: boolean;\n    modifierFnLock?: boolean;\n    modifierHyper?: boolean;\n    modifierNumLock?: boolean;\n    modifierScrollLock?: boolean;\n    modifierSuper?: boolean;\n    modifierSymbol?: boolean;\n    modifierSymbolLock?: boolean;\n    shiftKey?: boolean;\n}\n\ninterface EventSourceInit {\n    withCredentials?: boolean;\n}\n\ninterface FilePropertyBag extends BlobPropertyBag {\n    lastModified?: number;\n}\n\ninterface FileSystemFlags {\n    create?: boolean;\n    exclusive?: boolean;\n}\n\ninterface FileSystemGetDirectoryOptions {\n    create?: boolean;\n}\n\ninterface FileSystemGetFileOptions {\n    create?: boolean;\n}\n\ninterface FileSystemRemoveOptions {\n    recursive?: boolean;\n}\n\ninterface FocusEventInit extends UIEventInit {\n    relatedTarget?: EventTarget | null;\n}\n\ninterface FocusOptions {\n    preventScroll?: boolean;\n}\n\ninterface FontFaceDescriptors {\n    display?: string;\n    featureSettings?: string;\n    stretch?: string;\n    style?: string;\n    unicodeRange?: string;\n    variant?: string;\n    weight?: string;\n}\n\ninterface FontFaceSetLoadEventInit extends EventInit {\n    fontfaces?: FontFace[];\n}\n\ninterface FormDataEventInit extends EventInit {\n    formData: FormData;\n}\n\ninterface FullscreenOptions {\n    navigationUI?: FullscreenNavigationUI;\n}\n\ninterface GainOptions extends AudioNodeOptions {\n    gain?: number;\n}\n\ninterface GamepadEventInit extends EventInit {\n    gamepad: Gamepad;\n}\n\ninterface GetAnimationsOptions {\n    subtree?: boolean;\n}\n\ninterface GetNotificationOptions {\n    tag?: string;\n}\n\ninterface GetRootNodeOptions {\n    composed?: boolean;\n}\n\ninterface HashChangeEventInit extends EventInit {\n    newURL?: string;\n    oldURL?: string;\n}\n\ninterface HkdfParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    info: BufferSource;\n    salt: BufferSource;\n}\n\ninterface HmacImportParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    length?: number;\n}\n\ninterface HmacKeyAlgorithm extends KeyAlgorithm {\n    hash: KeyAlgorithm;\n    length: number;\n}\n\ninterface HmacKeyGenParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    length?: number;\n}\n\ninterface IDBDatabaseInfo {\n    name?: string;\n    version?: number;\n}\n\ninterface IDBIndexParameters {\n    multiEntry?: boolean;\n    unique?: boolean;\n}\n\ninterface IDBObjectStoreParameters {\n    autoIncrement?: boolean;\n    keyPath?: string | string[] | null;\n}\n\ninterface IDBVersionChangeEventInit extends EventInit {\n    newVersion?: number | null;\n    oldVersion?: number;\n}\n\ninterface IIRFilterOptions extends AudioNodeOptions {\n    feedback: number[];\n    feedforward: number[];\n}\n\ninterface IdleRequestOptions {\n    timeout?: number;\n}\n\ninterface ImageBitmapOptions {\n    colorSpaceConversion?: ColorSpaceConversion;\n    imageOrientation?: ImageOrientation;\n    premultiplyAlpha?: PremultiplyAlpha;\n    resizeHeight?: number;\n    resizeQuality?: ResizeQuality;\n    resizeWidth?: number;\n}\n\ninterface ImageBitmapRenderingContextSettings {\n    alpha?: boolean;\n}\n\ninterface ImageDataSettings {\n    colorSpace?: PredefinedColorSpace;\n}\n\ninterface ImportMeta {\n    url: string;\n}\n\ninterface InputEventInit extends UIEventInit {\n    data?: string | null;\n    dataTransfer?: DataTransfer | null;\n    inputType?: string;\n    isComposing?: boolean;\n    targetRanges?: StaticRange[];\n}\n\ninterface IntersectionObserverEntryInit {\n    boundingClientRect: DOMRectInit;\n    intersectionRatio: number;\n    intersectionRect: DOMRectInit;\n    isIntersecting: boolean;\n    rootBounds: DOMRectInit | null;\n    target: Element;\n    time: DOMHighResTimeStamp;\n}\n\ninterface IntersectionObserverInit {\n    root?: Element | Document | null;\n    rootMargin?: string;\n    threshold?: number | number[];\n}\n\ninterface JsonWebKey {\n    alg?: string;\n    crv?: string;\n    d?: string;\n    dp?: string;\n    dq?: string;\n    e?: string;\n    ext?: boolean;\n    k?: string;\n    key_ops?: string[];\n    kty?: string;\n    n?: string;\n    oth?: RsaOtherPrimesInfo[];\n    p?: string;\n    q?: string;\n    qi?: string;\n    use?: string;\n    x?: string;\n    y?: string;\n}\n\ninterface KeyAlgorithm {\n    name: string;\n}\n\ninterface KeyboardEventInit extends EventModifierInit {\n    /** @deprecated */\n    charCode?: number;\n    code?: string;\n    isComposing?: boolean;\n    key?: string;\n    /** @deprecated */\n    keyCode?: number;\n    location?: number;\n    repeat?: boolean;\n}\n\ninterface Keyframe {\n    composite?: CompositeOperationOrAuto;\n    easing?: string;\n    offset?: number | null;\n    [property: string]: string | number | null | undefined;\n}\n\ninterface KeyframeAnimationOptions extends KeyframeEffectOptions {\n    id?: string;\n}\n\ninterface KeyframeEffectOptions extends EffectTiming {\n    composite?: CompositeOperation;\n    iterationComposite?: IterationCompositeOperation;\n    pseudoElement?: string | null;\n}\n\ninterface LockInfo {\n    clientId?: string;\n    mode?: LockMode;\n    name?: string;\n}\n\ninterface LockManagerSnapshot {\n    held?: LockInfo[];\n    pending?: LockInfo[];\n}\n\ninterface LockOptions {\n    ifAvailable?: boolean;\n    mode?: LockMode;\n    signal?: AbortSignal;\n    steal?: boolean;\n}\n\ninterface MediaCapabilitiesDecodingInfo extends MediaCapabilitiesInfo {\n    configuration?: MediaDecodingConfiguration;\n}\n\ninterface MediaCapabilitiesEncodingInfo extends MediaCapabilitiesInfo {\n    configuration?: MediaEncodingConfiguration;\n}\n\ninterface MediaCapabilitiesInfo {\n    powerEfficient: boolean;\n    smooth: boolean;\n    supported: boolean;\n}\n\ninterface MediaConfiguration {\n    audio?: AudioConfiguration;\n    video?: VideoConfiguration;\n}\n\ninterface MediaDecodingConfiguration extends MediaConfiguration {\n    type: MediaDecodingType;\n}\n\ninterface MediaElementAudioSourceOptions {\n    mediaElement: HTMLMediaElement;\n}\n\ninterface MediaEncodingConfiguration extends MediaConfiguration {\n    type: MediaEncodingType;\n}\n\ninterface MediaEncryptedEventInit extends EventInit {\n    initData?: ArrayBuffer | null;\n    initDataType?: string;\n}\n\ninterface MediaImage {\n    sizes?: string;\n    src: string;\n    type?: string;\n}\n\ninterface MediaKeyMessageEventInit extends EventInit {\n    message: ArrayBuffer;\n    messageType: MediaKeyMessageType;\n}\n\ninterface MediaKeySystemConfiguration {\n    audioCapabilities?: MediaKeySystemMediaCapability[];\n    distinctiveIdentifier?: MediaKeysRequirement;\n    initDataTypes?: string[];\n    label?: string;\n    persistentState?: MediaKeysRequirement;\n    sessionTypes?: string[];\n    videoCapabilities?: MediaKeySystemMediaCapability[];\n}\n\ninterface MediaKeySystemMediaCapability {\n    contentType?: string;\n    encryptionScheme?: string | null;\n    robustness?: string;\n}\n\ninterface MediaMetadataInit {\n    album?: string;\n    artist?: string;\n    artwork?: MediaImage[];\n    title?: string;\n}\n\ninterface MediaPositionState {\n    duration?: number;\n    playbackRate?: number;\n    position?: number;\n}\n\ninterface MediaQueryListEventInit extends EventInit {\n    matches?: boolean;\n    media?: string;\n}\n\ninterface MediaRecorderErrorEventInit extends EventInit {\n    error: DOMException;\n}\n\ninterface MediaRecorderOptions {\n    audioBitsPerSecond?: number;\n    bitsPerSecond?: number;\n    mimeType?: string;\n    videoBitsPerSecond?: number;\n}\n\ninterface MediaSessionActionDetails {\n    action: MediaSessionAction;\n    fastSeek?: boolean | null;\n    seekOffset?: number | null;\n    seekTime?: number | null;\n}\n\ninterface MediaStreamAudioSourceOptions {\n    mediaStream: MediaStream;\n}\n\ninterface MediaStreamConstraints {\n    audio?: boolean | MediaTrackConstraints;\n    peerIdentity?: string;\n    preferCurrentTab?: boolean;\n    video?: boolean | MediaTrackConstraints;\n}\n\ninterface MediaStreamTrackEventInit extends EventInit {\n    track: MediaStreamTrack;\n}\n\ninterface MediaTrackCapabilities {\n    aspectRatio?: DoubleRange;\n    autoGainControl?: boolean[];\n    channelCount?: ULongRange;\n    cursor?: string[];\n    deviceId?: string;\n    displaySurface?: string;\n    echoCancellation?: boolean[];\n    facingMode?: string[];\n    frameRate?: DoubleRange;\n    groupId?: string;\n    height?: ULongRange;\n    latency?: DoubleRange;\n    logicalSurface?: boolean;\n    noiseSuppression?: boolean[];\n    resizeMode?: string[];\n    sampleRate?: ULongRange;\n    sampleSize?: ULongRange;\n    width?: ULongRange;\n}\n\ninterface MediaTrackConstraintSet {\n    aspectRatio?: ConstrainDouble;\n    autoGainControl?: ConstrainBoolean;\n    channelCount?: ConstrainULong;\n    deviceId?: ConstrainDOMString;\n    echoCancellation?: ConstrainBoolean;\n    facingMode?: ConstrainDOMString;\n    frameRate?: ConstrainDouble;\n    groupId?: ConstrainDOMString;\n    height?: ConstrainULong;\n    latency?: ConstrainDouble;\n    noiseSuppression?: ConstrainBoolean;\n    sampleRate?: ConstrainULong;\n    sampleSize?: ConstrainULong;\n    suppressLocalAudioPlayback?: ConstrainBoolean;\n    width?: ConstrainULong;\n}\n\ninterface MediaTrackConstraints extends MediaTrackConstraintSet {\n    advanced?: MediaTrackConstraintSet[];\n}\n\ninterface MediaTrackSettings {\n    aspectRatio?: number;\n    autoGainControl?: boolean;\n    deviceId?: string;\n    echoCancellation?: boolean;\n    facingMode?: string;\n    frameRate?: number;\n    groupId?: string;\n    height?: number;\n    noiseSuppression?: boolean;\n    restrictOwnAudio?: boolean;\n    sampleRate?: number;\n    sampleSize?: number;\n    width?: number;\n}\n\ninterface MediaTrackSupportedConstraints {\n    aspectRatio?: boolean;\n    autoGainControl?: boolean;\n    deviceId?: boolean;\n    echoCancellation?: boolean;\n    facingMode?: boolean;\n    frameRate?: boolean;\n    groupId?: boolean;\n    height?: boolean;\n    noiseSuppression?: boolean;\n    sampleRate?: boolean;\n    sampleSize?: boolean;\n    suppressLocalAudioPlayback?: boolean;\n    width?: boolean;\n}\n\ninterface MessageEventInit<T = any> extends EventInit {\n    data?: T;\n    lastEventId?: string;\n    origin?: string;\n    ports?: MessagePort[];\n    source?: MessageEventSource | null;\n}\n\ninterface MouseEventInit extends EventModifierInit {\n    button?: number;\n    buttons?: number;\n    clientX?: number;\n    clientY?: number;\n    movementX?: number;\n    movementY?: number;\n    relatedTarget?: EventTarget | null;\n    screenX?: number;\n    screenY?: number;\n}\n\ninterface MultiCacheQueryOptions extends CacheQueryOptions {\n    cacheName?: string;\n}\n\ninterface MutationObserverInit {\n    /** Set to a list of attribute local names (without namespace) if not all attribute mutations need to be observed and attributes is true or omitted. */\n    attributeFilter?: string[];\n    /** Set to true if attributes is true or omitted and target\'s attribute value before the mutation needs to be recorded. */\n    attributeOldValue?: boolean;\n    /** Set to true if mutations to target\'s attributes are to be observed. Can be omitted if attributeOldValue or attributeFilter is specified. */\n    attributes?: boolean;\n    /** Set to true if mutations to target\'s data are to be observed. Can be omitted if characterDataOldValue is specified. */\n    characterData?: boolean;\n    /** Set to true if characterData is set to true or omitted and target\'s data before the mutation needs to be recorded. */\n    characterDataOldValue?: boolean;\n    /** Set to true if mutations to target\'s children are to be observed. */\n    childList?: boolean;\n    /** Set to true if mutations to not just target, but also target\'s descendants are to be observed. */\n    subtree?: boolean;\n}\n\ninterface NotificationAction {\n    action: string;\n    icon?: string;\n    title: string;\n}\n\ninterface NotificationOptions {\n    actions?: NotificationAction[];\n    badge?: string;\n    body?: string;\n    data?: any;\n    dir?: NotificationDirection;\n    icon?: string;\n    image?: string;\n    lang?: string;\n    renotify?: boolean;\n    requireInteraction?: boolean;\n    silent?: boolean;\n    tag?: string;\n    timestamp?: EpochTimeStamp;\n    vibrate?: VibratePattern;\n}\n\ninterface OfflineAudioCompletionEventInit extends EventInit {\n    renderedBuffer: AudioBuffer;\n}\n\ninterface OfflineAudioContextOptions {\n    length: number;\n    numberOfChannels?: number;\n    sampleRate: number;\n}\n\ninterface OptionalEffectTiming {\n    delay?: number;\n    direction?: PlaybackDirection;\n    duration?: number | string;\n    easing?: string;\n    endDelay?: number;\n    fill?: FillMode;\n    iterationStart?: number;\n    iterations?: number;\n    playbackRate?: number;\n}\n\ninterface OscillatorOptions extends AudioNodeOptions {\n    detune?: number;\n    frequency?: number;\n    periodicWave?: PeriodicWave;\n    type?: OscillatorType;\n}\n\ninterface PageTransitionEventInit extends EventInit {\n    persisted?: boolean;\n}\n\ninterface PannerOptions extends AudioNodeOptions {\n    coneInnerAngle?: number;\n    coneOuterAngle?: number;\n    coneOuterGain?: number;\n    distanceModel?: DistanceModelType;\n    maxDistance?: number;\n    orientationX?: number;\n    orientationY?: number;\n    orientationZ?: number;\n    panningModel?: PanningModelType;\n    positionX?: number;\n    positionY?: number;\n    positionZ?: number;\n    refDistance?: number;\n    rolloffFactor?: number;\n}\n\ninterface PaymentCurrencyAmount {\n    currency: string;\n    value: string;\n}\n\ninterface PaymentDetailsBase {\n    displayItems?: PaymentItem[];\n    modifiers?: PaymentDetailsModifier[];\n}\n\ninterface PaymentDetailsInit extends PaymentDetailsBase {\n    id?: string;\n    total: PaymentItem;\n}\n\ninterface PaymentDetailsModifier {\n    additionalDisplayItems?: PaymentItem[];\n    data?: any;\n    supportedMethods: string;\n    total?: PaymentItem;\n}\n\ninterface PaymentDetailsUpdate extends PaymentDetailsBase {\n    paymentMethodErrors?: any;\n    total?: PaymentItem;\n}\n\ninterface PaymentItem {\n    amount: PaymentCurrencyAmount;\n    label: string;\n    pending?: boolean;\n}\n\ninterface PaymentMethodChangeEventInit extends PaymentRequestUpdateEventInit {\n    methodDetails?: any;\n    methodName?: string;\n}\n\ninterface PaymentMethodData {\n    data?: any;\n    supportedMethods: string;\n}\n\ninterface PaymentRequestUpdateEventInit extends EventInit {\n}\n\ninterface PaymentValidationErrors {\n    error?: string;\n    paymentMethod?: any;\n}\n\ninterface Pbkdf2Params extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    iterations: number;\n    salt: BufferSource;\n}\n\ninterface PerformanceMarkOptions {\n    detail?: any;\n    startTime?: DOMHighResTimeStamp;\n}\n\ninterface PerformanceMeasureOptions {\n    detail?: any;\n    duration?: DOMHighResTimeStamp;\n    end?: string | DOMHighResTimeStamp;\n    start?: string | DOMHighResTimeStamp;\n}\n\ninterface PerformanceObserverInit {\n    buffered?: boolean;\n    entryTypes?: string[];\n    type?: string;\n}\n\ninterface PeriodicWaveConstraints {\n    disableNormalization?: boolean;\n}\n\ninterface PeriodicWaveOptions extends PeriodicWaveConstraints {\n    imag?: number[] | Float32Array;\n    real?: number[] | Float32Array;\n}\n\ninterface PermissionDescriptor {\n    name: PermissionName;\n}\n\ninterface PointerEventInit extends MouseEventInit {\n    coalescedEvents?: PointerEvent[];\n    height?: number;\n    isPrimary?: boolean;\n    pointerId?: number;\n    pointerType?: string;\n    predictedEvents?: PointerEvent[];\n    pressure?: number;\n    tangentialPressure?: number;\n    tiltX?: number;\n    tiltY?: number;\n    twist?: number;\n    width?: number;\n}\n\ninterface PopStateEventInit extends EventInit {\n    state?: any;\n}\n\ninterface PositionOptions {\n    enableHighAccuracy?: boolean;\n    maximumAge?: number;\n    timeout?: number;\n}\n\ninterface ProgressEventInit extends EventInit {\n    lengthComputable?: boolean;\n    loaded?: number;\n    total?: number;\n}\n\ninterface PromiseRejectionEventInit extends EventInit {\n    promise: Promise<any>;\n    reason?: any;\n}\n\ninterface PropertyIndexedKeyframes {\n    composite?: CompositeOperationOrAuto | CompositeOperationOrAuto[];\n    easing?: string | string[];\n    offset?: number | (number | null)[];\n    [property: string]: string | string[] | number | null | (number | null)[] | undefined;\n}\n\ninterface PublicKeyCredentialCreationOptions {\n    attestation?: AttestationConveyancePreference;\n    authenticatorSelection?: AuthenticatorSelectionCriteria;\n    challenge: BufferSource;\n    excludeCredentials?: PublicKeyCredentialDescriptor[];\n    extensions?: AuthenticationExtensionsClientInputs;\n    pubKeyCredParams: PublicKeyCredentialParameters[];\n    rp: PublicKeyCredentialRpEntity;\n    timeout?: number;\n    user: PublicKeyCredentialUserEntity;\n}\n\ninterface PublicKeyCredentialDescriptor {\n    id: BufferSource;\n    transports?: AuthenticatorTransport[];\n    type: PublicKeyCredentialType;\n}\n\ninterface PublicKeyCredentialEntity {\n    name: string;\n}\n\ninterface PublicKeyCredentialParameters {\n    alg: COSEAlgorithmIdentifier;\n    type: PublicKeyCredentialType;\n}\n\ninterface PublicKeyCredentialRequestOptions {\n    allowCredentials?: PublicKeyCredentialDescriptor[];\n    challenge: BufferSource;\n    extensions?: AuthenticationExtensionsClientInputs;\n    rpId?: string;\n    timeout?: number;\n    userVerification?: UserVerificationRequirement;\n}\n\ninterface PublicKeyCredentialRpEntity extends PublicKeyCredentialEntity {\n    id?: string;\n}\n\ninterface PublicKeyCredentialUserEntity extends PublicKeyCredentialEntity {\n    displayName: string;\n    id: BufferSource;\n}\n\ninterface PushSubscriptionJSON {\n    endpoint?: string;\n    expirationTime?: EpochTimeStamp | null;\n    keys?: Record<string, string>;\n}\n\ninterface PushSubscriptionOptionsInit {\n    applicationServerKey?: BufferSource | string | null;\n    userVisibleOnly?: boolean;\n}\n\ninterface QueuingStrategy<T = any> {\n    highWaterMark?: number;\n    size?: QueuingStrategySize<T>;\n}\n\ninterface QueuingStrategyInit {\n    /**\n     * Creates a new ByteLengthQueuingStrategy with the provided high water mark.\n     *\n     * Note that the provided high water mark will not be validated ahead of time. Instead, if it is negative, NaN, or not a number, the resulting ByteLengthQueuingStrategy will cause the corresponding stream constructor to throw.\n     */\n    highWaterMark: number;\n}\n\ninterface RTCAnswerOptions extends RTCOfferAnswerOptions {\n}\n\ninterface RTCCertificateExpiration {\n    expires?: number;\n}\n\ninterface RTCConfiguration {\n    bundlePolicy?: RTCBundlePolicy;\n    certificates?: RTCCertificate[];\n    iceCandidatePoolSize?: number;\n    iceServers?: RTCIceServer[];\n    iceTransportPolicy?: RTCIceTransportPolicy;\n    rtcpMuxPolicy?: RTCRtcpMuxPolicy;\n}\n\ninterface RTCDTMFToneChangeEventInit extends EventInit {\n    tone?: string;\n}\n\ninterface RTCDataChannelEventInit extends EventInit {\n    channel: RTCDataChannel;\n}\n\ninterface RTCDataChannelInit {\n    id?: number;\n    maxPacketLifeTime?: number;\n    maxRetransmits?: number;\n    negotiated?: boolean;\n    ordered?: boolean;\n    protocol?: string;\n}\n\ninterface RTCDtlsFingerprint {\n    algorithm?: string;\n    value?: string;\n}\n\ninterface RTCIceCandidateInit {\n    candidate?: string;\n    sdpMLineIndex?: number | null;\n    sdpMid?: string | null;\n    usernameFragment?: string | null;\n}\n\ninterface RTCIceCandidatePairStats extends RTCStats {\n    availableIncomingBitrate?: number;\n    availableOutgoingBitrate?: number;\n    bytesReceived?: number;\n    bytesSent?: number;\n    currentRoundTripTime?: number;\n    localCandidateId: string;\n    nominated?: boolean;\n    remoteCandidateId: string;\n    requestsReceived?: number;\n    requestsSent?: number;\n    responsesReceived?: number;\n    responsesSent?: number;\n    state: RTCStatsIceCandidatePairState;\n    totalRoundTripTime?: number;\n    transportId: string;\n}\n\ninterface RTCIceServer {\n    credential?: string;\n    credentialType?: RTCIceCredentialType;\n    urls: string | string[];\n    username?: string;\n}\n\ninterface RTCInboundRtpStreamStats extends RTCReceivedRtpStreamStats {\n    firCount?: number;\n    framesDecoded?: number;\n    nackCount?: number;\n    pliCount?: number;\n    qpSum?: number;\n    remoteId?: string;\n}\n\ninterface RTCLocalSessionDescriptionInit {\n    sdp?: string;\n    type?: RTCSdpType;\n}\n\ninterface RTCOfferAnswerOptions {\n}\n\ninterface RTCOfferOptions extends RTCOfferAnswerOptions {\n    iceRestart?: boolean;\n    offerToReceiveAudio?: boolean;\n    offerToReceiveVideo?: boolean;\n}\n\ninterface RTCOutboundRtpStreamStats extends RTCSentRtpStreamStats {\n    firCount?: number;\n    framesEncoded?: number;\n    nackCount?: number;\n    pliCount?: number;\n    qpSum?: number;\n    remoteId?: string;\n}\n\ninterface RTCPeerConnectionIceErrorEventInit extends EventInit {\n    address?: string | null;\n    errorCode: number;\n    errorText?: string;\n    port?: number | null;\n    url?: string;\n}\n\ninterface RTCPeerConnectionIceEventInit extends EventInit {\n    candidate?: RTCIceCandidate | null;\n    url?: string | null;\n}\n\ninterface RTCReceivedRtpStreamStats extends RTCRtpStreamStats {\n    jitter?: number;\n    packetsDiscarded?: number;\n    packetsLost?: number;\n    packetsReceived?: number;\n}\n\ninterface RTCRtcpParameters {\n    cname?: string;\n    reducedSize?: boolean;\n}\n\ninterface RTCRtpCapabilities {\n    codecs: RTCRtpCodecCapability[];\n    headerExtensions: RTCRtpHeaderExtensionCapability[];\n}\n\ninterface RTCRtpCodecCapability {\n    channels?: number;\n    clockRate: number;\n    mimeType: string;\n    sdpFmtpLine?: string;\n}\n\ninterface RTCRtpCodecParameters {\n    channels?: number;\n    clockRate: number;\n    mimeType: string;\n    payloadType: number;\n    sdpFmtpLine?: string;\n}\n\ninterface RTCRtpCodingParameters {\n    rid?: string;\n}\n\ninterface RTCRtpContributingSource {\n    audioLevel?: number;\n    rtpTimestamp: number;\n    source: number;\n    timestamp: DOMHighResTimeStamp;\n}\n\ninterface RTCRtpEncodingParameters extends RTCRtpCodingParameters {\n    active?: boolean;\n    maxBitrate?: number;\n    priority?: RTCPriorityType;\n    scaleResolutionDownBy?: number;\n}\n\ninterface RTCRtpHeaderExtensionCapability {\n    uri?: string;\n}\n\ninterface RTCRtpHeaderExtensionParameters {\n    encrypted?: boolean;\n    id: number;\n    uri: string;\n}\n\ninterface RTCRtpParameters {\n    codecs: RTCRtpCodecParameters[];\n    headerExtensions: RTCRtpHeaderExtensionParameters[];\n    rtcp: RTCRtcpParameters;\n}\n\ninterface RTCRtpReceiveParameters extends RTCRtpParameters {\n}\n\ninterface RTCRtpSendParameters extends RTCRtpParameters {\n    degradationPreference?: RTCDegradationPreference;\n    encodings: RTCRtpEncodingParameters[];\n    transactionId: string;\n}\n\ninterface RTCRtpStreamStats extends RTCStats {\n    codecId?: string;\n    kind: string;\n    ssrc: number;\n    transportId?: string;\n}\n\ninterface RTCRtpSynchronizationSource extends RTCRtpContributingSource {\n}\n\ninterface RTCRtpTransceiverInit {\n    direction?: RTCRtpTransceiverDirection;\n    sendEncodings?: RTCRtpEncodingParameters[];\n    streams?: MediaStream[];\n}\n\ninterface RTCSentRtpStreamStats extends RTCRtpStreamStats {\n    bytesSent?: number;\n    packetsSent?: number;\n}\n\ninterface RTCSessionDescriptionInit {\n    sdp?: string;\n    type: RTCSdpType;\n}\n\ninterface RTCStats {\n    id: string;\n    timestamp: DOMHighResTimeStamp;\n    type: RTCStatsType;\n}\n\ninterface RTCTrackEventInit extends EventInit {\n    receiver: RTCRtpReceiver;\n    streams?: MediaStream[];\n    track: MediaStreamTrack;\n    transceiver: RTCRtpTransceiver;\n}\n\ninterface RTCTransportStats extends RTCStats {\n    bytesReceived?: number;\n    bytesSent?: number;\n    dtlsCipher?: string;\n    dtlsState: RTCDtlsTransportState;\n    localCertificateId?: string;\n    remoteCertificateId?: string;\n    rtcpTransportStatsId?: string;\n    selectedCandidatePairId?: string;\n    srtpCipher?: string;\n    tlsVersion?: string;\n}\n\ninterface ReadableStreamDefaultReadDoneResult {\n    done: true;\n    value?: undefined;\n}\n\ninterface ReadableStreamDefaultReadValueResult<T> {\n    done: false;\n    value: T;\n}\n\ninterface ReadableWritablePair<R = any, W = any> {\n    readable: ReadableStream<R>;\n    /**\n     * Provides a convenient, chainable way of piping this readable stream through a transform stream (or any other { writable, readable } pair). It simply pipes the stream into the writable side of the supplied pair, and returns the readable side for further use.\n     *\n     * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n     */\n    writable: WritableStream<W>;\n}\n\ninterface RegistrationOptions {\n    scope?: string;\n    type?: WorkerType;\n    updateViaCache?: ServiceWorkerUpdateViaCache;\n}\n\ninterface RequestInit {\n    /** A BodyInit object or null to set request\'s body. */\n    body?: BodyInit | null;\n    /** A string indicating how the request will interact with the browser\'s cache to set request\'s cache. */\n    cache?: RequestCache;\n    /** A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request\'s credentials. */\n    credentials?: RequestCredentials;\n    /** A Headers object, an object literal, or an array of two-item arrays to set request\'s headers. */\n    headers?: HeadersInit;\n    /** A cryptographic hash of the resource to be fetched by request. Sets request\'s integrity. */\n    integrity?: string;\n    /** A boolean to set request\'s keepalive. */\n    keepalive?: boolean;\n    /** A string to set request\'s method. */\n    method?: string;\n    /** A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request\'s mode. */\n    mode?: RequestMode;\n    /** A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request\'s redirect. */\n    redirect?: RequestRedirect;\n    /** A string whose value is a same-origin URL, "about:client", or the empty string, to set request\'s referrer. */\n    referrer?: string;\n    /** A referrer policy to set request\'s referrerPolicy. */\n    referrerPolicy?: ReferrerPolicy;\n    /** An AbortSignal to set request\'s signal. */\n    signal?: AbortSignal | null;\n    /** Can only be null. Used to disassociate request from any Window. */\n    window?: null;\n}\n\ninterface ResizeObserverOptions {\n    box?: ResizeObserverBoxOptions;\n}\n\ninterface ResponseInit {\n    headers?: HeadersInit;\n    status?: number;\n    statusText?: string;\n}\n\ninterface RsaHashedImportParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n}\n\ninterface RsaHashedKeyAlgorithm extends RsaKeyAlgorithm {\n    hash: KeyAlgorithm;\n}\n\ninterface RsaHashedKeyGenParams extends RsaKeyGenParams {\n    hash: HashAlgorithmIdentifier;\n}\n\ninterface RsaKeyAlgorithm extends KeyAlgorithm {\n    modulusLength: number;\n    publicExponent: BigInteger;\n}\n\ninterface RsaKeyGenParams extends Algorithm {\n    modulusLength: number;\n    publicExponent: BigInteger;\n}\n\ninterface RsaOaepParams extends Algorithm {\n    label?: BufferSource;\n}\n\ninterface RsaOtherPrimesInfo {\n    d?: string;\n    r?: string;\n    t?: string;\n}\n\ninterface RsaPssParams extends Algorithm {\n    saltLength: number;\n}\n\ninterface SVGBoundingBoxOptions {\n    clipped?: boolean;\n    fill?: boolean;\n    markers?: boolean;\n    stroke?: boolean;\n}\n\ninterface ScrollIntoViewOptions extends ScrollOptions {\n    block?: ScrollLogicalPosition;\n    inline?: ScrollLogicalPosition;\n}\n\ninterface ScrollOptions {\n    behavior?: ScrollBehavior;\n}\n\ninterface ScrollToOptions extends ScrollOptions {\n    left?: number;\n    top?: number;\n}\n\ninterface SecurityPolicyViolationEventInit extends EventInit {\n    blockedURI?: string;\n    columnNumber?: number;\n    disposition: SecurityPolicyViolationEventDisposition;\n    documentURI: string;\n    effectiveDirective: string;\n    lineNumber?: number;\n    originalPolicy: string;\n    referrer?: string;\n    sample?: string;\n    sourceFile?: string;\n    statusCode: number;\n    violatedDirective: string;\n}\n\ninterface ShadowRootInit {\n    delegatesFocus?: boolean;\n    mode: ShadowRootMode;\n    slotAssignment?: SlotAssignmentMode;\n}\n\ninterface ShareData {\n    files?: File[];\n    text?: string;\n    title?: string;\n    url?: string;\n}\n\ninterface SpeechSynthesisErrorEventInit extends SpeechSynthesisEventInit {\n    error: SpeechSynthesisErrorCode;\n}\n\ninterface SpeechSynthesisEventInit extends EventInit {\n    charIndex?: number;\n    charLength?: number;\n    elapsedTime?: number;\n    name?: string;\n    utterance: SpeechSynthesisUtterance;\n}\n\ninterface StaticRangeInit {\n    endContainer: Node;\n    endOffset: number;\n    startContainer: Node;\n    startOffset: number;\n}\n\ninterface StereoPannerOptions extends AudioNodeOptions {\n    pan?: number;\n}\n\ninterface StorageEstimate {\n    quota?: number;\n    usage?: number;\n}\n\ninterface StorageEventInit extends EventInit {\n    key?: string | null;\n    newValue?: string | null;\n    oldValue?: string | null;\n    storageArea?: Storage | null;\n    url?: string;\n}\n\ninterface StreamPipeOptions {\n    preventAbort?: boolean;\n    preventCancel?: boolean;\n    /**\n     * Pipes this readable stream to a given writable stream destination. The way in which the piping process behaves under various error conditions can be customized with a number of passed options. It returns a promise that fulfills when the piping process completes successfully, or rejects if any errors were encountered.\n     *\n     * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n     *\n     * Errors and closures of the source and destination streams propagate as follows:\n     *\n     * An error in this source readable stream will abort destination, unless preventAbort is truthy. The returned promise will be rejected with the source\'s error, or with any error that occurs during aborting the destination.\n     *\n     * An error in destination will cancel this source readable stream, unless preventCancel is truthy. The returned promise will be rejected with the destination\'s error, or with any error that occurs during canceling the source.\n     *\n     * When this source readable stream closes, destination will be closed, unless preventClose is truthy. The returned promise will be fulfilled once this process completes, unless an error is encountered while closing the destination, in which case it will be rejected with that error.\n     *\n     * If destination starts out closed or closing, this source readable stream will be canceled, unless preventCancel is true. The returned promise will be rejected with an error indicating piping to a closed stream failed, or with any error that occurs during canceling the source.\n     *\n     * The signal option can be set to an AbortSignal to allow aborting an ongoing pipe operation via the corresponding AbortController. In this case, this source readable stream will be canceled, and destination aborted, unless the respective options preventCancel or preventAbort are set.\n     */\n    preventClose?: boolean;\n    signal?: AbortSignal;\n}\n\ninterface StructuredSerializeOptions {\n    transfer?: Transferable[];\n}\n\ninterface SubmitEventInit extends EventInit {\n    submitter?: HTMLElement | null;\n}\n\ninterface TextDecodeOptions {\n    stream?: boolean;\n}\n\ninterface TextDecoderOptions {\n    fatal?: boolean;\n    ignoreBOM?: boolean;\n}\n\ninterface TextEncoderEncodeIntoResult {\n    read?: number;\n    written?: number;\n}\n\ninterface TouchEventInit extends EventModifierInit {\n    changedTouches?: Touch[];\n    targetTouches?: Touch[];\n    touches?: Touch[];\n}\n\ninterface TouchInit {\n    altitudeAngle?: number;\n    azimuthAngle?: number;\n    clientX?: number;\n    clientY?: number;\n    force?: number;\n    identifier: number;\n    pageX?: number;\n    pageY?: number;\n    radiusX?: number;\n    radiusY?: number;\n    rotationAngle?: number;\n    screenX?: number;\n    screenY?: number;\n    target: EventTarget;\n    touchType?: TouchType;\n}\n\ninterface TrackEventInit extends EventInit {\n    track?: TextTrack | null;\n}\n\ninterface Transformer<I = any, O = any> {\n    flush?: TransformerFlushCallback<O>;\n    readableType?: undefined;\n    start?: TransformerStartCallback<O>;\n    transform?: TransformerTransformCallback<I, O>;\n    writableType?: undefined;\n}\n\ninterface TransitionEventInit extends EventInit {\n    elapsedTime?: number;\n    propertyName?: string;\n    pseudoElement?: string;\n}\n\ninterface UIEventInit extends EventInit {\n    detail?: number;\n    view?: Window | null;\n    /** @deprecated */\n    which?: number;\n}\n\ninterface ULongRange {\n    max?: number;\n    min?: number;\n}\n\ninterface UnderlyingSink<W = any> {\n    abort?: UnderlyingSinkAbortCallback;\n    close?: UnderlyingSinkCloseCallback;\n    start?: UnderlyingSinkStartCallback;\n    type?: undefined;\n    write?: UnderlyingSinkWriteCallback<W>;\n}\n\ninterface UnderlyingSource<R = any> {\n    cancel?: UnderlyingSourceCancelCallback;\n    pull?: UnderlyingSourcePullCallback<R>;\n    start?: UnderlyingSourceStartCallback<R>;\n    type?: undefined;\n}\n\ninterface VideoConfiguration {\n    bitrate: number;\n    colorGamut?: ColorGamut;\n    contentType: string;\n    framerate: number;\n    hdrMetadataType?: HdrMetadataType;\n    height: number;\n    scalabilityMode?: string;\n    transferFunction?: TransferFunction;\n    width: number;\n}\n\ninterface WaveShaperOptions extends AudioNodeOptions {\n    curve?: number[] | Float32Array;\n    oversample?: OverSampleType;\n}\n\ninterface WebGLContextAttributes {\n    alpha?: boolean;\n    antialias?: boolean;\n    depth?: boolean;\n    desynchronized?: boolean;\n    failIfMajorPerformanceCaveat?: boolean;\n    powerPreference?: WebGLPowerPreference;\n    premultipliedAlpha?: boolean;\n    preserveDrawingBuffer?: boolean;\n    stencil?: boolean;\n}\n\ninterface WebGLContextEventInit extends EventInit {\n    statusMessage?: string;\n}\n\ninterface WheelEventInit extends MouseEventInit {\n    deltaMode?: number;\n    deltaX?: number;\n    deltaY?: number;\n    deltaZ?: number;\n}\n\ninterface WindowPostMessageOptions extends StructuredSerializeOptions {\n    targetOrigin?: string;\n}\n\ninterface WorkerOptions {\n    credentials?: RequestCredentials;\n    name?: string;\n    type?: WorkerType;\n}\n\ninterface WorkletOptions {\n    credentials?: RequestCredentials;\n}\n\ntype NodeFilter = ((node: Node) => number) | { acceptNode(node: Node): number; };\n\ndeclare var NodeFilter: {\n    readonly FILTER_ACCEPT: number;\n    readonly FILTER_REJECT: number;\n    readonly FILTER_SKIP: number;\n    readonly SHOW_ALL: number;\n    readonly SHOW_ATTRIBUTE: number;\n    readonly SHOW_CDATA_SECTION: number;\n    readonly SHOW_COMMENT: number;\n    readonly SHOW_DOCUMENT: number;\n    readonly SHOW_DOCUMENT_FRAGMENT: number;\n    readonly SHOW_DOCUMENT_TYPE: number;\n    readonly SHOW_ELEMENT: number;\n    readonly SHOW_ENTITY: number;\n    readonly SHOW_ENTITY_REFERENCE: number;\n    readonly SHOW_NOTATION: number;\n    readonly SHOW_PROCESSING_INSTRUCTION: number;\n    readonly SHOW_TEXT: number;\n};\n\ntype XPathNSResolver = ((prefix: string | null) => string | null) | { lookupNamespaceURI(prefix: string | null): string | null; };\n\n/** The ANGLE_instanced_arrays extension is part of the WebGL API and allows to draw the same object, or groups of similar objects multiple times, if they share the same vertex data, primitive count and type. */\ninterface ANGLE_instanced_arrays {\n    drawArraysInstancedANGLE(mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei): void;\n    drawElementsInstancedANGLE(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr, primcount: GLsizei): void;\n    vertexAttribDivisorANGLE(index: GLuint, divisor: GLuint): void;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: GLenum;\n}\n\ninterface ARIAMixin {\n    ariaAtomic: string | null;\n    ariaAutoComplete: string | null;\n    ariaBusy: string | null;\n    ariaChecked: string | null;\n    ariaColCount: string | null;\n    ariaColIndex: string | null;\n    ariaColSpan: string | null;\n    ariaCurrent: string | null;\n    ariaDisabled: string | null;\n    ariaExpanded: string | null;\n    ariaHasPopup: string | null;\n    ariaHidden: string | null;\n    ariaKeyShortcuts: string | null;\n    ariaLabel: string | null;\n    ariaLevel: string | null;\n    ariaLive: string | null;\n    ariaModal: string | null;\n    ariaMultiLine: string | null;\n    ariaMultiSelectable: string | null;\n    ariaOrientation: string | null;\n    ariaPlaceholder: string | null;\n    ariaPosInSet: string | null;\n    ariaPressed: string | null;\n    ariaReadOnly: string | null;\n    ariaRequired: string | null;\n    ariaRoleDescription: string | null;\n    ariaRowCount: string | null;\n    ariaRowIndex: string | null;\n    ariaRowSpan: string | null;\n    ariaSelected: string | null;\n    ariaSetSize: string | null;\n    ariaSort: string | null;\n    ariaValueMax: string | null;\n    ariaValueMin: string | null;\n    ariaValueNow: string | null;\n    ariaValueText: string | null;\n}\n\n/** A controller object that allows you to abort one or more DOM requests as and when desired. */\ninterface AbortController {\n    /** Returns the AbortSignal object associated with this object. */\n    readonly signal: AbortSignal;\n    /** Invoking this method will set this object\'s AbortSignal\'s aborted flag and signal to any observers that the associated activity is to be aborted. */\n    abort(reason?: any): void;\n}\n\ndeclare var AbortController: {\n    prototype: AbortController;\n    new(): AbortController;\n};\n\ninterface AbortSignalEventMap {\n    "abort": Event;\n}\n\n/** A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object. */\ninterface AbortSignal extends EventTarget {\n    /** Returns true if this AbortSignal\'s AbortController has signaled to abort, and false otherwise. */\n    readonly aborted: boolean;\n    onabort: ((this: AbortSignal, ev: Event) => any) | null;\n    addEventListener<K extends keyof AbortSignalEventMap>(type: K, listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AbortSignalEventMap>(type: K, listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var AbortSignal: {\n    prototype: AbortSignal;\n    new(): AbortSignal;\n    // abort(): AbortSignal; - To be re-added in the future\n};\n\ninterface AbstractRange {\n    /** Returns true if range is collapsed, and false otherwise. */\n    readonly collapsed: boolean;\n    /** Returns range\'s end node. */\n    readonly endContainer: Node;\n    /** Returns range\'s end offset. */\n    readonly endOffset: number;\n    /** Returns range\'s start node. */\n    readonly startContainer: Node;\n    /** Returns range\'s start offset. */\n    readonly startOffset: number;\n}\n\ndeclare var AbstractRange: {\n    prototype: AbstractRange;\n    new(): AbstractRange;\n};\n\ninterface AbstractWorkerEventMap {\n    "error": ErrorEvent;\n}\n\ninterface AbstractWorker {\n    onerror: ((this: AbstractWorker, ev: ErrorEvent) => any) | null;\n    addEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** A node able to provide real-time frequency and time-domain analysis information. It is an AudioNode that passes the audio stream unchanged from the input to the output, but allows you to take the generated data, process it, and create audio visualizations. */\ninterface AnalyserNode extends AudioNode {\n    fftSize: number;\n    readonly frequencyBinCount: number;\n    maxDecibels: number;\n    minDecibels: number;\n    smoothingTimeConstant: number;\n    getByteFrequencyData(array: Uint8Array): void;\n    getByteTimeDomainData(array: Uint8Array): void;\n    getFloatFrequencyData(array: Float32Array): void;\n    getFloatTimeDomainData(array: Float32Array): void;\n}\n\ndeclare var AnalyserNode: {\n    prototype: AnalyserNode;\n    new(context: BaseAudioContext, options?: AnalyserOptions): AnalyserNode;\n};\n\ninterface Animatable {\n    animate(keyframes: Keyframe[] | PropertyIndexedKeyframes | null, options?: number | KeyframeAnimationOptions): Animation;\n    getAnimations(options?: GetAnimationsOptions): Animation[];\n}\n\ninterface AnimationEventMap {\n    "cancel": AnimationPlaybackEvent;\n    "finish": AnimationPlaybackEvent;\n    "remove": Event;\n}\n\ninterface Animation extends EventTarget {\n    currentTime: CSSNumberish | null;\n    effect: AnimationEffect | null;\n    readonly finished: Promise<Animation>;\n    id: string;\n    oncancel: ((this: Animation, ev: AnimationPlaybackEvent) => any) | null;\n    onfinish: ((this: Animation, ev: AnimationPlaybackEvent) => any) | null;\n    onremove: ((this: Animation, ev: Event) => any) | null;\n    readonly pending: boolean;\n    readonly playState: AnimationPlayState;\n    playbackRate: number;\n    readonly ready: Promise<Animation>;\n    readonly replaceState: AnimationReplaceState;\n    startTime: CSSNumberish | null;\n    timeline: AnimationTimeline | null;\n    cancel(): void;\n    commitStyles(): void;\n    finish(): void;\n    pause(): void;\n    persist(): void;\n    play(): void;\n    reverse(): void;\n    updatePlaybackRate(playbackRate: number): void;\n    addEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: Animation, ev: AnimationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: Animation, ev: AnimationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Animation: {\n    prototype: Animation;\n    new(effect?: AnimationEffect | null, timeline?: AnimationTimeline | null): Animation;\n};\n\ninterface AnimationEffect {\n    getComputedTiming(): ComputedEffectTiming;\n    getTiming(): EffectTiming;\n    updateTiming(timing?: OptionalEffectTiming): void;\n}\n\ndeclare var AnimationEffect: {\n    prototype: AnimationEffect;\n    new(): AnimationEffect;\n};\n\n/** Events providing information related to animations. */\ninterface AnimationEvent extends Event {\n    readonly animationName: string;\n    readonly elapsedTime: number;\n    readonly pseudoElement: string;\n}\n\ndeclare var AnimationEvent: {\n    prototype: AnimationEvent;\n    new(type: string, animationEventInitDict?: AnimationEventInit): AnimationEvent;\n};\n\ninterface AnimationFrameProvider {\n    cancelAnimationFrame(handle: number): void;\n    requestAnimationFrame(callback: FrameRequestCallback): number;\n}\n\ninterface AnimationPlaybackEvent extends Event {\n    readonly currentTime: CSSNumberish | null;\n    readonly timelineTime: CSSNumberish | null;\n}\n\ndeclare var AnimationPlaybackEvent: {\n    prototype: AnimationPlaybackEvent;\n    new(type: string, eventInitDict?: AnimationPlaybackEventInit): AnimationPlaybackEvent;\n};\n\ninterface AnimationTimeline {\n    readonly currentTime: number | null;\n}\n\ndeclare var AnimationTimeline: {\n    prototype: AnimationTimeline;\n    new(): AnimationTimeline;\n};\n\n/** A DOM element\'s attribute as an object. In most DOM methods, you will probably directly retrieve the attribute as a string (e.g., Element.getAttribute(), but certain functions (e.g., Element.getAttributeNode()) or means of iterating give Attr types. */\ninterface Attr extends Node {\n    readonly localName: string;\n    readonly name: string;\n    readonly namespaceURI: string | null;\n    readonly ownerDocument: Document;\n    readonly ownerElement: Element | null;\n    readonly prefix: string | null;\n    readonly specified: boolean;\n    value: string;\n}\n\ndeclare var Attr: {\n    prototype: Attr;\n    new(): Attr;\n};\n\n/** A short audio asset residing in memory, created from an audio file using the AudioContext.decodeAudioData() method, or from raw data using AudioContext.createBuffer(). Once put into an AudioBuffer, the audio can then be played by being passed into an AudioBufferSourceNode. */\ninterface AudioBuffer {\n    readonly duration: number;\n    readonly length: number;\n    readonly numberOfChannels: number;\n    readonly sampleRate: number;\n    copyFromChannel(destination: Float32Array, channelNumber: number, bufferOffset?: number): void;\n    copyToChannel(source: Float32Array, channelNumber: number, bufferOffset?: number): void;\n    getChannelData(channel: number): Float32Array;\n}\n\ndeclare var AudioBuffer: {\n    prototype: AudioBuffer;\n    new(options: AudioBufferOptions): AudioBuffer;\n};\n\n/** An AudioScheduledSourceNode which represents an audio source consisting of in-memory audio data, stored in an AudioBuffer. It\'s especially useful for playing back audio which has particularly stringent timing accuracy requirements, such as for sounds that must match a specific rhythm and can be kept in memory rather than being played from disk or the network. */\ninterface AudioBufferSourceNode extends AudioScheduledSourceNode {\n    buffer: AudioBuffer | null;\n    readonly detune: AudioParam;\n    loop: boolean;\n    loopEnd: number;\n    loopStart: number;\n    readonly playbackRate: AudioParam;\n    start(when?: number, offset?: number, duration?: number): void;\n    addEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this: AudioBufferSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this: AudioBufferSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var AudioBufferSourceNode: {\n    prototype: AudioBufferSourceNode;\n    new(context: BaseAudioContext, options?: AudioBufferSourceOptions): AudioBufferSourceNode;\n};\n\n/** An audio-processing graph built from audio modules linked together, each represented by an AudioNode. */\ninterface AudioContext extends BaseAudioContext {\n    readonly baseLatency: number;\n    close(): Promise<void>;\n    createMediaElementSource(mediaElement: HTMLMediaElement): MediaElementAudioSourceNode;\n    createMediaStreamDestination(): MediaStreamAudioDestinationNode;\n    createMediaStreamSource(mediaStream: MediaStream): MediaStreamAudioSourceNode;\n    getOutputTimestamp(): AudioTimestamp;\n    resume(): Promise<void>;\n    suspend(): Promise<void>;\n    addEventListener<K extends keyof BaseAudioContextEventMap>(type: K, listener: (this: AudioContext, ev: BaseAudioContextEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof BaseAudioContextEventMap>(type: K, listener: (this: AudioContext, ev: BaseAudioContextEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var AudioContext: {\n    prototype: AudioContext;\n    new(contextOptions?: AudioContextOptions): AudioContext;\n};\n\n/** AudioDestinationNode has no output (as it is the output, no more AudioNode can be linked after it in the audio graph) and one input. The number of channels in the input must be between 0 and the maxChannelCount value or an exception is raised. */\ninterface AudioDestinationNode extends AudioNode {\n    readonly maxChannelCount: number;\n}\n\ndeclare var AudioDestinationNode: {\n    prototype: AudioDestinationNode;\n    new(): AudioDestinationNode;\n};\n\n/** The position and orientation of the unique person listening to the audio scene, and is used in audio spatialization. All PannerNodes spatialize in relation to the AudioListener stored in the BaseAudioContext.listener attribute. */\ninterface AudioListener {\n    readonly forwardX: AudioParam;\n    readonly forwardY: AudioParam;\n    readonly forwardZ: AudioParam;\n    readonly positionX: AudioParam;\n    readonly positionY: AudioParam;\n    readonly positionZ: AudioParam;\n    readonly upX: AudioParam;\n    readonly upY: AudioParam;\n    readonly upZ: AudioParam;\n    /** @deprecated */\n    setOrientation(x: number, y: number, z: number, xUp: number, yUp: number, zUp: number): void;\n    /** @deprecated */\n    setPosition(x: number, y: number, z: number): void;\n}\n\ndeclare var AudioListener: {\n    prototype: AudioListener;\n    new(): AudioListener;\n};\n\n/** A generic interface for representing an audio processing module. Examples include: */\ninterface AudioNode extends EventTarget {\n    channelCount: number;\n    channelCountMode: ChannelCountMode;\n    channelInterpretation: ChannelInterpretation;\n    readonly context: BaseAudioContext;\n    readonly numberOfInputs: number;\n    readonly numberOfOutputs: number;\n    connect(destinationNode: AudioNode, output?: number, input?: number): AudioNode;\n    connect(destinationParam: AudioParam, output?: number): void;\n    disconnect(): void;\n    disconnect(output: number): void;\n    disconnect(destinationNode: AudioNode): void;\n    disconnect(destinationNode: AudioNode, output: number): void;\n    disconnect(destinationNode: AudioNode, output: number, input: number): void;\n    disconnect(destinationParam: AudioParam): void;\n    disconnect(destinationParam: AudioParam, output: number): void;\n}\n\ndeclare var AudioNode: {\n    prototype: AudioNode;\n    new(): AudioNode;\n};\n\n/** The Web Audio API\'s AudioParam interface represents an audio-related parameter, usually a parameter of an AudioNode (such as GainNode.gain). */\ninterface AudioParam {\n    automationRate: AutomationRate;\n    readonly defaultValue: number;\n    readonly maxValue: number;\n    readonly minValue: number;\n    value: number;\n    cancelAndHoldAtTime(cancelTime: number): AudioParam;\n    cancelScheduledValues(cancelTime: number): AudioParam;\n    exponentialRampToValueAtTime(value: number, endTime: number): AudioParam;\n    linearRampToValueAtTime(value: number, endTime: number): AudioParam;\n    setTargetAtTime(target: number, startTime: number, timeConstant: number): AudioParam;\n    setValueAtTime(value: number, startTime: number): AudioParam;\n    setValueCurveAtTime(values: number[] | Float32Array, startTime: number, duration: number): AudioParam;\n}\n\ndeclare var AudioParam: {\n    prototype: AudioParam;\n    new(): AudioParam;\n};\n\ninterface AudioParamMap {\n    forEach(callbackfn: (value: AudioParam, key: string, parent: AudioParamMap) => void, thisArg?: any): void;\n}\n\ndeclare var AudioParamMap: {\n    prototype: AudioParamMap;\n    new(): AudioParamMap;\n};\n\n/**\n * The Web Audio API events that occur when a ScriptProcessorNode input buffer is ready to be processed.\n * @deprecated As of the August 29 2014 Web Audio API spec publication, this feature has been marked as deprecated, and is soon to be replaced by AudioWorklet.\n */\ninterface AudioProcessingEvent extends Event {\n    /** @deprecated */\n    readonly inputBuffer: AudioBuffer;\n    /** @deprecated */\n    readonly outputBuffer: AudioBuffer;\n    /** @deprecated */\n    readonly playbackTime: number;\n}\n\n/** @deprecated */\ndeclare var AudioProcessingEvent: {\n    prototype: AudioProcessingEvent;\n    new(type: string, eventInitDict: AudioProcessingEventInit): AudioProcessingEvent;\n};\n\ninterface AudioScheduledSourceNodeEventMap {\n    "ended": Event;\n}\n\ninterface AudioScheduledSourceNode extends AudioNode {\n    onended: ((this: AudioScheduledSourceNode, ev: Event) => any) | null;\n    start(when?: number): void;\n    stop(when?: number): void;\n    addEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this: AudioScheduledSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this: AudioScheduledSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var AudioScheduledSourceNode: {\n    prototype: AudioScheduledSourceNode;\n    new(): AudioScheduledSourceNode;\n};\n\n/** Available only in secure contexts. */\ninterface AudioWorklet extends Worklet {\n}\n\ndeclare var AudioWorklet: {\n    prototype: AudioWorklet;\n    new(): AudioWorklet;\n};\n\ninterface AudioWorkletNodeEventMap {\n    "processorerror": Event;\n}\n\n/** Available only in secure contexts. */\ninterface AudioWorkletNode extends AudioNode {\n    onprocessorerror: ((this: AudioWorkletNode, ev: Event) => any) | null;\n    readonly parameters: AudioParamMap;\n    readonly port: MessagePort;\n    addEventListener<K extends keyof AudioWorkletNodeEventMap>(type: K, listener: (this: AudioWorkletNode, ev: AudioWorkletNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AudioWorkletNodeEventMap>(type: K, listener: (this: AudioWorkletNode, ev: AudioWorkletNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var AudioWorkletNode: {\n    prototype: AudioWorkletNode;\n    new(context: BaseAudioContext, name: string, options?: AudioWorkletNodeOptions): AudioWorkletNode;\n};\n\n/** Available only in secure contexts. */\ninterface AuthenticatorAssertionResponse extends AuthenticatorResponse {\n    readonly authenticatorData: ArrayBuffer;\n    readonly signature: ArrayBuffer;\n    readonly userHandle: ArrayBuffer | null;\n}\n\ndeclare var AuthenticatorAssertionResponse: {\n    prototype: AuthenticatorAssertionResponse;\n    new(): AuthenticatorAssertionResponse;\n};\n\n/** Available only in secure contexts. */\ninterface AuthenticatorAttestationResponse extends AuthenticatorResponse {\n    readonly attestationObject: ArrayBuffer;\n}\n\ndeclare var AuthenticatorAttestationResponse: {\n    prototype: AuthenticatorAttestationResponse;\n    new(): AuthenticatorAttestationResponse;\n};\n\n/** Available only in secure contexts. */\ninterface AuthenticatorResponse {\n    readonly clientDataJSON: ArrayBuffer;\n}\n\ndeclare var AuthenticatorResponse: {\n    prototype: AuthenticatorResponse;\n    new(): AuthenticatorResponse;\n};\n\ninterface BarProp {\n    readonly visible: boolean;\n}\n\ndeclare var BarProp: {\n    prototype: BarProp;\n    new(): BarProp;\n};\n\ninterface BaseAudioContextEventMap {\n    "statechange": Event;\n}\n\ninterface BaseAudioContext extends EventTarget {\n    /** Available only in secure contexts. */\n    readonly audioWorklet: AudioWorklet;\n    readonly currentTime: number;\n    readonly destination: AudioDestinationNode;\n    readonly listener: AudioListener;\n    onstatechange: ((this: BaseAudioContext, ev: Event) => any) | null;\n    readonly sampleRate: number;\n    readonly state: AudioContextState;\n    createAnalyser(): AnalyserNode;\n    createBiquadFilter(): BiquadFilterNode;\n    createBuffer(numberOfChannels: number, length: number, sampleRate: number): AudioBuffer;\n    createBufferSource(): AudioBufferSourceNode;\n    createChannelMerger(numberOfInputs?: number): ChannelMergerNode;\n    createChannelSplitter(numberOfOutputs?: number): ChannelSplitterNode;\n    createConstantSource(): ConstantSourceNode;\n    createConvolver(): ConvolverNode;\n    createDelay(maxDelayTime?: number): DelayNode;\n    createDynamicsCompressor(): DynamicsCompressorNode;\n    createGain(): GainNode;\n    createIIRFilter(feedforward: number[], feedback: number[]): IIRFilterNode;\n    createOscillator(): OscillatorNode;\n    createPanner(): PannerNode;\n    createPeriodicWave(real: number[] | Float32Array, imag: number[] | Float32Array, constraints?: PeriodicWaveConstraints): PeriodicWave;\n    /** @deprecated */\n    createScriptProcessor(bufferSize?: number, numberOfInputChannels?: number, numberOfOutputChannels?: number): ScriptProcessorNode;\n    createStereoPanner(): StereoPannerNode;\n    createWaveShaper(): WaveShaperNode;\n    decodeAudioData(audioData: ArrayBuffer, successCallback?: DecodeSuccessCallback | null, errorCallback?: DecodeErrorCallback | null): Promise<AudioBuffer>;\n    addEventListener<K extends keyof BaseAudioContextEventMap>(type: K, listener: (this: BaseAudioContext, ev: BaseAudioContextEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof BaseAudioContextEventMap>(type: K, listener: (this: BaseAudioContext, ev: BaseAudioContextEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var BaseAudioContext: {\n    prototype: BaseAudioContext;\n    new(): BaseAudioContext;\n};\n\n/** The beforeunload event is fired when the window, the document and its resources are about to be unloaded. */\ninterface BeforeUnloadEvent extends Event {\n    returnValue: any;\n}\n\ndeclare var BeforeUnloadEvent: {\n    prototype: BeforeUnloadEvent;\n    new(): BeforeUnloadEvent;\n};\n\n/** A simple low-order filter, and is created using the AudioContext.createBiquadFilter() method. It is an AudioNode that can represent different kinds of filters, tone control devices, and graphic equalizers. */\ninterface BiquadFilterNode extends AudioNode {\n    readonly Q: AudioParam;\n    readonly detune: AudioParam;\n    readonly frequency: AudioParam;\n    readonly gain: AudioParam;\n    type: BiquadFilterType;\n    getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void;\n}\n\ndeclare var BiquadFilterNode: {\n    prototype: BiquadFilterNode;\n    new(context: BaseAudioContext, options?: BiquadFilterOptions): BiquadFilterNode;\n};\n\n/** A file-like object of immutable, raw data. Blobs represent data that isn\'t necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user\'s system. */\ninterface Blob {\n    readonly size: number;\n    readonly type: string;\n    arrayBuffer(): Promise<ArrayBuffer>;\n    slice(start?: number, end?: number, contentType?: string): Blob;\n    stream(): ReadableStream;\n    text(): Promise<string>;\n}\n\ndeclare var Blob: {\n    prototype: Blob;\n    new(blobParts?: BlobPart[], options?: BlobPropertyBag): Blob;\n};\n\ninterface BlobEvent extends Event {\n    readonly data: Blob;\n    readonly timecode: DOMHighResTimeStamp;\n}\n\ndeclare var BlobEvent: {\n    prototype: BlobEvent;\n    new(type: string, eventInitDict: BlobEventInit): BlobEvent;\n};\n\ninterface Body {\n    readonly body: ReadableStream<Uint8Array> | null;\n    readonly bodyUsed: boolean;\n    arrayBuffer(): Promise<ArrayBuffer>;\n    blob(): Promise<Blob>;\n    formData(): Promise<FormData>;\n    json(): Promise<any>;\n    text(): Promise<string>;\n}\n\ninterface BroadcastChannelEventMap {\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\ninterface BroadcastChannel extends EventTarget {\n    /** Returns the channel name (as passed to the constructor). */\n    readonly name: string;\n    onmessage: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;\n    onmessageerror: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;\n    /** Closes the BroadcastChannel object, opening it up to garbage collection. */\n    close(): void;\n    /** Sends the given message to other BroadcastChannel objects set up for this channel. Messages can be structured objects, e.g. nested objects and arrays. */\n    postMessage(message: any): void;\n    addEventListener<K extends keyof BroadcastChannelEventMap>(type: K, listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof BroadcastChannelEventMap>(type: K, listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var BroadcastChannel: {\n    prototype: BroadcastChannel;\n    new(name: string): BroadcastChannel;\n};\n\n/** This Streams API interface provides a built-in byte length queuing strategy that can be used when constructing streams. */\ninterface ByteLengthQueuingStrategy extends QueuingStrategy<ArrayBufferView> {\n    readonly highWaterMark: number;\n    readonly size: QueuingStrategySize<ArrayBufferView>;\n}\n\ndeclare var ByteLengthQueuingStrategy: {\n    prototype: ByteLengthQueuingStrategy;\n    new(init: QueuingStrategyInit): ByteLengthQueuingStrategy;\n};\n\n/** A CDATA section that can be used within XML to include extended portions of unescaped text. The symbols < and & don’t need escaping as they normally do when inside a CDATA section. */\ninterface CDATASection extends Text {\n}\n\ndeclare var CDATASection: {\n    prototype: CDATASection;\n    new(): CDATASection;\n};\n\ninterface CSSAnimation extends Animation {\n    readonly animationName: string;\n    addEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: CSSAnimation, ev: AnimationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: CSSAnimation, ev: AnimationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var CSSAnimation: {\n    prototype: CSSAnimation;\n    new(): CSSAnimation;\n};\n\n/** A single condition CSS at-rule, which consists of a condition and a statement block. It is a child of CSSGroupingRule. */\ninterface CSSConditionRule extends CSSGroupingRule {\n    conditionText: string;\n}\n\ndeclare var CSSConditionRule: {\n    prototype: CSSConditionRule;\n    new(): CSSConditionRule;\n};\n\ninterface CSSCounterStyleRule extends CSSRule {\n    additiveSymbols: string;\n    fallback: string;\n    name: string;\n    negative: string;\n    pad: string;\n    prefix: string;\n    range: string;\n    speakAs: string;\n    suffix: string;\n    symbols: string;\n    system: string;\n}\n\ndeclare var CSSCounterStyleRule: {\n    prototype: CSSCounterStyleRule;\n    new(): CSSCounterStyleRule;\n};\n\ninterface CSSFontFaceRule extends CSSRule {\n    readonly style: CSSStyleDeclaration;\n}\n\ndeclare var CSSFontFaceRule: {\n    prototype: CSSFontFaceRule;\n    new(): CSSFontFaceRule;\n};\n\n/** Any CSS at-rule that contains other rules nested within it. */\ninterface CSSGroupingRule extends CSSRule {\n    readonly cssRules: CSSRuleList;\n    deleteRule(index: number): void;\n    insertRule(rule: string, index?: number): number;\n}\n\ndeclare var CSSGroupingRule: {\n    prototype: CSSGroupingRule;\n    new(): CSSGroupingRule;\n};\n\ninterface CSSImportRule extends CSSRule {\n    readonly href: string;\n    readonly media: MediaList;\n    readonly styleSheet: CSSStyleSheet;\n}\n\ndeclare var CSSImportRule: {\n    prototype: CSSImportRule;\n    new(): CSSImportRule;\n};\n\n/** An object representing a set of style for a given keyframe. It corresponds to the contains of a single keyframe of a @keyframes at-rule. It implements the CSSRule interface with a type value of 8 (CSSRule.KEYFRAME_RULE). */\ninterface CSSKeyframeRule extends CSSRule {\n    keyText: string;\n    readonly style: CSSStyleDeclaration;\n}\n\ndeclare var CSSKeyframeRule: {\n    prototype: CSSKeyframeRule;\n    new(): CSSKeyframeRule;\n};\n\n/** An object representing a complete set of keyframes for a CSS animation. It corresponds to the contains of a whole @keyframes at-rule. It implements the CSSRule interface with a type value of 7 (CSSRule.KEYFRAMES_RULE). */\ninterface CSSKeyframesRule extends CSSRule {\n    readonly cssRules: CSSRuleList;\n    name: string;\n    appendRule(rule: string): void;\n    deleteRule(select: string): void;\n    findRule(select: string): CSSKeyframeRule | null;\n}\n\ndeclare var CSSKeyframesRule: {\n    prototype: CSSKeyframesRule;\n    new(): CSSKeyframesRule;\n};\n\n/** A single CSS @media rule. It implements the CSSConditionRule interface, and therefore the CSSGroupingRule and the CSSRule interface with a type value of 4 (CSSRule.MEDIA_RULE). */\ninterface CSSMediaRule extends CSSConditionRule {\n    readonly media: MediaList;\n}\n\ndeclare var CSSMediaRule: {\n    prototype: CSSMediaRule;\n    new(): CSSMediaRule;\n};\n\n/** An object representing a single CSS @namespace at-rule. It implements the CSSRule interface, with a type value of 10 (CSSRule.NAMESPACE_RULE). */\ninterface CSSNamespaceRule extends CSSRule {\n    readonly namespaceURI: string;\n    readonly prefix: string;\n}\n\ndeclare var CSSNamespaceRule: {\n    prototype: CSSNamespaceRule;\n    new(): CSSNamespaceRule;\n};\n\n/** CSSPageRule is an interface representing a single CSS @page rule. It implements the CSSRule interface with a type value of 6 (CSSRule.PAGE_RULE). */\ninterface CSSPageRule extends CSSGroupingRule {\n    selectorText: string;\n    readonly style: CSSStyleDeclaration;\n}\n\ndeclare var CSSPageRule: {\n    prototype: CSSPageRule;\n    new(): CSSPageRule;\n};\n\n/** A single CSS rule. There are several types of rules, listed in the Type constants section below. */\ninterface CSSRule {\n    cssText: string;\n    readonly parentRule: CSSRule | null;\n    readonly parentStyleSheet: CSSStyleSheet | null;\n    /** @deprecated */\n    readonly type: number;\n    readonly CHARSET_RULE: number;\n    readonly FONT_FACE_RULE: number;\n    readonly IMPORT_RULE: number;\n    readonly KEYFRAMES_RULE: number;\n    readonly KEYFRAME_RULE: number;\n    readonly MEDIA_RULE: number;\n    readonly NAMESPACE_RULE: number;\n    readonly PAGE_RULE: number;\n    readonly STYLE_RULE: number;\n    readonly SUPPORTS_RULE: number;\n}\n\ndeclare var CSSRule: {\n    prototype: CSSRule;\n    new(): CSSRule;\n    readonly CHARSET_RULE: number;\n    readonly FONT_FACE_RULE: number;\n    readonly IMPORT_RULE: number;\n    readonly KEYFRAMES_RULE: number;\n    readonly KEYFRAME_RULE: number;\n    readonly MEDIA_RULE: number;\n    readonly NAMESPACE_RULE: number;\n    readonly PAGE_RULE: number;\n    readonly STYLE_RULE: number;\n    readonly SUPPORTS_RULE: number;\n};\n\n/** A CSSRuleList is an (indirect-modify only) array-like object containing an ordered collection of CSSRule objects. */\ninterface CSSRuleList {\n    readonly length: number;\n    item(index: number): CSSRule | null;\n    [index: number]: CSSRule;\n}\n\ndeclare var CSSRuleList: {\n    prototype: CSSRuleList;\n    new(): CSSRuleList;\n};\n\n/** An object that is a CSS declaration block, and exposes style information and various style-related methods and properties. */\ninterface CSSStyleDeclaration {\n    accentColor: string;\n    alignContent: string;\n    alignItems: string;\n    alignSelf: string;\n    alignmentBaseline: string;\n    all: string;\n    animation: string;\n    animationDelay: string;\n    animationDirection: string;\n    animationDuration: string;\n    animationFillMode: string;\n    animationIterationCount: string;\n    animationName: string;\n    animationPlayState: string;\n    animationTimingFunction: string;\n    appearance: string;\n    aspectRatio: string;\n    backfaceVisibility: string;\n    background: string;\n    backgroundAttachment: string;\n    backgroundBlendMode: string;\n    backgroundClip: string;\n    backgroundColor: string;\n    backgroundImage: string;\n    backgroundOrigin: string;\n    backgroundPosition: string;\n    backgroundPositionX: string;\n    backgroundPositionY: string;\n    backgroundRepeat: string;\n    backgroundSize: string;\n    baselineShift: string;\n    blockSize: string;\n    border: string;\n    borderBlock: string;\n    borderBlockColor: string;\n    borderBlockEnd: string;\n    borderBlockEndColor: string;\n    borderBlockEndStyle: string;\n    borderBlockEndWidth: string;\n    borderBlockStart: string;\n    borderBlockStartColor: string;\n    borderBlockStartStyle: string;\n    borderBlockStartWidth: string;\n    borderBlockStyle: string;\n    borderBlockWidth: string;\n    borderBottom: string;\n    borderBottomColor: string;\n    borderBottomLeftRadius: string;\n    borderBottomRightRadius: string;\n    borderBottomStyle: string;\n    borderBottomWidth: string;\n    borderCollapse: string;\n    borderColor: string;\n    borderEndEndRadius: string;\n    borderEndStartRadius: string;\n    borderImage: string;\n    borderImageOutset: string;\n    borderImageRepeat: string;\n    borderImageSlice: string;\n    borderImageSource: string;\n    borderImageWidth: string;\n    borderInline: string;\n    borderInlineColor: string;\n    borderInlineEnd: string;\n    borderInlineEndColor: string;\n    borderInlineEndStyle: string;\n    borderInlineEndWidth: string;\n    borderInlineStart: string;\n    borderInlineStartColor: string;\n    borderInlineStartStyle: string;\n    borderInlineStartWidth: string;\n    borderInlineStyle: string;\n    borderInlineWidth: string;\n    borderLeft: string;\n    borderLeftColor: string;\n    borderLeftStyle: string;\n    borderLeftWidth: string;\n    borderRadius: string;\n    borderRight: string;\n    borderRightColor: string;\n    borderRightStyle: string;\n    borderRightWidth: string;\n    borderSpacing: string;\n    borderStartEndRadius: string;\n    borderStartStartRadius: string;\n    borderStyle: string;\n    borderTop: string;\n    borderTopColor: string;\n    borderTopLeftRadius: string;\n    borderTopRightRadius: string;\n    borderTopStyle: string;\n    borderTopWidth: string;\n    borderWidth: string;\n    bottom: string;\n    boxShadow: string;\n    boxSizing: string;\n    breakAfter: string;\n    breakBefore: string;\n    breakInside: string;\n    captionSide: string;\n    caretColor: string;\n    clear: string;\n    /** @deprecated */\n    clip: string;\n    clipPath: string;\n    clipRule: string;\n    color: string;\n    colorInterpolation: string;\n    colorInterpolationFilters: string;\n    colorScheme: string;\n    columnCount: string;\n    columnFill: string;\n    columnGap: string;\n    columnRule: string;\n    columnRuleColor: string;\n    columnRuleStyle: string;\n    columnRuleWidth: string;\n    columnSpan: string;\n    columnWidth: string;\n    columns: string;\n    contain: string;\n    content: string;\n    counterIncrement: string;\n    counterReset: string;\n    counterSet: string;\n    cssFloat: string;\n    cssText: string;\n    cursor: string;\n    direction: string;\n    display: string;\n    dominantBaseline: string;\n    emptyCells: string;\n    fill: string;\n    fillOpacity: string;\n    fillRule: string;\n    filter: string;\n    flex: string;\n    flexBasis: string;\n    flexDirection: string;\n    flexFlow: string;\n    flexGrow: string;\n    flexShrink: string;\n    flexWrap: string;\n    float: string;\n    floodColor: string;\n    floodOpacity: string;\n    font: string;\n    fontFamily: string;\n    fontFeatureSettings: string;\n    fontKerning: string;\n    fontOpticalSizing: string;\n    fontSize: string;\n    fontSizeAdjust: string;\n    fontStretch: string;\n    fontStyle: string;\n    fontSynthesis: string;\n    fontVariant: string;\n    /** @deprecated */\n    fontVariantAlternates: string;\n    fontVariantCaps: string;\n    fontVariantEastAsian: string;\n    fontVariantLigatures: string;\n    fontVariantNumeric: string;\n    fontVariantPosition: string;\n    fontVariationSettings: string;\n    fontWeight: string;\n    gap: string;\n    grid: string;\n    gridArea: string;\n    gridAutoColumns: string;\n    gridAutoFlow: string;\n    gridAutoRows: string;\n    gridColumn: string;\n    gridColumnEnd: string;\n    /** @deprecated This is a legacy alias of `columnGap`. */\n    gridColumnGap: string;\n    gridColumnStart: string;\n    /** @deprecated This is a legacy alias of `gap`. */\n    gridGap: string;\n    gridRow: string;\n    gridRowEnd: string;\n    /** @deprecated This is a legacy alias of `rowGap`. */\n    gridRowGap: string;\n    gridRowStart: string;\n    gridTemplate: string;\n    gridTemplateAreas: string;\n    gridTemplateColumns: string;\n    gridTemplateRows: string;\n    height: string;\n    hyphens: string;\n    /** @deprecated */\n    imageOrientation: string;\n    imageRendering: string;\n    inlineSize: string;\n    inset: string;\n    insetBlock: string;\n    insetBlockEnd: string;\n    insetBlockStart: string;\n    insetInline: string;\n    insetInlineEnd: string;\n    insetInlineStart: string;\n    isolation: string;\n    justifyContent: string;\n    justifyItems: string;\n    justifySelf: string;\n    left: string;\n    readonly length: number;\n    letterSpacing: string;\n    lightingColor: string;\n    lineBreak: string;\n    lineHeight: string;\n    listStyle: string;\n    listStyleImage: string;\n    listStylePosition: string;\n    listStyleType: string;\n    margin: string;\n    marginBlock: string;\n    marginBlockEnd: string;\n    marginBlockStart: string;\n    marginBottom: string;\n    marginInline: string;\n    marginInlineEnd: string;\n    marginInlineStart: string;\n    marginLeft: string;\n    marginRight: string;\n    marginTop: string;\n    marker: string;\n    markerEnd: string;\n    markerMid: string;\n    markerStart: string;\n    mask: string;\n    maskType: string;\n    maxBlockSize: string;\n    maxHeight: string;\n    maxInlineSize: string;\n    maxWidth: string;\n    minBlockSize: string;\n    minHeight: string;\n    minInlineSize: string;\n    minWidth: string;\n    mixBlendMode: string;\n    objectFit: string;\n    objectPosition: string;\n    offset: string;\n    offsetAnchor: string;\n    offsetDistance: string;\n    offsetPath: string;\n    offsetRotate: string;\n    opacity: string;\n    order: string;\n    orphans: string;\n    outline: string;\n    outlineColor: string;\n    outlineOffset: string;\n    outlineStyle: string;\n    outlineWidth: string;\n    overflow: string;\n    overflowAnchor: string;\n    overflowWrap: string;\n    overflowX: string;\n    overflowY: string;\n    overscrollBehavior: string;\n    overscrollBehaviorBlock: string;\n    overscrollBehaviorInline: string;\n    overscrollBehaviorX: string;\n    overscrollBehaviorY: string;\n    padding: string;\n    paddingBlock: string;\n    paddingBlockEnd: string;\n    paddingBlockStart: string;\n    paddingBottom: string;\n    paddingInline: string;\n    paddingInlineEnd: string;\n    paddingInlineStart: string;\n    paddingLeft: string;\n    paddingRight: string;\n    paddingTop: string;\n    pageBreakAfter: string;\n    pageBreakBefore: string;\n    pageBreakInside: string;\n    paintOrder: string;\n    readonly parentRule: CSSRule | null;\n    perspective: string;\n    perspectiveOrigin: string;\n    placeContent: string;\n    placeItems: string;\n    placeSelf: string;\n    pointerEvents: string;\n    position: string;\n    quotes: string;\n    resize: string;\n    right: string;\n    rotate: string;\n    rowGap: string;\n    rubyPosition: string;\n    scale: string;\n    scrollBehavior: string;\n    scrollMargin: string;\n    scrollMarginBlock: string;\n    scrollMarginBlockEnd: string;\n    scrollMarginBlockStart: string;\n    scrollMarginBottom: string;\n    scrollMarginInline: string;\n    scrollMarginInlineEnd: string;\n    scrollMarginInlineStart: string;\n    scrollMarginLeft: string;\n    scrollMarginRight: string;\n    scrollMarginTop: string;\n    scrollPadding: string;\n    scrollPaddingBlock: string;\n    scrollPaddingBlockEnd: string;\n    scrollPaddingBlockStart: string;\n    scrollPaddingBottom: string;\n    scrollPaddingInline: string;\n    scrollPaddingInlineEnd: string;\n    scrollPaddingInlineStart: string;\n    scrollPaddingLeft: string;\n    scrollPaddingRight: string;\n    scrollPaddingTop: string;\n    scrollSnapAlign: string;\n    scrollSnapStop: string;\n    scrollSnapType: string;\n    scrollbarGutter: string;\n    shapeImageThreshold: string;\n    shapeMargin: string;\n    shapeOutside: string;\n    shapeRendering: string;\n    stopColor: string;\n    stopOpacity: string;\n    stroke: string;\n    strokeDasharray: string;\n    strokeDashoffset: string;\n    strokeLinecap: string;\n    strokeLinejoin: string;\n    strokeMiterlimit: string;\n    strokeOpacity: string;\n    strokeWidth: string;\n    tabSize: string;\n    tableLayout: string;\n    textAlign: string;\n    textAlignLast: string;\n    textAnchor: string;\n    textCombineUpright: string;\n    textDecoration: string;\n    textDecorationColor: string;\n    textDecorationLine: string;\n    textDecorationSkipInk: string;\n    textDecorationStyle: string;\n    textDecorationThickness: string;\n    textEmphasis: string;\n    textEmphasisColor: string;\n    textEmphasisPosition: string;\n    textEmphasisStyle: string;\n    textIndent: string;\n    textOrientation: string;\n    textOverflow: string;\n    textRendering: string;\n    textShadow: string;\n    textTransform: string;\n    textUnderlineOffset: string;\n    textUnderlinePosition: string;\n    top: string;\n    touchAction: string;\n    transform: string;\n    transformBox: string;\n    transformOrigin: string;\n    transformStyle: string;\n    transition: string;\n    transitionDelay: string;\n    transitionDuration: string;\n    transitionProperty: string;\n    transitionTimingFunction: string;\n    translate: string;\n    unicodeBidi: string;\n    userSelect: string;\n    verticalAlign: string;\n    visibility: string;\n    /** @deprecated This is a legacy alias of `alignContent`. */\n    webkitAlignContent: string;\n    /** @deprecated This is a legacy alias of `alignItems`. */\n    webkitAlignItems: string;\n    /** @deprecated This is a legacy alias of `alignSelf`. */\n    webkitAlignSelf: string;\n    /** @deprecated This is a legacy alias of `animation`. */\n    webkitAnimation: string;\n    /** @deprecated This is a legacy alias of `animationDelay`. */\n    webkitAnimationDelay: string;\n    /** @deprecated This is a legacy alias of `animationDirection`. */\n    webkitAnimationDirection: string;\n    /** @deprecated This is a legacy alias of `animationDuration`. */\n    webkitAnimationDuration: string;\n    /** @deprecated This is a legacy alias of `animationFillMode`. */\n    webkitAnimationFillMode: string;\n    /** @deprecated This is a legacy alias of `animationIterationCount`. */\n    webkitAnimationIterationCount: string;\n    /** @deprecated This is a legacy alias of `animationName`. */\n    webkitAnimationName: string;\n    /** @deprecated This is a legacy alias of `animationPlayState`. */\n    webkitAnimationPlayState: string;\n    /** @deprecated This is a legacy alias of `animationTimingFunction`. */\n    webkitAnimationTimingFunction: string;\n    /** @deprecated This is a legacy alias of `appearance`. */\n    webkitAppearance: string;\n    /** @deprecated This is a legacy alias of `backfaceVisibility`. */\n    webkitBackfaceVisibility: string;\n    /** @deprecated This is a legacy alias of `backgroundClip`. */\n    webkitBackgroundClip: string;\n    /** @deprecated This is a legacy alias of `backgroundOrigin`. */\n    webkitBackgroundOrigin: string;\n    /** @deprecated This is a legacy alias of `backgroundSize`. */\n    webkitBackgroundSize: string;\n    /** @deprecated This is a legacy alias of `borderBottomLeftRadius`. */\n    webkitBorderBottomLeftRadius: string;\n    /** @deprecated This is a legacy alias of `borderBottomRightRadius`. */\n    webkitBorderBottomRightRadius: string;\n    /** @deprecated This is a legacy alias of `borderRadius`. */\n    webkitBorderRadius: string;\n    /** @deprecated This is a legacy alias of `borderTopLeftRadius`. */\n    webkitBorderTopLeftRadius: string;\n    /** @deprecated This is a legacy alias of `borderTopRightRadius`. */\n    webkitBorderTopRightRadius: string;\n    /** @deprecated This is a legacy alias of `boxAlign`. */\n    webkitBoxAlign: string;\n    /** @deprecated This is a legacy alias of `boxFlex`. */\n    webkitBoxFlex: string;\n    /** @deprecated This is a legacy alias of `boxOrdinalGroup`. */\n    webkitBoxOrdinalGroup: string;\n    /** @deprecated This is a legacy alias of `boxOrient`. */\n    webkitBoxOrient: string;\n    /** @deprecated This is a legacy alias of `boxPack`. */\n    webkitBoxPack: string;\n    /** @deprecated This is a legacy alias of `boxShadow`. */\n    webkitBoxShadow: string;\n    /** @deprecated This is a legacy alias of `boxSizing`. */\n    webkitBoxSizing: string;\n    /** @deprecated This is a legacy alias of `filter`. */\n    webkitFilter: string;\n    /** @deprecated This is a legacy alias of `flex`. */\n    webkitFlex: string;\n    /** @deprecated This is a legacy alias of `flexBasis`. */\n    webkitFlexBasis: string;\n    /** @deprecated This is a legacy alias of `flexDirection`. */\n    webkitFlexDirection: string;\n    /** @deprecated This is a legacy alias of `flexFlow`. */\n    webkitFlexFlow: string;\n    /** @deprecated This is a legacy alias of `flexGrow`. */\n    webkitFlexGrow: string;\n    /** @deprecated This is a legacy alias of `flexShrink`. */\n    webkitFlexShrink: string;\n    /** @deprecated This is a legacy alias of `flexWrap`. */\n    webkitFlexWrap: string;\n    /** @deprecated This is a legacy alias of `justifyContent`. */\n    webkitJustifyContent: string;\n    webkitLineClamp: string;\n    /** @deprecated This is a legacy alias of `mask`. */\n    webkitMask: string;\n    /** @deprecated This is a legacy alias of `maskBorder`. */\n    webkitMaskBoxImage: string;\n    /** @deprecated This is a legacy alias of `maskBorderOutset`. */\n    webkitMaskBoxImageOutset: string;\n    /** @deprecated This is a legacy alias of `maskBorderRepeat`. */\n    webkitMaskBoxImageRepeat: string;\n    /** @deprecated This is a legacy alias of `maskBorderSlice`. */\n    webkitMaskBoxImageSlice: string;\n    /** @deprecated This is a legacy alias of `maskBorderSource`. */\n    webkitMaskBoxImageSource: string;\n    /** @deprecated This is a legacy alias of `maskBorderWidth`. */\n    webkitMaskBoxImageWidth: string;\n    /** @deprecated This is a legacy alias of `maskClip`. */\n    webkitMaskClip: string;\n    webkitMaskComposite: string;\n    /** @deprecated This is a legacy alias of `maskImage`. */\n    webkitMaskImage: string;\n    /** @deprecated This is a legacy alias of `maskOrigin`. */\n    webkitMaskOrigin: string;\n    /** @deprecated This is a legacy alias of `maskPosition`. */\n    webkitMaskPosition: string;\n    /** @deprecated This is a legacy alias of `maskRepeat`. */\n    webkitMaskRepeat: string;\n    /** @deprecated This is a legacy alias of `maskSize`. */\n    webkitMaskSize: string;\n    /** @deprecated This is a legacy alias of `order`. */\n    webkitOrder: string;\n    /** @deprecated This is a legacy alias of `perspective`. */\n    webkitPerspective: string;\n    /** @deprecated This is a legacy alias of `perspectiveOrigin`. */\n    webkitPerspectiveOrigin: string;\n    webkitTextFillColor: string;\n    webkitTextStroke: string;\n    webkitTextStrokeColor: string;\n    webkitTextStrokeWidth: string;\n    /** @deprecated This is a legacy alias of `transform`. */\n    webkitTransform: string;\n    /** @deprecated This is a legacy alias of `transformOrigin`. */\n    webkitTransformOrigin: string;\n    /** @deprecated This is a legacy alias of `transformStyle`. */\n    webkitTransformStyle: string;\n    /** @deprecated This is a legacy alias of `transition`. */\n    webkitTransition: string;\n    /** @deprecated This is a legacy alias of `transitionDelay`. */\n    webkitTransitionDelay: string;\n    /** @deprecated This is a legacy alias of `transitionDuration`. */\n    webkitTransitionDuration: string;\n    /** @deprecated This is a legacy alias of `transitionProperty`. */\n    webkitTransitionProperty: string;\n    /** @deprecated This is a legacy alias of `transitionTimingFunction`. */\n    webkitTransitionTimingFunction: string;\n    /** @deprecated This is a legacy alias of `userSelect`. */\n    webkitUserSelect: string;\n    whiteSpace: string;\n    widows: string;\n    width: string;\n    willChange: string;\n    wordBreak: string;\n    wordSpacing: string;\n    /** @deprecated */\n    wordWrap: string;\n    writingMode: string;\n    zIndex: string;\n    getPropertyPriority(property: string): string;\n    getPropertyValue(property: string): string;\n    item(index: number): string;\n    removeProperty(property: string): string;\n    setProperty(property: string, value: string | null, priority?: string): void;\n    [index: number]: string;\n}\n\ndeclare var CSSStyleDeclaration: {\n    prototype: CSSStyleDeclaration;\n    new(): CSSStyleDeclaration;\n};\n\n/** CSSStyleRule represents a single CSS style rule. It implements the CSSRule interface with a type value of 1 (CSSRule.STYLE_RULE). */\ninterface CSSStyleRule extends CSSRule {\n    selectorText: string;\n    readonly style: CSSStyleDeclaration;\n}\n\ndeclare var CSSStyleRule: {\n    prototype: CSSStyleRule;\n    new(): CSSStyleRule;\n};\n\n/** A single CSS style sheet. It inherits properties and methods from its parent, StyleSheet. */\ninterface CSSStyleSheet extends StyleSheet {\n    readonly cssRules: CSSRuleList;\n    readonly ownerRule: CSSRule | null;\n    /** @deprecated */\n    readonly rules: CSSRuleList;\n    /** @deprecated */\n    addRule(selector?: string, style?: string, index?: number): number;\n    deleteRule(index: number): void;\n    insertRule(rule: string, index?: number): number;\n    /** @deprecated */\n    removeRule(index?: number): void;\n}\n\ndeclare var CSSStyleSheet: {\n    prototype: CSSStyleSheet;\n    new(options?: CSSStyleSheetInit): CSSStyleSheet;\n};\n\n/** An object representing a single CSS @supports at-rule. It implements the CSSConditionRule interface, and therefore the CSSRule and CSSGroupingRule interfaces with a type value of 12 (CSSRule.SUPPORTS_RULE). */\ninterface CSSSupportsRule extends CSSConditionRule {\n}\n\ndeclare var CSSSupportsRule: {\n    prototype: CSSSupportsRule;\n    new(): CSSSupportsRule;\n};\n\ninterface CSSTransition extends Animation {\n    readonly transitionProperty: string;\n    addEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: CSSTransition, ev: AnimationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AnimationEventMap>(type: K, listener: (this: CSSTransition, ev: AnimationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var CSSTransition: {\n    prototype: CSSTransition;\n    new(): CSSTransition;\n};\n\n/**\n * Provides a storage mechanism for Request / Response object pairs that are cached, for example as part of the ServiceWorker life cycle. Note that the Cache interface is exposed to windowed scopes as well as workers. You don\'t have to use it in conjunction with service workers, even though it is defined in the service worker spec.\n * Available only in secure contexts.\n */\ninterface Cache {\n    add(request: RequestInfo): Promise<void>;\n    addAll(requests: RequestInfo[]): Promise<void>;\n    delete(request: RequestInfo, options?: CacheQueryOptions): Promise<boolean>;\n    keys(request?: RequestInfo, options?: CacheQueryOptions): Promise<ReadonlyArray<Request>>;\n    match(request: RequestInfo, options?: CacheQueryOptions): Promise<Response | undefined>;\n    matchAll(request?: RequestInfo, options?: CacheQueryOptions): Promise<ReadonlyArray<Response>>;\n    put(request: RequestInfo, response: Response): Promise<void>;\n}\n\ndeclare var Cache: {\n    prototype: Cache;\n    new(): Cache;\n};\n\n/**\n * The storage for Cache objects.\n * Available only in secure contexts.\n */\ninterface CacheStorage {\n    delete(cacheName: string): Promise<boolean>;\n    has(cacheName: string): Promise<boolean>;\n    keys(): Promise<string[]>;\n    match(request: RequestInfo, options?: MultiCacheQueryOptions): Promise<Response | undefined>;\n    open(cacheName: string): Promise<Cache>;\n}\n\ndeclare var CacheStorage: {\n    prototype: CacheStorage;\n    new(): CacheStorage;\n};\n\ninterface CanvasCaptureMediaStreamTrack extends MediaStreamTrack {\n    readonly canvas: HTMLCanvasElement;\n    requestFrame(): void;\n    addEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: CanvasCaptureMediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: CanvasCaptureMediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var CanvasCaptureMediaStreamTrack: {\n    prototype: CanvasCaptureMediaStreamTrack;\n    new(): CanvasCaptureMediaStreamTrack;\n};\n\ninterface CanvasCompositing {\n    globalAlpha: number;\n    globalCompositeOperation: GlobalCompositeOperation;\n}\n\ninterface CanvasDrawImage {\n    drawImage(image: CanvasImageSource, dx: number, dy: number): void;\n    drawImage(image: CanvasImageSource, dx: number, dy: number, dw: number, dh: number): void;\n    drawImage(image: CanvasImageSource, sx: number, sy: number, sw: number, sh: number, dx: number, dy: number, dw: number, dh: number): void;\n}\n\ninterface CanvasDrawPath {\n    beginPath(): void;\n    clip(fillRule?: CanvasFillRule): void;\n    clip(path: Path2D, fillRule?: CanvasFillRule): void;\n    fill(fillRule?: CanvasFillRule): void;\n    fill(path: Path2D, fillRule?: CanvasFillRule): void;\n    isPointInPath(x: number, y: number, fillRule?: CanvasFillRule): boolean;\n    isPointInPath(path: Path2D, x: number, y: number, fillRule?: CanvasFillRule): boolean;\n    isPointInStroke(x: number, y: number): boolean;\n    isPointInStroke(path: Path2D, x: number, y: number): boolean;\n    stroke(): void;\n    stroke(path: Path2D): void;\n}\n\ninterface CanvasFillStrokeStyles {\n    fillStyle: string | CanvasGradient | CanvasPattern;\n    strokeStyle: string | CanvasGradient | CanvasPattern;\n    createConicGradient(startAngle: number, x: number, y: number): CanvasGradient;\n    createLinearGradient(x0: number, y0: number, x1: number, y1: number): CanvasGradient;\n    createPattern(image: CanvasImageSource, repetition: string | null): CanvasPattern | null;\n    createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): CanvasGradient;\n}\n\ninterface CanvasFilters {\n    filter: string;\n}\n\n/** An opaque object describing a gradient. It is returned by the methods CanvasRenderingContext2D.createLinearGradient() or CanvasRenderingContext2D.createRadialGradient(). */\ninterface CanvasGradient {\n    /**\n     * Adds a color stop with the given color to the gradient at the given offset. 0.0 is the offset at one end of the gradient, 1.0 is the offset at the other end.\n     *\n     * Throws an "IndexSizeError" DOMException if the offset is out of range. Throws a "SyntaxError" DOMException if the color cannot be parsed.\n     */\n    addColorStop(offset: number, color: string): void;\n}\n\ndeclare var CanvasGradient: {\n    prototype: CanvasGradient;\n    new(): CanvasGradient;\n};\n\ninterface CanvasImageData {\n    createImageData(sw: number, sh: number, settings?: ImageDataSettings): ImageData;\n    createImageData(imagedata: ImageData): ImageData;\n    getImageData(sx: number, sy: number, sw: number, sh: number, settings?: ImageDataSettings): ImageData;\n    putImageData(imagedata: ImageData, dx: number, dy: number): void;\n    putImageData(imagedata: ImageData, dx: number, dy: number, dirtyX: number, dirtyY: number, dirtyWidth: number, dirtyHeight: number): void;\n}\n\ninterface CanvasImageSmoothing {\n    imageSmoothingEnabled: boolean;\n    imageSmoothingQuality: ImageSmoothingQuality;\n}\n\ninterface CanvasPath {\n    arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, counterclockwise?: boolean): void;\n    arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;\n    bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;\n    closePath(): void;\n    ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, counterclockwise?: boolean): void;\n    lineTo(x: number, y: number): void;\n    moveTo(x: number, y: number): void;\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;\n    rect(x: number, y: number, w: number, h: number): void;\n}\n\ninterface CanvasPathDrawingStyles {\n    lineCap: CanvasLineCap;\n    lineDashOffset: number;\n    lineJoin: CanvasLineJoin;\n    lineWidth: number;\n    miterLimit: number;\n    getLineDash(): number[];\n    setLineDash(segments: number[]): void;\n}\n\n/** An opaque object describing a pattern, based on an image, a canvas, or a video, created by the CanvasRenderingContext2D.createPattern() method. */\ninterface CanvasPattern {\n    /** Sets the transformation matrix that will be used when rendering the pattern during a fill or stroke painting operation. */\n    setTransform(transform?: DOMMatrix2DInit): void;\n}\n\ndeclare var CanvasPattern: {\n    prototype: CanvasPattern;\n    new(): CanvasPattern;\n};\n\ninterface CanvasRect {\n    clearRect(x: number, y: number, w: number, h: number): void;\n    fillRect(x: number, y: number, w: number, h: number): void;\n    strokeRect(x: number, y: number, w: number, h: number): void;\n}\n\n/** The CanvasRenderingContext2D interface, part of the Canvas API, provides the 2D rendering context for the drawing surface of a <canvas> element. It is used for drawing shapes, text, images, and other objects. */\ninterface CanvasRenderingContext2D extends CanvasCompositing, CanvasDrawImage, CanvasDrawPath, CanvasFillStrokeStyles, CanvasFilters, CanvasImageData, CanvasImageSmoothing, CanvasPath, CanvasPathDrawingStyles, CanvasRect, CanvasShadowStyles, CanvasState, CanvasText, CanvasTextDrawingStyles, CanvasTransform, CanvasUserInterface {\n    readonly canvas: HTMLCanvasElement;\n    getContextAttributes(): CanvasRenderingContext2DSettings;\n}\n\ndeclare var CanvasRenderingContext2D: {\n    prototype: CanvasRenderingContext2D;\n    new(): CanvasRenderingContext2D;\n};\n\ninterface CanvasShadowStyles {\n    shadowBlur: number;\n    shadowColor: string;\n    shadowOffsetX: number;\n    shadowOffsetY: number;\n}\n\ninterface CanvasState {\n    restore(): void;\n    save(): void;\n}\n\ninterface CanvasText {\n    fillText(text: string, x: number, y: number, maxWidth?: number): void;\n    measureText(text: string): TextMetrics;\n    strokeText(text: string, x: number, y: number, maxWidth?: number): void;\n}\n\ninterface CanvasTextDrawingStyles {\n    direction: CanvasDirection;\n    font: string;\n    textAlign: CanvasTextAlign;\n    textBaseline: CanvasTextBaseline;\n}\n\ninterface CanvasTransform {\n    getTransform(): DOMMatrix;\n    resetTransform(): void;\n    rotate(angle: number): void;\n    scale(x: number, y: number): void;\n    setTransform(a: number, b: number, c: number, d: number, e: number, f: number): void;\n    setTransform(transform?: DOMMatrix2DInit): void;\n    transform(a: number, b: number, c: number, d: number, e: number, f: number): void;\n    translate(x: number, y: number): void;\n}\n\ninterface CanvasUserInterface {\n    drawFocusIfNeeded(element: Element): void;\n    drawFocusIfNeeded(path: Path2D, element: Element): void;\n}\n\n/** The ChannelMergerNode interface, often used in conjunction with its opposite, ChannelSplitterNode, reunites different mono inputs into a single output. Each input is used to fill a channel of the output. This is useful for accessing each channels separately, e.g. for performing channel mixing where gain must be separately controlled on each channel. */\ninterface ChannelMergerNode extends AudioNode {\n}\n\ndeclare var ChannelMergerNode: {\n    prototype: ChannelMergerNode;\n    new(context: BaseAudioContext, options?: ChannelMergerOptions): ChannelMergerNode;\n};\n\n/** The ChannelSplitterNode interface, often used in conjunction with its opposite, ChannelMergerNode, separates the different channels of an audio source into a set of mono outputs. This is useful for accessing each channel separately, e.g. for performing channel mixing where gain must be separately controlled on each channel. */\ninterface ChannelSplitterNode extends AudioNode {\n}\n\ndeclare var ChannelSplitterNode: {\n    prototype: ChannelSplitterNode;\n    new(context: BaseAudioContext, options?: ChannelSplitterOptions): ChannelSplitterNode;\n};\n\n/** The CharacterData abstract interface represents a Node object that contains characters. This is an abstract interface, meaning there aren\'t any object of type CharacterData: it is implemented by other interfaces, like Text, Comment, or ProcessingInstruction which aren\'t abstract. */\ninterface CharacterData extends Node, ChildNode, NonDocumentTypeChildNode {\n    data: string;\n    readonly length: number;\n    readonly ownerDocument: Document;\n    appendData(data: string): void;\n    deleteData(offset: number, count: number): void;\n    insertData(offset: number, data: string): void;\n    replaceData(offset: number, count: number, data: string): void;\n    substringData(offset: number, count: number): string;\n}\n\ndeclare var CharacterData: {\n    prototype: CharacterData;\n    new(): CharacterData;\n};\n\ninterface ChildNode extends Node {\n    /**\n     * Inserts nodes just after node, while replacing strings in nodes with equivalent Text nodes.\n     *\n     * Throws a "HierarchyRequestError" DOMException if the constraints of the node tree are violated.\n     */\n    after(...nodes: (Node | string)[]): void;\n    /**\n     * Inserts nodes just before node, while replacing strings in nodes with equivalent Text nodes.\n     *\n     * Throws a "HierarchyRequestError" DOMException if the constraints of the node tree are violated.\n     */\n    before(...nodes: (Node | string)[]): void;\n    /** Removes node. */\n    remove(): void;\n    /**\n     * Replaces node with nodes, while replacing strings in nodes with equivalent Text nodes.\n     *\n     * Throws a "HierarchyRequestError" DOMException if the constraints of the node tree are violated.\n     */\n    replaceWith(...nodes: (Node | string)[]): void;\n}\n\n/** @deprecated */\ninterface ClientRect extends DOMRect {\n}\n\n/** Available only in secure contexts. */\ninterface Clipboard extends EventTarget {\n    read(): Promise<ClipboardItems>;\n    readText(): Promise<string>;\n    write(data: ClipboardItems): Promise<void>;\n    writeText(data: string): Promise<void>;\n}\n\ndeclare var Clipboard: {\n    prototype: Clipboard;\n    new(): Clipboard;\n};\n\n/** Events providing information related to modification of the clipboard, that is cut, copy, and paste events. */\ninterface ClipboardEvent extends Event {\n    readonly clipboardData: DataTransfer | null;\n}\n\ndeclare var ClipboardEvent: {\n    prototype: ClipboardEvent;\n    new(type: string, eventInitDict?: ClipboardEventInit): ClipboardEvent;\n};\n\ninterface ClipboardItem {\n    readonly types: ReadonlyArray<string>;\n    getType(type: string): Promise<Blob>;\n}\n\ndeclare var ClipboardItem: {\n    prototype: ClipboardItem;\n    new(items: Record<string, ClipboardItemDataType | PromiseLike<ClipboardItemDataType>>, options?: ClipboardItemOptions): ClipboardItem;\n};\n\n/** A CloseEvent is sent to clients using WebSockets when the connection is closed. This is delivered to the listener indicated by the WebSocket object\'s onclose attribute. */\ninterface CloseEvent extends Event {\n    /** Returns the WebSocket connection close code provided by the server. */\n    readonly code: number;\n    /** Returns the WebSocket connection close reason provided by the server. */\n    readonly reason: string;\n    /** Returns true if the connection closed cleanly; false otherwise. */\n    readonly wasClean: boolean;\n}\n\ndeclare var CloseEvent: {\n    prototype: CloseEvent;\n    new(type: string, eventInitDict?: CloseEventInit): CloseEvent;\n};\n\n/** Textual notations within markup; although it is generally not visually shown, such comments are available to be read in the source view. */\ninterface Comment extends CharacterData {\n}\n\ndeclare var Comment: {\n    prototype: Comment;\n    new(data?: string): Comment;\n};\n\n/** The DOM CompositionEvent represents events that occur due to the user indirectly entering text. */\ninterface CompositionEvent extends UIEvent {\n    readonly data: string;\n    /** @deprecated */\n    initCompositionEvent(typeArg: string, bubblesArg?: boolean, cancelableArg?: boolean, viewArg?: WindowProxy | null, dataArg?: string): void;\n}\n\ndeclare var CompositionEvent: {\n    prototype: CompositionEvent;\n    new(type: string, eventInitDict?: CompositionEventInit): CompositionEvent;\n};\n\ninterface ConstantSourceNode extends AudioScheduledSourceNode {\n    readonly offset: AudioParam;\n    addEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this: ConstantSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this: ConstantSourceNode, ev: AudioScheduledSourceNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ConstantSourceNode: {\n    prototype: ConstantSourceNode;\n    new(context: BaseAudioContext, options?: ConstantSourceOptions): ConstantSourceNode;\n};\n\n/** An AudioNode that performs a Linear Convolution on a given AudioBuffer, often used to achieve a reverb effect. A ConvolverNode always has exactly one input and one output. */\ninterface ConvolverNode extends AudioNode {\n    buffer: AudioBuffer | null;\n    normalize: boolean;\n}\n\ndeclare var ConvolverNode: {\n    prototype: ConvolverNode;\n    new(context: BaseAudioContext, options?: ConvolverOptions): ConvolverNode;\n};\n\n/** This Streams API interface provides a built-in byte length queuing strategy that can be used when constructing streams. */\ninterface CountQueuingStrategy extends QueuingStrategy {\n    readonly highWaterMark: number;\n    readonly size: QueuingStrategySize;\n}\n\ndeclare var CountQueuingStrategy: {\n    prototype: CountQueuingStrategy;\n    new(init: QueuingStrategyInit): CountQueuingStrategy;\n};\n\n/** Available only in secure contexts. */\ninterface Credential {\n    readonly id: string;\n    readonly type: string;\n}\n\ndeclare var Credential: {\n    prototype: Credential;\n    new(): Credential;\n};\n\n/** Available only in secure contexts. */\ninterface CredentialsContainer {\n    create(options?: CredentialCreationOptions): Promise<Credential | null>;\n    get(options?: CredentialRequestOptions): Promise<Credential | null>;\n    preventSilentAccess(): Promise<void>;\n    store(credential: Credential): Promise<Credential>;\n}\n\ndeclare var CredentialsContainer: {\n    prototype: CredentialsContainer;\n    new(): CredentialsContainer;\n};\n\n/** Basic cryptography features available in the current context. It allows access to a cryptographically strong random number generator and to cryptographic primitives. */\ninterface Crypto {\n    /** Available only in secure contexts. */\n    readonly subtle: SubtleCrypto;\n    getRandomValues<T extends ArrayBufferView | null>(array: T): T;\n    /** Available only in secure contexts. */\n    randomUUID(): string;\n}\n\ndeclare var Crypto: {\n    prototype: Crypto;\n    new(): Crypto;\n};\n\n/**\n * The CryptoKey dictionary of the Web Crypto API represents a cryptographic key.\n * Available only in secure contexts.\n */\ninterface CryptoKey {\n    readonly algorithm: KeyAlgorithm;\n    readonly extractable: boolean;\n    readonly type: KeyType;\n    readonly usages: KeyUsage[];\n}\n\ndeclare var CryptoKey: {\n    prototype: CryptoKey;\n    new(): CryptoKey;\n};\n\ninterface CustomElementRegistry {\n    define(name: string, constructor: CustomElementConstructor, options?: ElementDefinitionOptions): void;\n    get(name: string): CustomElementConstructor | undefined;\n    upgrade(root: Node): void;\n    whenDefined(name: string): Promise<CustomElementConstructor>;\n}\n\ndeclare var CustomElementRegistry: {\n    prototype: CustomElementRegistry;\n    new(): CustomElementRegistry;\n};\n\ninterface CustomEvent<T = any> extends Event {\n    /** Returns any custom data event was created with. Typically used for synthetic events. */\n    readonly detail: T;\n    /** @deprecated */\n    initCustomEvent(type: string, bubbles?: boolean, cancelable?: boolean, detail?: T): void;\n}\n\ndeclare var CustomEvent: {\n    prototype: CustomEvent;\n    new<T>(type: string, eventInitDict?: CustomEventInit<T>): CustomEvent<T>;\n};\n\n/** An abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API. */\ninterface DOMException extends Error {\n    readonly code: number;\n    readonly message: string;\n    readonly name: string;\n    readonly ABORT_ERR: number;\n    readonly DATA_CLONE_ERR: number;\n    readonly DOMSTRING_SIZE_ERR: number;\n    readonly HIERARCHY_REQUEST_ERR: number;\n    readonly INDEX_SIZE_ERR: number;\n    readonly INUSE_ATTRIBUTE_ERR: number;\n    readonly INVALID_ACCESS_ERR: number;\n    readonly INVALID_CHARACTER_ERR: number;\n    readonly INVALID_MODIFICATION_ERR: number;\n    readonly INVALID_NODE_TYPE_ERR: number;\n    readonly INVALID_STATE_ERR: number;\n    readonly NAMESPACE_ERR: number;\n    readonly NETWORK_ERR: number;\n    readonly NOT_FOUND_ERR: number;\n    readonly NOT_SUPPORTED_ERR: number;\n    readonly NO_DATA_ALLOWED_ERR: number;\n    readonly NO_MODIFICATION_ALLOWED_ERR: number;\n    readonly QUOTA_EXCEEDED_ERR: number;\n    readonly SECURITY_ERR: number;\n    readonly SYNTAX_ERR: number;\n    readonly TIMEOUT_ERR: number;\n    readonly TYPE_MISMATCH_ERR: number;\n    readonly URL_MISMATCH_ERR: number;\n    readonly VALIDATION_ERR: number;\n    readonly WRONG_DOCUMENT_ERR: number;\n}\n\ndeclare var DOMException: {\n    prototype: DOMException;\n    new(message?: string, name?: string): DOMException;\n    readonly ABORT_ERR: number;\n    readonly DATA_CLONE_ERR: number;\n    readonly DOMSTRING_SIZE_ERR: number;\n    readonly HIERARCHY_REQUEST_ERR: number;\n    readonly INDEX_SIZE_ERR: number;\n    readonly INUSE_ATTRIBUTE_ERR: number;\n    readonly INVALID_ACCESS_ERR: number;\n    readonly INVALID_CHARACTER_ERR: number;\n    readonly INVALID_MODIFICATION_ERR: number;\n    readonly INVALID_NODE_TYPE_ERR: number;\n    readonly INVALID_STATE_ERR: number;\n    readonly NAMESPACE_ERR: number;\n    readonly NETWORK_ERR: number;\n    readonly NOT_FOUND_ERR: number;\n    readonly NOT_SUPPORTED_ERR: number;\n    readonly NO_DATA_ALLOWED_ERR: number;\n    readonly NO_MODIFICATION_ALLOWED_ERR: number;\n    readonly QUOTA_EXCEEDED_ERR: number;\n    readonly SECURITY_ERR: number;\n    readonly SYNTAX_ERR: number;\n    readonly TIMEOUT_ERR: number;\n    readonly TYPE_MISMATCH_ERR: number;\n    readonly URL_MISMATCH_ERR: number;\n    readonly VALIDATION_ERR: number;\n    readonly WRONG_DOCUMENT_ERR: number;\n};\n\n/** An object providing methods which are not dependent on any particular document. Such an object is returned by the Document.implementation property. */\ninterface DOMImplementation {\n    createDocument(namespace: string | null, qualifiedName: string | null, doctype?: DocumentType | null): XMLDocument;\n    createDocumentType(qualifiedName: string, publicId: string, systemId: string): DocumentType;\n    createHTMLDocument(title?: string): Document;\n    /** @deprecated */\n    hasFeature(...args: any[]): true;\n}\n\ndeclare var DOMImplementation: {\n    prototype: DOMImplementation;\n    new(): DOMImplementation;\n};\n\ninterface DOMMatrix extends DOMMatrixReadOnly {\n    a: number;\n    b: number;\n    c: number;\n    d: number;\n    e: number;\n    f: number;\n    m11: number;\n    m12: number;\n    m13: number;\n    m14: number;\n    m21: number;\n    m22: number;\n    m23: number;\n    m24: number;\n    m31: number;\n    m32: number;\n    m33: number;\n    m34: number;\n    m41: number;\n    m42: number;\n    m43: number;\n    m44: number;\n    invertSelf(): DOMMatrix;\n    multiplySelf(other?: DOMMatrixInit): DOMMatrix;\n    preMultiplySelf(other?: DOMMatrixInit): DOMMatrix;\n    rotateAxisAngleSelf(x?: number, y?: number, z?: number, angle?: number): DOMMatrix;\n    rotateFromVectorSelf(x?: number, y?: number): DOMMatrix;\n    rotateSelf(rotX?: number, rotY?: number, rotZ?: number): DOMMatrix;\n    scale3dSelf(scale?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;\n    scaleSelf(scaleX?: number, scaleY?: number, scaleZ?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;\n    setMatrixValue(transformList: string): DOMMatrix;\n    skewXSelf(sx?: number): DOMMatrix;\n    skewYSelf(sy?: number): DOMMatrix;\n    translateSelf(tx?: number, ty?: number, tz?: number): DOMMatrix;\n}\n\ndeclare var DOMMatrix: {\n    prototype: DOMMatrix;\n    new(init?: string | number[]): DOMMatrix;\n    fromFloat32Array(array32: Float32Array): DOMMatrix;\n    fromFloat64Array(array64: Float64Array): DOMMatrix;\n    fromMatrix(other?: DOMMatrixInit): DOMMatrix;\n};\n\ntype SVGMatrix = DOMMatrix;\ndeclare var SVGMatrix: typeof DOMMatrix;\n\ntype WebKitCSSMatrix = DOMMatrix;\ndeclare var WebKitCSSMatrix: typeof DOMMatrix;\n\ninterface DOMMatrixReadOnly {\n    readonly a: number;\n    readonly b: number;\n    readonly c: number;\n    readonly d: number;\n    readonly e: number;\n    readonly f: number;\n    readonly is2D: boolean;\n    readonly isIdentity: boolean;\n    readonly m11: number;\n    readonly m12: number;\n    readonly m13: number;\n    readonly m14: number;\n    readonly m21: number;\n    readonly m22: number;\n    readonly m23: number;\n    readonly m24: number;\n    readonly m31: number;\n    readonly m32: number;\n    readonly m33: number;\n    readonly m34: number;\n    readonly m41: number;\n    readonly m42: number;\n    readonly m43: number;\n    readonly m44: number;\n    flipX(): DOMMatrix;\n    flipY(): DOMMatrix;\n    inverse(): DOMMatrix;\n    multiply(other?: DOMMatrixInit): DOMMatrix;\n    rotate(rotX?: number, rotY?: number, rotZ?: number): DOMMatrix;\n    rotateAxisAngle(x?: number, y?: number, z?: number, angle?: number): DOMMatrix;\n    rotateFromVector(x?: number, y?: number): DOMMatrix;\n    scale(scaleX?: number, scaleY?: number, scaleZ?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;\n    scale3d(scale?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;\n    /** @deprecated */\n    scaleNonUniform(scaleX?: number, scaleY?: number): DOMMatrix;\n    skewX(sx?: number): DOMMatrix;\n    skewY(sy?: number): DOMMatrix;\n    toFloat32Array(): Float32Array;\n    toFloat64Array(): Float64Array;\n    toJSON(): any;\n    transformPoint(point?: DOMPointInit): DOMPoint;\n    translate(tx?: number, ty?: number, tz?: number): DOMMatrix;\n    toString(): string;\n}\n\ndeclare var DOMMatrixReadOnly: {\n    prototype: DOMMatrixReadOnly;\n    new(init?: string | number[]): DOMMatrixReadOnly;\n    fromFloat32Array(array32: Float32Array): DOMMatrixReadOnly;\n    fromFloat64Array(array64: Float64Array): DOMMatrixReadOnly;\n    fromMatrix(other?: DOMMatrixInit): DOMMatrixReadOnly;\n    toString(): string;\n};\n\n/** Provides the ability to parse XML or HTML source code from a string into a DOM Document. */\ninterface DOMParser {\n    /**\n     * Parses string using either the HTML or XML parser, according to type, and returns the resulting Document. type can be "text/html" (which will invoke the HTML parser), or any of "text/xml", "application/xml", "application/xhtml+xml", or "image/svg+xml" (which will invoke the XML parser).\n     *\n     * For the XML parser, if string cannot be parsed, then the returned Document will contain elements describing the resulting error.\n     *\n     * Note that script elements are not evaluated during parsing, and the resulting document\'s encoding will always be UTF-8.\n     *\n     * Values other than the above for type will cause a TypeError exception to be thrown.\n     */\n    parseFromString(string: string, type: DOMParserSupportedType): Document;\n}\n\ndeclare var DOMParser: {\n    prototype: DOMParser;\n    new(): DOMParser;\n};\n\ninterface DOMPoint extends DOMPointReadOnly {\n    w: number;\n    x: number;\n    y: number;\n    z: number;\n}\n\ndeclare var DOMPoint: {\n    prototype: DOMPoint;\n    new(x?: number, y?: number, z?: number, w?: number): DOMPoint;\n    fromPoint(other?: DOMPointInit): DOMPoint;\n};\n\ntype SVGPoint = DOMPoint;\ndeclare var SVGPoint: typeof DOMPoint;\n\ninterface DOMPointReadOnly {\n    readonly w: number;\n    readonly x: number;\n    readonly y: number;\n    readonly z: number;\n    matrixTransform(matrix?: DOMMatrixInit): DOMPoint;\n    toJSON(): any;\n}\n\ndeclare var DOMPointReadOnly: {\n    prototype: DOMPointReadOnly;\n    new(x?: number, y?: number, z?: number, w?: number): DOMPointReadOnly;\n    fromPoint(other?: DOMPointInit): DOMPointReadOnly;\n};\n\ninterface DOMQuad {\n    readonly p1: DOMPoint;\n    readonly p2: DOMPoint;\n    readonly p3: DOMPoint;\n    readonly p4: DOMPoint;\n    getBounds(): DOMRect;\n    toJSON(): any;\n}\n\ndeclare var DOMQuad: {\n    prototype: DOMQuad;\n    new(p1?: DOMPointInit, p2?: DOMPointInit, p3?: DOMPointInit, p4?: DOMPointInit): DOMQuad;\n    fromQuad(other?: DOMQuadInit): DOMQuad;\n    fromRect(other?: DOMRectInit): DOMQuad;\n};\n\ninterface DOMRect extends DOMRectReadOnly {\n    height: number;\n    width: number;\n    x: number;\n    y: number;\n}\n\ndeclare var DOMRect: {\n    prototype: DOMRect;\n    new(x?: number, y?: number, width?: number, height?: number): DOMRect;\n    fromRect(other?: DOMRectInit): DOMRect;\n};\n\ntype SVGRect = DOMRect;\ndeclare var SVGRect: typeof DOMRect;\n\ninterface DOMRectList {\n    readonly length: number;\n    item(index: number): DOMRect | null;\n    [index: number]: DOMRect;\n}\n\ndeclare var DOMRectList: {\n    prototype: DOMRectList;\n    new(): DOMRectList;\n};\n\ninterface DOMRectReadOnly {\n    readonly bottom: number;\n    readonly height: number;\n    readonly left: number;\n    readonly right: number;\n    readonly top: number;\n    readonly width: number;\n    readonly x: number;\n    readonly y: number;\n    toJSON(): any;\n}\n\ndeclare var DOMRectReadOnly: {\n    prototype: DOMRectReadOnly;\n    new(x?: number, y?: number, width?: number, height?: number): DOMRectReadOnly;\n    fromRect(other?: DOMRectInit): DOMRectReadOnly;\n};\n\n/** A type returned by some APIs which contains a list of DOMString (strings). */\ninterface DOMStringList {\n    /** Returns the number of strings in strings. */\n    readonly length: number;\n    /** Returns true if strings contains string, and false otherwise. */\n    contains(string: string): boolean;\n    /** Returns the string with index index from strings. */\n    item(index: number): string | null;\n    [index: number]: string;\n}\n\ndeclare var DOMStringList: {\n    prototype: DOMStringList;\n    new(): DOMStringList;\n};\n\n/** Used by the dataset HTML attribute to represent data for custom attributes added to elements. */\ninterface DOMStringMap {\n    [name: string]: string | undefined;\n}\n\ndeclare var DOMStringMap: {\n    prototype: DOMStringMap;\n    new(): DOMStringMap;\n};\n\n/** A set of space-separated tokens. Such a set is returned by Element.classList, HTMLLinkElement.relList, HTMLAnchorElement.relList, HTMLAreaElement.relList, HTMLIframeElement.sandbox, or HTMLOutputElement.htmlFor. It is indexed beginning with 0 as with JavaScript Array objects. DOMTokenList is always case-sensitive. */\ninterface DOMTokenList {\n    /** Returns the number of tokens. */\n    readonly length: number;\n    /**\n     * Returns the associated set as string.\n     *\n     * Can be set, to change the associated attribute.\n     */\n    value: string;\n    toString(): string;\n    /**\n     * Adds all arguments passed, except those already present.\n     *\n     * Throws a "SyntaxError" DOMException if one of the arguments is the empty string.\n     *\n     * Throws an "InvalidCharacterError" DOMException if one of the arguments contains any ASCII whitespace.\n     */\n    add(...tokens: string[]): void;\n    /** Returns true if token is present, and false otherwise. */\n    contains(token: string): boolean;\n    /** Returns the token with index index. */\n    item(index: number): string | null;\n    /**\n     * Removes arguments passed, if they are present.\n     *\n     * Throws a "SyntaxError" DOMException if one of the arguments is the empty string.\n     *\n     * Throws an "InvalidCharacterError" DOMException if one of the arguments contains any ASCII whitespace.\n     */\n    remove(...tokens: string[]): void;\n    /**\n     * Replaces token with newToken.\n     *\n     * Returns true if token was replaced with newToken, and false otherwise.\n     *\n     * Throws a "SyntaxError" DOMException if one of the arguments is the empty string.\n     *\n     * Throws an "InvalidCharacterError" DOMException if one of the arguments contains any ASCII whitespace.\n     */\n    replace(token: string, newToken: string): boolean;\n    /**\n     * Returns true if token is in the associated attribute\'s supported tokens. Returns false otherwise.\n     *\n     * Throws a TypeError if the associated attribute has no supported tokens defined.\n     */\n    supports(token: string): boolean;\n    /**\n     * If force is not given, "toggles" token, removing it if it\'s present and adding it if it\'s not present. If force is true, adds token (same as add()). If force is false, removes token (same as remove()).\n     *\n     * Returns true if token is now present, and false otherwise.\n     *\n     * Throws a "SyntaxError" DOMException if token is empty.\n     *\n     * Throws an "InvalidCharacterError" DOMException if token contains any spaces.\n     */\n    toggle(token: string, force?: boolean): boolean;\n    forEach(callbackfn: (value: string, key: number, parent: DOMTokenList) => void, thisArg?: any): void;\n    [index: number]: string;\n}\n\ndeclare var DOMTokenList: {\n    prototype: DOMTokenList;\n    new(): DOMTokenList;\n};\n\n/** Used to hold the data that is being dragged during a drag and drop operation. It may hold one or more data items, each of one or more data types. For more information about drag and drop, see HTML Drag and Drop API. */\ninterface DataTransfer {\n    /**\n     * Returns the kind of operation that is currently selected. If the kind of operation isn\'t one of those that is allowed by the effectAllowed attribute, then the operation will fail.\n     *\n     * Can be set, to change the selected operation.\n     *\n     * The possible values are "none", "copy", "link", and "move".\n     */\n    dropEffect: "none" | "copy" | "link" | "move";\n    /**\n     * Returns the kinds of operations that are to be allowed.\n     *\n     * Can be set (during the dragstart event), to change the allowed operations.\n     *\n     * The possible values are "none", "copy", "copyLink", "copyMove", "link", "linkMove", "move", "all", and "uninitialized",\n     */\n    effectAllowed: "none" | "copy" | "copyLink" | "copyMove" | "link" | "linkMove" | "move" | "all" | "uninitialized";\n    /** Returns a FileList of the files being dragged, if any. */\n    readonly files: FileList;\n    /** Returns a DataTransferItemList object, with the drag data. */\n    readonly items: DataTransferItemList;\n    /** Returns a frozen array listing the formats that were set in the dragstart event. In addition, if any files are being dragged, then one of the types will be the string "Files". */\n    readonly types: ReadonlyArray<string>;\n    /** Removes the data of the specified formats. Removes all data if the argument is omitted. */\n    clearData(format?: string): void;\n    /** Returns the specified data. If there is no such data, returns the empty string. */\n    getData(format: string): string;\n    /** Adds the specified data. */\n    setData(format: string, data: string): void;\n    /** Uses the given element to update the drag feedback, replacing any previously specified feedback. */\n    setDragImage(image: Element, x: number, y: number): void;\n}\n\ndeclare var DataTransfer: {\n    prototype: DataTransfer;\n    new(): DataTransfer;\n};\n\n/** One drag data item. During a drag operation, each drag event has a dataTransfer property which contains a list of drag data items. Each item in the list is a DataTransferItem object. */\ninterface DataTransferItem {\n    /** Returns the drag data item kind, one of: "string", "file". */\n    readonly kind: string;\n    /** Returns the drag data item type string. */\n    readonly type: string;\n    /** Returns a File object, if the drag data item kind is File. */\n    getAsFile(): File | null;\n    /** Invokes the callback with the string data as the argument, if the drag data item kind is text. */\n    getAsString(callback: FunctionStringCallback | null): void;\n    webkitGetAsEntry(): FileSystemEntry | null;\n}\n\ndeclare var DataTransferItem: {\n    prototype: DataTransferItem;\n    new(): DataTransferItem;\n};\n\n/** A list of DataTransferItem objects representing items being dragged. During a drag operation, each DragEvent has a dataTransfer property and that property is a DataTransferItemList. */\ninterface DataTransferItemList {\n    /** Returns the number of items in the drag data store. */\n    readonly length: number;\n    /** Adds a new entry for the given data to the drag data store. If the data is plain text then a type string has to be provided also. */\n    add(data: string, type: string): DataTransferItem | null;\n    add(data: File): DataTransferItem | null;\n    /** Removes all the entries in the drag data store. */\n    clear(): void;\n    /** Removes the indexth entry in the drag data store. */\n    remove(index: number): void;\n    [index: number]: DataTransferItem;\n}\n\ndeclare var DataTransferItemList: {\n    prototype: DataTransferItemList;\n    new(): DataTransferItemList;\n};\n\n/** A delay-line; an AudioNode audio-processing module that causes a delay between the arrival of an input data and its propagation to the output. */\ninterface DelayNode extends AudioNode {\n    readonly delayTime: AudioParam;\n}\n\ndeclare var DelayNode: {\n    prototype: DelayNode;\n    new(context: BaseAudioContext, options?: DelayOptions): DelayNode;\n};\n\n/**\n * The DeviceMotionEvent provides web developers with information about the speed of changes for the device\'s position and orientation.\n * Available only in secure contexts.\n */\ninterface DeviceMotionEvent extends Event {\n    readonly acceleration: DeviceMotionEventAcceleration | null;\n    readonly accelerationIncludingGravity: DeviceMotionEventAcceleration | null;\n    readonly interval: number;\n    readonly rotationRate: DeviceMotionEventRotationRate | null;\n}\n\ndeclare var DeviceMotionEvent: {\n    prototype: DeviceMotionEvent;\n    new(type: string, eventInitDict?: DeviceMotionEventInit): DeviceMotionEvent;\n};\n\n/** Available only in secure contexts. */\ninterface DeviceMotionEventAcceleration {\n    readonly x: number | null;\n    readonly y: number | null;\n    readonly z: number | null;\n}\n\n/** Available only in secure contexts. */\ninterface DeviceMotionEventRotationRate {\n    readonly alpha: number | null;\n    readonly beta: number | null;\n    readonly gamma: number | null;\n}\n\n/**\n * The DeviceOrientationEvent provides web developers with information from the physical orientation of the device running the web page.\n * Available only in secure contexts.\n */\ninterface DeviceOrientationEvent extends Event {\n    readonly absolute: boolean;\n    readonly alpha: number | null;\n    readonly beta: number | null;\n    readonly gamma: number | null;\n}\n\ndeclare var DeviceOrientationEvent: {\n    prototype: DeviceOrientationEvent;\n    new(type: string, eventInitDict?: DeviceOrientationEventInit): DeviceOrientationEvent;\n};\n\ninterface DocumentEventMap extends DocumentAndElementEventHandlersEventMap, GlobalEventHandlersEventMap {\n    "fullscreenchange": Event;\n    "fullscreenerror": Event;\n    "pointerlockchange": Event;\n    "pointerlockerror": Event;\n    "readystatechange": Event;\n    "visibilitychange": Event;\n}\n\n/** Any web page loaded in the browser and serves as an entry point into the web page\'s content, which is the DOM tree. */\ninterface Document extends Node, DocumentAndElementEventHandlers, DocumentOrShadowRoot, FontFaceSource, GlobalEventHandlers, NonElementParentNode, ParentNode, XPathEvaluatorBase {\n    /** Sets or gets the URL for the current document. */\n    readonly URL: string;\n    /**\n     * Sets or gets the color of all active links in the document.\n     * @deprecated\n     */\n    alinkColor: string;\n    /**\n     * Returns a reference to the collection of elements contained by the object.\n     * @deprecated\n     */\n    readonly all: HTMLAllCollection;\n    /**\n     * Retrieves a collection of all a objects that have a name and/or id property. Objects in this collection are in HTML source order.\n     * @deprecated\n     */\n    readonly anchors: HTMLCollectionOf<HTMLAnchorElement>;\n    /**\n     * Retrieves a collection of all applet objects in the document.\n     * @deprecated\n     */\n    readonly applets: HTMLCollection;\n    /**\n     * Deprecated. Sets or retrieves a value that indicates the background color behind the object.\n     * @deprecated\n     */\n    bgColor: string;\n    /** Specifies the beginning and end of the document body. */\n    body: HTMLElement;\n    /** Returns document\'s encoding. */\n    readonly characterSet: string;\n    /**\n     * Gets or sets the character set used to encode the object.\n     * @deprecated This is a legacy alias of `characterSet`.\n     */\n    readonly charset: string;\n    /** Gets a value that indicates whether standards-compliant mode is switched on for the object. */\n    readonly compatMode: string;\n    /** Returns document\'s content type. */\n    readonly contentType: string;\n    /**\n     * Returns the HTTP cookies that apply to the Document. If there are no cookies or cookies can\'t be applied to this resource, the empty string will be returned.\n     *\n     * Can be set, to add a new cookie to the element\'s set of HTTP cookies.\n     *\n     * If the contents are sandboxed into a unique origin (e.g. in an iframe with the sandbox attribute), a "SecurityError" DOMException will be thrown on getting and setting.\n     */\n    cookie: string;\n    /**\n     * Returns the script element, or the SVG script element, that is currently executing, as long as the element represents a classic script. In the case of reentrant script execution, returns the one that most recently started executing amongst those that have not yet finished executing.\n     *\n     * Returns null if the Document is not currently executing a script or SVG script element (e.g., because the running script is an event handler, or a timeout), or if the currently executing script or SVG script element represents a module script.\n     */\n    readonly currentScript: HTMLOrSVGScriptElement | null;\n    /** Returns the Window object of the active document. */\n    readonly defaultView: (WindowProxy & typeof globalThis) | null;\n    /** Sets or gets a value that indicates whether the document can be edited. */\n    designMode: string;\n    /** Sets or retrieves a value that indicates the reading order of the object. */\n    dir: string;\n    /** Gets an object representing the document type declaration associated with the current document. */\n    readonly doctype: DocumentType | null;\n    /** Gets a reference to the root node of the document. */\n    readonly documentElement: HTMLElement;\n    /** Returns document\'s URL. */\n    readonly documentURI: string;\n    /** Sets or gets the security domain of the document. */\n    domain: string;\n    /** Retrieves a collection of all embed objects in the document. */\n    readonly embeds: HTMLCollectionOf<HTMLEmbedElement>;\n    /**\n     * Sets or gets the foreground (text) color of the document.\n     * @deprecated\n     */\n    fgColor: string;\n    /** Retrieves a collection, in source order, of all form objects in the document. */\n    readonly forms: HTMLCollectionOf<HTMLFormElement>;\n    /** @deprecated */\n    readonly fullscreen: boolean;\n    /** Returns true if document has the ability to display elements fullscreen and fullscreen is supported, or false otherwise. */\n    readonly fullscreenEnabled: boolean;\n    /** Returns the head element. */\n    readonly head: HTMLHeadElement;\n    readonly hidden: boolean;\n    /** Retrieves a collection, in source order, of img objects in the document. */\n    readonly images: HTMLCollectionOf<HTMLImageElement>;\n    /** Gets the implementation object of the current document. */\n    readonly implementation: DOMImplementation;\n    /**\n     * Returns the character encoding used to create the webpage that is loaded into the document object.\n     * @deprecated This is a legacy alias of `characterSet`.\n     */\n    readonly inputEncoding: string;\n    /** Gets the date that the page was last modified, if the page supplies one. */\n    readonly lastModified: string;\n    /**\n     * Sets or gets the color of the document links.\n     * @deprecated\n     */\n    linkColor: string;\n    /** Retrieves a collection of all a objects that specify the href property and all area objects in the document. */\n    readonly links: HTMLCollectionOf<HTMLAnchorElement | HTMLAreaElement>;\n    /** Contains information about the current URL. */\n    get location(): Location;\n    set location(href: string | Location);\n    onfullscreenchange: ((this: Document, ev: Event) => any) | null;\n    onfullscreenerror: ((this: Document, ev: Event) => any) | null;\n    onpointerlockchange: ((this: Document, ev: Event) => any) | null;\n    onpointerlockerror: ((this: Document, ev: Event) => any) | null;\n    /**\n     * Fires when the state of the object has changed.\n     * @param ev The event\n     */\n    onreadystatechange: ((this: Document, ev: Event) => any) | null;\n    onvisibilitychange: ((this: Document, ev: Event) => any) | null;\n    readonly ownerDocument: null;\n    readonly pictureInPictureEnabled: boolean;\n    /** Return an HTMLCollection of the embed elements in the Document. */\n    readonly plugins: HTMLCollectionOf<HTMLEmbedElement>;\n    /** Retrieves a value that indicates the current state of the object. */\n    readonly readyState: DocumentReadyState;\n    /** Gets the URL of the location that referred the user to the current page. */\n    readonly referrer: string;\n    /** @deprecated */\n    readonly rootElement: SVGSVGElement | null;\n    /** Retrieves a collection of all script objects in the document. */\n    readonly scripts: HTMLCollectionOf<HTMLScriptElement>;\n    readonly scrollingElement: Element | null;\n    readonly timeline: DocumentTimeline;\n    /** Contains the title of the document. */\n    title: string;\n    readonly visibilityState: DocumentVisibilityState;\n    /**\n     * Sets or gets the color of the links that the user has visited.\n     * @deprecated\n     */\n    vlinkColor: string;\n    /**\n     * Moves node from another document and returns it.\n     *\n     * If node is a document, throws a "NotSupportedError" DOMException or, if node is a shadow root, throws a "HierarchyRequestError" DOMException.\n     */\n    adoptNode<T extends Node>(node: T): T;\n    /** @deprecated */\n    captureEvents(): void;\n    /** @deprecated */\n    caretRangeFromPoint(x: number, y: number): Range | null;\n    /** @deprecated */\n    clear(): void;\n    /** Closes an output stream and forces the sent data to display. */\n    close(): void;\n    /**\n     * Creates an attribute object with a specified name.\n     * @param name String that sets the attribute object\'s name.\n     */\n    createAttribute(localName: string): Attr;\n    createAttributeNS(namespace: string | null, qualifiedName: string): Attr;\n    /** Returns a CDATASection node whose data is data. */\n    createCDATASection(data: string): CDATASection;\n    /**\n     * Creates a comment object with the specified data.\n     * @param data Sets the comment object\'s data.\n     */\n    createComment(data: string): Comment;\n    /** Creates a new document. */\n    createDocumentFragment(): DocumentFragment;\n    /**\n     * Creates an instance of the element for the specified tag.\n     * @param tagName The name of an element.\n     */\n    createElement<K extends keyof HTMLElementTagNameMap>(tagName: K, options?: ElementCreationOptions): HTMLElementTagNameMap[K];\n    /** @deprecated */\n    createElement<K extends keyof HTMLElementDeprecatedTagNameMap>(tagName: K, options?: ElementCreationOptions): HTMLElementDeprecatedTagNameMap[K];\n    createElement(tagName: string, options?: ElementCreationOptions): HTMLElement;\n    /**\n     * Returns an element with namespace namespace. Its namespace prefix will be everything before ":" (U+003E) in qualifiedName or null. Its local name will be everything after ":" (U+003E) in qualifiedName or qualifiedName.\n     *\n     * If localName does not match the Name production an "InvalidCharacterError" DOMException will be thrown.\n     *\n     * If one of the following conditions is true a "NamespaceError" DOMException will be thrown:\n     *\n     * localName does not match the QName production.\n     * Namespace prefix is not null and namespace is the empty string.\n     * Namespace prefix is "xml" and namespace is not the XML namespace.\n     * qualifiedName or namespace prefix is "xmlns" and namespace is not the XMLNS namespace.\n     * namespace is the XMLNS namespace and neither qualifiedName nor namespace prefix is "xmlns".\n     *\n     * When supplied, options\'s is can be used to create a customized built-in element.\n     */\n    createElementNS(namespaceURI: "http://www.w3.org/1999/xhtml", qualifiedName: string): HTMLElement;\n    createElementNS<K extends keyof SVGElementTagNameMap>(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: K): SVGElementTagNameMap[K];\n    createElementNS(namespaceURI: "http://www.w3.org/2000/svg", qualifiedName: string): SVGElement;\n    createElementNS(namespaceURI: string | null, qualifiedName: string, options?: ElementCreationOptions): Element;\n    createElementNS(namespace: string | null, qualifiedName: string, options?: string | ElementCreationOptions): Element;\n    createEvent(eventInterface: "AnimationEvent"): AnimationEvent;\n    createEvent(eventInterface: "AnimationPlaybackEvent"): AnimationPlaybackEvent;\n    createEvent(eventInterface: "AudioProcessingEvent"): AudioProcessingEvent;\n    createEvent(eventInterface: "BeforeUnloadEvent"): BeforeUnloadEvent;\n    createEvent(eventInterface: "BlobEvent"): BlobEvent;\n    createEvent(eventInterface: "ClipboardEvent"): ClipboardEvent;\n    createEvent(eventInterface: "CloseEvent"): CloseEvent;\n    createEvent(eventInterface: "CompositionEvent"): CompositionEvent;\n    createEvent(eventInterface: "CustomEvent"): CustomEvent;\n    createEvent(eventInterface: "DeviceMotionEvent"): DeviceMotionEvent;\n    createEvent(eventInterface: "DeviceOrientationEvent"): DeviceOrientationEvent;\n    createEvent(eventInterface: "DragEvent"): DragEvent;\n    createEvent(eventInterface: "ErrorEvent"): ErrorEvent;\n    createEvent(eventInterface: "FocusEvent"): FocusEvent;\n    createEvent(eventInterface: "FontFaceSetLoadEvent"): FontFaceSetLoadEvent;\n    createEvent(eventInterface: "FormDataEvent"): FormDataEvent;\n    createEvent(eventInterface: "GamepadEvent"): GamepadEvent;\n    createEvent(eventInterface: "HashChangeEvent"): HashChangeEvent;\n    createEvent(eventInterface: "IDBVersionChangeEvent"): IDBVersionChangeEvent;\n    createEvent(eventInterface: "InputEvent"): InputEvent;\n    createEvent(eventInterface: "KeyboardEvent"): KeyboardEvent;\n    createEvent(eventInterface: "MediaEncryptedEvent"): MediaEncryptedEvent;\n    createEvent(eventInterface: "MediaKeyMessageEvent"): MediaKeyMessageEvent;\n    createEvent(eventInterface: "MediaQueryListEvent"): MediaQueryListEvent;\n    createEvent(eventInterface: "MediaRecorderErrorEvent"): MediaRecorderErrorEvent;\n    createEvent(eventInterface: "MediaStreamTrackEvent"): MediaStreamTrackEvent;\n    createEvent(eventInterface: "MessageEvent"): MessageEvent;\n    createEvent(eventInterface: "MouseEvent"): MouseEvent;\n    createEvent(eventInterface: "MouseEvents"): MouseEvent;\n    createEvent(eventInterface: "MutationEvent"): MutationEvent;\n    createEvent(eventInterface: "MutationEvents"): MutationEvent;\n    createEvent(eventInterface: "OfflineAudioCompletionEvent"): OfflineAudioCompletionEvent;\n    createEvent(eventInterface: "PageTransitionEvent"): PageTransitionEvent;\n    createEvent(eventInterface: "PaymentMethodChangeEvent"): PaymentMethodChangeEvent;\n    createEvent(eventInterface: "PaymentRequestUpdateEvent"): PaymentRequestUpdateEvent;\n    createEvent(eventInterface: "PointerEvent"): PointerEvent;\n    createEvent(eventInterface: "PopStateEvent"): PopStateEvent;\n    createEvent(eventInterface: "ProgressEvent"): ProgressEvent;\n    createEvent(eventInterface: "PromiseRejectionEvent"): PromiseRejectionEvent;\n    createEvent(eventInterface: "RTCDTMFToneChangeEvent"): RTCDTMFToneChangeEvent;\n    createEvent(eventInterface: "RTCDataChannelEvent"): RTCDataChannelEvent;\n    createEvent(eventInterface: "RTCPeerConnectionIceErrorEvent"): RTCPeerConnectionIceErrorEvent;\n    createEvent(eventInterface: "RTCPeerConnectionIceEvent"): RTCPeerConnectionIceEvent;\n    createEvent(eventInterface: "RTCTrackEvent"): RTCTrackEvent;\n    createEvent(eventInterface: "SecurityPolicyViolationEvent"): SecurityPolicyViolationEvent;\n    createEvent(eventInterface: "SpeechSynthesisErrorEvent"): SpeechSynthesisErrorEvent;\n    createEvent(eventInterface: "SpeechSynthesisEvent"): SpeechSynthesisEvent;\n    createEvent(eventInterface: "StorageEvent"): StorageEvent;\n    createEvent(eventInterface: "SubmitEvent"): SubmitEvent;\n    createEvent(eventInterface: "TouchEvent"): TouchEvent;\n    createEvent(eventInterface: "TrackEvent"): TrackEvent;\n    createEvent(eventInterface: "TransitionEvent"): TransitionEvent;\n    createEvent(eventInterface: "UIEvent"): UIEvent;\n    createEvent(eventInterface: "UIEvents"): UIEvent;\n    createEvent(eventInterface: "WebGLContextEvent"): WebGLContextEvent;\n    createEvent(eventInterface: "WheelEvent"): WheelEvent;\n    createEvent(eventInterface: string): Event;\n    /**\n     * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n     * @param root The root element or node to start traversing on.\n     * @param whatToShow The type of nodes or elements to appear in the node list\n     * @param filter A custom NodeFilter function to use. For more information, see filter. Use null for no filter.\n     */\n    createNodeIterator(root: Node, whatToShow?: number, filter?: NodeFilter | null): NodeIterator;\n    /** Returns a ProcessingInstruction node whose target is target and data is data. If target does not match the Name production an "InvalidCharacterError" DOMException will be thrown. If data contains "?>" an "InvalidCharacterError" DOMException will be thrown. */\n    createProcessingInstruction(target: string, data: string): ProcessingInstruction;\n    /**  Returns an empty range object that has both of its boundary points positioned at the beginning of the document. */\n    createRange(): Range;\n    /**\n     * Creates a text string from the specified value.\n     * @param data String that specifies the nodeValue property of the text node.\n     */\n    createTextNode(data: string): Text;\n    /**\n     * Creates a TreeWalker object that you can use to traverse filtered lists of nodes or elements in a document.\n     * @param root The root element or node to start traversing on.\n     * @param whatToShow The type of nodes or elements to appear in the node list. For more information, see whatToShow.\n     * @param filter A custom NodeFilter function to use.\n     */\n    createTreeWalker(root: Node, whatToShow?: number, filter?: NodeFilter | null): TreeWalker;\n    /**\n     * Executes a command on the current document, current selection, or the given range.\n     * @param commandId String that specifies the command to execute. This command can be any of the command identifiers that can be executed in script.\n     * @param showUI Display the user interface, defaults to false.\n     * @param value Value to assign.\n     * @deprecated\n     */\n    execCommand(commandId: string, showUI?: boolean, value?: string): boolean;\n    /** Stops document\'s fullscreen element from being displayed fullscreen and resolves promise when done. */\n    exitFullscreen(): Promise<void>;\n    exitPictureInPicture(): Promise<void>;\n    exitPointerLock(): void;\n    /**\n     * Returns a reference to the first object with the specified value of the ID attribute.\n     * @param elementId String that specifies the ID value.\n     */\n    getElementById(elementId: string): HTMLElement | null;\n    /** Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes. */\n    getElementsByClassName(classNames: string): HTMLCollectionOf<Element>;\n    /**\n     * Gets a collection of objects based on the value of the NAME or ID attribute.\n     * @param elementName Gets a collection of objects based on the value of the NAME or ID attribute.\n     */\n    getElementsByName(elementName: string): NodeListOf<HTMLElement>;\n    /**\n     * Retrieves a collection of objects based on the specified element name.\n     * @param name Specifies the name of an element.\n     */\n    getElementsByTagName<K extends keyof HTMLElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<HTMLElementTagNameMap[K]>;\n    getElementsByTagName<K extends keyof SVGElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<SVGElementTagNameMap[K]>;\n    getElementsByTagName(qualifiedName: string): HTMLCollectionOf<Element>;\n    /**\n     * If namespace and localName are "*" returns a HTMLCollection of all descendant elements.\n     *\n     * If only namespace is "*" returns a HTMLCollection of all descendant elements whose local name is localName.\n     *\n     * If only localName is "*" returns a HTMLCollection of all descendant elements whose namespace is namespace.\n     *\n     * Otherwise, returns a HTMLCollection of all descendant elements whose namespace is namespace and local name is localName.\n     */\n    getElementsByTagNameNS(namespaceURI: "http://www.w3.org/1999/xhtml", localName: string): HTMLCollectionOf<HTMLElement>;\n    getElementsByTagNameNS(namespaceURI: "http://www.w3.org/2000/svg", localName: string): HTMLCollectionOf<SVGElement>;\n    getElementsByTagNameNS(namespace: string | null, localName: string): HTMLCollectionOf<Element>;\n    /** Returns an object representing the current selection of the document that is loaded into the object displaying a webpage. */\n    getSelection(): Selection | null;\n    /** Gets a value indicating whether the object currently has focus. */\n    hasFocus(): boolean;\n    hasStorageAccess(): Promise<boolean>;\n    /**\n     * Returns a copy of node. If deep is true, the copy also includes the node\'s descendants.\n     *\n     * If node is a document or a shadow root, throws a "NotSupportedError" DOMException.\n     */\n    importNode<T extends Node>(node: T, deep?: boolean): T;\n    /**\n     * Opens a new window and loads a document specified by a given URL. Also, opens a new window that uses the url parameter and the name parameter to collect the output of the write method and the writeln method.\n     * @param url Specifies a MIME type for the document.\n     * @param name Specifies the name of the window. This name is used as the value for the TARGET attribute on a form or an anchor element.\n     * @param features Contains a list of items separated by commas. Each item consists of an option and a value, separated by an equals sign (for example, "fullscreen=yes, toolbar=yes"). The following values are supported.\n     * @param replace Specifies whether the existing entry for the document is replaced in the history list.\n     */\n    open(unused1?: string, unused2?: string): Document;\n    open(url: string | URL, name: string, features: string): WindowProxy | null;\n    /**\n     * Returns a Boolean value that indicates whether a specified command can be successfully executed using execCommand, given the current state of the document.\n     * @param commandId Specifies a command identifier.\n     * @deprecated\n     */\n    queryCommandEnabled(commandId: string): boolean;\n    /**\n     * Returns a Boolean value that indicates whether the specified command is in the indeterminate state.\n     * @param commandId String that specifies a command identifier.\n     */\n    queryCommandIndeterm(commandId: string): boolean;\n    /**\n     * Returns a Boolean value that indicates the current state of the command.\n     * @param commandId String that specifies a command identifier.\n     * @deprecated\n     */\n    queryCommandState(commandId: string): boolean;\n    /**\n     * Returns a Boolean value that indicates whether the current command is supported on the current range.\n     * @param commandId Specifies a command identifier.\n     * @deprecated\n     */\n    queryCommandSupported(commandId: string): boolean;\n    /**\n     * Returns the current value of the document, range, or current selection for the given command.\n     * @param commandId String that specifies a command identifier.\n     */\n    queryCommandValue(commandId: string): string;\n    /** @deprecated */\n    releaseEvents(): void;\n    requestStorageAccess(): Promise<void>;\n    /**\n     * Writes one or more HTML expressions to a document in the specified window.\n     * @param content Specifies the text and HTML tags to write.\n     */\n    write(...text: string[]): void;\n    /**\n     * Writes one or more HTML expressions, followed by a carriage return, to a document in the specified window.\n     * @param content The text and HTML tags to write.\n     */\n    writeln(...text: string[]): void;\n    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Document: {\n    prototype: Document;\n    new(): Document;\n};\n\ninterface DocumentAndElementEventHandlersEventMap {\n    "copy": ClipboardEvent;\n    "cut": ClipboardEvent;\n    "paste": ClipboardEvent;\n}\n\ninterface DocumentAndElementEventHandlers {\n    oncopy: ((this: DocumentAndElementEventHandlers, ev: ClipboardEvent) => any) | null;\n    oncut: ((this: DocumentAndElementEventHandlers, ev: ClipboardEvent) => any) | null;\n    onpaste: ((this: DocumentAndElementEventHandlers, ev: ClipboardEvent) => any) | null;\n    addEventListener<K extends keyof DocumentAndElementEventHandlersEventMap>(type: K, listener: (this: DocumentAndElementEventHandlers, ev: DocumentAndElementEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof DocumentAndElementEventHandlersEventMap>(type: K, listener: (this: DocumentAndElementEventHandlers, ev: DocumentAndElementEventHandlersEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** A minimal document object that has no parent. It is used as a lightweight version of Document that stores a segment of a document structure comprised of nodes just like a standard document. The key difference is that because the document fragment isn\'t part of the active document tree structure, changes made to the fragment don\'t affect the document, cause reflow, or incur any performance impact that can occur when changes are made. */\ninterface DocumentFragment extends Node, NonElementParentNode, ParentNode {\n    readonly ownerDocument: Document;\n    getElementById(elementId: string): HTMLElement | null;\n}\n\ndeclare var DocumentFragment: {\n    prototype: DocumentFragment;\n    new(): DocumentFragment;\n};\n\ninterface DocumentOrShadowRoot {\n    /**\n     * Returns the deepest element in the document through which or to which key events are being routed. This is, roughly speaking, the focused element in the document.\n     *\n     * For the purposes of this API, when a child browsing context is focused, its container is focused in the parent browsing context. For example, if the user moves the focus to a text control in an iframe, the iframe is the element returned by the activeElement API in the iframe\'s node document.\n     *\n     * Similarly, when the focused element is in a different node tree than documentOrShadowRoot, the element returned will be the host that\'s located in the same node tree as documentOrShadowRoot if documentOrShadowRoot is a shadow-including inclusive ancestor of the focused element, and null if not.\n     */\n    readonly activeElement: Element | null;\n    /** Returns document\'s fullscreen element. */\n    readonly fullscreenElement: Element | null;\n    readonly pictureInPictureElement: Element | null;\n    readonly pointerLockElement: Element | null;\n    /** Retrieves a collection of styleSheet objects representing the style sheets that correspond to each instance of a link or style object in the document. */\n    readonly styleSheets: StyleSheetList;\n    /**\n     * Returns the element for the specified x coordinate and the specified y coordinate.\n     * @param x The x-offset\n     * @param y The y-offset\n     */\n    elementFromPoint(x: number, y: number): Element | null;\n    elementsFromPoint(x: number, y: number): Element[];\n    getAnimations(): Animation[];\n}\n\ninterface DocumentTimeline extends AnimationTimeline {\n}\n\ndeclare var DocumentTimeline: {\n    prototype: DocumentTimeline;\n    new(options?: DocumentTimelineOptions): DocumentTimeline;\n};\n\n/** A Node containing a doctype. */\ninterface DocumentType extends Node, ChildNode {\n    readonly name: string;\n    readonly ownerDocument: Document;\n    readonly publicId: string;\n    readonly systemId: string;\n}\n\ndeclare var DocumentType: {\n    prototype: DocumentType;\n    new(): DocumentType;\n};\n\n/** A DOM event that represents a drag and drop interaction. The user initiates a drag by placing a pointer device (such as a mouse) on the touch surface and then dragging the pointer to a new location (such as another DOM element). Applications are free to interpret a drag and drop interaction in an application-specific way. */\ninterface DragEvent extends MouseEvent {\n    /** Returns the DataTransfer object for the event. */\n    readonly dataTransfer: DataTransfer | null;\n}\n\ndeclare var DragEvent: {\n    prototype: DragEvent;\n    new(type: string, eventInitDict?: DragEventInit): DragEvent;\n};\n\n/** Inherits properties from its parent, AudioNode. */\ninterface DynamicsCompressorNode extends AudioNode {\n    readonly attack: AudioParam;\n    readonly knee: AudioParam;\n    readonly ratio: AudioParam;\n    readonly reduction: number;\n    readonly release: AudioParam;\n    readonly threshold: AudioParam;\n}\n\ndeclare var DynamicsCompressorNode: {\n    prototype: DynamicsCompressorNode;\n    new(context: BaseAudioContext, options?: DynamicsCompressorOptions): DynamicsCompressorNode;\n};\n\ninterface EXT_blend_minmax {\n    readonly MAX_EXT: GLenum;\n    readonly MIN_EXT: GLenum;\n}\n\ninterface EXT_color_buffer_float {\n}\n\ninterface EXT_color_buffer_half_float {\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: GLenum;\n    readonly RGB16F_EXT: GLenum;\n    readonly RGBA16F_EXT: GLenum;\n    readonly UNSIGNED_NORMALIZED_EXT: GLenum;\n}\n\ninterface EXT_float_blend {\n}\n\n/** The EXT_frag_depth extension is part of the WebGL API and enables to set a depth value of a fragment from within the fragment shader. */\ninterface EXT_frag_depth {\n}\n\ninterface EXT_sRGB {\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT: GLenum;\n    readonly SRGB8_ALPHA8_EXT: GLenum;\n    readonly SRGB_ALPHA_EXT: GLenum;\n    readonly SRGB_EXT: GLenum;\n}\n\ninterface EXT_shader_texture_lod {\n}\n\ninterface EXT_texture_compression_rgtc {\n    readonly COMPRESSED_RED_GREEN_RGTC2_EXT: GLenum;\n    readonly COMPRESSED_RED_RGTC1_EXT: GLenum;\n    readonly COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT: GLenum;\n    readonly COMPRESSED_SIGNED_RED_RGTC1_EXT: GLenum;\n}\n\n/** The EXT_texture_filter_anisotropic extension is part of the WebGL API and exposes two constants for anisotropic filtering (AF). */\ninterface EXT_texture_filter_anisotropic {\n    readonly MAX_TEXTURE_MAX_ANISOTROPY_EXT: GLenum;\n    readonly TEXTURE_MAX_ANISOTROPY_EXT: GLenum;\n}\n\ninterface ElementEventMap {\n    "fullscreenchange": Event;\n    "fullscreenerror": Event;\n}\n\n/** Element is the most general base class from which all objects in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element. */\ninterface Element extends Node, ARIAMixin, Animatable, ChildNode, InnerHTML, NonDocumentTypeChildNode, ParentNode, Slottable {\n    readonly attributes: NamedNodeMap;\n    /** Allows for manipulation of element\'s class content attribute as a set of whitespace-separated tokens through a DOMTokenList object. */\n    readonly classList: DOMTokenList;\n    /** Returns the value of element\'s class content attribute. Can be set to change it. */\n    className: string;\n    readonly clientHeight: number;\n    readonly clientLeft: number;\n    readonly clientTop: number;\n    readonly clientWidth: number;\n    /** Returns the value of element\'s id content attribute. Can be set to change it. */\n    id: string;\n    /** Returns the local name. */\n    readonly localName: string;\n    /** Returns the namespace. */\n    readonly namespaceURI: string | null;\n    onfullscreenchange: ((this: Element, ev: Event) => any) | null;\n    onfullscreenerror: ((this: Element, ev: Event) => any) | null;\n    outerHTML: string;\n    readonly ownerDocument: Document;\n    readonly part: DOMTokenList;\n    /** Returns the namespace prefix. */\n    readonly prefix: string | null;\n    readonly scrollHeight: number;\n    scrollLeft: number;\n    scrollTop: number;\n    readonly scrollWidth: number;\n    /** Returns element\'s shadow root, if any, and if shadow root\'s mode is "open", and null otherwise. */\n    readonly shadowRoot: ShadowRoot | null;\n    /** Returns the value of element\'s slot content attribute. Can be set to change it. */\n    slot: string;\n    /** Returns the HTML-uppercased qualified name. */\n    readonly tagName: string;\n    /** Creates a shadow root for element and returns it. */\n    attachShadow(init: ShadowRootInit): ShadowRoot;\n    /** Returns the first (starting at element) inclusive ancestor that matches selectors, and null otherwise. */\n    closest<K extends keyof HTMLElementTagNameMap>(selector: K): HTMLElementTagNameMap[K] | null;\n    closest<K extends keyof SVGElementTagNameMap>(selector: K): SVGElementTagNameMap[K] | null;\n    closest<E extends Element = Element>(selectors: string): E | null;\n    /** Returns element\'s first attribute whose qualified name is qualifiedName, and null if there is no such attribute otherwise. */\n    getAttribute(qualifiedName: string): string | null;\n    /** Returns element\'s attribute whose namespace is namespace and local name is localName, and null if there is no such attribute otherwise. */\n    getAttributeNS(namespace: string | null, localName: string): string | null;\n    /** Returns the qualified names of all element\'s attributes. Can contain duplicates. */\n    getAttributeNames(): string[];\n    getAttributeNode(qualifiedName: string): Attr | null;\n    getAttributeNodeNS(namespace: string | null, localName: string): Attr | null;\n    getBoundingClientRect(): DOMRect;\n    getClientRects(): DOMRectList;\n    /** Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes. */\n    getElementsByClassName(classNames: string): HTMLCollectionOf<Element>;\n    getElementsByTagName<K extends keyof HTMLElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<HTMLElementTagNameMap[K]>;\n    getElementsByTagName<K extends keyof SVGElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<SVGElementTagNameMap[K]>;\n    getElementsByTagName(qualifiedName: string): HTMLCollectionOf<Element>;\n    getElementsByTagNameNS(namespaceURI: "http://www.w3.org/1999/xhtml", localName: string): HTMLCollectionOf<HTMLElement>;\n    getElementsByTagNameNS(namespaceURI: "http://www.w3.org/2000/svg", localName: string): HTMLCollectionOf<SVGElement>;\n    getElementsByTagNameNS(namespace: string | null, localName: string): HTMLCollectionOf<Element>;\n    /** Returns true if element has an attribute whose qualified name is qualifiedName, and false otherwise. */\n    hasAttribute(qualifiedName: string): boolean;\n    /** Returns true if element has an attribute whose namespace is namespace and local name is localName. */\n    hasAttributeNS(namespace: string | null, localName: string): boolean;\n    /** Returns true if element has attributes, and false otherwise. */\n    hasAttributes(): boolean;\n    hasPointerCapture(pointerId: number): boolean;\n    insertAdjacentElement(where: InsertPosition, element: Element): Element | null;\n    insertAdjacentHTML(position: InsertPosition, text: string): void;\n    insertAdjacentText(where: InsertPosition, data: string): void;\n    /** Returns true if matching selectors against element\'s root yields element, and false otherwise. */\n    matches(selectors: string): boolean;\n    releasePointerCapture(pointerId: number): void;\n    /** Removes element\'s first attribute whose qualified name is qualifiedName. */\n    removeAttribute(qualifiedName: string): void;\n    /** Removes element\'s attribute whose namespace is namespace and local name is localName. */\n    removeAttributeNS(namespace: string | null, localName: string): void;\n    removeAttributeNode(attr: Attr): Attr;\n    /**\n     * Displays element fullscreen and resolves promise when done.\n     *\n     * When supplied, options\'s navigationUI member indicates whether showing navigation UI while in fullscreen is preferred or not. If set to "show", navigation simplicity is preferred over screen space, and if set to "hide", more screen space is preferred. User agents are always free to honor user preference over the application\'s. The default value "auto" indicates no application preference.\n     */\n    requestFullscreen(options?: FullscreenOptions): Promise<void>;\n    requestPointerLock(): void;\n    scroll(options?: ScrollToOptions): void;\n    scroll(x: number, y: number): void;\n    scrollBy(options?: ScrollToOptions): void;\n    scrollBy(x: number, y: number): void;\n    scrollIntoView(arg?: boolean | ScrollIntoViewOptions): void;\n    scrollTo(options?: ScrollToOptions): void;\n    scrollTo(x: number, y: number): void;\n    /** Sets the value of element\'s first attribute whose qualified name is qualifiedName to value. */\n    setAttribute(qualifiedName: string, value: string): void;\n    /** Sets the value of element\'s attribute whose namespace is namespace and local name is localName to value. */\n    setAttributeNS(namespace: string | null, qualifiedName: string, value: string): void;\n    setAttributeNode(attr: Attr): Attr | null;\n    setAttributeNodeNS(attr: Attr): Attr | null;\n    setPointerCapture(pointerId: number): void;\n    /**\n     * If force is not given, "toggles" qualifiedName, removing it if it is present and adding it if it is not present. If force is true, adds qualifiedName. If force is false, removes qualifiedName.\n     *\n     * Returns true if qualifiedName is now present, and false otherwise.\n     */\n    toggleAttribute(qualifiedName: string, force?: boolean): boolean;\n    /** @deprecated This is a legacy alias of `matches`. */\n    webkitMatchesSelector(selectors: string): boolean;\n    addEventListener<K extends keyof ElementEventMap>(type: K, listener: (this: Element, ev: ElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ElementEventMap>(type: K, listener: (this: Element, ev: ElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Element: {\n    prototype: Element;\n    new(): Element;\n};\n\ninterface ElementCSSInlineStyle {\n    readonly style: CSSStyleDeclaration;\n}\n\ninterface ElementContentEditable {\n    contentEditable: string;\n    enterKeyHint: string;\n    inputMode: string;\n    readonly isContentEditable: boolean;\n}\n\ninterface ElementInternals extends ARIAMixin {\n    /** Returns the ShadowRoot for internals\'s target element, if the target element is a shadow host, or null otherwise. */\n    readonly shadowRoot: ShadowRoot | null;\n}\n\ndeclare var ElementInternals: {\n    prototype: ElementInternals;\n    new(): ElementInternals;\n};\n\n/** Events providing information related to errors in scripts or in files. */\ninterface ErrorEvent extends Event {\n    readonly colno: number;\n    readonly error: any;\n    readonly filename: string;\n    readonly lineno: number;\n    readonly message: string;\n}\n\ndeclare var ErrorEvent: {\n    prototype: ErrorEvent;\n    new(type: string, eventInitDict?: ErrorEventInit): ErrorEvent;\n};\n\n/** An event which takes place in the DOM. */\ninterface Event {\n    /** Returns true or false depending on how event was initialized. True if event goes through its target\'s ancestors in reverse tree order, and false otherwise. */\n    readonly bubbles: boolean;\n    cancelBubble: boolean;\n    /** Returns true or false depending on how event was initialized. Its return value does not always carry meaning, but true can indicate that part of the operation during which event was dispatched, can be canceled by invoking the preventDefault() method. */\n    readonly cancelable: boolean;\n    /** Returns true or false depending on how event was initialized. True if event invokes listeners past a ShadowRoot node that is the root of its target, and false otherwise. */\n    readonly composed: boolean;\n    /** Returns the object whose event listener\'s callback is currently being invoked. */\n    readonly currentTarget: EventTarget | null;\n    /** Returns true if preventDefault() was invoked successfully to indicate cancelation, and false otherwise. */\n    readonly defaultPrevented: boolean;\n    /** Returns the event\'s phase, which is one of NONE, CAPTURING_PHASE, AT_TARGET, and BUBBLING_PHASE. */\n    readonly eventPhase: number;\n    /** Returns true if event was dispatched by the user agent, and false otherwise. */\n    readonly isTrusted: boolean;\n    /** @deprecated */\n    returnValue: boolean;\n    /** @deprecated */\n    readonly srcElement: EventTarget | null;\n    /** Returns the object to which event is dispatched (its target). */\n    readonly target: EventTarget | null;\n    /** Returns the event\'s timestamp as the number of milliseconds measured relative to the time origin. */\n    readonly timeStamp: DOMHighResTimeStamp;\n    /** Returns the type of event, e.g. "click", "hashchange", or "submit". */\n    readonly type: string;\n    /** Returns the invocation target objects of event\'s path (objects on which listeners will be invoked), except for any nodes in shadow trees of which the shadow root\'s mode is "closed" that are not reachable from event\'s currentTarget. */\n    composedPath(): EventTarget[];\n    /** @deprecated */\n    initEvent(type: string, bubbles?: boolean, cancelable?: boolean): void;\n    /** If invoked when the cancelable attribute value is true, and while executing a listener for the event with passive set to false, signals to the operation that caused event to be dispatched that it needs to be canceled. */\n    preventDefault(): void;\n    /** Invoking this method prevents event from reaching any registered event listeners after the current one finishes running and, when dispatched in a tree, also prevents event from reaching any other objects. */\n    stopImmediatePropagation(): void;\n    /** When dispatched in a tree, invoking this method prevents event from reaching any objects other than the current object. */\n    stopPropagation(): void;\n    readonly AT_TARGET: number;\n    readonly BUBBLING_PHASE: number;\n    readonly CAPTURING_PHASE: number;\n    readonly NONE: number;\n}\n\ndeclare var Event: {\n    prototype: Event;\n    new(type: string, eventInitDict?: EventInit): Event;\n    readonly AT_TARGET: number;\n    readonly BUBBLING_PHASE: number;\n    readonly CAPTURING_PHASE: number;\n    readonly NONE: number;\n};\n\ninterface EventListener {\n    (evt: Event): void;\n}\n\ninterface EventListenerObject {\n    handleEvent(object: Event): void;\n}\n\ninterface EventSourceEventMap {\n    "error": Event;\n    "message": MessageEvent;\n    "open": Event;\n}\n\ninterface EventSource extends EventTarget {\n    onerror: ((this: EventSource, ev: Event) => any) | null;\n    onmessage: ((this: EventSource, ev: MessageEvent) => any) | null;\n    onopen: ((this: EventSource, ev: Event) => any) | null;\n    /** Returns the state of this EventSource object\'s connection. It can have the values described below. */\n    readonly readyState: number;\n    /** Returns the URL providing the event stream. */\n    readonly url: string;\n    /** Returns true if the credentials mode for connection requests to the URL providing the event stream is set to "include", and false otherwise. */\n    readonly withCredentials: boolean;\n    /** Aborts any instances of the fetch algorithm started for this EventSource object, and sets the readyState attribute to CLOSED. */\n    close(): void;\n    readonly CLOSED: number;\n    readonly CONNECTING: number;\n    readonly OPEN: number;\n    addEventListener<K extends keyof EventSourceEventMap>(type: K, listener: (this: EventSource, ev: EventSourceEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: (this: EventSource, event: MessageEvent) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof EventSourceEventMap>(type: K, listener: (this: EventSource, ev: EventSourceEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: (this: EventSource, event: MessageEvent) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var EventSource: {\n    prototype: EventSource;\n    new(url: string | URL, eventSourceInitDict?: EventSourceInit): EventSource;\n    readonly CLOSED: number;\n    readonly CONNECTING: number;\n    readonly OPEN: number;\n};\n\n/** EventTarget is a DOM interface implemented by objects that can receive events and may have listeners for them. */\ninterface EventTarget {\n    /**\n     * Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n     *\n     * The options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options\'s capture.\n     *\n     * When set to true, options\'s capture prevents callback from being invoked when the event\'s eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event\'s eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event\'s eventPhase attribute value is AT_TARGET.\n     *\n     * When set to true, options\'s passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n     *\n     * When set to true, options\'s once indicates that the callback will only be invoked once after which the event listener will be removed.\n     *\n     * If an AbortSignal is passed for options\'s signal, then the event listener will be removed when signal is aborted.\n     *\n     * The event listener is appended to target\'s event listener list and is not appended if it has the same type, callback, and capture.\n     */\n    addEventListener(type: string, callback: EventListenerOrEventListenerObject | null, options?: AddEventListenerOptions | boolean): void;\n    /** Dispatches a synthetic event event to target and returns true if either event\'s cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise. */\n    dispatchEvent(event: Event): boolean;\n    /** Removes the event listener in target\'s event listener list with the same type, callback, and options. */\n    removeEventListener(type: string, callback: EventListenerOrEventListenerObject | null, options?: EventListenerOptions | boolean): void;\n}\n\ndeclare var EventTarget: {\n    prototype: EventTarget;\n    new(): EventTarget;\n};\n\n/** @deprecated */\ninterface External {\n    /** @deprecated */\n    AddSearchProvider(): void;\n    /** @deprecated */\n    IsSearchProviderInstalled(): void;\n}\n\n/** @deprecated */\ndeclare var External: {\n    prototype: External;\n    new(): External;\n};\n\n/** Provides information about files and allows JavaScript in a web page to access their content. */\ninterface File extends Blob {\n    readonly lastModified: number;\n    readonly name: string;\n    readonly webkitRelativePath: string;\n}\n\ndeclare var File: {\n    prototype: File;\n    new(fileBits: BlobPart[], fileName: string, options?: FilePropertyBag): File;\n};\n\n/** An object of this type is returned by the files property of the HTML <input> element; this lets you access the list of files selected with the <input type="file"> element. It\'s also used for a list of files dropped into web content when using the drag and drop API; see the DataTransfer object for details on this usage. */\ninterface FileList {\n    readonly length: number;\n    item(index: number): File | null;\n    [index: number]: File;\n}\n\ndeclare var FileList: {\n    prototype: FileList;\n    new(): FileList;\n};\n\ninterface FileReaderEventMap {\n    "abort": ProgressEvent<FileReader>;\n    "error": ProgressEvent<FileReader>;\n    "load": ProgressEvent<FileReader>;\n    "loadend": ProgressEvent<FileReader>;\n    "loadstart": ProgressEvent<FileReader>;\n    "progress": ProgressEvent<FileReader>;\n}\n\n/** Lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user\'s computer, using File or Blob objects to specify the file or data to read. */\ninterface FileReader extends EventTarget {\n    readonly error: DOMException | null;\n    onabort: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    onerror: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    onload: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    onloadend: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    onloadstart: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    onprogress: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    readonly readyState: number;\n    readonly result: string | ArrayBuffer | null;\n    abort(): void;\n    readAsArrayBuffer(blob: Blob): void;\n    readAsBinaryString(blob: Blob): void;\n    readAsDataURL(blob: Blob): void;\n    readAsText(blob: Blob, encoding?: string): void;\n    readonly DONE: number;\n    readonly EMPTY: number;\n    readonly LOADING: number;\n    addEventListener<K extends keyof FileReaderEventMap>(type: K, listener: (this: FileReader, ev: FileReaderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof FileReaderEventMap>(type: K, listener: (this: FileReader, ev: FileReaderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var FileReader: {\n    prototype: FileReader;\n    new(): FileReader;\n    readonly DONE: number;\n    readonly EMPTY: number;\n    readonly LOADING: number;\n};\n\ninterface FileSystem {\n    readonly name: string;\n    readonly root: FileSystemDirectoryEntry;\n}\n\ndeclare var FileSystem: {\n    prototype: FileSystem;\n    new(): FileSystem;\n};\n\ninterface FileSystemDirectoryEntry extends FileSystemEntry {\n    createReader(): FileSystemDirectoryReader;\n    getDirectory(path?: string | null, options?: FileSystemFlags, successCallback?: FileSystemEntryCallback, errorCallback?: ErrorCallback): void;\n    getFile(path?: string | null, options?: FileSystemFlags, successCallback?: FileSystemEntryCallback, errorCallback?: ErrorCallback): void;\n}\n\ndeclare var FileSystemDirectoryEntry: {\n    prototype: FileSystemDirectoryEntry;\n    new(): FileSystemDirectoryEntry;\n};\n\n/** Available only in secure contexts. */\ninterface FileSystemDirectoryHandle extends FileSystemHandle {\n    readonly kind: "directory";\n    getDirectoryHandle(name: string, options?: FileSystemGetDirectoryOptions): Promise<FileSystemDirectoryHandle>;\n    getFileHandle(name: string, options?: FileSystemGetFileOptions): Promise<FileSystemFileHandle>;\n    removeEntry(name: string, options?: FileSystemRemoveOptions): Promise<void>;\n    resolve(possibleDescendant: FileSystemHandle): Promise<string[] | null>;\n}\n\ndeclare var FileSystemDirectoryHandle: {\n    prototype: FileSystemDirectoryHandle;\n    new(): FileSystemDirectoryHandle;\n};\n\ninterface FileSystemDirectoryReader {\n    readEntries(successCallback: FileSystemEntriesCallback, errorCallback?: ErrorCallback): void;\n}\n\ndeclare var FileSystemDirectoryReader: {\n    prototype: FileSystemDirectoryReader;\n    new(): FileSystemDirectoryReader;\n};\n\ninterface FileSystemEntry {\n    readonly filesystem: FileSystem;\n    readonly fullPath: string;\n    readonly isDirectory: boolean;\n    readonly isFile: boolean;\n    readonly name: string;\n    getParent(successCallback?: FileSystemEntryCallback, errorCallback?: ErrorCallback): void;\n}\n\ndeclare var FileSystemEntry: {\n    prototype: FileSystemEntry;\n    new(): FileSystemEntry;\n};\n\ninterface FileSystemFileEntry extends FileSystemEntry {\n    file(successCallback: FileCallback, errorCallback?: ErrorCallback): void;\n}\n\ndeclare var FileSystemFileEntry: {\n    prototype: FileSystemFileEntry;\n    new(): FileSystemFileEntry;\n};\n\n/** Available only in secure contexts. */\ninterface FileSystemFileHandle extends FileSystemHandle {\n    readonly kind: "file";\n    getFile(): Promise<File>;\n}\n\ndeclare var FileSystemFileHandle: {\n    prototype: FileSystemFileHandle;\n    new(): FileSystemFileHandle;\n};\n\n/** Available only in secure contexts. */\ninterface FileSystemHandle {\n    readonly kind: FileSystemHandleKind;\n    readonly name: string;\n    isSameEntry(other: FileSystemHandle): Promise<boolean>;\n}\n\ndeclare var FileSystemHandle: {\n    prototype: FileSystemHandle;\n    new(): FileSystemHandle;\n};\n\n/** Focus-related events like focus, blur, focusin, or focusout. */\ninterface FocusEvent extends UIEvent {\n    readonly relatedTarget: EventTarget | null;\n}\n\ndeclare var FocusEvent: {\n    prototype: FocusEvent;\n    new(type: string, eventInitDict?: FocusEventInit): FocusEvent;\n};\n\ninterface FontFace {\n    ascentOverride: string;\n    descentOverride: string;\n    display: string;\n    family: string;\n    featureSettings: string;\n    lineGapOverride: string;\n    readonly loaded: Promise<FontFace>;\n    readonly status: FontFaceLoadStatus;\n    stretch: string;\n    style: string;\n    unicodeRange: string;\n    variant: string;\n    variationSettings: string;\n    weight: string;\n    load(): Promise<FontFace>;\n}\n\ndeclare var FontFace: {\n    prototype: FontFace;\n    new(family: string, source: string | BinaryData, descriptors?: FontFaceDescriptors): FontFace;\n};\n\ninterface FontFaceSetEventMap {\n    "loading": Event;\n    "loadingdone": Event;\n    "loadingerror": Event;\n}\n\ninterface FontFaceSet extends EventTarget {\n    onloading: ((this: FontFaceSet, ev: Event) => any) | null;\n    onloadingdone: ((this: FontFaceSet, ev: Event) => any) | null;\n    onloadingerror: ((this: FontFaceSet, ev: Event) => any) | null;\n    readonly ready: Promise<FontFaceSet>;\n    readonly status: FontFaceSetLoadStatus;\n    check(font: string, text?: string): boolean;\n    load(font: string, text?: string): Promise<FontFace[]>;\n    forEach(callbackfn: (value: FontFace, key: FontFace, parent: FontFaceSet) => void, thisArg?: any): void;\n    addEventListener<K extends keyof FontFaceSetEventMap>(type: K, listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof FontFaceSetEventMap>(type: K, listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var FontFaceSet: {\n    prototype: FontFaceSet;\n    new(initialFaces: FontFace[]): FontFaceSet;\n};\n\ninterface FontFaceSetLoadEvent extends Event {\n    readonly fontfaces: ReadonlyArray<FontFace>;\n}\n\ndeclare var FontFaceSetLoadEvent: {\n    prototype: FontFaceSetLoadEvent;\n    new(type: string, eventInitDict?: FontFaceSetLoadEventInit): FontFaceSetLoadEvent;\n};\n\ninterface FontFaceSource {\n    readonly fonts: FontFaceSet;\n}\n\n/** Provides a way to easily construct a set of key/value pairs representing form fields and their values, which can then be easily sent using the XMLHttpRequest.send() method. It uses the same format a form would use if the encoding type were set to "multipart/form-data". */\ninterface FormData {\n    append(name: string, value: string | Blob, fileName?: string): void;\n    delete(name: string): void;\n    get(name: string): FormDataEntryValue | null;\n    getAll(name: string): FormDataEntryValue[];\n    has(name: string): boolean;\n    set(name: string, value: string | Blob, fileName?: string): void;\n    forEach(callbackfn: (value: FormDataEntryValue, key: string, parent: FormData) => void, thisArg?: any): void;\n}\n\ndeclare var FormData: {\n    prototype: FormData;\n    new(form?: HTMLFormElement): FormData;\n};\n\ninterface FormDataEvent extends Event {\n    /** Returns a FormData object representing names and values of elements associated to the target form. Operations on the FormData object will affect form data to be submitted. */\n    readonly formData: FormData;\n}\n\ndeclare var FormDataEvent: {\n    prototype: FormDataEvent;\n    new(type: string, eventInitDict: FormDataEventInit): FormDataEvent;\n};\n\n/** A change in volume. It is an AudioNode audio-processing module that causes a given gain to be applied to the input data before its propagation to the output. A GainNode always has exactly one input and one output, both with the same number of channels. */\ninterface GainNode extends AudioNode {\n    readonly gain: AudioParam;\n}\n\ndeclare var GainNode: {\n    prototype: GainNode;\n    new(context: BaseAudioContext, options?: GainOptions): GainNode;\n};\n\n/**\n * This Gamepad API interface defines an individual gamepad or other controller, allowing access to information such as button presses, axis positions, and id.\n * Available only in secure contexts.\n */\ninterface Gamepad {\n    readonly axes: ReadonlyArray<number>;\n    readonly buttons: ReadonlyArray<GamepadButton>;\n    readonly connected: boolean;\n    readonly hapticActuators: ReadonlyArray<GamepadHapticActuator>;\n    readonly id: string;\n    readonly index: number;\n    readonly mapping: GamepadMappingType;\n    readonly timestamp: DOMHighResTimeStamp;\n}\n\ndeclare var Gamepad: {\n    prototype: Gamepad;\n    new(): Gamepad;\n};\n\n/**\n * An individual button of a gamepad or other controller, allowing access to the current state of different types of buttons available on the control device.\n * Available only in secure contexts.\n */\ninterface GamepadButton {\n    readonly pressed: boolean;\n    readonly touched: boolean;\n    readonly value: number;\n}\n\ndeclare var GamepadButton: {\n    prototype: GamepadButton;\n    new(): GamepadButton;\n};\n\n/**\n * This Gamepad API interface contains references to gamepads connected to the system, which is what the gamepad events Window.gamepadconnected and Window.gamepaddisconnected are fired in response to.\n * Available only in secure contexts.\n */\ninterface GamepadEvent extends Event {\n    readonly gamepad: Gamepad;\n}\n\ndeclare var GamepadEvent: {\n    prototype: GamepadEvent;\n    new(type: string, eventInitDict: GamepadEventInit): GamepadEvent;\n};\n\n/** This Gamepad API interface represents hardware in the controller designed to provide haptic feedback to the user (if available), most commonly vibration hardware. */\ninterface GamepadHapticActuator {\n    readonly type: GamepadHapticActuatorType;\n}\n\ndeclare var GamepadHapticActuator: {\n    prototype: GamepadHapticActuator;\n    new(): GamepadHapticActuator;\n};\n\ninterface GenericTransformStream {\n    readonly readable: ReadableStream;\n    readonly writable: WritableStream;\n}\n\n/** An object able to programmatically obtain the position of the device. It gives Web content access to the location of the device. This allows a Web site or app to offer customized results based on the user\'s location. */\ninterface Geolocation {\n    clearWatch(watchId: number): void;\n    getCurrentPosition(successCallback: PositionCallback, errorCallback?: PositionErrorCallback | null, options?: PositionOptions): void;\n    watchPosition(successCallback: PositionCallback, errorCallback?: PositionErrorCallback | null, options?: PositionOptions): number;\n}\n\ndeclare var Geolocation: {\n    prototype: Geolocation;\n    new(): Geolocation;\n};\n\n/** Available only in secure contexts. */\ninterface GeolocationCoordinates {\n    readonly accuracy: number;\n    readonly altitude: number | null;\n    readonly altitudeAccuracy: number | null;\n    readonly heading: number | null;\n    readonly latitude: number;\n    readonly longitude: number;\n    readonly speed: number | null;\n}\n\ndeclare var GeolocationCoordinates: {\n    prototype: GeolocationCoordinates;\n    new(): GeolocationCoordinates;\n};\n\n/** Available only in secure contexts. */\ninterface GeolocationPosition {\n    readonly coords: GeolocationCoordinates;\n    readonly timestamp: EpochTimeStamp;\n}\n\ndeclare var GeolocationPosition: {\n    prototype: GeolocationPosition;\n    new(): GeolocationPosition;\n};\n\ninterface GeolocationPositionError {\n    readonly code: number;\n    readonly message: string;\n    readonly PERMISSION_DENIED: number;\n    readonly POSITION_UNAVAILABLE: number;\n    readonly TIMEOUT: number;\n}\n\ndeclare var GeolocationPositionError: {\n    prototype: GeolocationPositionError;\n    new(): GeolocationPositionError;\n    readonly PERMISSION_DENIED: number;\n    readonly POSITION_UNAVAILABLE: number;\n    readonly TIMEOUT: number;\n};\n\ninterface GlobalEventHandlersEventMap {\n    "abort": UIEvent;\n    "animationcancel": AnimationEvent;\n    "animationend": AnimationEvent;\n    "animationiteration": AnimationEvent;\n    "animationstart": AnimationEvent;\n    "auxclick": MouseEvent;\n    "beforeinput": InputEvent;\n    "blur": FocusEvent;\n    "canplay": Event;\n    "canplaythrough": Event;\n    "change": Event;\n    "click": MouseEvent;\n    "close": Event;\n    "compositionend": CompositionEvent;\n    "compositionstart": CompositionEvent;\n    "compositionupdate": CompositionEvent;\n    "contextmenu": MouseEvent;\n    "cuechange": Event;\n    "dblclick": MouseEvent;\n    "drag": DragEvent;\n    "dragend": DragEvent;\n    "dragenter": DragEvent;\n    "dragleave": DragEvent;\n    "dragover": DragEvent;\n    "dragstart": DragEvent;\n    "drop": DragEvent;\n    "durationchange": Event;\n    "emptied": Event;\n    "ended": Event;\n    "error": ErrorEvent;\n    "focus": FocusEvent;\n    "focusin": FocusEvent;\n    "focusout": FocusEvent;\n    "formdata": FormDataEvent;\n    "gotpointercapture": PointerEvent;\n    "input": Event;\n    "invalid": Event;\n    "keydown": KeyboardEvent;\n    "keypress": KeyboardEvent;\n    "keyup": KeyboardEvent;\n    "load": Event;\n    "loadeddata": Event;\n    "loadedmetadata": Event;\n    "loadstart": Event;\n    "lostpointercapture": PointerEvent;\n    "mousedown": MouseEvent;\n    "mouseenter": MouseEvent;\n    "mouseleave": MouseEvent;\n    "mousemove": MouseEvent;\n    "mouseout": MouseEvent;\n    "mouseover": MouseEvent;\n    "mouseup": MouseEvent;\n    "pause": Event;\n    "play": Event;\n    "playing": Event;\n    "pointercancel": PointerEvent;\n    "pointerdown": PointerEvent;\n    "pointerenter": PointerEvent;\n    "pointerleave": PointerEvent;\n    "pointermove": PointerEvent;\n    "pointerout": PointerEvent;\n    "pointerover": PointerEvent;\n    "pointerup": PointerEvent;\n    "progress": ProgressEvent;\n    "ratechange": Event;\n    "reset": Event;\n    "resize": UIEvent;\n    "scroll": Event;\n    "securitypolicyviolation": SecurityPolicyViolationEvent;\n    "seeked": Event;\n    "seeking": Event;\n    "select": Event;\n    "selectionchange": Event;\n    "selectstart": Event;\n    "slotchange": Event;\n    "stalled": Event;\n    "submit": SubmitEvent;\n    "suspend": Event;\n    "timeupdate": Event;\n    "toggle": Event;\n    "touchcancel": TouchEvent;\n    "touchend": TouchEvent;\n    "touchmove": TouchEvent;\n    "touchstart": TouchEvent;\n    "transitioncancel": TransitionEvent;\n    "transitionend": TransitionEvent;\n    "transitionrun": TransitionEvent;\n    "transitionstart": TransitionEvent;\n    "volumechange": Event;\n    "waiting": Event;\n    "webkitanimationend": Event;\n    "webkitanimationiteration": Event;\n    "webkitanimationstart": Event;\n    "webkittransitionend": Event;\n    "wheel": WheelEvent;\n}\n\ninterface GlobalEventHandlers {\n    /**\n     * Fires when the user aborts the download.\n     * @param ev The event.\n     */\n    onabort: ((this: GlobalEventHandlers, ev: UIEvent) => any) | null;\n    onanimationcancel: ((this: GlobalEventHandlers, ev: AnimationEvent) => any) | null;\n    onanimationend: ((this: GlobalEventHandlers, ev: AnimationEvent) => any) | null;\n    onanimationiteration: ((this: GlobalEventHandlers, ev: AnimationEvent) => any) | null;\n    onanimationstart: ((this: GlobalEventHandlers, ev: AnimationEvent) => any) | null;\n    onauxclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /**\n     * Fires when the object loses the input focus.\n     * @param ev The focus event.\n     */\n    onblur: ((this: GlobalEventHandlers, ev: FocusEvent) => any) | null;\n    /**\n     * Occurs when playback is possible, but would require further buffering.\n     * @param ev The event.\n     */\n    oncanplay: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    oncanplaythrough: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Fires when the contents of the object or selection have changed.\n     * @param ev The event.\n     */\n    onchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Fires when the user clicks the left mouse button on the object\n     * @param ev The mouse event.\n     */\n    onclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    onclose: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Fires when the user clicks the right mouse button in the client area, opening the context menu.\n     * @param ev The mouse event.\n     */\n    oncontextmenu: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    oncuechange: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Fires when the user double-clicks the object.\n     * @param ev The mouse event.\n     */\n    ondblclick: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /**\n     * Fires on the source object continuously during a drag operation.\n     * @param ev The event.\n     */\n    ondrag: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;\n    /**\n     * Fires on the source object when the user releases the mouse at the close of a drag operation.\n     * @param ev The event.\n     */\n    ondragend: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;\n    /**\n     * Fires on the target element when the user drags the object to a valid drop target.\n     * @param ev The drag event.\n     */\n    ondragenter: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;\n    /**\n     * Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.\n     * @param ev The drag event.\n     */\n    ondragleave: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;\n    /**\n     * Fires on the target element continuously while the user drags the object over a valid drop target.\n     * @param ev The event.\n     */\n    ondragover: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;\n    /**\n     * Fires on the source object when the user starts to drag a text selection or selected object.\n     * @param ev The event.\n     */\n    ondragstart: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;\n    ondrop: ((this: GlobalEventHandlers, ev: DragEvent) => any) | null;\n    /**\n     * Occurs when the duration attribute is updated.\n     * @param ev The event.\n     */\n    ondurationchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when the media element is reset to its initial state.\n     * @param ev The event.\n     */\n    onemptied: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when the end of playback is reached.\n     * @param ev The event\n     */\n    onended: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Fires when an error occurs during object loading.\n     * @param ev The event.\n     */\n    onerror: OnErrorEventHandler;\n    /**\n     * Fires when the object receives focus.\n     * @param ev The event.\n     */\n    onfocus: ((this: GlobalEventHandlers, ev: FocusEvent) => any) | null;\n    onformdata: ((this: GlobalEventHandlers, ev: FormDataEvent) => any) | null;\n    ongotpointercapture: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    oninput: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    oninvalid: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Fires when the user presses a key.\n     * @param ev The keyboard event\n     */\n    onkeydown: ((this: GlobalEventHandlers, ev: KeyboardEvent) => any) | null;\n    /**\n     * Fires when the user presses an alphanumeric key.\n     * @param ev The event.\n     * @deprecated\n     */\n    onkeypress: ((this: GlobalEventHandlers, ev: KeyboardEvent) => any) | null;\n    /**\n     * Fires when the user releases a key.\n     * @param ev The keyboard event\n     */\n    onkeyup: ((this: GlobalEventHandlers, ev: KeyboardEvent) => any) | null;\n    /**\n     * Fires immediately after the browser loads the object.\n     * @param ev The event.\n     */\n    onload: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when media data is loaded at the current playback position.\n     * @param ev The event.\n     */\n    onloadeddata: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when the duration and dimensions of the media have been determined.\n     * @param ev The event.\n     */\n    onloadedmetadata: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when Internet Explorer begins looking for media data.\n     * @param ev The event.\n     */\n    onloadstart: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    onlostpointercapture: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    /**\n     * Fires when the user clicks the object with either mouse button.\n     * @param ev The mouse event.\n     */\n    onmousedown: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    onmouseenter: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    onmouseleave: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /**\n     * Fires when the user moves the mouse over the object.\n     * @param ev The mouse event.\n     */\n    onmousemove: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /**\n     * Fires when the user moves the mouse pointer outside the boundaries of the object.\n     * @param ev The mouse event.\n     */\n    onmouseout: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /**\n     * Fires when the user moves the mouse pointer into the object.\n     * @param ev The mouse event.\n     */\n    onmouseover: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /**\n     * Fires when the user releases a mouse button while the mouse is over the object.\n     * @param ev The mouse event.\n     */\n    onmouseup: ((this: GlobalEventHandlers, ev: MouseEvent) => any) | null;\n    /**\n     * Occurs when playback is paused.\n     * @param ev The event.\n     */\n    onpause: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when the play method is requested.\n     * @param ev The event.\n     */\n    onplay: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when the audio or video has started playing.\n     * @param ev The event.\n     */\n    onplaying: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    onpointercancel: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    onpointerdown: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    onpointerenter: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    onpointerleave: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    onpointermove: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    onpointerout: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    onpointerover: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    onpointerup: ((this: GlobalEventHandlers, ev: PointerEvent) => any) | null;\n    /**\n     * Occurs to indicate progress while downloading media data.\n     * @param ev The event.\n     */\n    onprogress: ((this: GlobalEventHandlers, ev: ProgressEvent) => any) | null;\n    /**\n     * Occurs when the playback rate is increased or decreased.\n     * @param ev The event.\n     */\n    onratechange: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Fires when the user resets a form.\n     * @param ev The event.\n     */\n    onreset: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    onresize: ((this: GlobalEventHandlers, ev: UIEvent) => any) | null;\n    /**\n     * Fires when the user repositions the scroll box in the scroll bar on the object.\n     * @param ev The event.\n     */\n    onscroll: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    onsecuritypolicyviolation: ((this: GlobalEventHandlers, ev: SecurityPolicyViolationEvent) => any) | null;\n    /**\n     * Occurs when the seek operation ends.\n     * @param ev The event.\n     */\n    onseeked: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when the current playback position is moved.\n     * @param ev The event.\n     */\n    onseeking: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Fires when the current selection changes.\n     * @param ev The event.\n     */\n    onselect: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    onselectionchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    onselectstart: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    onslotchange: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when the download has stopped.\n     * @param ev The event.\n     */\n    onstalled: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    onsubmit: ((this: GlobalEventHandlers, ev: SubmitEvent) => any) | null;\n    /**\n     * Occurs if the load operation has been intentionally halted.\n     * @param ev The event.\n     */\n    onsuspend: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs to indicate the current playback position.\n     * @param ev The event.\n     */\n    ontimeupdate: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    ontoggle: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    ontouchcancel?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;\n    ontouchend?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;\n    ontouchmove?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;\n    ontouchstart?: ((this: GlobalEventHandlers, ev: TouchEvent) => any) | null | undefined;\n    ontransitioncancel: ((this: GlobalEventHandlers, ev: TransitionEvent) => any) | null;\n    ontransitionend: ((this: GlobalEventHandlers, ev: TransitionEvent) => any) | null;\n    ontransitionrun: ((this: GlobalEventHandlers, ev: TransitionEvent) => any) | null;\n    ontransitionstart: ((this: GlobalEventHandlers, ev: TransitionEvent) => any) | null;\n    /**\n     * Occurs when the volume is changed, or playback is muted or unmuted.\n     * @param ev The event.\n     */\n    onvolumechange: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /**\n     * Occurs when playback stops because the next frame of a video resource is not available.\n     * @param ev The event.\n     */\n    onwaiting: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** @deprecated This is a legacy alias of `onanimationend`. */\n    onwebkitanimationend: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** @deprecated This is a legacy alias of `onanimationiteration`. */\n    onwebkitanimationiteration: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** @deprecated This is a legacy alias of `onanimationstart`. */\n    onwebkitanimationstart: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    /** @deprecated This is a legacy alias of `ontransitionend`. */\n    onwebkittransitionend: ((this: GlobalEventHandlers, ev: Event) => any) | null;\n    onwheel: ((this: GlobalEventHandlers, ev: WheelEvent) => any) | null;\n    addEventListener<K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof GlobalEventHandlersEventMap>(type: K, listener: (this: GlobalEventHandlers, ev: GlobalEventHandlersEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ninterface HTMLAllCollection {\n    /** Returns the number of elements in the collection. */\n    readonly length: number;\n    /** Returns the item with index index from the collection (determined by tree order). */\n    item(nameOrIndex?: string): HTMLCollection | Element | null;\n    /**\n     * Returns the item with ID or name name from the collection.\n     *\n     * If there are multiple matching items, then an HTMLCollection object containing all those elements is returned.\n     *\n     * Only button, form, iframe, input, map, meta, object, select, and textarea elements can have a name for the purpose of this method; their name is given by the value of their name attribute.\n     */\n    namedItem(name: string): HTMLCollection | Element | null;\n    [index: number]: Element;\n}\n\ndeclare var HTMLAllCollection: {\n    prototype: HTMLAllCollection;\n    new(): HTMLAllCollection;\n};\n\n/** Hyperlink elements and provides special properties and methods (beyond those of the regular HTMLElement object interface that they inherit from) for manipulating the layout and presentation of such elements. */\ninterface HTMLAnchorElement extends HTMLElement, HTMLHyperlinkElementUtils {\n    /**\n     * Sets or retrieves the character set used to encode the object.\n     * @deprecated\n     */\n    charset: string;\n    /**\n     * Sets or retrieves the coordinates of the object.\n     * @deprecated\n     */\n    coords: string;\n    download: string;\n    /** Sets or retrieves the language code of the object. */\n    hreflang: string;\n    /**\n     * Sets or retrieves the shape of the object.\n     * @deprecated\n     */\n    name: string;\n    ping: string;\n    referrerPolicy: string;\n    /** Sets or retrieves the relationship between the object and the destination of the link. */\n    rel: string;\n    readonly relList: DOMTokenList;\n    /**\n     * Sets or retrieves the relationship between the object and the destination of the link.\n     * @deprecated\n     */\n    rev: string;\n    /**\n     * Sets or retrieves the shape of the object.\n     * @deprecated\n     */\n    shape: string;\n    /** Sets or retrieves the window or frame at which to target content. */\n    target: string;\n    /** Retrieves or sets the text of the object as a string. */\n    text: string;\n    type: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAnchorElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLAnchorElement: {\n    prototype: HTMLAnchorElement;\n    new(): HTMLAnchorElement;\n};\n\n/** Provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <area> elements. */\ninterface HTMLAreaElement extends HTMLElement, HTMLHyperlinkElementUtils {\n    /** Sets or retrieves a text alternative to the graphic. */\n    alt: string;\n    /** Sets or retrieves the coordinates of the object. */\n    coords: string;\n    download: string;\n    /**\n     * Sets or gets whether clicks in this region cause action.\n     * @deprecated\n     */\n    noHref: boolean;\n    ping: string;\n    referrerPolicy: string;\n    rel: string;\n    readonly relList: DOMTokenList;\n    /** Sets or retrieves the shape of the object. */\n    shape: string;\n    /** Sets or retrieves the window or frame at which to target content. */\n    target: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLAreaElement: {\n    prototype: HTMLAreaElement;\n    new(): HTMLAreaElement;\n};\n\n/** Provides access to the properties of <audio> elements, as well as methods to manipulate them. It derives from the HTMLMediaElement interface. */\ninterface HTMLAudioElement extends HTMLMediaElement {\n    addEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLAudioElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLAudioElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLAudioElement: {\n    prototype: HTMLAudioElement;\n    new(): HTMLAudioElement;\n};\n\n/** A HTML line break element (<br>). It inherits from HTMLElement. */\ninterface HTMLBRElement extends HTMLElement {\n    /**\n     * Sets or retrieves the side on which floating objects are not to be positioned when any IHTMLBlockElement is inserted into the document.\n     * @deprecated\n     */\n    clear: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLBRElement: {\n    prototype: HTMLBRElement;\n    new(): HTMLBRElement;\n};\n\n/** Contains the base URI for a document. This object inherits all of the properties and methods as described in the HTMLElement interface. */\ninterface HTMLBaseElement extends HTMLElement {\n    /** Gets or sets the baseline URL on which relative links are based. */\n    href: string;\n    /** Sets or retrieves the window or frame at which to target content. */\n    target: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLBaseElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLBaseElement: {\n    prototype: HTMLBaseElement;\n    new(): HTMLBaseElement;\n};\n\ninterface HTMLBodyElementEventMap extends HTMLElementEventMap, WindowEventHandlersEventMap {\n    "orientationchange": Event;\n}\n\n/** Provides special properties (beyond those inherited from the regular HTMLElement interface) for manipulating <body> elements. */\ninterface HTMLBodyElement extends HTMLElement, WindowEventHandlers {\n    /** @deprecated */\n    aLink: string;\n    /** @deprecated */\n    background: string;\n    /** @deprecated */\n    bgColor: string;\n    /** @deprecated */\n    link: string;\n    /** @deprecated */\n    onorientationchange: ((this: HTMLBodyElement, ev: Event) => any) | null;\n    /** @deprecated */\n    text: string;\n    /** @deprecated */\n    vLink: string;\n    addEventListener<K extends keyof HTMLBodyElementEventMap>(type: K, listener: (this: HTMLBodyElement, ev: HTMLBodyElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLBodyElementEventMap>(type: K, listener: (this: HTMLBodyElement, ev: HTMLBodyElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLBodyElement: {\n    prototype: HTMLBodyElement;\n    new(): HTMLBodyElement;\n};\n\n/** Provides properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <button> elements. */\ninterface HTMLButtonElement extends HTMLElement {\n    disabled: boolean;\n    /** Retrieves a reference to the form that the object is embedded in. */\n    readonly form: HTMLFormElement | null;\n    /** Overrides the action attribute (where the data on a form is sent) on the parent form element. */\n    formAction: string;\n    /** Used to override the encoding (formEnctype attribute) specified on the form element. */\n    formEnctype: string;\n    /** Overrides the submit method attribute previously specified on a form element. */\n    formMethod: string;\n    /** Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a "save draft"-type submit option. */\n    formNoValidate: boolean;\n    /** Overrides the target attribute on a form element. */\n    formTarget: string;\n    readonly labels: NodeListOf<HTMLLabelElement>;\n    /** Sets or retrieves the name of the object. */\n    name: string;\n    /** Gets the classification and default behavior of the button. */\n    type: string;\n    /** Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as "this is a required field". The result is that the user sees validation messages without actually submitting. */\n    readonly validationMessage: string;\n    /** Returns a  ValidityState object that represents the validity states of an element. */\n    readonly validity: ValidityState;\n    /** Sets or retrieves the default or selected value of the control. */\n    value: string;\n    /** Returns whether an element will successfully validate based on forms validation rules and constraints. */\n    readonly willValidate: boolean;\n    /** Returns whether a form will validate when it is submitted, without having to submit it. */\n    checkValidity(): boolean;\n    reportValidity(): boolean;\n    /**\n     * Sets a custom error message that is displayed when a form is submitted.\n     * @param error Sets a custom error message that is displayed when a form is submitted.\n     */\n    setCustomValidity(error: string): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLButtonElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLButtonElement: {\n    prototype: HTMLButtonElement;\n    new(): HTMLButtonElement;\n};\n\n/** Provides properties and methods for manipulating the layout and presentation of <canvas> elements. The HTMLCanvasElement interface also inherits the properties and methods of the HTMLElement interface. */\ninterface HTMLCanvasElement extends HTMLElement {\n    /** Gets or sets the height of a canvas element on a document. */\n    height: number;\n    /** Gets or sets the width of a canvas element on a document. */\n    width: number;\n    captureStream(frameRequestRate?: number): MediaStream;\n    /**\n     * Returns an object that provides methods and properties for drawing and manipulating images and graphics on a canvas element in a document. A context object includes information about colors, line widths, fonts, and other graphic parameters that can be drawn on a canvas.\n     * @param contextId The identifier (ID) of the type of canvas to create. Internet Explorer 9 and Internet Explorer 10 support only a 2-D context using canvas.getContext("2d"); IE11 Preview also supports 3-D or WebGL context using canvas.getContext("experimental-webgl");\n     */\n    getContext(contextId: "2d", options?: CanvasRenderingContext2DSettings): CanvasRenderingContext2D | null;\n    getContext(contextId: "bitmaprenderer", options?: ImageBitmapRenderingContextSettings): ImageBitmapRenderingContext | null;\n    getContext(contextId: "webgl", options?: WebGLContextAttributes): WebGLRenderingContext | null;\n    getContext(contextId: "webgl2", options?: WebGLContextAttributes): WebGL2RenderingContext | null;\n    getContext(contextId: string, options?: any): RenderingContext | null;\n    toBlob(callback: BlobCallback, type?: string, quality?: any): void;\n    /**\n     * Returns the content of the current canvas as an image that you can use as a source for another canvas or an HTML element.\n     * @param type The standard MIME type for the image format to return. If you do not specify this parameter, the default value is a PNG format image.\n     */\n    toDataURL(type?: string, quality?: any): string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLCanvasElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLCanvasElement: {\n    prototype: HTMLCanvasElement;\n    new(): HTMLCanvasElement;\n};\n\n/** A generic collection (array-like object similar to arguments) of elements (in document order) and offers methods and properties for selecting from the list. */\ninterface HTMLCollectionBase {\n    /** Sets or retrieves the number of objects in a collection. */\n    readonly length: number;\n    /** Retrieves an object from various collections. */\n    item(index: number): Element | null;\n    [index: number]: Element;\n}\n\ninterface HTMLCollection extends HTMLCollectionBase {\n    /** Retrieves a select object or an object from an options collection. */\n    namedItem(name: string): Element | null;\n}\n\ndeclare var HTMLCollection: {\n    prototype: HTMLCollection;\n    new(): HTMLCollection;\n};\n\ninterface HTMLCollectionOf<T extends Element> extends HTMLCollectionBase {\n    item(index: number): T | null;\n    namedItem(name: string): T | null;\n    [index: number]: T;\n}\n\n/** Provides special properties (beyond those of the regular HTMLElement interface it also has available to it by inheritance) for manipulating definition list (<dl>) elements. */\ninterface HTMLDListElement extends HTMLElement {\n    /** @deprecated */\n    compact: boolean;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLDListElement: {\n    prototype: HTMLDListElement;\n    new(): HTMLDListElement;\n};\n\n/** Provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <data> elements. */\ninterface HTMLDataElement extends HTMLElement {\n    value: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLDataElement: {\n    prototype: HTMLDataElement;\n    new(): HTMLDataElement;\n};\n\n/** Provides special properties (beyond the HTMLElement object interface it also has available to it by inheritance) to manipulate <datalist> elements and their content. */\ninterface HTMLDataListElement extends HTMLElement {\n    /** Returns an HTMLCollection of the option elements of the datalist element. */\n    readonly options: HTMLCollectionOf<HTMLOptionElement>;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDataListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLDataListElement: {\n    prototype: HTMLDataListElement;\n    new(): HTMLDataListElement;\n};\n\ninterface HTMLDetailsElement extends HTMLElement {\n    open: boolean;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDetailsElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLDetailsElement: {\n    prototype: HTMLDetailsElement;\n    new(): HTMLDetailsElement;\n};\n\n/** @deprecated this is not available in most browsers */\ninterface HTMLDialogElement extends HTMLElement {\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDialogElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** @deprecated */\ninterface HTMLDirectoryElement extends HTMLElement {\n    /** @deprecated */\n    compact: boolean;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDirectoryElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDirectoryElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** @deprecated */\ndeclare var HTMLDirectoryElement: {\n    prototype: HTMLDirectoryElement;\n    new(): HTMLDirectoryElement;\n};\n\n/** Provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <div> elements. */\ninterface HTMLDivElement extends HTMLElement {\n    /**\n     * Sets or retrieves how the object is aligned with adjacent text.\n     * @deprecated\n     */\n    align: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLDivElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLDivElement: {\n    prototype: HTMLDivElement;\n    new(): HTMLDivElement;\n};\n\n/** @deprecated use Document */\ninterface HTMLDocument extends Document {\n    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: HTMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** @deprecated */\ndeclare var HTMLDocument: {\n    prototype: HTMLDocument;\n    new(): HTMLDocument;\n};\n\ninterface HTMLElementEventMap extends ElementEventMap, DocumentAndElementEventHandlersEventMap, GlobalEventHandlersEventMap {\n}\n\n/** Any HTML element. Some elements directly implement this interface, while others implement it via an interface that inherits it. */\ninterface HTMLElement extends Element, DocumentAndElementEventHandlers, ElementCSSInlineStyle, ElementContentEditable, GlobalEventHandlers, HTMLOrSVGElement {\n    accessKey: string;\n    readonly accessKeyLabel: string;\n    autocapitalize: string;\n    dir: string;\n    draggable: boolean;\n    hidden: boolean;\n    innerText: string;\n    lang: string;\n    readonly offsetHeight: number;\n    readonly offsetLeft: number;\n    readonly offsetParent: Element | null;\n    readonly offsetTop: number;\n    readonly offsetWidth: number;\n    outerText: string;\n    spellcheck: boolean;\n    title: string;\n    translate: boolean;\n    attachInternals(): ElementInternals;\n    click(): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLElement: {\n    prototype: HTMLElement;\n    new(): HTMLElement;\n};\n\n/** Provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <embed> elements. */\ninterface HTMLEmbedElement extends HTMLElement {\n    /** @deprecated */\n    align: string;\n    /** Sets or retrieves the height of the object. */\n    height: string;\n    /**\n     * Sets or retrieves the name of the object.\n     * @deprecated\n     */\n    name: string;\n    /** Sets or retrieves a URL to be loaded by the object. */\n    src: string;\n    type: string;\n    /** Sets or retrieves the width of the object. */\n    width: string;\n    getSVGDocument(): Document | null;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLEmbedElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLEmbedElement: {\n    prototype: HTMLEmbedElement;\n    new(): HTMLEmbedElement;\n};\n\n/** Provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <fieldset> elements. */\ninterface HTMLFieldSetElement extends HTMLElement {\n    disabled: boolean;\n    /** Returns an HTMLCollection of the form controls in the element. */\n    readonly elements: HTMLCollection;\n    /** Retrieves a reference to the form that the object is embedded in. */\n    readonly form: HTMLFormElement | null;\n    name: string;\n    /** Returns the string "fieldset". */\n    readonly type: string;\n    /** Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as "this is a required field". The result is that the user sees validation messages without actually submitting. */\n    readonly validationMessage: string;\n    /** Returns a  ValidityState object that represents the validity states of an element. */\n    readonly validity: ValidityState;\n    /** Returns whether an element will successfully validate based on forms validation rules and constraints. */\n    readonly willValidate: boolean;\n    /** Returns whether a form will validate when it is submitted, without having to submit it. */\n    checkValidity(): boolean;\n    reportValidity(): boolean;\n    /**\n     * Sets a custom error message that is displayed when a form is submitted.\n     * @param error Sets a custom error message that is displayed when a form is submitted.\n     */\n    setCustomValidity(error: string): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFieldSetElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFieldSetElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLFieldSetElement: {\n    prototype: HTMLFieldSetElement;\n    new(): HTMLFieldSetElement;\n};\n\n/**\n * Implements the document object model (DOM) representation of the font element. The HTML Font Element <font> defines the font size, font face and color of text.\n * @deprecated\n */\ninterface HTMLFontElement extends HTMLElement {\n    /** @deprecated */\n    color: string;\n    /**\n     * Sets or retrieves the current typeface family.\n     * @deprecated\n     */\n    face: string;\n    /** @deprecated */\n    size: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFontElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** @deprecated */\ndeclare var HTMLFontElement: {\n    prototype: HTMLFontElement;\n    new(): HTMLFontElement;\n};\n\n/** A collection of HTML form control elements.  */\ninterface HTMLFormControlsCollection extends HTMLCollectionBase {\n    /**\n     * Returns the item with ID or name name from the collection.\n     *\n     * If there are multiple matching items, then a RadioNodeList object containing all those elements is returned.\n     */\n    namedItem(name: string): RadioNodeList | Element | null;\n}\n\ndeclare var HTMLFormControlsCollection: {\n    prototype: HTMLFormControlsCollection;\n    new(): HTMLFormControlsCollection;\n};\n\n/** A <form> element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements. */\ninterface HTMLFormElement extends HTMLElement {\n    /** Sets or retrieves a list of character encodings for input data that must be accepted by the server processing the form. */\n    acceptCharset: string;\n    /** Sets or retrieves the URL to which the form content is sent for processing. */\n    action: string;\n    /** Specifies whether autocomplete is applied to an editable text field. */\n    autocomplete: string;\n    /** Retrieves a collection, in source order, of all controls in a given form. */\n    readonly elements: HTMLFormControlsCollection;\n    /** Sets or retrieves the MIME encoding for the form. */\n    encoding: string;\n    /** Sets or retrieves the encoding type for the form. */\n    enctype: string;\n    /** Sets or retrieves the number of objects in a collection. */\n    readonly length: number;\n    /** Sets or retrieves how to send the form data to the server. */\n    method: string;\n    /** Sets or retrieves the name of the object. */\n    name: string;\n    /** Designates a form that is not validated when submitted. */\n    noValidate: boolean;\n    /** Sets or retrieves the window or frame at which to target content. */\n    target: string;\n    /** Returns whether a form will validate when it is submitted, without having to submit it. */\n    checkValidity(): boolean;\n    reportValidity(): boolean;\n    requestSubmit(submitter?: HTMLElement | null): void;\n    /** Fires when the user resets a form. */\n    reset(): void;\n    /** Fires when a FORM is about to be submitted. */\n    submit(): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFormElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    [index: number]: Element;\n    [name: string]: any;\n}\n\ndeclare var HTMLFormElement: {\n    prototype: HTMLFormElement;\n    new(): HTMLFormElement;\n};\n\n/** @deprecated */\ninterface HTMLFrameElement extends HTMLElement {\n    /**\n     * Retrieves the document object of the page or frame.\n     * @deprecated\n     */\n    readonly contentDocument: Document | null;\n    /**\n     * Retrieves the object of the specified.\n     * @deprecated\n     */\n    readonly contentWindow: WindowProxy | null;\n    /**\n     * Sets or retrieves whether to display a border for the frame.\n     * @deprecated\n     */\n    frameBorder: string;\n    /**\n     * Sets or retrieves a URI to a long description of the object.\n     * @deprecated\n     */\n    longDesc: string;\n    /**\n     * Sets or retrieves the top and bottom margin heights before displaying the text in a frame.\n     * @deprecated\n     */\n    marginHeight: string;\n    /**\n     * Sets or retrieves the left and right margin widths before displaying the text in a frame.\n     * @deprecated\n     */\n    marginWidth: string;\n    /**\n     * Sets or retrieves the frame name.\n     * @deprecated\n     */\n    name: string;\n    /**\n     * Sets or retrieves whether the user can resize the frame.\n     * @deprecated\n     */\n    noResize: boolean;\n    /**\n     * Sets or retrieves whether the frame can be scrolled.\n     * @deprecated\n     */\n    scrolling: string;\n    /**\n     * Sets or retrieves a URL to be loaded by the object.\n     * @deprecated\n     */\n    src: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFrameElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLFrameElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** @deprecated */\ndeclare var HTMLFrameElement: {\n    prototype: HTMLFrameElement;\n    new(): HTMLFrameElement;\n};\n\ninterface HTMLFrameSetElementEventMap extends HTMLElementEventMap, WindowEventHandlersEventMap {\n}\n\n/**\n * Provides special properties (beyond those of the regular HTMLElement interface they also inherit) for manipulating <frameset> elements.\n * @deprecated\n */\ninterface HTMLFrameSetElement extends HTMLElement, WindowEventHandlers {\n    /**\n     * Sets or retrieves the frame widths of the object.\n     * @deprecated\n     */\n    cols: string;\n    /**\n     * Sets or retrieves the frame heights of the object.\n     * @deprecated\n     */\n    rows: string;\n    addEventListener<K extends keyof HTMLFrameSetElementEventMap>(type: K, listener: (this: HTMLFrameSetElement, ev: HTMLFrameSetElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLFrameSetElementEventMap>(type: K, listener: (this: HTMLFrameSetElement, ev: HTMLFrameSetElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** @deprecated */\ndeclare var HTMLFrameSetElement: {\n    prototype: HTMLFrameSetElement;\n    new(): HTMLFrameSetElement;\n};\n\n/** Provides special properties (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating <hr> elements. */\ninterface HTMLHRElement extends HTMLElement {\n    /**\n     * Sets or retrieves how the object is aligned with adjacent text.\n     * @deprecated\n     */\n    align: string;\n    /** @deprecated */\n    color: string;\n    /**\n     * Sets or retrieves whether the horizontal rule is drawn with 3-D shading.\n     * @deprecated\n     */\n    noShade: boolean;\n    /** @deprecated */\n    size: string;\n    /**\n     * Sets or retrieves the width of the object.\n     * @deprecated\n     */\n    width: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHRElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLHRElement: {\n    prototype: HTMLHRElement;\n    new(): HTMLHRElement;\n};\n\n/** Contains the descriptive information, or metadata, for a document. This object inherits all of the properties and methods described in the HTMLElement interface. */\ninterface HTMLHeadElement extends HTMLElement {\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLHeadElement: {\n    prototype: HTMLHeadElement;\n    new(): HTMLHeadElement;\n};\n\n/** The different heading elements. It inherits methods and properties from the HTMLElement interface. */\ninterface HTMLHeadingElement extends HTMLElement {\n    /**\n     * Sets or retrieves a value that indicates the table alignment.\n     * @deprecated\n     */\n    align: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHeadingElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLHeadingElement: {\n    prototype: HTMLHeadingElement;\n    new(): HTMLHeadingElement;\n};\n\n/** Serves as the root node for a given HTML document. This object inherits the properties and methods described in the HTMLElement interface. */\ninterface HTMLHtmlElement extends HTMLElement {\n    /**\n     * Sets or retrieves the DTD version that governs the current document.\n     * @deprecated\n     */\n    version: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLHtmlElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLHtmlElement: {\n    prototype: HTMLHtmlElement;\n    new(): HTMLHtmlElement;\n};\n\ninterface HTMLHyperlinkElementUtils {\n    /**\n     * Returns the hyperlink\'s URL\'s fragment (includes leading "#" if non-empty).\n     *\n     * Can be set, to change the URL\'s fragment (ignores leading "#").\n     */\n    hash: string;\n    /**\n     * Returns the hyperlink\'s URL\'s host and port (if different from the default port for the scheme).\n     *\n     * Can be set, to change the URL\'s host and port.\n     */\n    host: string;\n    /**\n     * Returns the hyperlink\'s URL\'s host.\n     *\n     * Can be set, to change the URL\'s host.\n     */\n    hostname: string;\n    /**\n     * Returns the hyperlink\'s URL.\n     *\n     * Can be set, to change the URL.\n     */\n    href: string;\n    toString(): string;\n    /** Returns the hyperlink\'s URL\'s origin. */\n    readonly origin: string;\n    /**\n     * Returns the hyperlink\'s URL\'s password.\n     *\n     * Can be set, to change the URL\'s password.\n     */\n    password: string;\n    /**\n     * Returns the hyperlink\'s URL\'s path.\n     *\n     * Can be set, to change the URL\'s path.\n     */\n    pathname: string;\n    /**\n     * Returns the hyperlink\'s URL\'s port.\n     *\n     * Can be set, to change the URL\'s port.\n     */\n    port: string;\n    /**\n     * Returns the hyperlink\'s URL\'s scheme.\n     *\n     * Can be set, to change the URL\'s scheme.\n     */\n    protocol: string;\n    /**\n     * Returns the hyperlink\'s URL\'s query (includes leading "?" if non-empty).\n     *\n     * Can be set, to change the URL\'s query (ignores leading "?").\n     */\n    search: string;\n    /**\n     * Returns the hyperlink\'s URL\'s username.\n     *\n     * Can be set, to change the URL\'s username.\n     */\n    username: string;\n}\n\n/** Provides special properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of inline frame elements. */\ninterface HTMLIFrameElement extends HTMLElement {\n    /**\n     * Sets or retrieves how the object is aligned with adjacent text.\n     * @deprecated\n     */\n    align: string;\n    allow: string;\n    allowFullscreen: boolean;\n    /** Retrieves the document object of the page or frame. */\n    readonly contentDocument: Document | null;\n    /** Retrieves the object of the specified. */\n    readonly contentWindow: WindowProxy | null;\n    /**\n     * Sets or retrieves whether to display a border for the frame.\n     * @deprecated\n     */\n    frameBorder: string;\n    /** Sets or retrieves the height of the object. */\n    height: string;\n    /**\n     * Sets or retrieves a URI to a long description of the object.\n     * @deprecated\n     */\n    longDesc: string;\n    /**\n     * Sets or retrieves the top and bottom margin heights before displaying the text in a frame.\n     * @deprecated\n     */\n    marginHeight: string;\n    /**\n     * Sets or retrieves the left and right margin widths before displaying the text in a frame.\n     * @deprecated\n     */\n    marginWidth: string;\n    /** Sets or retrieves the frame name. */\n    name: string;\n    referrerPolicy: ReferrerPolicy;\n    readonly sandbox: DOMTokenList;\n    /**\n     * Sets or retrieves whether the frame can be scrolled.\n     * @deprecated\n     */\n    scrolling: string;\n    /** Sets or retrieves a URL to be loaded by the object. */\n    src: string;\n    /** Sets or retrives the content of the page that is to contain. */\n    srcdoc: string;\n    /** Sets or retrieves the width of the object. */\n    width: string;\n    getSVGDocument(): Document | null;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLIFrameElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLIFrameElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLIFrameElement: {\n    prototype: HTMLIFrameElement;\n    new(): HTMLIFrameElement;\n};\n\n/** Provides special properties and methods for manipulating <img> elements. */\ninterface HTMLImageElement extends HTMLElement {\n    /**\n     * Sets or retrieves how the object is aligned with adjacent text.\n     * @deprecated\n     */\n    align: string;\n    /** Sets or retrieves a text alternative to the graphic. */\n    alt: string;\n    /**\n     * Specifies the properties of a border drawn around an object.\n     * @deprecated\n     */\n    border: string;\n    /** Retrieves whether the object is fully loaded. */\n    readonly complete: boolean;\n    crossOrigin: string | null;\n    readonly currentSrc: string;\n    decoding: "async" | "sync" | "auto";\n    /** Sets or retrieves the height of the object. */\n    height: number;\n    /**\n     * Sets or retrieves the width of the border to draw around the object.\n     * @deprecated\n     */\n    hspace: number;\n    /** Sets or retrieves whether the image is a server-side image map. */\n    isMap: boolean;\n    /** Sets or retrieves the policy for loading image elements that are outside the viewport. */\n    loading: "eager" | "lazy";\n    /**\n     * Sets or retrieves a Uniform Resource Identifier (URI) to a long description of the object.\n     * @deprecated\n     */\n    longDesc: string;\n    /** @deprecated */\n    lowsrc: string;\n    /**\n     * Sets or retrieves the name of the object.\n     * @deprecated\n     */\n    name: string;\n    /** The original height of the image resource before sizing. */\n    readonly naturalHeight: number;\n    /** The original width of the image resource before sizing. */\n    readonly naturalWidth: number;\n    referrerPolicy: string;\n    sizes: string;\n    /** The address or URL of the a media resource that is to be considered. */\n    src: string;\n    srcset: string;\n    /** Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map. */\n    useMap: string;\n    /**\n     * Sets or retrieves the vertical margin for the object.\n     * @deprecated\n     */\n    vspace: number;\n    /** Sets or retrieves the width of the object. */\n    width: number;\n    readonly x: number;\n    readonly y: number;\n    decode(): Promise<void>;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLImageElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLImageElement: {\n    prototype: HTMLImageElement;\n    new(): HTMLImageElement;\n};\n\n/** Provides special properties and methods for manipulating the options, layout, and presentation of <input> elements. */\ninterface HTMLInputElement extends HTMLElement {\n    /** Sets or retrieves a comma-separated list of content types. */\n    accept: string;\n    /**\n     * Sets or retrieves how the object is aligned with adjacent text.\n     * @deprecated\n     */\n    align: string;\n    /** Sets or retrieves a text alternative to the graphic. */\n    alt: string;\n    /** Specifies whether autocomplete is applied to an editable text field. */\n    autocomplete: string;\n    capture: string;\n    /** Sets or retrieves the state of the check box or radio button. */\n    checked: boolean;\n    /** Sets or retrieves the state of the check box or radio button. */\n    defaultChecked: boolean;\n    /** Sets or retrieves the initial contents of the object. */\n    defaultValue: string;\n    dirName: string;\n    disabled: boolean;\n    /** Returns a FileList object on a file type input object. */\n    files: FileList | null;\n    /** Retrieves a reference to the form that the object is embedded in. */\n    readonly form: HTMLFormElement | null;\n    /** Overrides the action attribute (where the data on a form is sent) on the parent form element. */\n    formAction: string;\n    /** Used to override the encoding (formEnctype attribute) specified on the form element. */\n    formEnctype: string;\n    /** Overrides the submit method attribute previously specified on a form element. */\n    formMethod: string;\n    /** Overrides any validation or required attributes on a form or form elements to allow it to be submitted without validation. This can be used to create a "save draft"-type submit option. */\n    formNoValidate: boolean;\n    /** Overrides the target attribute on a form element. */\n    formTarget: string;\n    /** Sets or retrieves the height of the object. */\n    height: number;\n    /** When set, overrides the rendering of checkbox controls so that the current value is not visible. */\n    indeterminate: boolean;\n    readonly labels: NodeListOf<HTMLLabelElement> | null;\n    /** Specifies the ID of a pre-defined datalist of options for an input element. */\n    readonly list: HTMLElement | null;\n    /** Defines the maximum acceptable value for an input element with type="number".When used with the min and step attributes, lets you control the range and increment (such as only even numbers) that the user can enter into an input field. */\n    max: string;\n    /** Sets or retrieves the maximum number of characters that the user can enter in a text control. */\n    maxLength: number;\n    /** Defines the minimum acceptable value for an input element with type="number". When used with the max and step attributes, lets you control the range and increment (such as even numbers only) that the user can enter into an input field. */\n    min: string;\n    minLength: number;\n    /** Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list. */\n    multiple: boolean;\n    /** Sets or retrieves the name of the object. */\n    name: string;\n    /** Gets or sets a string containing a regular expression that the user\'s input must match. */\n    pattern: string;\n    /** Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field. */\n    placeholder: string;\n    readOnly: boolean;\n    /** When present, marks an element that can\'t be submitted without a value. */\n    required: boolean;\n    selectionDirection: "forward" | "backward" | "none" | null;\n    /** Gets or sets the end position or offset of a text selection. */\n    selectionEnd: number | null;\n    /** Gets or sets the starting position or offset of a text selection. */\n    selectionStart: number | null;\n    size: number;\n    /** The address or URL of the a media resource that is to be considered. */\n    src: string;\n    /** Defines an increment or jump between values that you want to allow the user to enter. When used with the max and min attributes, lets you control the range and increment (for example, allow only even numbers) that the user can enter into an input field. */\n    step: string;\n    /** Returns the content type of the object. */\n    type: string;\n    /**\n     * Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map.\n     * @deprecated\n     */\n    useMap: string;\n    /** Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as "this is a required field". The result is that the user sees validation messages without actually submitting. */\n    readonly validationMessage: string;\n    /** Returns a  ValidityState object that represents the validity states of an element. */\n    readonly validity: ValidityState;\n    /** Returns the value of the data at the cursor\'s current position. */\n    value: string;\n    /** Returns a Date object representing the form control\'s value, if applicable; otherwise, returns null. Can be set, to change the value. Throws an "InvalidStateError" DOMException if the control isn\'t date- or time-based. */\n    valueAsDate: Date | null;\n    /** Returns the input field value as a number. */\n    valueAsNumber: number;\n    readonly webkitEntries: ReadonlyArray<FileSystemEntry>;\n    webkitdirectory: boolean;\n    /** Sets or retrieves the width of the object. */\n    width: number;\n    /** Returns whether an element will successfully validate based on forms validation rules and constraints. */\n    readonly willValidate: boolean;\n    /** Returns whether a form will validate when it is submitted, without having to submit it. */\n    checkValidity(): boolean;\n    reportValidity(): boolean;\n    /** Makes the selection equal to the current object. */\n    select(): void;\n    /**\n     * Sets a custom error message that is displayed when a form is submitted.\n     * @param error Sets a custom error message that is displayed when a form is submitted.\n     */\n    setCustomValidity(error: string): void;\n    setRangeText(replacement: string): void;\n    setRangeText(replacement: string, start: number, end: number, selectionMode?: SelectionMode): void;\n    /**\n     * Sets the start and end positions of a selection in a text field.\n     * @param start The offset into the text field for the start of the selection.\n     * @param end The offset into the text field for the end of the selection.\n     * @param direction The direction in which the selection is performed.\n     */\n    setSelectionRange(start: number | null, end: number | null, direction?: "forward" | "backward" | "none"): void;\n    /**\n     * Decrements a range input control\'s value by the value given by the Step attribute. If the optional parameter is used, it will decrement the input control\'s step value multiplied by the parameter\'s value.\n     * @param n Value to decrement the value by.\n     */\n    stepDown(n?: number): void;\n    /**\n     * Increments a range input control\'s value by the value given by the Step attribute. If the optional parameter is used, will increment the input control\'s value by that value.\n     * @param n Value to increment the value by.\n     */\n    stepUp(n?: number): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLInputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLInputElement: {\n    prototype: HTMLInputElement;\n    new(): HTMLInputElement;\n};\n\n/** Exposes specific properties and methods (beyond those defined by regular HTMLElement interface it also has available to it by inheritance) for manipulating list elements. */\ninterface HTMLLIElement extends HTMLElement {\n    /** @deprecated */\n    type: string;\n    /** Sets or retrieves the value of a list item. */\n    value: number;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLIElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLLIElement: {\n    prototype: HTMLLIElement;\n    new(): HTMLLIElement;\n};\n\n/** Gives access to properties specific to <label> elements. It inherits methods and properties from the base HTMLElement interface. */\ninterface HTMLLabelElement extends HTMLElement {\n    /** Returns the form control that is associated with this element. */\n    readonly control: HTMLElement | null;\n    /** Retrieves a reference to the form that the object is embedded in. */\n    readonly form: HTMLFormElement | null;\n    /** Sets or retrieves the object to which the given label object is assigned. */\n    htmlFor: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLabelElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLLabelElement: {\n    prototype: HTMLLabelElement;\n    new(): HTMLLabelElement;\n};\n\n/** The HTMLLegendElement is an interface allowing to access properties of the <legend> elements. It inherits properties and methods from the HTMLElement interface. */\ninterface HTMLLegendElement extends HTMLElement {\n    /** @deprecated */\n    align: string;\n    /** Retrieves a reference to the form that the object is embedded in. */\n    readonly form: HTMLFormElement | null;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLegendElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLLegendElement: {\n    prototype: HTMLLegendElement;\n    new(): HTMLLegendElement;\n};\n\n/** Reference information for external resources and the relationship of those resources to a document and vice-versa. This object inherits all of the properties and methods of the HTMLElement interface. */\ninterface HTMLLinkElement extends HTMLElement, LinkStyle {\n    as: string;\n    /**\n     * Sets or retrieves the character set used to encode the object.\n     * @deprecated\n     */\n    charset: string;\n    crossOrigin: string | null;\n    disabled: boolean;\n    /** Sets or retrieves a destination URL or an anchor point. */\n    href: string;\n    /** Sets or retrieves the language code of the object. */\n    hreflang: string;\n    imageSizes: string;\n    imageSrcset: string;\n    integrity: string;\n    /** Sets or retrieves the media type. */\n    media: string;\n    referrerPolicy: string;\n    /** Sets or retrieves the relationship between the object and the destination of the link. */\n    rel: string;\n    readonly relList: DOMTokenList;\n    /**\n     * Sets or retrieves the relationship between the object and the destination of the link.\n     * @deprecated\n     */\n    rev: string;\n    readonly sizes: DOMTokenList;\n    /**\n     * Sets or retrieves the window or frame at which to target content.\n     * @deprecated\n     */\n    target: string;\n    /** Sets or retrieves the MIME type of the object. */\n    type: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLLinkElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLLinkElement: {\n    prototype: HTMLLinkElement;\n    new(): HTMLLinkElement;\n};\n\n/** Provides special properties and methods (beyond those of the regular object HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of map elements. */\ninterface HTMLMapElement extends HTMLElement {\n    /** Retrieves a collection of the area objects defined for the given map object. */\n    readonly areas: HTMLCollection;\n    /** Sets or retrieves the name of the object. */\n    name: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMapElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLMapElement: {\n    prototype: HTMLMapElement;\n    new(): HTMLMapElement;\n};\n\n/**\n * Provides methods to manipulate <marquee> elements.\n * @deprecated\n */\ninterface HTMLMarqueeElement extends HTMLElement {\n    /** @deprecated */\n    behavior: string;\n    /** @deprecated */\n    bgColor: string;\n    /** @deprecated */\n    direction: string;\n    /** @deprecated */\n    height: string;\n    /** @deprecated */\n    hspace: number;\n    /** @deprecated */\n    loop: number;\n    /** @deprecated */\n    scrollAmount: number;\n    /** @deprecated */\n    scrollDelay: number;\n    /** @deprecated */\n    trueSpeed: boolean;\n    /** @deprecated */\n    vspace: number;\n    /** @deprecated */\n    width: string;\n    /** @deprecated */\n    start(): void;\n    /** @deprecated */\n    stop(): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMarqueeElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMarqueeElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** @deprecated */\ndeclare var HTMLMarqueeElement: {\n    prototype: HTMLMarqueeElement;\n    new(): HTMLMarqueeElement;\n};\n\ninterface HTMLMediaElementEventMap extends HTMLElementEventMap {\n    "encrypted": MediaEncryptedEvent;\n    "waitingforkey": Event;\n}\n\n/** Adds to HTMLElement the properties and methods needed to support basic media-related capabilities that are common to audio and video. */\ninterface HTMLMediaElement extends HTMLElement {\n    /** Gets or sets a value that indicates whether to start playing the media automatically. */\n    autoplay: boolean;\n    /** Gets a collection of buffered time ranges. */\n    readonly buffered: TimeRanges;\n    /** Gets or sets a flag that indicates whether the client provides a set of controls for the media (in case the developer does not include controls for the player). */\n    controls: boolean;\n    crossOrigin: string | null;\n    /** Gets the address or URL of the current media resource that is selected by IHTMLMediaElement. */\n    readonly currentSrc: string;\n    /** Gets or sets the current playback position, in seconds. */\n    currentTime: number;\n    defaultMuted: boolean;\n    /** Gets or sets the default playback rate when the user is not using fast forward or reverse for a video or audio resource. */\n    defaultPlaybackRate: number;\n    disableRemotePlayback: boolean;\n    /** Returns the duration in seconds of the current media resource. A NaN value is returned if duration is not available, or Infinity if the media resource is streaming. */\n    readonly duration: number;\n    /** Gets information about whether the playback has ended or not. */\n    readonly ended: boolean;\n    /** Returns an object representing the current error state of the audio or video element. */\n    readonly error: MediaError | null;\n    /** Gets or sets a flag to specify whether playback should restart after it completes. */\n    loop: boolean;\n    /** Available only in secure contexts. */\n    readonly mediaKeys: MediaKeys | null;\n    /** Gets or sets a flag that indicates whether the audio (either audio or the audio track on video media) is muted. */\n    muted: boolean;\n    /** Gets the current network activity for the element. */\n    readonly networkState: number;\n    onencrypted: ((this: HTMLMediaElement, ev: MediaEncryptedEvent) => any) | null;\n    onwaitingforkey: ((this: HTMLMediaElement, ev: Event) => any) | null;\n    /** Gets a flag that specifies whether playback is paused. */\n    readonly paused: boolean;\n    /** Gets or sets the current rate of speed for the media resource to play. This speed is expressed as a multiple of the normal speed of the media resource. */\n    playbackRate: number;\n    /** Gets TimeRanges for the current media resource that has been played. */\n    readonly played: TimeRanges;\n    /** Gets or sets a value indicating what data should be preloaded, if any. */\n    preload: "none" | "metadata" | "auto" | "";\n    readonly readyState: number;\n    readonly remote: RemotePlayback;\n    /** Returns a TimeRanges object that represents the ranges of the current media resource that can be seeked. */\n    readonly seekable: TimeRanges;\n    /** Gets a flag that indicates whether the client is currently moving to a new playback position in the media resource. */\n    readonly seeking: boolean;\n    /** The address or URL of the a media resource that is to be considered. */\n    src: string;\n    srcObject: MediaProvider | null;\n    readonly textTracks: TextTrackList;\n    /** Gets or sets the volume level for audio portions of the media element. */\n    volume: number;\n    addTextTrack(kind: TextTrackKind, label?: string, language?: string): TextTrack;\n    /** Returns a string that specifies whether the client can play a given media resource type. */\n    canPlayType(type: string): CanPlayTypeResult;\n    fastSeek(time: number): void;\n    /** Resets the audio or video object and loads a new media resource. */\n    load(): void;\n    /** Pauses the current playback and sets paused to TRUE. This can be used to test whether the media is playing or paused. You can also use the pause or play events to tell whether the media is playing or not. */\n    pause(): void;\n    /** Loads and starts playback of a media resource. */\n    play(): Promise<void>;\n    /** Available only in secure contexts. */\n    setMediaKeys(mediaKeys: MediaKeys | null): Promise<void>;\n    readonly HAVE_CURRENT_DATA: number;\n    readonly HAVE_ENOUGH_DATA: number;\n    readonly HAVE_FUTURE_DATA: number;\n    readonly HAVE_METADATA: number;\n    readonly HAVE_NOTHING: number;\n    readonly NETWORK_EMPTY: number;\n    readonly NETWORK_IDLE: number;\n    readonly NETWORK_LOADING: number;\n    readonly NETWORK_NO_SOURCE: number;\n    addEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLMediaElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLMediaElementEventMap>(type: K, listener: (this: HTMLMediaElement, ev: HTMLMediaElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLMediaElement: {\n    prototype: HTMLMediaElement;\n    new(): HTMLMediaElement;\n    readonly HAVE_CURRENT_DATA: number;\n    readonly HAVE_ENOUGH_DATA: number;\n    readonly HAVE_FUTURE_DATA: number;\n    readonly HAVE_METADATA: number;\n    readonly HAVE_NOTHING: number;\n    readonly NETWORK_EMPTY: number;\n    readonly NETWORK_IDLE: number;\n    readonly NETWORK_LOADING: number;\n    readonly NETWORK_NO_SOURCE: number;\n};\n\ninterface HTMLMenuElement extends HTMLElement {\n    /** @deprecated */\n    compact: boolean;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMenuElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLMenuElement: {\n    prototype: HTMLMenuElement;\n    new(): HTMLMenuElement;\n};\n\n/** Contains descriptive metadata about a document. It inherits all of the properties and methods described in the HTMLElement interface. */\ninterface HTMLMetaElement extends HTMLElement {\n    /** Gets or sets meta-information to associate with httpEquiv or name. */\n    content: string;\n    /** Gets or sets information used to bind the value of a content attribute of a meta element to an HTTP response header. */\n    httpEquiv: string;\n    media: string;\n    /** Sets or retrieves the value specified in the content attribute of the meta object. */\n    name: string;\n    /**\n     * Sets or retrieves a scheme to be used in interpreting the value of a property specified for the object.\n     * @deprecated\n     */\n    scheme: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMetaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLMetaElement: {\n    prototype: HTMLMetaElement;\n    new(): HTMLMetaElement;\n};\n\n/** The HTML <meter> elements expose the HTMLMeterElement interface, which provides special properties and methods (beyond the HTMLElement object interface they also have available to them by inheritance) for manipulating the layout and presentation of <meter> elements. */\ninterface HTMLMeterElement extends HTMLElement {\n    high: number;\n    readonly labels: NodeListOf<HTMLLabelElement>;\n    low: number;\n    max: number;\n    min: number;\n    optimum: number;\n    value: number;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLMeterElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLMeterElement: {\n    prototype: HTMLMeterElement;\n    new(): HTMLMeterElement;\n};\n\n/** Provides special properties (beyond the regular methods and properties available through the HTMLElement interface they also have available to them by inheritance) for manipulating modification elements, that is <del> and <ins>. */\ninterface HTMLModElement extends HTMLElement {\n    /** Sets or retrieves reference information about the object. */\n    cite: string;\n    /** Sets or retrieves the date and time of a modification to the object. */\n    dateTime: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLModElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLModElement: {\n    prototype: HTMLModElement;\n    new(): HTMLModElement;\n};\n\n/** Provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating ordered list elements. */\ninterface HTMLOListElement extends HTMLElement {\n    /** @deprecated */\n    compact: boolean;\n    reversed: boolean;\n    /** The starting number. */\n    start: number;\n    type: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLOListElement: {\n    prototype: HTMLOListElement;\n    new(): HTMLOListElement;\n};\n\n/** Provides special properties and methods (beyond those on the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <object> element, representing external resources. */\ninterface HTMLObjectElement extends HTMLElement {\n    /** @deprecated */\n    align: string;\n    /**\n     * Sets or retrieves a character string that can be used to implement your own archive functionality for the object.\n     * @deprecated\n     */\n    archive: string;\n    /** @deprecated */\n    border: string;\n    /**\n     * Sets or retrieves the URL of the file containing the compiled Java class.\n     * @deprecated\n     */\n    code: string;\n    /**\n     * Sets or retrieves the URL of the component.\n     * @deprecated\n     */\n    codeBase: string;\n    /**\n     * Sets or retrieves the Internet media type for the code associated with the object.\n     * @deprecated\n     */\n    codeType: string;\n    /** Retrieves the document object of the page or frame. */\n    readonly contentDocument: Document | null;\n    readonly contentWindow: WindowProxy | null;\n    /** Sets or retrieves the URL that references the data of the object. */\n    data: string;\n    /** @deprecated */\n    declare: boolean;\n    /** Retrieves a reference to the form that the object is embedded in. */\n    readonly form: HTMLFormElement | null;\n    /** Sets or retrieves the height of the object. */\n    height: string;\n    /** @deprecated */\n    hspace: number;\n    /** Sets or retrieves the name of the object. */\n    name: string;\n    /**\n     * Sets or retrieves a message to be displayed while an object is loading.\n     * @deprecated\n     */\n    standby: string;\n    /** Sets or retrieves the MIME type of the object. */\n    type: string;\n    /** Sets or retrieves the URL, often with a bookmark extension (#name), to use as a client-side image map. */\n    useMap: string;\n    /** Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as "this is a required field". The result is that the user sees validation messages without actually submitting. */\n    readonly validationMessage: string;\n    /** Returns a  ValidityState object that represents the validity states of an element. */\n    readonly validity: ValidityState;\n    /** @deprecated */\n    vspace: number;\n    /** Sets or retrieves the width of the object. */\n    width: string;\n    /** Returns whether an element will successfully validate based on forms validation rules and constraints. */\n    readonly willValidate: boolean;\n    /** Returns whether a form will validate when it is submitted, without having to submit it. */\n    checkValidity(): boolean;\n    getSVGDocument(): Document | null;\n    reportValidity(): boolean;\n    /**\n     * Sets a custom error message that is displayed when a form is submitted.\n     * @param error Sets a custom error message that is displayed when a form is submitted.\n     */\n    setCustomValidity(error: string): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLObjectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLObjectElement: {\n    prototype: HTMLObjectElement;\n    new(): HTMLObjectElement;\n};\n\n/** Provides special properties and methods (beyond the regular HTMLElement object interface they also have available to them by inheritance) for manipulating the layout and presentation of <optgroup> elements. */\ninterface HTMLOptGroupElement extends HTMLElement {\n    disabled: boolean;\n    /** Sets or retrieves a value that you can use to implement your own label functionality for the object. */\n    label: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptGroupElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptGroupElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLOptGroupElement: {\n    prototype: HTMLOptGroupElement;\n    new(): HTMLOptGroupElement;\n};\n\n/** <option> elements and inherits all classes and methods of the HTMLElement interface. */\ninterface HTMLOptionElement extends HTMLElement {\n    /** Sets or retrieves the status of an option. */\n    defaultSelected: boolean;\n    disabled: boolean;\n    /** Retrieves a reference to the form that the object is embedded in. */\n    readonly form: HTMLFormElement | null;\n    /** Sets or retrieves the ordinal position of an option in a list box. */\n    readonly index: number;\n    /** Sets or retrieves a value that you can use to implement your own label functionality for the object. */\n    label: string;\n    /** Sets or retrieves whether the option in the list box is the default item. */\n    selected: boolean;\n    /** Sets or retrieves the text string specified by the option tag. */\n    text: string;\n    /** Sets or retrieves the value which is returned to the server when the form control is submitted. */\n    value: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLOptionElement: {\n    prototype: HTMLOptionElement;\n    new(): HTMLOptionElement;\n};\n\n/** HTMLOptionsCollection is an interface representing a collection of HTML option elements (in document order) and offers methods and properties for traversing the list as well as optionally altering its items. This type is returned solely by the "options" property of select. */\ninterface HTMLOptionsCollection extends HTMLCollectionOf<HTMLOptionElement> {\n    /**\n     * Returns the number of elements in the collection.\n     *\n     * When set to a smaller number, truncates the number of option elements in the corresponding container.\n     *\n     * When set to a greater number, adds new blank option elements to that container.\n     */\n    length: number;\n    /**\n     * Returns the index of the first selected item, if any, or −1 if there is no selected item.\n     *\n     * Can be set, to change the selection.\n     */\n    selectedIndex: number;\n    /**\n     * Inserts element before the node given by before.\n     *\n     * The before argument can be a number, in which case element is inserted before the item with that number, or an element from the collection, in which case element is inserted before that element.\n     *\n     * If before is omitted, null, or a number out of range, then element will be added at the end of the list.\n     *\n     * This method will throw a "HierarchyRequestError" DOMException if element is an ancestor of the element into which it is to be inserted.\n     */\n    add(element: HTMLOptionElement | HTMLOptGroupElement, before?: HTMLElement | number | null): void;\n    /** Removes the item with index index from the collection. */\n    remove(index: number): void;\n}\n\ndeclare var HTMLOptionsCollection: {\n    prototype: HTMLOptionsCollection;\n    new(): HTMLOptionsCollection;\n};\n\ninterface HTMLOrSVGElement {\n    autofocus: boolean;\n    readonly dataset: DOMStringMap;\n    nonce?: string;\n    tabIndex: number;\n    blur(): void;\n    focus(options?: FocusOptions): void;\n}\n\n/** Provides properties and methods (beyond those inherited from HTMLElement) for manipulating the layout and presentation of <output> elements. */\ninterface HTMLOutputElement extends HTMLElement {\n    defaultValue: string;\n    readonly form: HTMLFormElement | null;\n    readonly htmlFor: DOMTokenList;\n    readonly labels: NodeListOf<HTMLLabelElement>;\n    name: string;\n    /** Returns the string "output". */\n    readonly type: string;\n    readonly validationMessage: string;\n    readonly validity: ValidityState;\n    /**\n     * Returns the element\'s current value.\n     *\n     * Can be set, to change the value.\n     */\n    value: string;\n    readonly willValidate: boolean;\n    checkValidity(): boolean;\n    reportValidity(): boolean;\n    setCustomValidity(error: string): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLOutputElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLOutputElement: {\n    prototype: HTMLOutputElement;\n    new(): HTMLOutputElement;\n};\n\n/** Provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating <p> elements. */\ninterface HTMLParagraphElement extends HTMLElement {\n    /**\n     * Sets or retrieves how the object is aligned with adjacent text.\n     * @deprecated\n     */\n    align: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParagraphElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParagraphElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLParagraphElement: {\n    prototype: HTMLParagraphElement;\n    new(): HTMLParagraphElement;\n};\n\n/** Provides special properties (beyond those of the regular HTMLElement object interface it inherits) for manipulating <param> elements, representing a pair of a key and a value that acts as a parameter for an <object> element. */\ninterface HTMLParamElement extends HTMLElement {\n    /** Sets or retrieves the name of an input parameter for an element. */\n    name: string;\n    /**\n     * Sets or retrieves the content type of the resource designated by the value attribute.\n     * @deprecated\n     */\n    type: string;\n    /** Sets or retrieves the value of an input parameter for an element. */\n    value: string;\n    /**\n     * Sets or retrieves the data type of the value attribute.\n     * @deprecated\n     */\n    valueType: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLParamElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLParamElement: {\n    prototype: HTMLParamElement;\n    new(): HTMLParamElement;\n};\n\n/** A <picture> HTML element. It doesn\'t implement specific properties or methods. */\ninterface HTMLPictureElement extends HTMLElement {\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPictureElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLPictureElement: {\n    prototype: HTMLPictureElement;\n    new(): HTMLPictureElement;\n};\n\n/** Exposes specific properties and methods (beyond those of the HTMLElement interface it also has available to it by inheritance) for manipulating a block of preformatted text (<pre>). */\ninterface HTMLPreElement extends HTMLElement {\n    /**\n     * Sets or gets a value that you can use to implement your own width functionality for the object.\n     * @deprecated\n     */\n    width: number;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLPreElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLPreElement: {\n    prototype: HTMLPreElement;\n    new(): HTMLPreElement;\n};\n\n/** Provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of <progress> elements. */\ninterface HTMLProgressElement extends HTMLElement {\n    readonly labels: NodeListOf<HTMLLabelElement>;\n    /** Defines the maximum, or "done" value for a progress element. */\n    max: number;\n    /** Returns the quotient of value/max when the value attribute is set (determinate progress bar), or -1 when the value attribute is missing (indeterminate progress bar). */\n    readonly position: number;\n    /** Sets or gets the current value of a progress element. The value must be a non-negative number between 0 and the max value. */\n    value: number;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLProgressElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLProgressElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLProgressElement: {\n    prototype: HTMLProgressElement;\n    new(): HTMLProgressElement;\n};\n\n/** Provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating quoting elements, like <blockquote> and <q>, but not the <cite> element. */\ninterface HTMLQuoteElement extends HTMLElement {\n    /** Sets or retrieves reference information about the object. */\n    cite: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLQuoteElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLQuoteElement: {\n    prototype: HTMLQuoteElement;\n    new(): HTMLQuoteElement;\n};\n\n/** HTML <script> elements expose the HTMLScriptElement interface, which provides special properties and methods for manipulating the behavior and execution of <script> elements (beyond the inherited HTMLElement interface). */\ninterface HTMLScriptElement extends HTMLElement {\n    async: boolean;\n    /**\n     * Sets or retrieves the character set used to encode the object.\n     * @deprecated\n     */\n    charset: string;\n    crossOrigin: string | null;\n    /** Sets or retrieves the status of the script. */\n    defer: boolean;\n    /**\n     * Sets or retrieves the event for which the script is written.\n     * @deprecated\n     */\n    event: string;\n    /**\n     * Sets or retrieves the object that is bound to the event script.\n     * @deprecated\n     */\n    htmlFor: string;\n    integrity: string;\n    noModule: boolean;\n    referrerPolicy: string;\n    /** Retrieves the URL to an external file that contains the source code or data. */\n    src: string;\n    /** Retrieves or sets the text of the object as a string. */\n    text: string;\n    /** Sets or retrieves the MIME type for the associated scripting engine. */\n    type: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLScriptElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLScriptElement: {\n    prototype: HTMLScriptElement;\n    new(): HTMLScriptElement;\n};\n\n/** A <select> HTML Element. These elements also share all of the properties and methods of other HTML elements via the HTMLElement interface. */\ninterface HTMLSelectElement extends HTMLElement {\n    autocomplete: string;\n    disabled: boolean;\n    /** Retrieves a reference to the form that the object is embedded in. */\n    readonly form: HTMLFormElement | null;\n    readonly labels: NodeListOf<HTMLLabelElement>;\n    /** Sets or retrieves the number of objects in a collection. */\n    length: number;\n    /** Sets or retrieves the Boolean value indicating whether multiple items can be selected from a list. */\n    multiple: boolean;\n    /** Sets or retrieves the name of the object. */\n    name: string;\n    /** Returns an HTMLOptionsCollection of the list of options. */\n    readonly options: HTMLOptionsCollection;\n    /** When present, marks an element that can\'t be submitted without a value. */\n    required: boolean;\n    /** Sets or retrieves the index of the selected option in a select object. */\n    selectedIndex: number;\n    readonly selectedOptions: HTMLCollectionOf<HTMLOptionElement>;\n    /** Sets or retrieves the number of rows in the list box. */\n    size: number;\n    /** Retrieves the type of select control based on the value of the MULTIPLE attribute. */\n    readonly type: string;\n    /** Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as "this is a required field". The result is that the user sees validation messages without actually submitting. */\n    readonly validationMessage: string;\n    /** Returns a  ValidityState object that represents the validity states of an element. */\n    readonly validity: ValidityState;\n    /** Sets or retrieves the value which is returned to the server when the form control is submitted. */\n    value: string;\n    /** Returns whether an element will successfully validate based on forms validation rules and constraints. */\n    readonly willValidate: boolean;\n    /**\n     * Adds an element to the areas, controlRange, or options collection.\n     * @param element Variant of type Number that specifies the index position in the collection where the element is placed. If no value is given, the method places the element at the end of the collection.\n     * @param before Variant of type Object that specifies an element to insert before, or null to append the object to the collection.\n     */\n    add(element: HTMLOptionElement | HTMLOptGroupElement, before?: HTMLElement | number | null): void;\n    /** Returns whether a form will validate when it is submitted, without having to submit it. */\n    checkValidity(): boolean;\n    /**\n     * Retrieves a select object or an object from an options collection.\n     * @param name Variant of type Number or String that specifies the object or collection to retrieve. If this parameter is an integer, it is the zero-based index of the object. If this parameter is a string, all objects with matching name or id properties are retrieved, and a collection is returned if more than one match is made.\n     * @param index Variant of type Number that specifies the zero-based index of the object to retrieve when a collection is returned.\n     */\n    item(index: number): HTMLOptionElement | null;\n    /**\n     * Retrieves a select object or an object from an options collection.\n     * @param namedItem A String that specifies the name or id property of the object to retrieve. A collection is returned if more than one match is made.\n     */\n    namedItem(name: string): HTMLOptionElement | null;\n    /**\n     * Removes an element from the collection.\n     * @param index Number that specifies the zero-based index of the element to remove from the collection.\n     */\n    remove(): void;\n    remove(index: number): void;\n    reportValidity(): boolean;\n    /**\n     * Sets a custom error message that is displayed when a form is submitted.\n     * @param error Sets a custom error message that is displayed when a form is submitted.\n     */\n    setCustomValidity(error: string): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    [name: number]: HTMLOptionElement | HTMLOptGroupElement;\n}\n\ndeclare var HTMLSelectElement: {\n    prototype: HTMLSelectElement;\n    new(): HTMLSelectElement;\n};\n\ninterface HTMLSlotElement extends HTMLElement {\n    name: string;\n    assign(...nodes: (Element | Text)[]): void;\n    assignedElements(options?: AssignedNodesOptions): Element[];\n    assignedNodes(options?: AssignedNodesOptions): Node[];\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSlotElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLSlotElement: {\n    prototype: HTMLSlotElement;\n    new(): HTMLSlotElement;\n};\n\n/** Provides special properties (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating <source> elements. */\ninterface HTMLSourceElement extends HTMLElement {\n    height: number;\n    /** Gets or sets the intended media type of the media source. */\n    media: string;\n    sizes: string;\n    /** The address or URL of the a media resource that is to be considered. */\n    src: string;\n    srcset: string;\n    /** Gets or sets the MIME type of a media resource. */\n    type: string;\n    width: number;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSourceElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLSourceElement: {\n    prototype: HTMLSourceElement;\n    new(): HTMLSourceElement;\n};\n\n/** A <span> element and derives from the HTMLElement interface, but without implementing any additional properties or methods. */\ninterface HTMLSpanElement extends HTMLElement {\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLSpanElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLSpanElement: {\n    prototype: HTMLSpanElement;\n    new(): HTMLSpanElement;\n};\n\n/** A <style> element. It inherits properties and methods from its parent, HTMLElement, and from LinkStyle. */\ninterface HTMLStyleElement extends HTMLElement, LinkStyle {\n    /** Sets or retrieves the media type. */\n    media: string;\n    /**\n     * Retrieves the CSS language in which the style sheet is written.\n     * @deprecated\n     */\n    type: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLStyleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLStyleElement: {\n    prototype: HTMLStyleElement;\n    new(): HTMLStyleElement;\n};\n\n/** Special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating table caption elements. */\ninterface HTMLTableCaptionElement extends HTMLElement {\n    /**\n     * Sets or retrieves the alignment of the caption or legend.\n     * @deprecated\n     */\n    align: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCaptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCaptionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTableCaptionElement: {\n    prototype: HTMLTableCaptionElement;\n    new(): HTMLTableCaptionElement;\n};\n\n/** Provides special properties and methods (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of table cells, either header or data cells, in an HTML document. */\ninterface HTMLTableCellElement extends HTMLElement {\n    /** Sets or retrieves abbreviated text for the object. */\n    abbr: string;\n    /**\n     * Sets or retrieves how the object is aligned with adjacent text.\n     * @deprecated\n     */\n    align: string;\n    /**\n     * Sets or retrieves a comma-delimited list of conceptual categories associated with the object.\n     * @deprecated\n     */\n    axis: string;\n    /** @deprecated */\n    bgColor: string;\n    /** Retrieves the position of the object in the cells collection of a row. */\n    readonly cellIndex: number;\n    /** @deprecated */\n    ch: string;\n    /** @deprecated */\n    chOff: string;\n    /** Sets or retrieves the number columns in the table that the object should span. */\n    colSpan: number;\n    /** Sets or retrieves a list of header cells that provide information for the object. */\n    headers: string;\n    /**\n     * Sets or retrieves the height of the object.\n     * @deprecated\n     */\n    height: string;\n    /**\n     * Sets or retrieves whether the browser automatically performs wordwrap.\n     * @deprecated\n     */\n    noWrap: boolean;\n    /** Sets or retrieves how many rows in a table the cell should span. */\n    rowSpan: number;\n    /** Sets or retrieves the group of cells in a table to which the object\'s information applies. */\n    scope: string;\n    /** @deprecated */\n    vAlign: string;\n    /**\n     * Sets or retrieves the width of the object.\n     * @deprecated\n     */\n    width: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTableCellElement: {\n    prototype: HTMLTableCellElement;\n    new(): HTMLTableCellElement;\n};\n\n/** Provides special properties (beyond the HTMLElement interface it also has available to it inheritance) for manipulating single or grouped table column elements. */\ninterface HTMLTableColElement extends HTMLElement {\n    /**\n     * Sets or retrieves the alignment of the object relative to the display or table.\n     * @deprecated\n     */\n    align: string;\n    /** @deprecated */\n    ch: string;\n    /** @deprecated */\n    chOff: string;\n    /** Sets or retrieves the number of columns in the group. */\n    span: number;\n    /** @deprecated */\n    vAlign: string;\n    /**\n     * Sets or retrieves the width of the object.\n     * @deprecated\n     */\n    width: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableColElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableColElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTableColElement: {\n    prototype: HTMLTableColElement;\n    new(): HTMLTableColElement;\n};\n\n/** @deprecated prefer HTMLTableCellElement */\ninterface HTMLTableDataCellElement extends HTMLTableCellElement {\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableDataCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableDataCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** Provides special properties and methods (beyond the regular HTMLElement object interface it also has available to it by inheritance) for manipulating the layout and presentation of tables in an HTML document. */\ninterface HTMLTableElement extends HTMLElement {\n    /**\n     * Sets or retrieves a value that indicates the table alignment.\n     * @deprecated\n     */\n    align: string;\n    /** @deprecated */\n    bgColor: string;\n    /**\n     * Sets or retrieves the width of the border to draw around the object.\n     * @deprecated\n     */\n    border: string;\n    /** Retrieves the caption object of a table. */\n    caption: HTMLTableCaptionElement | null;\n    /**\n     * Sets or retrieves the amount of space between the border of the cell and the content of the cell.\n     * @deprecated\n     */\n    cellPadding: string;\n    /**\n     * Sets or retrieves the amount of space between cells in a table.\n     * @deprecated\n     */\n    cellSpacing: string;\n    /**\n     * Sets or retrieves the way the border frame around the table is displayed.\n     * @deprecated\n     */\n    frame: string;\n    /** Sets or retrieves the number of horizontal rows contained in the object. */\n    readonly rows: HTMLCollectionOf<HTMLTableRowElement>;\n    /**\n     * Sets or retrieves which dividing lines (inner borders) are displayed.\n     * @deprecated\n     */\n    rules: string;\n    /**\n     * Sets or retrieves a description and/or structure of the object.\n     * @deprecated\n     */\n    summary: string;\n    /** Retrieves a collection of all tBody objects in the table. Objects in this collection are in source order. */\n    readonly tBodies: HTMLCollectionOf<HTMLTableSectionElement>;\n    /** Retrieves the tFoot object of the table. */\n    tFoot: HTMLTableSectionElement | null;\n    /** Retrieves the tHead object of the table. */\n    tHead: HTMLTableSectionElement | null;\n    /**\n     * Sets or retrieves the width of the object.\n     * @deprecated\n     */\n    width: string;\n    /** Creates an empty caption element in the table. */\n    createCaption(): HTMLTableCaptionElement;\n    /** Creates an empty tBody element in the table. */\n    createTBody(): HTMLTableSectionElement;\n    /** Creates an empty tFoot element in the table. */\n    createTFoot(): HTMLTableSectionElement;\n    /** Returns the tHead element object if successful, or null otherwise. */\n    createTHead(): HTMLTableSectionElement;\n    /** Deletes the caption element and its contents from the table. */\n    deleteCaption(): void;\n    /**\n     * Removes the specified row (tr) from the element and from the rows collection.\n     * @param index Number that specifies the zero-based position in the rows collection of the row to remove.\n     */\n    deleteRow(index: number): void;\n    /** Deletes the tFoot element and its contents from the table. */\n    deleteTFoot(): void;\n    /** Deletes the tHead element and its contents from the table. */\n    deleteTHead(): void;\n    /**\n     * Creates a new row (tr) in the table, and adds the row to the rows collection.\n     * @param index Number that specifies where to insert the row in the rows collection. The default value is -1, which appends the new row to the end of the rows collection.\n     */\n    insertRow(index?: number): HTMLTableRowElement;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTableElement: {\n    prototype: HTMLTableElement;\n    new(): HTMLTableElement;\n};\n\n/** @deprecated prefer HTMLTableCellElement */\ninterface HTMLTableHeaderCellElement extends HTMLTableCellElement {\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableHeaderCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableHeaderCellElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** Provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of rows in an HTML table. */\ninterface HTMLTableRowElement extends HTMLElement {\n    /**\n     * Sets or retrieves how the object is aligned with adjacent text.\n     * @deprecated\n     */\n    align: string;\n    /** @deprecated */\n    bgColor: string;\n    /** Retrieves a collection of all cells in the table row. */\n    readonly cells: HTMLCollectionOf<HTMLTableCellElement>;\n    /** @deprecated */\n    ch: string;\n    /** @deprecated */\n    chOff: string;\n    /** Retrieves the position of the object in the rows collection for the table. */\n    readonly rowIndex: number;\n    /** Retrieves the position of the object in the collection. */\n    readonly sectionRowIndex: number;\n    /** @deprecated */\n    vAlign: string;\n    /**\n     * Removes the specified cell from the table row, as well as from the cells collection.\n     * @param index Number that specifies the zero-based position of the cell to remove from the table row. If no value is provided, the last cell in the cells collection is deleted.\n     */\n    deleteCell(index: number): void;\n    /**\n     * Creates a new cell in the table row, and adds the cell to the cells collection.\n     * @param index Number that specifies where to insert the cell in the tr. The default value is -1, which appends the new cell to the end of the cells collection.\n     */\n    insertCell(index?: number): HTMLTableCellElement;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableRowElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableRowElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTableRowElement: {\n    prototype: HTMLTableRowElement;\n    new(): HTMLTableRowElement;\n};\n\n/** Provides special properties and methods (beyond the HTMLElement interface it also has available to it by inheritance) for manipulating the layout and presentation of sections, that is headers, footers and bodies, in an HTML table. */\ninterface HTMLTableSectionElement extends HTMLElement {\n    /**\n     * Sets or retrieves a value that indicates the table alignment.\n     * @deprecated\n     */\n    align: string;\n    /** @deprecated */\n    ch: string;\n    /** @deprecated */\n    chOff: string;\n    /** Sets or retrieves the number of horizontal rows contained in the object. */\n    readonly rows: HTMLCollectionOf<HTMLTableRowElement>;\n    /** @deprecated */\n    vAlign: string;\n    /**\n     * Removes the specified row (tr) from the element and from the rows collection.\n     * @param index Number that specifies the zero-based position in the rows collection of the row to remove.\n     */\n    deleteRow(index: number): void;\n    /**\n     * Creates a new row (tr) in the table, and adds the row to the rows collection.\n     * @param index Number that specifies where to insert the row in the rows collection. The default value is -1, which appends the new row to the end of the rows collection.\n     */\n    insertRow(index?: number): HTMLTableRowElement;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableSectionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTableSectionElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTableSectionElement: {\n    prototype: HTMLTableSectionElement;\n    new(): HTMLTableSectionElement;\n};\n\n/** Enables access to the contents of an HTML <template> element. */\ninterface HTMLTemplateElement extends HTMLElement {\n    /** Returns the template contents (a DocumentFragment). */\n    readonly content: DocumentFragment;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTemplateElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTemplateElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTemplateElement: {\n    prototype: HTMLTemplateElement;\n    new(): HTMLTemplateElement;\n};\n\n/** Provides special properties and methods for manipulating the layout and presentation of <textarea> elements. */\ninterface HTMLTextAreaElement extends HTMLElement {\n    autocomplete: string;\n    /** Sets or retrieves the width of the object. */\n    cols: number;\n    /** Sets or retrieves the initial contents of the object. */\n    defaultValue: string;\n    dirName: string;\n    disabled: boolean;\n    /** Retrieves a reference to the form that the object is embedded in. */\n    readonly form: HTMLFormElement | null;\n    readonly labels: NodeListOf<HTMLLabelElement>;\n    /** Sets or retrieves the maximum number of characters that the user can enter in a text control. */\n    maxLength: number;\n    minLength: number;\n    /** Sets or retrieves the name of the object. */\n    name: string;\n    /** Gets or sets a text string that is displayed in an input field as a hint or prompt to users as the format or type of information they need to enter.The text appears in an input field until the user puts focus on the field. */\n    placeholder: string;\n    /** Sets or retrieves the value indicated whether the content of the object is read-only. */\n    readOnly: boolean;\n    /** When present, marks an element that can\'t be submitted without a value. */\n    required: boolean;\n    /** Sets or retrieves the number of horizontal rows contained in the object. */\n    rows: number;\n    selectionDirection: "forward" | "backward" | "none";\n    /** Gets or sets the end position or offset of a text selection. */\n    selectionEnd: number;\n    /** Gets or sets the starting position or offset of a text selection. */\n    selectionStart: number;\n    readonly textLength: number;\n    /** Retrieves the type of control. */\n    readonly type: string;\n    /** Returns the error message that would be displayed if the user submits the form, or an empty string if no error message. It also triggers the standard error message, such as "this is a required field". The result is that the user sees validation messages without actually submitting. */\n    readonly validationMessage: string;\n    /** Returns a  ValidityState object that represents the validity states of an element. */\n    readonly validity: ValidityState;\n    /** Retrieves or sets the text in the entry field of the textArea element. */\n    value: string;\n    /** Returns whether an element will successfully validate based on forms validation rules and constraints. */\n    readonly willValidate: boolean;\n    /** Sets or retrieves how to handle wordwrapping in the object. */\n    wrap: string;\n    /** Returns whether a form will validate when it is submitted, without having to submit it. */\n    checkValidity(): boolean;\n    reportValidity(): boolean;\n    /** Highlights the input area of a form element. */\n    select(): void;\n    /**\n     * Sets a custom error message that is displayed when a form is submitted.\n     * @param error Sets a custom error message that is displayed when a form is submitted.\n     */\n    setCustomValidity(error: string): void;\n    setRangeText(replacement: string): void;\n    setRangeText(replacement: string, start: number, end: number, selectionMode?: SelectionMode): void;\n    /**\n     * Sets the start and end positions of a selection in a text field.\n     * @param start The offset into the text field for the start of the selection.\n     * @param end The offset into the text field for the end of the selection.\n     * @param direction The direction in which the selection is performed.\n     */\n    setSelectionRange(start: number | null, end: number | null, direction?: "forward" | "backward" | "none"): void;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTextAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTextAreaElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTextAreaElement: {\n    prototype: HTMLTextAreaElement;\n    new(): HTMLTextAreaElement;\n};\n\n/** Provides special properties (beyond the regular HTMLElement interface it also has available to it by inheritance) for manipulating <time> elements. */\ninterface HTMLTimeElement extends HTMLElement {\n    dateTime: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTimeElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTimeElement: {\n    prototype: HTMLTimeElement;\n    new(): HTMLTimeElement;\n};\n\n/** Contains the title for a document. This element inherits all of the properties and methods of the HTMLElement interface. */\ninterface HTMLTitleElement extends HTMLElement {\n    /** Retrieves or sets the text of the object as a string. */\n    text: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTitleElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTitleElement: {\n    prototype: HTMLTitleElement;\n    new(): HTMLTitleElement;\n};\n\n/** The HTMLTrackElement */\ninterface HTMLTrackElement extends HTMLElement {\n    default: boolean;\n    kind: string;\n    label: string;\n    readonly readyState: number;\n    src: string;\n    srclang: string;\n    /** Returns the TextTrack object corresponding to the text track of the track element. */\n    readonly track: TextTrack;\n    readonly ERROR: number;\n    readonly LOADED: number;\n    readonly LOADING: number;\n    readonly NONE: number;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLTrackElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLTrackElement: {\n    prototype: HTMLTrackElement;\n    new(): HTMLTrackElement;\n    readonly ERROR: number;\n    readonly LOADED: number;\n    readonly LOADING: number;\n    readonly NONE: number;\n};\n\n/** Provides special properties (beyond those defined on the regular HTMLElement interface it also has available to it by inheritance) for manipulating unordered list elements. */\ninterface HTMLUListElement extends HTMLElement {\n    /** @deprecated */\n    compact: boolean;\n    /** @deprecated */\n    type: string;\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUListElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLUListElement: {\n    prototype: HTMLUListElement;\n    new(): HTMLUListElement;\n};\n\n/** An invalid HTML element and derives from the HTMLElement interface, but without implementing any additional properties or methods. */\ninterface HTMLUnknownElement extends HTMLElement {\n    addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLUnknownElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLUnknownElement: {\n    prototype: HTMLUnknownElement;\n    new(): HTMLUnknownElement;\n};\n\ninterface HTMLVideoElementEventMap extends HTMLMediaElementEventMap {\n    "enterpictureinpicture": Event;\n    "leavepictureinpicture": Event;\n}\n\n/** Provides special properties and methods for manipulating video objects. It also inherits properties and methods of HTMLMediaElement and HTMLElement. */\ninterface HTMLVideoElement extends HTMLMediaElement {\n    disablePictureInPicture: boolean;\n    /** Gets or sets the height of the video element. */\n    height: number;\n    onenterpictureinpicture: ((this: HTMLVideoElement, ev: Event) => any) | null;\n    onleavepictureinpicture: ((this: HTMLVideoElement, ev: Event) => any) | null;\n    /** Gets or sets the playsinline of the video element. for example, On iPhone, video elements will now be allowed to play inline, and will not automatically enter fullscreen mode when playback begins. */\n    playsInline: boolean;\n    /** Gets or sets a URL of an image to display, for example, like a movie poster. This can be a still frame from the video, or another image if no video data is available. */\n    poster: string;\n    /** Gets the intrinsic height of a video in CSS pixels, or zero if the dimensions are not known. */\n    readonly videoHeight: number;\n    /** Gets the intrinsic width of a video in CSS pixels, or zero if the dimensions are not known. */\n    readonly videoWidth: number;\n    /** Gets or sets the width of the video element. */\n    width: number;\n    getVideoPlaybackQuality(): VideoPlaybackQuality;\n    requestPictureInPicture(): Promise<PictureInPictureWindow>;\n    addEventListener<K extends keyof HTMLVideoElementEventMap>(type: K, listener: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof HTMLVideoElementEventMap>(type: K, listener: (this: HTMLVideoElement, ev: HTMLVideoElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var HTMLVideoElement: {\n    prototype: HTMLVideoElement;\n    new(): HTMLVideoElement;\n};\n\n/** Events that fire when the fragment identifier of the URL has changed. */\ninterface HashChangeEvent extends Event {\n    /** Returns the URL of the session history entry that is now current. */\n    readonly newURL: string;\n    /** Returns the URL of the session history entry that was previously current. */\n    readonly oldURL: string;\n}\n\ndeclare var HashChangeEvent: {\n    prototype: HashChangeEvent;\n    new(type: string, eventInitDict?: HashChangeEventInit): HashChangeEvent;\n};\n\n/** This Fetch API interface allows you to perform various actions on HTTP request and response headers. These actions include retrieving, setting, adding to, and removing. A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.  You can add to this using methods like append() (see Examples.) In all methods of this interface, header names are matched by case-insensitive byte sequence. */\ninterface Headers {\n    append(name: string, value: string): void;\n    delete(name: string): void;\n    get(name: string): string | null;\n    has(name: string): boolean;\n    set(name: string, value: string): void;\n    forEach(callbackfn: (value: string, key: string, parent: Headers) => void, thisArg?: any): void;\n}\n\ndeclare var Headers: {\n    prototype: Headers;\n    new(init?: HeadersInit): Headers;\n};\n\n/** Allows manipulation of the browser session history, that is the pages visited in the tab or frame that the current page is loaded in. */\ninterface History {\n    readonly length: number;\n    scrollRestoration: ScrollRestoration;\n    readonly state: any;\n    back(): void;\n    forward(): void;\n    go(delta?: number): void;\n    pushState(data: any, unused: string, url?: string | URL | null): void;\n    replaceState(data: any, unused: string, url?: string | URL | null): void;\n}\n\ndeclare var History: {\n    prototype: History;\n    new(): History;\n};\n\n/** This IndexedDB API interface represents a cursor for traversing or iterating over multiple records in a database. */\ninterface IDBCursor {\n    /** Returns the direction ("next", "nextunique", "prev" or "prevunique") of the cursor. */\n    readonly direction: IDBCursorDirection;\n    /** Returns the key of the cursor. Throws a "InvalidStateError" DOMException if the cursor is advancing or is finished. */\n    readonly key: IDBValidKey;\n    /** Returns the effective key of the cursor. Throws a "InvalidStateError" DOMException if the cursor is advancing or is finished. */\n    readonly primaryKey: IDBValidKey;\n    readonly request: IDBRequest;\n    /** Returns the IDBObjectStore or IDBIndex the cursor was opened from. */\n    readonly source: IDBObjectStore | IDBIndex;\n    /** Advances the cursor through the next count records in range. */\n    advance(count: number): void;\n    /** Advances the cursor to the next record in range. */\n    continue(key?: IDBValidKey): void;\n    /** Advances the cursor to the next record in range matching or after key and primaryKey. Throws an "InvalidAccessError" DOMException if the source is not an index. */\n    continuePrimaryKey(key: IDBValidKey, primaryKey: IDBValidKey): void;\n    /**\n     * Delete the record pointed at by the cursor with a new value.\n     *\n     * If successful, request\'s result will be undefined.\n     */\n    delete(): IDBRequest<undefined>;\n    /**\n     * Updated the record pointed at by the cursor with a new value.\n     *\n     * Throws a "DataError" DOMException if the effective object store uses in-line keys and the key would have changed.\n     *\n     * If successful, request\'s result will be the record\'s key.\n     */\n    update(value: any): IDBRequest<IDBValidKey>;\n}\n\ndeclare var IDBCursor: {\n    prototype: IDBCursor;\n    new(): IDBCursor;\n};\n\n/** This IndexedDB API interface represents a cursor for traversing or iterating over multiple records in a database. It is the same as the IDBCursor, except that it includes the value property. */\ninterface IDBCursorWithValue extends IDBCursor {\n    /** Returns the cursor\'s current value. */\n    readonly value: any;\n}\n\ndeclare var IDBCursorWithValue: {\n    prototype: IDBCursorWithValue;\n    new(): IDBCursorWithValue;\n};\n\ninterface IDBDatabaseEventMap {\n    "abort": Event;\n    "close": Event;\n    "error": Event;\n    "versionchange": IDBVersionChangeEvent;\n}\n\n/** This IndexedDB API interface provides a connection to a database; you can use an IDBDatabase object to open a transaction on your database then create, manipulate, and delete objects (data) in that database. The interface provides the only way to get and manage versions of the database. */\ninterface IDBDatabase extends EventTarget {\n    /** Returns the name of the database. */\n    readonly name: string;\n    /** Returns a list of the names of object stores in the database. */\n    readonly objectStoreNames: DOMStringList;\n    onabort: ((this: IDBDatabase, ev: Event) => any) | null;\n    onclose: ((this: IDBDatabase, ev: Event) => any) | null;\n    onerror: ((this: IDBDatabase, ev: Event) => any) | null;\n    onversionchange: ((this: IDBDatabase, ev: IDBVersionChangeEvent) => any) | null;\n    /** Returns the version of the database. */\n    readonly version: number;\n    /** Closes the connection once all running transactions have finished. */\n    close(): void;\n    /**\n     * Creates a new object store with the given name and options and returns a new IDBObjectStore.\n     *\n     * Throws a "InvalidStateError" DOMException if not called within an upgrade transaction.\n     */\n    createObjectStore(name: string, options?: IDBObjectStoreParameters): IDBObjectStore;\n    /**\n     * Deletes the object store with the given name.\n     *\n     * Throws a "InvalidStateError" DOMException if not called within an upgrade transaction.\n     */\n    deleteObjectStore(name: string): void;\n    /** Returns a new transaction with the given mode ("readonly" or "readwrite") and scope which can be a single object store name or an array of names. */\n    transaction(storeNames: string | string[], mode?: IDBTransactionMode): IDBTransaction;\n    addEventListener<K extends keyof IDBDatabaseEventMap>(type: K, listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof IDBDatabaseEventMap>(type: K, listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var IDBDatabase: {\n    prototype: IDBDatabase;\n    new(): IDBDatabase;\n};\n\n/** In the following code snippet, we make a request to open a database, and include handlers for the success and error cases. For a full working example, see our To-do Notifications app (view example live.) */\ninterface IDBFactory {\n    /**\n     * Compares two values as keys. Returns -1 if key1 precedes key2, 1 if key2 precedes key1, and 0 if the keys are equal.\n     *\n     * Throws a "DataError" DOMException if either input is not a valid key.\n     */\n    cmp(first: any, second: any): number;\n    databases(): Promise<IDBDatabaseInfo[]>;\n    /** Attempts to delete the named database. If the database already exists and there are open connections that don\'t close in response to a versionchange event, the request will be blocked until all they close. If the request is successful request\'s result will be null. */\n    deleteDatabase(name: string): IDBOpenDBRequest;\n    /** Attempts to open a connection to the named database with the current version, or 1 if it does not already exist. If the request is successful request\'s result will be the connection. */\n    open(name: string, version?: number): IDBOpenDBRequest;\n}\n\ndeclare var IDBFactory: {\n    prototype: IDBFactory;\n    new(): IDBFactory;\n};\n\n/** IDBIndex interface of the IndexedDB API provides asynchronous access to an index in a database. An index is a kind of object store for looking up records in another object store, called the referenced object store. You use this interface to retrieve data. */\ninterface IDBIndex {\n    readonly keyPath: string | string[];\n    readonly multiEntry: boolean;\n    /** Returns the name of the index. */\n    name: string;\n    /** Returns the IDBObjectStore the index belongs to. */\n    readonly objectStore: IDBObjectStore;\n    readonly unique: boolean;\n    /**\n     * Retrieves the number of records matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the count.\n     */\n    count(query?: IDBValidKey | IDBKeyRange): IDBRequest<number>;\n    /**\n     * Retrieves the value of the first record matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the value, or undefined if there was no matching record.\n     */\n    get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;\n    /**\n     * Retrieves the values of the records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request\'s result will be an Array of the values.\n     */\n    getAll(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<any[]>;\n    /**\n     * Retrieves the keys of records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request\'s result will be an Array of the keys.\n     */\n    getAllKeys(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<IDBValidKey[]>;\n    /**\n     * Retrieves the key of the first record matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the key, or undefined if there was no matching record.\n     */\n    getKey(query: IDBValidKey | IDBKeyRange): IDBRequest<IDBValidKey | undefined>;\n    /**\n     * Opens a cursor over the records matching query, ordered by direction. If query is null, all records in index are matched.\n     *\n     * If successful, request\'s result will be an IDBCursorWithValue, or null if there were no matching records.\n     */\n    openCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursorWithValue | null>;\n    /**\n     * Opens a cursor with key only flag set over the records matching query, ordered by direction. If query is null, all records in index are matched.\n     *\n     * If successful, request\'s result will be an IDBCursor, or null if there were no matching records.\n     */\n    openKeyCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursor | null>;\n}\n\ndeclare var IDBIndex: {\n    prototype: IDBIndex;\n    new(): IDBIndex;\n};\n\n/** A key range can be a single value or a range with upper and lower bounds or endpoints. If the key range has both upper and lower bounds, then it is bounded; if it has no bounds, it is unbounded. A bounded key range can either be open (the endpoints are excluded) or closed (the endpoints are included). To retrieve all keys within a certain range, you can use the following code constructs: */\ninterface IDBKeyRange {\n    /** Returns lower bound, or undefined if none. */\n    readonly lower: any;\n    /** Returns true if the lower open flag is set, and false otherwise. */\n    readonly lowerOpen: boolean;\n    /** Returns upper bound, or undefined if none. */\n    readonly upper: any;\n    /** Returns true if the upper open flag is set, and false otherwise. */\n    readonly upperOpen: boolean;\n    /** Returns true if key is included in the range, and false otherwise. */\n    includes(key: any): boolean;\n}\n\ndeclare var IDBKeyRange: {\n    prototype: IDBKeyRange;\n    new(): IDBKeyRange;\n    /** Returns a new IDBKeyRange spanning from lower to upper. If lowerOpen is true, lower is not included in the range. If upperOpen is true, upper is not included in the range. */\n    bound(lower: any, upper: any, lowerOpen?: boolean, upperOpen?: boolean): IDBKeyRange;\n    /** Returns a new IDBKeyRange starting at key with no upper bound. If open is true, key is not included in the range. */\n    lowerBound(lower: any, open?: boolean): IDBKeyRange;\n    /** Returns a new IDBKeyRange spanning only key. */\n    only(value: any): IDBKeyRange;\n    /** Returns a new IDBKeyRange with no lower bound and ending at key. If open is true, key is not included in the range. */\n    upperBound(upper: any, open?: boolean): IDBKeyRange;\n};\n\n/** This example shows a variety of different uses of object stores, from updating the data structure with IDBObjectStore.createIndex inside an onupgradeneeded function, to adding a new item to our object store with IDBObjectStore.add. For a full working example, see our To-do Notifications app (view example live.) */\ninterface IDBObjectStore {\n    /** Returns true if the store has a key generator, and false otherwise. */\n    readonly autoIncrement: boolean;\n    /** Returns a list of the names of indexes in the store. */\n    readonly indexNames: DOMStringList;\n    /** Returns the key path of the store, or null if none. */\n    readonly keyPath: string | string[];\n    /** Returns the name of the store. */\n    name: string;\n    /** Returns the associated transaction. */\n    readonly transaction: IDBTransaction;\n    /**\n     * Adds or updates a record in store with the given value and key.\n     *\n     * If the store uses in-line keys and key is specified a "DataError" DOMException will be thrown.\n     *\n     * If put() is used, any existing record with the key will be replaced. If add() is used, and if a record with the key already exists the request will fail, with request\'s error set to a "ConstraintError" DOMException.\n     *\n     * If successful, request\'s result will be the record\'s key.\n     */\n    add(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;\n    /**\n     * Deletes all records in store.\n     *\n     * If successful, request\'s result will be undefined.\n     */\n    clear(): IDBRequest<undefined>;\n    /**\n     * Retrieves the number of records matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the count.\n     */\n    count(query?: IDBValidKey | IDBKeyRange): IDBRequest<number>;\n    /**\n     * Creates a new index in store with the given name, keyPath and options and returns a new IDBIndex. If the keyPath and options define constraints that cannot be satisfied with the data already in store the upgrade transaction will abort with a "ConstraintError" DOMException.\n     *\n     * Throws an "InvalidStateError" DOMException if not called within an upgrade transaction.\n     */\n    createIndex(name: string, keyPath: string | string[], options?: IDBIndexParameters): IDBIndex;\n    /**\n     * Deletes records in store with the given key or in the given key range in query.\n     *\n     * If successful, request\'s result will be undefined.\n     */\n    delete(query: IDBValidKey | IDBKeyRange): IDBRequest<undefined>;\n    /**\n     * Deletes the index in store with the given name.\n     *\n     * Throws an "InvalidStateError" DOMException if not called within an upgrade transaction.\n     */\n    deleteIndex(name: string): void;\n    /**\n     * Retrieves the value of the first record matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the value, or undefined if there was no matching record.\n     */\n    get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;\n    /**\n     * Retrieves the values of the records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request\'s result will be an Array of the values.\n     */\n    getAll(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<any[]>;\n    /**\n     * Retrieves the keys of records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request\'s result will be an Array of the keys.\n     */\n    getAllKeys(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<IDBValidKey[]>;\n    /**\n     * Retrieves the key of the first record matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the key, or undefined if there was no matching record.\n     */\n    getKey(query: IDBValidKey | IDBKeyRange): IDBRequest<IDBValidKey | undefined>;\n    index(name: string): IDBIndex;\n    /**\n     * Opens a cursor over the records matching query, ordered by direction. If query is null, all records in store are matched.\n     *\n     * If successful, request\'s result will be an IDBCursorWithValue pointing at the first matching record, or null if there were no matching records.\n     */\n    openCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursorWithValue | null>;\n    /**\n     * Opens a cursor with key only flag set over the records matching query, ordered by direction. If query is null, all records in store are matched.\n     *\n     * If successful, request\'s result will be an IDBCursor pointing at the first matching record, or null if there were no matching records.\n     */\n    openKeyCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursor | null>;\n    /**\n     * Adds or updates a record in store with the given value and key.\n     *\n     * If the store uses in-line keys and key is specified a "DataError" DOMException will be thrown.\n     *\n     * If put() is used, any existing record with the key will be replaced. If add() is used, and if a record with the key already exists the request will fail, with request\'s error set to a "ConstraintError" DOMException.\n     *\n     * If successful, request\'s result will be the record\'s key.\n     */\n    put(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;\n}\n\ndeclare var IDBObjectStore: {\n    prototype: IDBObjectStore;\n    new(): IDBObjectStore;\n};\n\ninterface IDBOpenDBRequestEventMap extends IDBRequestEventMap {\n    "blocked": Event;\n    "upgradeneeded": IDBVersionChangeEvent;\n}\n\n/** Also inherits methods from its parents IDBRequest and EventTarget. */\ninterface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {\n    onblocked: ((this: IDBOpenDBRequest, ev: Event) => any) | null;\n    onupgradeneeded: ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any) | null;\n    addEventListener<K extends keyof IDBOpenDBRequestEventMap>(type: K, listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof IDBOpenDBRequestEventMap>(type: K, listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var IDBOpenDBRequest: {\n    prototype: IDBOpenDBRequest;\n    new(): IDBOpenDBRequest;\n};\n\ninterface IDBRequestEventMap {\n    "error": Event;\n    "success": Event;\n}\n\n/** The request object does not initially contain any information about the result of the operation, but once information becomes available, an event is fired on the request, and the information becomes available through the properties of the IDBRequest instance. */\ninterface IDBRequest<T = any> extends EventTarget {\n    /** When a request is completed, returns the error (a DOMException), or null if the request succeeded. Throws a "InvalidStateError" DOMException if the request is still pending. */\n    readonly error: DOMException | null;\n    onerror: ((this: IDBRequest<T>, ev: Event) => any) | null;\n    onsuccess: ((this: IDBRequest<T>, ev: Event) => any) | null;\n    /** Returns "pending" until a request is complete, then returns "done". */\n    readonly readyState: IDBRequestReadyState;\n    /** When a request is completed, returns the result, or undefined if the request failed. Throws a "InvalidStateError" DOMException if the request is still pending. */\n    readonly result: T;\n    /** Returns the IDBObjectStore, IDBIndex, or IDBCursor the request was made against, or null if is was an open request. */\n    readonly source: IDBObjectStore | IDBIndex | IDBCursor;\n    /** Returns the IDBTransaction the request was made within. If this as an open request, then it returns an upgrade transaction while it is running, or null otherwise. */\n    readonly transaction: IDBTransaction | null;\n    addEventListener<K extends keyof IDBRequestEventMap>(type: K, listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof IDBRequestEventMap>(type: K, listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var IDBRequest: {\n    prototype: IDBRequest;\n    new(): IDBRequest;\n};\n\ninterface IDBTransactionEventMap {\n    "abort": Event;\n    "complete": Event;\n    "error": Event;\n}\n\ninterface IDBTransaction extends EventTarget {\n    /** Returns the transaction\'s connection. */\n    readonly db: IDBDatabase;\n    readonly durability: IDBTransactionDurability;\n    /** If the transaction was aborted, returns the error (a DOMException) providing the reason. */\n    readonly error: DOMException | null;\n    /** Returns the mode the transaction was created with ("readonly" or "readwrite"), or "versionchange" for an upgrade transaction. */\n    readonly mode: IDBTransactionMode;\n    /** Returns a list of the names of object stores in the transaction\'s scope. For an upgrade transaction this is all object stores in the database. */\n    readonly objectStoreNames: DOMStringList;\n    onabort: ((this: IDBTransaction, ev: Event) => any) | null;\n    oncomplete: ((this: IDBTransaction, ev: Event) => any) | null;\n    onerror: ((this: IDBTransaction, ev: Event) => any) | null;\n    /** Aborts the transaction. All pending requests will fail with a "AbortError" DOMException and all changes made to the database will be reverted. */\n    abort(): void;\n    commit(): void;\n    /** Returns an IDBObjectStore in the transaction\'s scope. */\n    objectStore(name: string): IDBObjectStore;\n    addEventListener<K extends keyof IDBTransactionEventMap>(type: K, listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof IDBTransactionEventMap>(type: K, listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var IDBTransaction: {\n    prototype: IDBTransaction;\n    new(): IDBTransaction;\n};\n\n/** This IndexedDB API interface indicates that the version of the database has changed, as the result of an IDBOpenDBRequest.onupgradeneeded event handler function. */\ninterface IDBVersionChangeEvent extends Event {\n    readonly newVersion: number | null;\n    readonly oldVersion: number;\n}\n\ndeclare var IDBVersionChangeEvent: {\n    prototype: IDBVersionChangeEvent;\n    new(type: string, eventInitDict?: IDBVersionChangeEventInit): IDBVersionChangeEvent;\n};\n\n/** The IIRFilterNode interface of the Web Audio API is a AudioNode processor which implements a general infinite impulse response (IIR)  filter; this type of filter can be used to implement tone control devices and graphic equalizers as well. It lets the parameters of the filter response be specified, so that it can be tuned as needed. */\ninterface IIRFilterNode extends AudioNode {\n    getFrequencyResponse(frequencyHz: Float32Array, magResponse: Float32Array, phaseResponse: Float32Array): void;\n}\n\ndeclare var IIRFilterNode: {\n    prototype: IIRFilterNode;\n    new(context: BaseAudioContext, options: IIRFilterOptions): IIRFilterNode;\n};\n\ninterface IdleDeadline {\n    readonly didTimeout: boolean;\n    timeRemaining(): DOMHighResTimeStamp;\n}\n\ndeclare var IdleDeadline: {\n    prototype: IdleDeadline;\n    new(): IdleDeadline;\n};\n\ninterface ImageBitmap {\n    /** Returns the intrinsic height of the image, in CSS pixels. */\n    readonly height: number;\n    /** Returns the intrinsic width of the image, in CSS pixels. */\n    readonly width: number;\n    /** Releases imageBitmap\'s underlying bitmap data. */\n    close(): void;\n}\n\ndeclare var ImageBitmap: {\n    prototype: ImageBitmap;\n    new(): ImageBitmap;\n};\n\ninterface ImageBitmapRenderingContext {\n    /** Returns the canvas element that the context is bound to. */\n    readonly canvas: HTMLCanvasElement;\n    /** Transfers the underlying bitmap data from imageBitmap to context, and the bitmap becomes the contents of the canvas element to which context is bound. */\n    transferFromImageBitmap(bitmap: ImageBitmap | null): void;\n}\n\ndeclare var ImageBitmapRenderingContext: {\n    prototype: ImageBitmapRenderingContext;\n    new(): ImageBitmapRenderingContext;\n};\n\n/** The underlying pixel data of an area of a <canvas> element. It is created using the ImageData() constructor or creator methods on the CanvasRenderingContext2D object associated with a canvas: createImageData() and getImageData(). It can also be used to set a part of the canvas by using putImageData(). */\ninterface ImageData {\n    /** Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255. */\n    readonly data: Uint8ClampedArray;\n    /** Returns the actual dimensions of the data in the ImageData object, in pixels. */\n    readonly height: number;\n    /** Returns the actual dimensions of the data in the ImageData object, in pixels. */\n    readonly width: number;\n}\n\ndeclare var ImageData: {\n    prototype: ImageData;\n    new(sw: number, sh: number, settings?: ImageDataSettings): ImageData;\n    new(data: Uint8ClampedArray, sw: number, sh?: number, settings?: ImageDataSettings): ImageData;\n};\n\ninterface InnerHTML {\n    innerHTML: string;\n}\n\ninterface InputDeviceInfo extends MediaDeviceInfo {\n}\n\ndeclare var InputDeviceInfo: {\n    prototype: InputDeviceInfo;\n    new(): InputDeviceInfo;\n};\n\ninterface InputEvent extends UIEvent {\n    readonly data: string | null;\n    readonly dataTransfer: DataTransfer | null;\n    readonly inputType: string;\n    readonly isComposing: boolean;\n    getTargetRanges(): StaticRange[];\n}\n\ndeclare var InputEvent: {\n    prototype: InputEvent;\n    new(type: string, eventInitDict?: InputEventInit): InputEvent;\n};\n\n/** provides a way to asynchronously observe changes in the intersection of a target element with an ancestor element or with a top-level document\'s viewport. */\ninterface IntersectionObserver {\n    readonly root: Element | Document | null;\n    readonly rootMargin: string;\n    readonly thresholds: ReadonlyArray<number>;\n    disconnect(): void;\n    observe(target: Element): void;\n    takeRecords(): IntersectionObserverEntry[];\n    unobserve(target: Element): void;\n}\n\ndeclare var IntersectionObserver: {\n    prototype: IntersectionObserver;\n    new(callback: IntersectionObserverCallback, options?: IntersectionObserverInit): IntersectionObserver;\n};\n\n/** This Intersection Observer API interface describes the intersection between the target element and its root container at a specific moment of transition. */\ninterface IntersectionObserverEntry {\n    readonly boundingClientRect: DOMRectReadOnly;\n    readonly intersectionRatio: number;\n    readonly intersectionRect: DOMRectReadOnly;\n    readonly isIntersecting: boolean;\n    readonly rootBounds: DOMRectReadOnly | null;\n    readonly target: Element;\n    readonly time: DOMHighResTimeStamp;\n}\n\ndeclare var IntersectionObserverEntry: {\n    prototype: IntersectionObserverEntry;\n    new(intersectionObserverEntryInit: IntersectionObserverEntryInit): IntersectionObserverEntry;\n};\n\ninterface KHR_parallel_shader_compile {\n    readonly COMPLETION_STATUS_KHR: GLenum;\n}\n\n/** KeyboardEvent objects describe a user interaction with the keyboard; each event describes a single interaction between the user and a key (or combination of a key with modifier keys) on the keyboard. */\ninterface KeyboardEvent extends UIEvent {\n    readonly altKey: boolean;\n    /** @deprecated */\n    readonly charCode: number;\n    readonly code: string;\n    readonly ctrlKey: boolean;\n    readonly isComposing: boolean;\n    readonly key: string;\n    /** @deprecated */\n    readonly keyCode: number;\n    readonly location: number;\n    readonly metaKey: boolean;\n    readonly repeat: boolean;\n    readonly shiftKey: boolean;\n    getModifierState(keyArg: string): boolean;\n    /** @deprecated */\n    initKeyboardEvent(typeArg: string, bubblesArg?: boolean, cancelableArg?: boolean, viewArg?: Window | null, keyArg?: string, locationArg?: number, ctrlKey?: boolean, altKey?: boolean, shiftKey?: boolean, metaKey?: boolean): void;\n    readonly DOM_KEY_LOCATION_LEFT: number;\n    readonly DOM_KEY_LOCATION_NUMPAD: number;\n    readonly DOM_KEY_LOCATION_RIGHT: number;\n    readonly DOM_KEY_LOCATION_STANDARD: number;\n}\n\ndeclare var KeyboardEvent: {\n    prototype: KeyboardEvent;\n    new(type: string, eventInitDict?: KeyboardEventInit): KeyboardEvent;\n    readonly DOM_KEY_LOCATION_LEFT: number;\n    readonly DOM_KEY_LOCATION_NUMPAD: number;\n    readonly DOM_KEY_LOCATION_RIGHT: number;\n    readonly DOM_KEY_LOCATION_STANDARD: number;\n};\n\ninterface KeyframeEffect extends AnimationEffect {\n    composite: CompositeOperation;\n    iterationComposite: IterationCompositeOperation;\n    pseudoElement: string | null;\n    target: Element | null;\n    getKeyframes(): ComputedKeyframe[];\n    setKeyframes(keyframes: Keyframe[] | PropertyIndexedKeyframes | null): void;\n}\n\ndeclare var KeyframeEffect: {\n    prototype: KeyframeEffect;\n    new(target: Element | null, keyframes: Keyframe[] | PropertyIndexedKeyframes | null, options?: number | KeyframeEffectOptions): KeyframeEffect;\n    new(source: KeyframeEffect): KeyframeEffect;\n};\n\ninterface LinkStyle {\n    readonly sheet: CSSStyleSheet | null;\n}\n\n/** The location (URL) of the object it is linked to. Changes done on it are reflected on the object it relates to. Both the Document and Window interface have such a linked Location, accessible via Document.location and Window.location respectively. */\ninterface Location {\n    /** Returns a DOMStringList object listing the origins of the ancestor browsing contexts, from the parent browsing context to the top-level browsing context. */\n    readonly ancestorOrigins: DOMStringList;\n    /**\n     * Returns the Location object\'s URL\'s fragment (includes leading "#" if non-empty).\n     *\n     * Can be set, to navigate to the same URL with a changed fragment (ignores leading "#").\n     */\n    hash: string;\n    /**\n     * Returns the Location object\'s URL\'s host and port (if different from the default port for the scheme).\n     *\n     * Can be set, to navigate to the same URL with a changed host and port.\n     */\n    host: string;\n    /**\n     * Returns the Location object\'s URL\'s host.\n     *\n     * Can be set, to navigate to the same URL with a changed host.\n     */\n    hostname: string;\n    /**\n     * Returns the Location object\'s URL.\n     *\n     * Can be set, to navigate to the given URL.\n     */\n    href: string;\n    toString(): string;\n    /** Returns the Location object\'s URL\'s origin. */\n    readonly origin: string;\n    /**\n     * Returns the Location object\'s URL\'s path.\n     *\n     * Can be set, to navigate to the same URL with a changed path.\n     */\n    pathname: string;\n    /**\n     * Returns the Location object\'s URL\'s port.\n     *\n     * Can be set, to navigate to the same URL with a changed port.\n     */\n    port: string;\n    /**\n     * Returns the Location object\'s URL\'s scheme.\n     *\n     * Can be set, to navigate to the same URL with a changed scheme.\n     */\n    protocol: string;\n    /**\n     * Returns the Location object\'s URL\'s query (includes leading "?" if non-empty).\n     *\n     * Can be set, to navigate to the same URL with a changed query (ignores leading "?").\n     */\n    search: string;\n    /** Navigates to the given URL. */\n    assign(url: string | URL): void;\n    /** Reloads the current page. */\n    reload(): void;\n    /** Removes the current page from the session history and navigates to the given URL. */\n    replace(url: string | URL): void;\n}\n\ndeclare var Location: {\n    prototype: Location;\n    new(): Location;\n};\n\n/** Available only in secure contexts. */\ninterface Lock {\n    readonly mode: LockMode;\n    readonly name: string;\n}\n\ndeclare var Lock: {\n    prototype: Lock;\n    new(): Lock;\n};\n\n/** Available only in secure contexts. */\ninterface LockManager {\n    query(): Promise<LockManagerSnapshot>;\n    request(name: string, callback: LockGrantedCallback): Promise<any>;\n    request(name: string, options: LockOptions, callback: LockGrantedCallback): Promise<any>;\n}\n\ndeclare var LockManager: {\n    prototype: LockManager;\n    new(): LockManager;\n};\n\ninterface MathMLElementEventMap extends ElementEventMap, DocumentAndElementEventHandlersEventMap, GlobalEventHandlersEventMap {\n}\n\ninterface MathMLElement extends Element, DocumentAndElementEventHandlers, ElementCSSInlineStyle, GlobalEventHandlers, HTMLOrSVGElement {\n    addEventListener<K extends keyof MathMLElementEventMap>(type: K, listener: (this: MathMLElement, ev: MathMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MathMLElementEventMap>(type: K, listener: (this: MathMLElement, ev: MathMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MathMLElement: {\n    prototype: MathMLElement;\n    new(): MathMLElement;\n};\n\ninterface MediaCapabilities {\n    decodingInfo(configuration: MediaDecodingConfiguration): Promise<MediaCapabilitiesDecodingInfo>;\n    encodingInfo(configuration: MediaEncodingConfiguration): Promise<MediaCapabilitiesEncodingInfo>;\n}\n\ndeclare var MediaCapabilities: {\n    prototype: MediaCapabilities;\n    new(): MediaCapabilities;\n};\n\n/**\n * The MediaDevicesInfo interface contains information that describes a single media input or output device.\n * Available only in secure contexts.\n */\ninterface MediaDeviceInfo {\n    readonly deviceId: string;\n    readonly groupId: string;\n    readonly kind: MediaDeviceKind;\n    readonly label: string;\n    toJSON(): any;\n}\n\ndeclare var MediaDeviceInfo: {\n    prototype: MediaDeviceInfo;\n    new(): MediaDeviceInfo;\n};\n\ninterface MediaDevicesEventMap {\n    "devicechange": Event;\n}\n\n/**\n * Provides access to connected media input devices like cameras and microphones, as well as screen sharing. In essence, it lets you obtain access to any hardware source of media data.\n * Available only in secure contexts.\n */\ninterface MediaDevices extends EventTarget {\n    ondevicechange: ((this: MediaDevices, ev: Event) => any) | null;\n    enumerateDevices(): Promise<MediaDeviceInfo[]>;\n    getDisplayMedia(constraints?: DisplayMediaStreamConstraints): Promise<MediaStream>;\n    getSupportedConstraints(): MediaTrackSupportedConstraints;\n    getUserMedia(constraints?: MediaStreamConstraints): Promise<MediaStream>;\n    addEventListener<K extends keyof MediaDevicesEventMap>(type: K, listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MediaDevicesEventMap>(type: K, listener: (this: MediaDevices, ev: MediaDevicesEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MediaDevices: {\n    prototype: MediaDevices;\n    new(): MediaDevices;\n};\n\n/** A MediaElementSourceNode has no inputs and exactly one output, and is created using the AudioContext.createMediaElementSource method. The amount of channels in the output equals the number of channels of the audio referenced by the HTMLMediaElement used in the creation of the node, or is 1 if the HTMLMediaElement has no audio. */\ninterface MediaElementAudioSourceNode extends AudioNode {\n    readonly mediaElement: HTMLMediaElement;\n}\n\ndeclare var MediaElementAudioSourceNode: {\n    prototype: MediaElementAudioSourceNode;\n    new(context: AudioContext, options: MediaElementAudioSourceOptions): MediaElementAudioSourceNode;\n};\n\ninterface MediaEncryptedEvent extends Event {\n    readonly initData: ArrayBuffer | null;\n    readonly initDataType: string;\n}\n\ndeclare var MediaEncryptedEvent: {\n    prototype: MediaEncryptedEvent;\n    new(type: string, eventInitDict?: MediaEncryptedEventInit): MediaEncryptedEvent;\n};\n\n/** An error which occurred while handling media in an HTML media element based on HTMLMediaElement, such as <audio> or <video>. */\ninterface MediaError {\n    readonly code: number;\n    readonly message: string;\n    readonly MEDIA_ERR_ABORTED: number;\n    readonly MEDIA_ERR_DECODE: number;\n    readonly MEDIA_ERR_NETWORK: number;\n    readonly MEDIA_ERR_SRC_NOT_SUPPORTED: number;\n}\n\ndeclare var MediaError: {\n    prototype: MediaError;\n    new(): MediaError;\n    readonly MEDIA_ERR_ABORTED: number;\n    readonly MEDIA_ERR_DECODE: number;\n    readonly MEDIA_ERR_NETWORK: number;\n    readonly MEDIA_ERR_SRC_NOT_SUPPORTED: number;\n};\n\n/**\n * This EncryptedMediaExtensions API interface contains the content and related data when the content decryption module generates a message for the session.\n * Available only in secure contexts.\n */\ninterface MediaKeyMessageEvent extends Event {\n    readonly message: ArrayBuffer;\n    readonly messageType: MediaKeyMessageType;\n}\n\ndeclare var MediaKeyMessageEvent: {\n    prototype: MediaKeyMessageEvent;\n    new(type: string, eventInitDict: MediaKeyMessageEventInit): MediaKeyMessageEvent;\n};\n\ninterface MediaKeySessionEventMap {\n    "keystatuseschange": Event;\n    "message": MediaKeyMessageEvent;\n}\n\n/**\n * This EncryptedMediaExtensions API interface represents a context for message exchange with a content decryption module (CDM).\n * Available only in secure contexts.\n */\ninterface MediaKeySession extends EventTarget {\n    readonly closed: Promise<MediaKeySessionClosedReason>;\n    readonly expiration: number;\n    readonly keyStatuses: MediaKeyStatusMap;\n    onkeystatuseschange: ((this: MediaKeySession, ev: Event) => any) | null;\n    onmessage: ((this: MediaKeySession, ev: MediaKeyMessageEvent) => any) | null;\n    readonly sessionId: string;\n    close(): Promise<void>;\n    generateRequest(initDataType: string, initData: BufferSource): Promise<void>;\n    load(sessionId: string): Promise<boolean>;\n    remove(): Promise<void>;\n    update(response: BufferSource): Promise<void>;\n    addEventListener<K extends keyof MediaKeySessionEventMap>(type: K, listener: (this: MediaKeySession, ev: MediaKeySessionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MediaKeySessionEventMap>(type: K, listener: (this: MediaKeySession, ev: MediaKeySessionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MediaKeySession: {\n    prototype: MediaKeySession;\n    new(): MediaKeySession;\n};\n\n/**\n * This EncryptedMediaExtensions API interface is a read-only map of media key statuses by key IDs.\n * Available only in secure contexts.\n */\ninterface MediaKeyStatusMap {\n    readonly size: number;\n    get(keyId: BufferSource): MediaKeyStatus | undefined;\n    has(keyId: BufferSource): boolean;\n    forEach(callbackfn: (value: MediaKeyStatus, key: BufferSource, parent: MediaKeyStatusMap) => void, thisArg?: any): void;\n}\n\ndeclare var MediaKeyStatusMap: {\n    prototype: MediaKeyStatusMap;\n    new(): MediaKeyStatusMap;\n};\n\n/**\n * This EncryptedMediaExtensions API interface provides access to a Key System for decryption and/or a content protection provider. You can request an instance of this object using the Navigator.requestMediaKeySystemAccess method.\n * Available only in secure contexts.\n */\ninterface MediaKeySystemAccess {\n    readonly keySystem: string;\n    createMediaKeys(): Promise<MediaKeys>;\n    getConfiguration(): MediaKeySystemConfiguration;\n}\n\ndeclare var MediaKeySystemAccess: {\n    prototype: MediaKeySystemAccess;\n    new(): MediaKeySystemAccess;\n};\n\n/**\n * This EncryptedMediaExtensions API interface the represents a set of keys that an associated HTMLMediaElement can use for decryption of media data during playback.\n * Available only in secure contexts.\n */\ninterface MediaKeys {\n    createSession(sessionType?: MediaKeySessionType): MediaKeySession;\n    setServerCertificate(serverCertificate: BufferSource): Promise<boolean>;\n}\n\ndeclare var MediaKeys: {\n    prototype: MediaKeys;\n    new(): MediaKeys;\n};\n\ninterface MediaList {\n    readonly length: number;\n    mediaText: string;\n    toString(): string;\n    appendMedium(medium: string): void;\n    deleteMedium(medium: string): void;\n    item(index: number): string | null;\n    [index: number]: string;\n}\n\ndeclare var MediaList: {\n    prototype: MediaList;\n    new(): MediaList;\n};\n\ninterface MediaMetadata {\n    album: string;\n    artist: string;\n    artwork: ReadonlyArray<MediaImage>;\n    title: string;\n}\n\ndeclare var MediaMetadata: {\n    prototype: MediaMetadata;\n    new(init?: MediaMetadataInit): MediaMetadata;\n};\n\ninterface MediaQueryListEventMap {\n    "change": MediaQueryListEvent;\n}\n\n/** Stores information on a media query applied to a document, and handles sending notifications to listeners when the media query state change (i.e. when the media query test starts or stops evaluating to true). */\ninterface MediaQueryList extends EventTarget {\n    readonly matches: boolean;\n    readonly media: string;\n    onchange: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null;\n    /** @deprecated */\n    addListener(callback: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null): void;\n    /** @deprecated */\n    removeListener(callback: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | null): void;\n    addEventListener<K extends keyof MediaQueryListEventMap>(type: K, listener: (this: MediaQueryList, ev: MediaQueryListEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MediaQueryListEventMap>(type: K, listener: (this: MediaQueryList, ev: MediaQueryListEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MediaQueryList: {\n    prototype: MediaQueryList;\n    new(): MediaQueryList;\n};\n\ninterface MediaQueryListEvent extends Event {\n    readonly matches: boolean;\n    readonly media: string;\n}\n\ndeclare var MediaQueryListEvent: {\n    prototype: MediaQueryListEvent;\n    new(type: string, eventInitDict?: MediaQueryListEventInit): MediaQueryListEvent;\n};\n\ninterface MediaRecorderEventMap {\n    "dataavailable": BlobEvent;\n    "error": MediaRecorderErrorEvent;\n    "pause": Event;\n    "resume": Event;\n    "start": Event;\n    "stop": Event;\n}\n\ninterface MediaRecorder extends EventTarget {\n    readonly audioBitsPerSecond: number;\n    readonly mimeType: string;\n    ondataavailable: ((this: MediaRecorder, ev: BlobEvent) => any) | null;\n    onerror: ((this: MediaRecorder, ev: MediaRecorderErrorEvent) => any) | null;\n    onpause: ((this: MediaRecorder, ev: Event) => any) | null;\n    onresume: ((this: MediaRecorder, ev: Event) => any) | null;\n    onstart: ((this: MediaRecorder, ev: Event) => any) | null;\n    onstop: ((this: MediaRecorder, ev: Event) => any) | null;\n    readonly state: RecordingState;\n    readonly stream: MediaStream;\n    readonly videoBitsPerSecond: number;\n    pause(): void;\n    requestData(): void;\n    resume(): void;\n    start(timeslice?: number): void;\n    stop(): void;\n    addEventListener<K extends keyof MediaRecorderEventMap>(type: K, listener: (this: MediaRecorder, ev: MediaRecorderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MediaRecorderEventMap>(type: K, listener: (this: MediaRecorder, ev: MediaRecorderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MediaRecorder: {\n    prototype: MediaRecorder;\n    new(stream: MediaStream, options?: MediaRecorderOptions): MediaRecorder;\n    isTypeSupported(type: string): boolean;\n};\n\ninterface MediaRecorderErrorEvent extends Event {\n    readonly error: DOMException;\n}\n\ndeclare var MediaRecorderErrorEvent: {\n    prototype: MediaRecorderErrorEvent;\n    new(type: string, eventInitDict: MediaRecorderErrorEventInit): MediaRecorderErrorEvent;\n};\n\ninterface MediaSession {\n    metadata: MediaMetadata | null;\n    playbackState: MediaSessionPlaybackState;\n    setActionHandler(action: MediaSessionAction, handler: MediaSessionActionHandler | null): void;\n    setPositionState(state?: MediaPositionState): void;\n}\n\ndeclare var MediaSession: {\n    prototype: MediaSession;\n    new(): MediaSession;\n};\n\ninterface MediaSourceEventMap {\n    "sourceclose": Event;\n    "sourceended": Event;\n    "sourceopen": Event;\n}\n\n/** This Media Source Extensions API interface represents a source of media data for an HTMLMediaElement object. A MediaSource object can be attached to a HTMLMediaElement to be played in the user agent. */\ninterface MediaSource extends EventTarget {\n    readonly activeSourceBuffers: SourceBufferList;\n    duration: number;\n    onsourceclose: ((this: MediaSource, ev: Event) => any) | null;\n    onsourceended: ((this: MediaSource, ev: Event) => any) | null;\n    onsourceopen: ((this: MediaSource, ev: Event) => any) | null;\n    readonly readyState: ReadyState;\n    readonly sourceBuffers: SourceBufferList;\n    addSourceBuffer(type: string): SourceBuffer;\n    clearLiveSeekableRange(): void;\n    endOfStream(error?: EndOfStreamError): void;\n    removeSourceBuffer(sourceBuffer: SourceBuffer): void;\n    setLiveSeekableRange(start: number, end: number): void;\n    addEventListener<K extends keyof MediaSourceEventMap>(type: K, listener: (this: MediaSource, ev: MediaSourceEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MediaSourceEventMap>(type: K, listener: (this: MediaSource, ev: MediaSourceEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MediaSource: {\n    prototype: MediaSource;\n    new(): MediaSource;\n    isTypeSupported(type: string): boolean;\n};\n\ninterface MediaStreamEventMap {\n    "addtrack": MediaStreamTrackEvent;\n    "removetrack": MediaStreamTrackEvent;\n}\n\n/** A stream of media content. A stream consists of several tracks such as video or audio tracks. Each track is specified as an instance of MediaStreamTrack. */\ninterface MediaStream extends EventTarget {\n    readonly active: boolean;\n    readonly id: string;\n    onaddtrack: ((this: MediaStream, ev: MediaStreamTrackEvent) => any) | null;\n    onremovetrack: ((this: MediaStream, ev: MediaStreamTrackEvent) => any) | null;\n    addTrack(track: MediaStreamTrack): void;\n    clone(): MediaStream;\n    getAudioTracks(): MediaStreamTrack[];\n    getTrackById(trackId: string): MediaStreamTrack | null;\n    getTracks(): MediaStreamTrack[];\n    getVideoTracks(): MediaStreamTrack[];\n    removeTrack(track: MediaStreamTrack): void;\n    addEventListener<K extends keyof MediaStreamEventMap>(type: K, listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MediaStreamEventMap>(type: K, listener: (this: MediaStream, ev: MediaStreamEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MediaStream: {\n    prototype: MediaStream;\n    new(): MediaStream;\n    new(stream: MediaStream): MediaStream;\n    new(tracks: MediaStreamTrack[]): MediaStream;\n};\n\ninterface MediaStreamAudioDestinationNode extends AudioNode {\n    readonly stream: MediaStream;\n}\n\ndeclare var MediaStreamAudioDestinationNode: {\n    prototype: MediaStreamAudioDestinationNode;\n    new(context: AudioContext, options?: AudioNodeOptions): MediaStreamAudioDestinationNode;\n};\n\n/** A type of AudioNode which operates as an audio source whose media is received from a MediaStream obtained using the WebRTC or Media Capture and Streams APIs. */\ninterface MediaStreamAudioSourceNode extends AudioNode {\n    readonly mediaStream: MediaStream;\n}\n\ndeclare var MediaStreamAudioSourceNode: {\n    prototype: MediaStreamAudioSourceNode;\n    new(context: AudioContext, options: MediaStreamAudioSourceOptions): MediaStreamAudioSourceNode;\n};\n\ninterface MediaStreamTrackEventMap {\n    "ended": Event;\n    "mute": Event;\n    "unmute": Event;\n}\n\n/** A single media track within a stream; typically, these are audio or video tracks, but other track types may exist as well. */\ninterface MediaStreamTrack extends EventTarget {\n    contentHint: string;\n    enabled: boolean;\n    readonly id: string;\n    readonly kind: string;\n    readonly label: string;\n    readonly muted: boolean;\n    onended: ((this: MediaStreamTrack, ev: Event) => any) | null;\n    onmute: ((this: MediaStreamTrack, ev: Event) => any) | null;\n    onunmute: ((this: MediaStreamTrack, ev: Event) => any) | null;\n    readonly readyState: MediaStreamTrackState;\n    applyConstraints(constraints?: MediaTrackConstraints): Promise<void>;\n    clone(): MediaStreamTrack;\n    getCapabilities(): MediaTrackCapabilities;\n    getConstraints(): MediaTrackConstraints;\n    getSettings(): MediaTrackSettings;\n    stop(): void;\n    addEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: MediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MediaStreamTrackEventMap>(type: K, listener: (this: MediaStreamTrack, ev: MediaStreamTrackEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MediaStreamTrack: {\n    prototype: MediaStreamTrack;\n    new(): MediaStreamTrack;\n};\n\n/** Events which indicate that a MediaStream has had tracks added to or removed from the stream through calls to Media Stream API methods. These events are sent to the stream when these changes occur. */\ninterface MediaStreamTrackEvent extends Event {\n    readonly track: MediaStreamTrack;\n}\n\ndeclare var MediaStreamTrackEvent: {\n    prototype: MediaStreamTrackEvent;\n    new(type: string, eventInitDict: MediaStreamTrackEventInit): MediaStreamTrackEvent;\n};\n\n/** This Channel Messaging API interface allows us to create a new message channel and send data through it via its two MessagePort properties. */\ninterface MessageChannel {\n    /** Returns the first MessagePort object. */\n    readonly port1: MessagePort;\n    /** Returns the second MessagePort object. */\n    readonly port2: MessagePort;\n}\n\ndeclare var MessageChannel: {\n    prototype: MessageChannel;\n    new(): MessageChannel;\n};\n\n/** A message received by a target object. */\ninterface MessageEvent<T = any> extends Event {\n    /** Returns the data of the message. */\n    readonly data: T;\n    /** Returns the last event ID string, for server-sent events. */\n    readonly lastEventId: string;\n    /** Returns the origin of the message, for server-sent events and cross-document messaging. */\n    readonly origin: string;\n    /** Returns the MessagePort array sent with the message, for cross-document messaging and channel messaging. */\n    readonly ports: ReadonlyArray<MessagePort>;\n    /** Returns the WindowProxy of the source window, for cross-document messaging, and the MessagePort being attached, in the connect event fired at SharedWorkerGlobalScope objects. */\n    readonly source: MessageEventSource | null;\n    /** @deprecated */\n    initMessageEvent(type: string, bubbles?: boolean, cancelable?: boolean, data?: any, origin?: string, lastEventId?: string, source?: MessageEventSource | null, ports?: MessagePort[]): void;\n}\n\ndeclare var MessageEvent: {\n    prototype: MessageEvent;\n    new<T>(type: string, eventInitDict?: MessageEventInit<T>): MessageEvent<T>;\n};\n\ninterface MessagePortEventMap {\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\n/** This Channel Messaging API interface represents one of the two ports of a MessageChannel, allowing messages to be sent from one port and listening out for them arriving at the other. */\ninterface MessagePort extends EventTarget {\n    onmessage: ((this: MessagePort, ev: MessageEvent) => any) | null;\n    onmessageerror: ((this: MessagePort, ev: MessageEvent) => any) | null;\n    /** Disconnects the port, so that it is no longer active. */\n    close(): void;\n    /**\n     * Posts a message through the channel. Objects listed in transfer are transferred, not just cloned, meaning that they are no longer usable on the sending side.\n     *\n     * Throws a "DataCloneError" DOMException if transfer contains duplicate objects or port, or if message could not be cloned.\n     */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: StructuredSerializeOptions): void;\n    /** Begins dispatching messages received on the port. */\n    start(): void;\n    addEventListener<K extends keyof MessagePortEventMap>(type: K, listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MessagePortEventMap>(type: K, listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MessagePort: {\n    prototype: MessagePort;\n    new(): MessagePort;\n};\n\n/**\n * Provides contains information about a MIME type associated with a particular plugin. NavigatorPlugins.mimeTypes returns an array of this object.\n * @deprecated\n */\ninterface MimeType {\n    /**\n     * Returns the MIME type\'s description.\n     * @deprecated\n     */\n    readonly description: string;\n    /**\n     * Returns the Plugin object that implements this MIME type.\n     * @deprecated\n     */\n    readonly enabledPlugin: Plugin;\n    /**\n     * Returns the MIME type\'s typical file extensions, in a comma-separated list.\n     * @deprecated\n     */\n    readonly suffixes: string;\n    /**\n     * Returns the MIME type.\n     * @deprecated\n     */\n    readonly type: string;\n}\n\n/** @deprecated */\ndeclare var MimeType: {\n    prototype: MimeType;\n    new(): MimeType;\n};\n\n/**\n * Returns an array of MimeType instances, each of which contains information about a supported browser plugins. This object is returned by NavigatorPlugins.mimeTypes.\n * @deprecated\n */\ninterface MimeTypeArray {\n    /** @deprecated */\n    readonly length: number;\n    /** @deprecated */\n    item(index: number): MimeType | null;\n    /** @deprecated */\n    namedItem(name: string): MimeType | null;\n    [index: number]: MimeType;\n}\n\n/** @deprecated */\ndeclare var MimeTypeArray: {\n    prototype: MimeTypeArray;\n    new(): MimeTypeArray;\n};\n\n/** Events that occur due to the user interacting with a pointing device (such as a mouse). Common events using this interface include click, dblclick, mouseup, mousedown. */\ninterface MouseEvent extends UIEvent {\n    readonly altKey: boolean;\n    readonly button: number;\n    readonly buttons: number;\n    readonly clientX: number;\n    readonly clientY: number;\n    readonly ctrlKey: boolean;\n    readonly metaKey: boolean;\n    readonly movementX: number;\n    readonly movementY: number;\n    readonly offsetX: number;\n    readonly offsetY: number;\n    readonly pageX: number;\n    readonly pageY: number;\n    readonly relatedTarget: EventTarget | null;\n    readonly screenX: number;\n    readonly screenY: number;\n    readonly shiftKey: boolean;\n    readonly x: number;\n    readonly y: number;\n    getModifierState(keyArg: string): boolean;\n    /** @deprecated */\n    initMouseEvent(typeArg: string, canBubbleArg: boolean, cancelableArg: boolean, viewArg: Window, detailArg: number, screenXArg: number, screenYArg: number, clientXArg: number, clientYArg: number, ctrlKeyArg: boolean, altKeyArg: boolean, shiftKeyArg: boolean, metaKeyArg: boolean, buttonArg: number, relatedTargetArg: EventTarget | null): void;\n}\n\ndeclare var MouseEvent: {\n    prototype: MouseEvent;\n    new(type: string, eventInitDict?: MouseEventInit): MouseEvent;\n};\n\n/**\n * Provides event properties that are specific to modifications to the Document Object Model (DOM) hierarchy and nodes.\n * @deprecated DOM4 [DOM] provides a new mechanism using a MutationObserver interface which addresses the use cases that mutation events solve, but in a more performant manner. Thus, this specification describes mutation events for reference and completeness of legacy behavior, but deprecates the use of the MutationEvent interface.\n */\ninterface MutationEvent extends Event {\n    /** @deprecated */\n    readonly attrChange: number;\n    /** @deprecated */\n    readonly attrName: string;\n    /** @deprecated */\n    readonly newValue: string;\n    /** @deprecated */\n    readonly prevValue: string;\n    /** @deprecated */\n    readonly relatedNode: Node | null;\n    /** @deprecated */\n    initMutationEvent(typeArg: string, bubblesArg?: boolean, cancelableArg?: boolean, relatedNodeArg?: Node | null, prevValueArg?: string, newValueArg?: string, attrNameArg?: string, attrChangeArg?: number): void;\n    readonly ADDITION: number;\n    readonly MODIFICATION: number;\n    readonly REMOVAL: number;\n}\n\n/** @deprecated */\ndeclare var MutationEvent: {\n    prototype: MutationEvent;\n    new(): MutationEvent;\n    readonly ADDITION: number;\n    readonly MODIFICATION: number;\n    readonly REMOVAL: number;\n};\n\n/** Provides the ability to watch for changes being made to the DOM tree. It is designed as a replacement for the older Mutation Events feature which was part of the DOM3 Events specification. */\ninterface MutationObserver {\n    /** Stops observer from observing any mutations. Until the observe() method is used again, observer\'s callback will not be invoked. */\n    disconnect(): void;\n    /**\n     * Instructs the user agent to observe a given target (a node) and report any mutations based on the criteria given by options (an object).\n     *\n     * The options argument allows for setting mutation observation options via object members.\n     */\n    observe(target: Node, options?: MutationObserverInit): void;\n    /** Empties the record queue and returns what was in there. */\n    takeRecords(): MutationRecord[];\n}\n\ndeclare var MutationObserver: {\n    prototype: MutationObserver;\n    new(callback: MutationCallback): MutationObserver;\n};\n\n/** A MutationRecord represents an individual DOM mutation. It is the object that is passed to MutationObserver\'s callback. */\ninterface MutationRecord {\n    /** Return the nodes added and removed respectively. */\n    readonly addedNodes: NodeList;\n    /** Returns the local name of the changed attribute, and null otherwise. */\n    readonly attributeName: string | null;\n    /** Returns the namespace of the changed attribute, and null otherwise. */\n    readonly attributeNamespace: string | null;\n    /** Return the previous and next sibling respectively of the added or removed nodes, and null otherwise. */\n    readonly nextSibling: Node | null;\n    /** The return value depends on type. For "attributes", it is the value of the changed attribute before the change. For "characterData", it is the data of the changed node before the change. For "childList", it is null. */\n    readonly oldValue: string | null;\n    /** Return the previous and next sibling respectively of the added or removed nodes, and null otherwise. */\n    readonly previousSibling: Node | null;\n    /** Return the nodes added and removed respectively. */\n    readonly removedNodes: NodeList;\n    /** Returns the node the mutation affected, depending on the type. For "attributes", it is the element whose attribute changed. For "characterData", it is the CharacterData node. For "childList", it is the node whose children changed. */\n    readonly target: Node;\n    /** Returns "attributes" if it was an attribute mutation. "characterData" if it was a mutation to a CharacterData node. And "childList" if it was a mutation to the tree of nodes. */\n    readonly type: MutationRecordType;\n}\n\ndeclare var MutationRecord: {\n    prototype: MutationRecord;\n    new(): MutationRecord;\n};\n\n/** A collection of Attr objects. Objects inside a NamedNodeMap are not in any particular order, unlike NodeList, although they may be accessed by an index as in an array. */\ninterface NamedNodeMap {\n    readonly length: number;\n    getNamedItem(qualifiedName: string): Attr | null;\n    getNamedItemNS(namespace: string | null, localName: string): Attr | null;\n    item(index: number): Attr | null;\n    removeNamedItem(qualifiedName: string): Attr;\n    removeNamedItemNS(namespace: string | null, localName: string): Attr;\n    setNamedItem(attr: Attr): Attr | null;\n    setNamedItemNS(attr: Attr): Attr | null;\n    [index: number]: Attr;\n}\n\ndeclare var NamedNodeMap: {\n    prototype: NamedNodeMap;\n    new(): NamedNodeMap;\n};\n\n/** The state and the identity of the user agent. It allows scripts to query it and to register themselves to carry on some activities. */\ninterface Navigator extends NavigatorAutomationInformation, NavigatorConcurrentHardware, NavigatorContentUtils, NavigatorCookies, NavigatorID, NavigatorLanguage, NavigatorNetworkInformation, NavigatorOnLine, NavigatorPlugins, NavigatorStorage {\n    /** Available only in secure contexts. */\n    readonly clipboard: Clipboard;\n    /** Available only in secure contexts. */\n    readonly credentials: CredentialsContainer;\n    readonly doNotTrack: string | null;\n    readonly geolocation: Geolocation;\n    readonly maxTouchPoints: number;\n    readonly mediaCapabilities: MediaCapabilities;\n    /** Available only in secure contexts. */\n    readonly mediaDevices: MediaDevices;\n    readonly mediaSession: MediaSession;\n    readonly permissions: Permissions;\n    /** Available only in secure contexts. */\n    readonly serviceWorker: ServiceWorkerContainer;\n    /** Available only in secure contexts. */\n    canShare(data?: ShareData): boolean;\n    getGamepads(): (Gamepad | null)[];\n    /** Available only in secure contexts. */\n    requestMediaKeySystemAccess(keySystem: string, supportedConfigurations: MediaKeySystemConfiguration[]): Promise<MediaKeySystemAccess>;\n    sendBeacon(url: string | URL, data?: BodyInit | null): boolean;\n    /** Available only in secure contexts. */\n    share(data?: ShareData): Promise<void>;\n    vibrate(pattern: VibratePattern): boolean;\n}\n\ndeclare var Navigator: {\n    prototype: Navigator;\n    new(): Navigator;\n};\n\ninterface NavigatorAutomationInformation {\n    readonly webdriver: boolean;\n}\n\ninterface NavigatorConcurrentHardware {\n    readonly hardwareConcurrency: number;\n}\n\ninterface NavigatorContentUtils {\n    /** Available only in secure contexts. */\n    registerProtocolHandler(scheme: string, url: string | URL): void;\n}\n\ninterface NavigatorCookies {\n    readonly cookieEnabled: boolean;\n}\n\ninterface NavigatorID {\n    /** @deprecated */\n    readonly appCodeName: string;\n    /** @deprecated */\n    readonly appName: string;\n    /** @deprecated */\n    readonly appVersion: string;\n    /** @deprecated */\n    readonly platform: string;\n    /** @deprecated */\n    readonly product: string;\n    /** @deprecated */\n    readonly productSub: string;\n    readonly userAgent: string;\n    readonly vendor: string;\n    /** @deprecated */\n    readonly vendorSub: string;\n}\n\ninterface NavigatorLanguage {\n    readonly language: string;\n    readonly languages: ReadonlyArray<string>;\n}\n\ninterface NavigatorNetworkInformation {\n    readonly connection: NetworkInformation;\n}\n\ninterface NavigatorOnLine {\n    readonly onLine: boolean;\n}\n\ninterface NavigatorPlugins {\n    /** @deprecated */\n    readonly mimeTypes: MimeTypeArray;\n    /** @deprecated */\n    readonly plugins: PluginArray;\n    /** @deprecated */\n    javaEnabled(): boolean;\n}\n\n/** Available only in secure contexts. */\ninterface NavigatorStorage {\n    readonly storage: StorageManager;\n}\n\ninterface NetworkInformation extends EventTarget {\n    readonly type: ConnectionType;\n}\n\ndeclare var NetworkInformation: {\n    prototype: NetworkInformation;\n    new(): NetworkInformation;\n};\n\n/** Node is an interface from which a number of DOM API object types inherit. It allows those types to be treated similarly; for example, inheriting the same set of methods, or being tested in the same way. */\ninterface Node extends EventTarget {\n    /** Returns node\'s node document\'s document base URL. */\n    readonly baseURI: string;\n    /** Returns the children. */\n    readonly childNodes: NodeListOf<ChildNode>;\n    /** Returns the first child. */\n    readonly firstChild: ChildNode | null;\n    /** Returns true if node is connected and false otherwise. */\n    readonly isConnected: boolean;\n    /** Returns the last child. */\n    readonly lastChild: ChildNode | null;\n    /** Returns the next sibling. */\n    readonly nextSibling: ChildNode | null;\n    /** Returns a string appropriate for the type of node. */\n    readonly nodeName: string;\n    /** Returns the type of node. */\n    readonly nodeType: number;\n    nodeValue: string | null;\n    /** Returns the node document. Returns null for documents. */\n    readonly ownerDocument: Document | null;\n    /** Returns the parent element. */\n    readonly parentElement: HTMLElement | null;\n    /** Returns the parent. */\n    readonly parentNode: ParentNode | null;\n    /** Returns the previous sibling. */\n    readonly previousSibling: ChildNode | null;\n    textContent: string | null;\n    appendChild<T extends Node>(node: T): T;\n    /** Returns a copy of node. If deep is true, the copy also includes the node\'s descendants. */\n    cloneNode(deep?: boolean): Node;\n    /** Returns a bitmask indicating the position of other relative to node. */\n    compareDocumentPosition(other: Node): number;\n    /** Returns true if other is an inclusive descendant of node, and false otherwise. */\n    contains(other: Node | null): boolean;\n    /** Returns node\'s root. */\n    getRootNode(options?: GetRootNodeOptions): Node;\n    /** Returns whether node has children. */\n    hasChildNodes(): boolean;\n    insertBefore<T extends Node>(node: T, child: Node | null): T;\n    isDefaultNamespace(namespace: string | null): boolean;\n    /** Returns whether node and otherNode have the same properties. */\n    isEqualNode(otherNode: Node | null): boolean;\n    isSameNode(otherNode: Node | null): boolean;\n    lookupNamespaceURI(prefix: string | null): string | null;\n    lookupPrefix(namespace: string | null): string | null;\n    /** Removes empty exclusive Text nodes and concatenates the data of remaining contiguous exclusive Text nodes into the first of their nodes. */\n    normalize(): void;\n    removeChild<T extends Node>(child: T): T;\n    replaceChild<T extends Node>(node: Node, child: T): T;\n    readonly ATTRIBUTE_NODE: number;\n    /** node is a CDATASection node. */\n    readonly CDATA_SECTION_NODE: number;\n    /** node is a Comment node. */\n    readonly COMMENT_NODE: number;\n    /** node is a DocumentFragment node. */\n    readonly DOCUMENT_FRAGMENT_NODE: number;\n    /** node is a document. */\n    readonly DOCUMENT_NODE: number;\n    /** Set when other is a descendant of node. */\n    readonly DOCUMENT_POSITION_CONTAINED_BY: number;\n    /** Set when other is an ancestor of node. */\n    readonly DOCUMENT_POSITION_CONTAINS: number;\n    /** Set when node and other are not in the same tree. */\n    readonly DOCUMENT_POSITION_DISCONNECTED: number;\n    /** Set when other is following node. */\n    readonly DOCUMENT_POSITION_FOLLOWING: number;\n    readonly DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number;\n    /** Set when other is preceding node. */\n    readonly DOCUMENT_POSITION_PRECEDING: number;\n    /** node is a doctype. */\n    readonly DOCUMENT_TYPE_NODE: number;\n    /** node is an element. */\n    readonly ELEMENT_NODE: number;\n    readonly ENTITY_NODE: number;\n    readonly ENTITY_REFERENCE_NODE: number;\n    readonly NOTATION_NODE: number;\n    /** node is a ProcessingInstruction node. */\n    readonly PROCESSING_INSTRUCTION_NODE: number;\n    /** node is a Text node. */\n    readonly TEXT_NODE: number;\n}\n\ndeclare var Node: {\n    prototype: Node;\n    new(): Node;\n    readonly ATTRIBUTE_NODE: number;\n    /** node is a CDATASection node. */\n    readonly CDATA_SECTION_NODE: number;\n    /** node is a Comment node. */\n    readonly COMMENT_NODE: number;\n    /** node is a DocumentFragment node. */\n    readonly DOCUMENT_FRAGMENT_NODE: number;\n    /** node is a document. */\n    readonly DOCUMENT_NODE: number;\n    /** Set when other is a descendant of node. */\n    readonly DOCUMENT_POSITION_CONTAINED_BY: number;\n    /** Set when other is an ancestor of node. */\n    readonly DOCUMENT_POSITION_CONTAINS: number;\n    /** Set when node and other are not in the same tree. */\n    readonly DOCUMENT_POSITION_DISCONNECTED: number;\n    /** Set when other is following node. */\n    readonly DOCUMENT_POSITION_FOLLOWING: number;\n    readonly DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number;\n    /** Set when other is preceding node. */\n    readonly DOCUMENT_POSITION_PRECEDING: number;\n    /** node is a doctype. */\n    readonly DOCUMENT_TYPE_NODE: number;\n    /** node is an element. */\n    readonly ELEMENT_NODE: number;\n    readonly ENTITY_NODE: number;\n    readonly ENTITY_REFERENCE_NODE: number;\n    readonly NOTATION_NODE: number;\n    /** node is a ProcessingInstruction node. */\n    readonly PROCESSING_INSTRUCTION_NODE: number;\n    /** node is a Text node. */\n    readonly TEXT_NODE: number;\n};\n\n/** An iterator over the members of a list of the nodes in a subtree of the DOM. The nodes will be returned in document order. */\ninterface NodeIterator {\n    readonly filter: NodeFilter | null;\n    readonly pointerBeforeReferenceNode: boolean;\n    readonly referenceNode: Node;\n    readonly root: Node;\n    readonly whatToShow: number;\n    /** @deprecated */\n    detach(): void;\n    nextNode(): Node | null;\n    previousNode(): Node | null;\n}\n\ndeclare var NodeIterator: {\n    prototype: NodeIterator;\n    new(): NodeIterator;\n};\n\n/** NodeList objects are collections of nodes, usually returned by properties such as Node.childNodes and methods such as document.querySelectorAll(). */\ninterface NodeList {\n    /** Returns the number of nodes in the collection. */\n    readonly length: number;\n    /** Returns the node with index index from the collection. The nodes are sorted in tree order. */\n    item(index: number): Node | null;\n    /**\n     * Performs the specified action for each node in an list.\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the list.\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: Node, key: number, parent: NodeList) => void, thisArg?: any): void;\n    [index: number]: Node;\n}\n\ndeclare var NodeList: {\n    prototype: NodeList;\n    new(): NodeList;\n};\n\ninterface NodeListOf<TNode extends Node> extends NodeList {\n    item(index: number): TNode;\n    /**\n     * Performs the specified action for each node in an list.\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the list.\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n     */\n    forEach(callbackfn: (value: TNode, key: number, parent: NodeListOf<TNode>) => void, thisArg?: any): void;\n    [index: number]: TNode;\n}\n\ninterface NonDocumentTypeChildNode {\n    /** Returns the first following sibling that is an element, and null otherwise. */\n    readonly nextElementSibling: Element | null;\n    /** Returns the first preceding sibling that is an element, and null otherwise. */\n    readonly previousElementSibling: Element | null;\n}\n\ninterface NonElementParentNode {\n    /** Returns the first element within node\'s descendants whose ID is elementId. */\n    getElementById(elementId: string): Element | null;\n}\n\ninterface NotificationEventMap {\n    "click": Event;\n    "close": Event;\n    "error": Event;\n    "show": Event;\n}\n\n/** This Notifications API interface is used to configure and display desktop notifications to the user. */\ninterface Notification extends EventTarget {\n    readonly body: string;\n    readonly data: any;\n    readonly dir: NotificationDirection;\n    readonly icon: string;\n    readonly lang: string;\n    onclick: ((this: Notification, ev: Event) => any) | null;\n    onclose: ((this: Notification, ev: Event) => any) | null;\n    onerror: ((this: Notification, ev: Event) => any) | null;\n    onshow: ((this: Notification, ev: Event) => any) | null;\n    readonly tag: string;\n    readonly title: string;\n    close(): void;\n    addEventListener<K extends keyof NotificationEventMap>(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof NotificationEventMap>(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Notification: {\n    prototype: Notification;\n    new(title: string, options?: NotificationOptions): Notification;\n    readonly permission: NotificationPermission;\n    requestPermission(deprecatedCallback?: NotificationPermissionCallback): Promise<NotificationPermission>;\n};\n\n/** The OES_element_index_uint extension is part of the WebGL API and adds support for gl.UNSIGNED_INT types to WebGLRenderingContext.drawElements(). */\ninterface OES_element_index_uint {\n}\n\ninterface OES_fbo_render_mipmap {\n}\n\n/** The OES_standard_derivatives extension is part of the WebGL API and adds the GLSL derivative functions dFdx, dFdy, and fwidth. */\ninterface OES_standard_derivatives {\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT_OES: GLenum;\n}\n\n/** The OES_texture_float extension is part of the WebGL API and exposes floating-point pixel types for textures. */\ninterface OES_texture_float {\n}\n\n/** The OES_texture_float_linear extension is part of the WebGL API and allows linear filtering with floating-point pixel types for textures. */\ninterface OES_texture_float_linear {\n}\n\n/** The OES_texture_half_float extension is part of the WebGL API and adds texture formats with 16- (aka half float) and 32-bit floating-point components. */\ninterface OES_texture_half_float {\n    readonly HALF_FLOAT_OES: GLenum;\n}\n\n/** The OES_texture_half_float_linear extension is part of the WebGL API and allows linear filtering with half floating-point pixel types for textures. */\ninterface OES_texture_half_float_linear {\n}\n\ninterface OES_vertex_array_object {\n    bindVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): void;\n    createVertexArrayOES(): WebGLVertexArrayObjectOES | null;\n    deleteVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): void;\n    isVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): GLboolean;\n    readonly VERTEX_ARRAY_BINDING_OES: GLenum;\n}\n\ninterface OVR_multiview2 {\n    framebufferTextureMultiviewOVR(target: GLenum, attachment: GLenum, texture: WebGLTexture | null, level: GLint, baseViewIndex: GLint, numViews: GLsizei): void;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR: GLenum;\n    readonly MAX_VIEWS_OVR: GLenum;\n}\n\n/** The Web Audio API OfflineAudioCompletionEvent interface represents events that occur when the processing of an OfflineAudioContext is terminated. The complete event implements this interface. */\ninterface OfflineAudioCompletionEvent extends Event {\n    readonly renderedBuffer: AudioBuffer;\n}\n\ndeclare var OfflineAudioCompletionEvent: {\n    prototype: OfflineAudioCompletionEvent;\n    new(type: string, eventInitDict: OfflineAudioCompletionEventInit): OfflineAudioCompletionEvent;\n};\n\ninterface OfflineAudioContextEventMap extends BaseAudioContextEventMap {\n    "complete": OfflineAudioCompletionEvent;\n}\n\n/** An AudioContext interface representing an audio-processing graph built from linked together AudioNodes. In contrast with a standard AudioContext, an OfflineAudioContext doesn\'t render the audio to the device hardware; instead, it generates it, as fast as it can, and outputs the result to an AudioBuffer. */\ninterface OfflineAudioContext extends BaseAudioContext {\n    readonly length: number;\n    oncomplete: ((this: OfflineAudioContext, ev: OfflineAudioCompletionEvent) => any) | null;\n    resume(): Promise<void>;\n    startRendering(): Promise<AudioBuffer>;\n    suspend(suspendTime: number): Promise<void>;\n    addEventListener<K extends keyof OfflineAudioContextEventMap>(type: K, listener: (this: OfflineAudioContext, ev: OfflineAudioContextEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof OfflineAudioContextEventMap>(type: K, listener: (this: OfflineAudioContext, ev: OfflineAudioContextEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var OfflineAudioContext: {\n    prototype: OfflineAudioContext;\n    new(contextOptions: OfflineAudioContextOptions): OfflineAudioContext;\n    new(numberOfChannels: number, length: number, sampleRate: number): OfflineAudioContext;\n};\n\n/** The OscillatorNode interface represents a periodic waveform, such as a sine wave. It is an AudioScheduledSourceNode audio-processing module that causes a specified frequency of a given wave to be created—in effect, a constant tone. */\ninterface OscillatorNode extends AudioScheduledSourceNode {\n    readonly detune: AudioParam;\n    readonly frequency: AudioParam;\n    type: OscillatorType;\n    setPeriodicWave(periodicWave: PeriodicWave): void;\n    addEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this: OscillatorNode, ev: AudioScheduledSourceNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AudioScheduledSourceNodeEventMap>(type: K, listener: (this: OscillatorNode, ev: AudioScheduledSourceNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var OscillatorNode: {\n    prototype: OscillatorNode;\n    new(context: BaseAudioContext, options?: OscillatorOptions): OscillatorNode;\n};\n\ninterface OverconstrainedError extends Error {\n    readonly constraint: string;\n}\n\ndeclare var OverconstrainedError: {\n    prototype: OverconstrainedError;\n    new(constraint: string, message?: string): OverconstrainedError;\n};\n\n/** The PageTransitionEvent is fired when a document is being loaded or unloaded. */\ninterface PageTransitionEvent extends Event {\n    /**\n     * For the pageshow event, returns false if the page is newly being loaded (and the load event will fire). Otherwise, returns true.\n     *\n     * For the pagehide event, returns false if the page is going away for the last time. Otherwise, returns true, meaning that (if nothing conspires to make the page unsalvageable) the page might be reused if the user navigates back to this page.\n     *\n     * Things that can cause the page to be unsalvageable include:\n     *\n     * The user agent decided to not keep the Document alive in a session history entry after unload\n     * Having iframes that are not salvageable\n     * Active WebSocket objects\n     * Aborting a Document\n     */\n    readonly persisted: boolean;\n}\n\ndeclare var PageTransitionEvent: {\n    prototype: PageTransitionEvent;\n    new(type: string, eventInitDict?: PageTransitionEventInit): PageTransitionEvent;\n};\n\n/** A PannerNode always has exactly one input and one output: the input can be mono or stereo but the output is always stereo (2 channels); you can\'t have panning effects without at least two audio channels! */\ninterface PannerNode extends AudioNode {\n    coneInnerAngle: number;\n    coneOuterAngle: number;\n    coneOuterGain: number;\n    distanceModel: DistanceModelType;\n    maxDistance: number;\n    readonly orientationX: AudioParam;\n    readonly orientationY: AudioParam;\n    readonly orientationZ: AudioParam;\n    panningModel: PanningModelType;\n    readonly positionX: AudioParam;\n    readonly positionY: AudioParam;\n    readonly positionZ: AudioParam;\n    refDistance: number;\n    rolloffFactor: number;\n    /** @deprecated */\n    setOrientation(x: number, y: number, z: number): void;\n    /** @deprecated */\n    setPosition(x: number, y: number, z: number): void;\n}\n\ndeclare var PannerNode: {\n    prototype: PannerNode;\n    new(context: BaseAudioContext, options?: PannerOptions): PannerNode;\n};\n\ninterface ParentNode extends Node {\n    readonly childElementCount: number;\n    /** Returns the child elements. */\n    readonly children: HTMLCollection;\n    /** Returns the first child that is an element, and null otherwise. */\n    readonly firstElementChild: Element | null;\n    /** Returns the last child that is an element, and null otherwise. */\n    readonly lastElementChild: Element | null;\n    /**\n     * Inserts nodes after the last child of node, while replacing strings in nodes with equivalent Text nodes.\n     *\n     * Throws a "HierarchyRequestError" DOMException if the constraints of the node tree are violated.\n     */\n    append(...nodes: (Node | string)[]): void;\n    /**\n     * Inserts nodes before the first child of node, while replacing strings in nodes with equivalent Text nodes.\n     *\n     * Throws a "HierarchyRequestError" DOMException if the constraints of the node tree are violated.\n     */\n    prepend(...nodes: (Node | string)[]): void;\n    /** Returns the first element that is a descendant of node that matches selectors. */\n    querySelector<K extends keyof HTMLElementTagNameMap>(selectors: K): HTMLElementTagNameMap[K] | null;\n    querySelector<K extends keyof SVGElementTagNameMap>(selectors: K): SVGElementTagNameMap[K] | null;\n    querySelector<E extends Element = Element>(selectors: string): E | null;\n    /** Returns all element descendants of node that match selectors. */\n    querySelectorAll<K extends keyof HTMLElementTagNameMap>(selectors: K): NodeListOf<HTMLElementTagNameMap[K]>;\n    querySelectorAll<K extends keyof SVGElementTagNameMap>(selectors: K): NodeListOf<SVGElementTagNameMap[K]>;\n    querySelectorAll<E extends Element = Element>(selectors: string): NodeListOf<E>;\n    /**\n     * Replace all children of node with nodes, while replacing strings in nodes with equivalent Text nodes.\n     *\n     * Throws a "HierarchyRequestError" DOMException if the constraints of the node tree are violated.\n     */\n    replaceChildren(...nodes: (Node | string)[]): void;\n}\n\n/** This Canvas 2D API interface is used to declare a path that can then be used on a CanvasRenderingContext2D object. The path methods of the CanvasRenderingContext2D interface are also present on this interface, which gives you the convenience of being able to retain and replay your path whenever desired. */\ninterface Path2D extends CanvasPath {\n    /** Adds to the path the path given by the argument. */\n    addPath(path: Path2D, transform?: DOMMatrix2DInit): void;\n}\n\ndeclare var Path2D: {\n    prototype: Path2D;\n    new(path?: Path2D | string): Path2D;\n};\n\n/** Available only in secure contexts. */\ninterface PaymentMethodChangeEvent extends PaymentRequestUpdateEvent {\n    readonly methodDetails: any;\n    readonly methodName: string;\n}\n\ndeclare var PaymentMethodChangeEvent: {\n    prototype: PaymentMethodChangeEvent;\n    new(type: string, eventInitDict?: PaymentMethodChangeEventInit): PaymentMethodChangeEvent;\n};\n\ninterface PaymentRequestEventMap {\n    "paymentmethodchange": Event;\n}\n\n/**\n * This Payment Request API interface is the primary access point into the API, and lets web content and apps accept payments from the end user.\n * Available only in secure contexts.\n */\ninterface PaymentRequest extends EventTarget {\n    readonly id: string;\n    onpaymentmethodchange: ((this: PaymentRequest, ev: Event) => any) | null;\n    abort(): Promise<void>;\n    canMakePayment(): Promise<boolean>;\n    show(detailsPromise?: PaymentDetailsUpdate | PromiseLike<PaymentDetailsUpdate>): Promise<PaymentResponse>;\n    addEventListener<K extends keyof PaymentRequestEventMap>(type: K, listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof PaymentRequestEventMap>(type: K, listener: (this: PaymentRequest, ev: PaymentRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var PaymentRequest: {\n    prototype: PaymentRequest;\n    new(methodData: PaymentMethodData[], details: PaymentDetailsInit): PaymentRequest;\n};\n\n/**\n * This Payment Request API interface enables a web page to update the details of a PaymentRequest in response to a user action.\n * Available only in secure contexts.\n */\ninterface PaymentRequestUpdateEvent extends Event {\n    updateWith(detailsPromise: PaymentDetailsUpdate | PromiseLike<PaymentDetailsUpdate>): void;\n}\n\ndeclare var PaymentRequestUpdateEvent: {\n    prototype: PaymentRequestUpdateEvent;\n    new(type: string, eventInitDict?: PaymentRequestUpdateEventInit): PaymentRequestUpdateEvent;\n};\n\n/**\n * This Payment Request API interface is returned after a user selects a payment method and approves a payment request.\n * Available only in secure contexts.\n */\ninterface PaymentResponse extends EventTarget {\n    readonly details: any;\n    readonly methodName: string;\n    readonly requestId: string;\n    complete(result?: PaymentComplete): Promise<void>;\n    retry(errorFields?: PaymentValidationErrors): Promise<void>;\n    toJSON(): any;\n}\n\ndeclare var PaymentResponse: {\n    prototype: PaymentResponse;\n    new(): PaymentResponse;\n};\n\ninterface PerformanceEventMap {\n    "resourcetimingbufferfull": Event;\n}\n\n/** Provides access to performance-related information for the current page. It\'s part of the High Resolution Time API, but is enhanced by the Performance Timeline API, the Navigation Timing API, the User Timing API, and the Resource Timing API. */\ninterface Performance extends EventTarget {\n    /** @deprecated */\n    readonly navigation: PerformanceNavigation;\n    onresourcetimingbufferfull: ((this: Performance, ev: Event) => any) | null;\n    readonly timeOrigin: DOMHighResTimeStamp;\n    /** @deprecated */\n    readonly timing: PerformanceTiming;\n    clearMarks(markName?: string): void;\n    clearMeasures(measureName?: string): void;\n    clearResourceTimings(): void;\n    getEntries(): PerformanceEntryList;\n    getEntriesByName(name: string, type?: string): PerformanceEntryList;\n    getEntriesByType(type: string): PerformanceEntryList;\n    mark(markName: string, markOptions?: PerformanceMarkOptions): PerformanceMark;\n    measure(measureName: string, startOrMeasureOptions?: string | PerformanceMeasureOptions, endMark?: string): PerformanceMeasure;\n    now(): DOMHighResTimeStamp;\n    setResourceTimingBufferSize(maxSize: number): void;\n    toJSON(): any;\n    addEventListener<K extends keyof PerformanceEventMap>(type: K, listener: (this: Performance, ev: PerformanceEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof PerformanceEventMap>(type: K, listener: (this: Performance, ev: PerformanceEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Performance: {\n    prototype: Performance;\n    new(): Performance;\n};\n\n/** Encapsulates a single performance metric that is part of the performance timeline. A performance entry can be directly created by making a performance mark or measure (for example by calling the mark() method) at an explicit point in an application. Performance entries are also created in indirect ways such as loading a resource (such as an image). */\ninterface PerformanceEntry {\n    readonly duration: DOMHighResTimeStamp;\n    readonly entryType: string;\n    readonly name: string;\n    readonly startTime: DOMHighResTimeStamp;\n    toJSON(): any;\n}\n\ndeclare var PerformanceEntry: {\n    prototype: PerformanceEntry;\n    new(): PerformanceEntry;\n};\n\ninterface PerformanceEventTiming extends PerformanceEntry {\n    readonly cancelable: boolean;\n    readonly processingEnd: DOMHighResTimeStamp;\n    readonly processingStart: DOMHighResTimeStamp;\n    readonly target: Node | null;\n    toJSON(): any;\n}\n\ndeclare var PerformanceEventTiming: {\n    prototype: PerformanceEventTiming;\n    new(): PerformanceEventTiming;\n};\n\n/** PerformanceMark is an abstract interface for PerformanceEntry objects with an entryType of "mark". Entries of this type are created by calling performance.mark() to add a named DOMHighResTimeStamp (the mark) to the browser\'s performance timeline. */\ninterface PerformanceMark extends PerformanceEntry {\n    readonly detail: any;\n}\n\ndeclare var PerformanceMark: {\n    prototype: PerformanceMark;\n    new(markName: string, markOptions?: PerformanceMarkOptions): PerformanceMark;\n};\n\n/** PerformanceMeasure is an abstract interface for PerformanceEntry objects with an entryType of "measure". Entries of this type are created by calling performance.measure() to add a named DOMHighResTimeStamp (the measure) between two marks to the browser\'s performance timeline. */\ninterface PerformanceMeasure extends PerformanceEntry {\n    readonly detail: any;\n}\n\ndeclare var PerformanceMeasure: {\n    prototype: PerformanceMeasure;\n    new(): PerformanceMeasure;\n};\n\n/**\n * The legacy PerformanceNavigation interface represents information about how the navigation to the current document was done.\n * @deprecated This interface is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead.\n */\ninterface PerformanceNavigation {\n    /** @deprecated */\n    readonly redirectCount: number;\n    /** @deprecated */\n    readonly type: number;\n    /** @deprecated */\n    toJSON(): any;\n    readonly TYPE_BACK_FORWARD: number;\n    readonly TYPE_NAVIGATE: number;\n    readonly TYPE_RELOAD: number;\n    readonly TYPE_RESERVED: number;\n}\n\n/** @deprecated */\ndeclare var PerformanceNavigation: {\n    prototype: PerformanceNavigation;\n    new(): PerformanceNavigation;\n    readonly TYPE_BACK_FORWARD: number;\n    readonly TYPE_NAVIGATE: number;\n    readonly TYPE_RELOAD: number;\n    readonly TYPE_RESERVED: number;\n};\n\n/** Provides methods and properties to store and retrieve metrics regarding the browser\'s document navigation events. For example, this interface can be used to determine how much time it takes to load or unload a document. */\ninterface PerformanceNavigationTiming extends PerformanceResourceTiming {\n    readonly domComplete: DOMHighResTimeStamp;\n    readonly domContentLoadedEventEnd: DOMHighResTimeStamp;\n    readonly domContentLoadedEventStart: DOMHighResTimeStamp;\n    readonly domInteractive: DOMHighResTimeStamp;\n    readonly loadEventEnd: DOMHighResTimeStamp;\n    readonly loadEventStart: DOMHighResTimeStamp;\n    readonly redirectCount: number;\n    readonly type: NavigationType;\n    readonly unloadEventEnd: DOMHighResTimeStamp;\n    readonly unloadEventStart: DOMHighResTimeStamp;\n    toJSON(): any;\n}\n\ndeclare var PerformanceNavigationTiming: {\n    prototype: PerformanceNavigationTiming;\n    new(): PerformanceNavigationTiming;\n};\n\ninterface PerformanceObserver {\n    disconnect(): void;\n    observe(options?: PerformanceObserverInit): void;\n    takeRecords(): PerformanceEntryList;\n}\n\ndeclare var PerformanceObserver: {\n    prototype: PerformanceObserver;\n    new(callback: PerformanceObserverCallback): PerformanceObserver;\n    readonly supportedEntryTypes: ReadonlyArray<string>;\n};\n\ninterface PerformanceObserverEntryList {\n    getEntries(): PerformanceEntryList;\n    getEntriesByName(name: string, type?: string): PerformanceEntryList;\n    getEntriesByType(type: string): PerformanceEntryList;\n}\n\ndeclare var PerformanceObserverEntryList: {\n    prototype: PerformanceObserverEntryList;\n    new(): PerformanceObserverEntryList;\n};\n\ninterface PerformancePaintTiming extends PerformanceEntry {\n}\n\ndeclare var PerformancePaintTiming: {\n    prototype: PerformancePaintTiming;\n    new(): PerformancePaintTiming;\n};\n\n/** Enables retrieval and analysis of detailed network timing data regarding the loading of an application\'s resources. An application can use the timing metrics to determine, for example, the length of time it takes to fetch a specific resource, such as an XMLHttpRequest, <SVG>, image, or script. */\ninterface PerformanceResourceTiming extends PerformanceEntry {\n    readonly connectEnd: DOMHighResTimeStamp;\n    readonly connectStart: DOMHighResTimeStamp;\n    readonly decodedBodySize: number;\n    readonly domainLookupEnd: DOMHighResTimeStamp;\n    readonly domainLookupStart: DOMHighResTimeStamp;\n    readonly encodedBodySize: number;\n    readonly fetchStart: DOMHighResTimeStamp;\n    readonly initiatorType: string;\n    readonly nextHopProtocol: string;\n    readonly redirectEnd: DOMHighResTimeStamp;\n    readonly redirectStart: DOMHighResTimeStamp;\n    readonly requestStart: DOMHighResTimeStamp;\n    readonly responseEnd: DOMHighResTimeStamp;\n    readonly responseStart: DOMHighResTimeStamp;\n    readonly secureConnectionStart: DOMHighResTimeStamp;\n    readonly serverTiming: ReadonlyArray<PerformanceServerTiming>;\n    readonly transferSize: number;\n    readonly workerStart: DOMHighResTimeStamp;\n    toJSON(): any;\n}\n\ndeclare var PerformanceResourceTiming: {\n    prototype: PerformanceResourceTiming;\n    new(): PerformanceResourceTiming;\n};\n\ninterface PerformanceServerTiming {\n    readonly description: string;\n    readonly duration: DOMHighResTimeStamp;\n    readonly name: string;\n    toJSON(): any;\n}\n\ndeclare var PerformanceServerTiming: {\n    prototype: PerformanceServerTiming;\n    new(): PerformanceServerTiming;\n};\n\n/**\n * A legacy interface kept for backwards compatibility and contains properties that offer performance timing information for various events which occur during the loading and use of the current page. You get a PerformanceTiming object describing your page using the window.performance.timing property.\n * @deprecated This interface is deprecated in the Navigation Timing Level 2 specification. Please use the PerformanceNavigationTiming interface instead.\n */\ninterface PerformanceTiming {\n    /** @deprecated */\n    readonly connectEnd: number;\n    /** @deprecated */\n    readonly connectStart: number;\n    /** @deprecated */\n    readonly domComplete: number;\n    /** @deprecated */\n    readonly domContentLoadedEventEnd: number;\n    /** @deprecated */\n    readonly domContentLoadedEventStart: number;\n    /** @deprecated */\n    readonly domInteractive: number;\n    /** @deprecated */\n    readonly domLoading: number;\n    /** @deprecated */\n    readonly domainLookupEnd: number;\n    /** @deprecated */\n    readonly domainLookupStart: number;\n    /** @deprecated */\n    readonly fetchStart: number;\n    /** @deprecated */\n    readonly loadEventEnd: number;\n    /** @deprecated */\n    readonly loadEventStart: number;\n    /** @deprecated */\n    readonly navigationStart: number;\n    /** @deprecated */\n    readonly redirectEnd: number;\n    /** @deprecated */\n    readonly redirectStart: number;\n    /** @deprecated */\n    readonly requestStart: number;\n    /** @deprecated */\n    readonly responseEnd: number;\n    /** @deprecated */\n    readonly responseStart: number;\n    /** @deprecated */\n    readonly secureConnectionStart: number;\n    /** @deprecated */\n    readonly unloadEventEnd: number;\n    /** @deprecated */\n    readonly unloadEventStart: number;\n    /** @deprecated */\n    toJSON(): any;\n}\n\n/** @deprecated */\ndeclare var PerformanceTiming: {\n    prototype: PerformanceTiming;\n    new(): PerformanceTiming;\n};\n\n/** PeriodicWave has no inputs or outputs; it is used to define custom oscillators when calling OscillatorNode.setPeriodicWave(). The PeriodicWave itself is created/returned by AudioContext.createPeriodicWave(). */\ninterface PeriodicWave {\n}\n\ndeclare var PeriodicWave: {\n    prototype: PeriodicWave;\n    new(context: BaseAudioContext, options?: PeriodicWaveOptions): PeriodicWave;\n};\n\ninterface PermissionStatusEventMap {\n    "change": Event;\n}\n\ninterface PermissionStatus extends EventTarget {\n    onchange: ((this: PermissionStatus, ev: Event) => any) | null;\n    readonly state: PermissionState;\n    addEventListener<K extends keyof PermissionStatusEventMap>(type: K, listener: (this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof PermissionStatusEventMap>(type: K, listener: (this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var PermissionStatus: {\n    prototype: PermissionStatus;\n    new(): PermissionStatus;\n};\n\ninterface Permissions {\n    query(permissionDesc: PermissionDescriptor): Promise<PermissionStatus>;\n}\n\ndeclare var Permissions: {\n    prototype: Permissions;\n    new(): Permissions;\n};\n\ninterface PictureInPictureWindowEventMap {\n    "resize": Event;\n}\n\ninterface PictureInPictureWindow extends EventTarget {\n    readonly height: number;\n    onresize: ((this: PictureInPictureWindow, ev: Event) => any) | null;\n    readonly width: number;\n    addEventListener<K extends keyof PictureInPictureWindowEventMap>(type: K, listener: (this: PictureInPictureWindow, ev: PictureInPictureWindowEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof PictureInPictureWindowEventMap>(type: K, listener: (this: PictureInPictureWindow, ev: PictureInPictureWindowEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var PictureInPictureWindow: {\n    prototype: PictureInPictureWindow;\n    new(): PictureInPictureWindow;\n};\n\n/**\n * Provides information about a browser plugin.\n * @deprecated\n */\ninterface Plugin {\n    /**\n     * Returns the plugin\'s description.\n     * @deprecated\n     */\n    readonly description: string;\n    /**\n     * Returns the plugin library\'s filename, if applicable on the current platform.\n     * @deprecated\n     */\n    readonly filename: string;\n    /**\n     * Returns the number of MIME types, represented by MimeType objects, supported by the plugin.\n     * @deprecated\n     */\n    readonly length: number;\n    /**\n     * Returns the plugin\'s name.\n     * @deprecated\n     */\n    readonly name: string;\n    /**\n     * Returns the specified MimeType object.\n     * @deprecated\n     */\n    item(index: number): MimeType | null;\n    /** @deprecated */\n    namedItem(name: string): MimeType | null;\n    [index: number]: MimeType;\n}\n\n/** @deprecated */\ndeclare var Plugin: {\n    prototype: Plugin;\n    new(): Plugin;\n};\n\n/**\n * Used to store a list of Plugin objects describing the available plugins; it\'s returned by the window.navigator.plugins property. The PluginArray is not a JavaScript array, but has the length property and supports accessing individual items using bracket notation (plugins[2]), as well as via item(index) and namedItem("name") methods.\n * @deprecated\n */\ninterface PluginArray {\n    /** @deprecated */\n    readonly length: number;\n    /** @deprecated */\n    item(index: number): Plugin | null;\n    /** @deprecated */\n    namedItem(name: string): Plugin | null;\n    /** @deprecated */\n    refresh(): void;\n    [index: number]: Plugin;\n}\n\n/** @deprecated */\ndeclare var PluginArray: {\n    prototype: PluginArray;\n    new(): PluginArray;\n};\n\n/** The state of a DOM event produced by a pointer such as the geometry of the contact point, the device type that generated the event, the amount of pressure that was applied on the contact surface, etc. */\ninterface PointerEvent extends MouseEvent {\n    readonly height: number;\n    readonly isPrimary: boolean;\n    readonly pointerId: number;\n    readonly pointerType: string;\n    readonly pressure: number;\n    readonly tangentialPressure: number;\n    readonly tiltX: number;\n    readonly tiltY: number;\n    readonly twist: number;\n    readonly width: number;\n    /** Available only in secure contexts. */\n    getCoalescedEvents(): PointerEvent[];\n    getPredictedEvents(): PointerEvent[];\n}\n\ndeclare var PointerEvent: {\n    prototype: PointerEvent;\n    new(type: string, eventInitDict?: PointerEventInit): PointerEvent;\n};\n\n/** PopStateEvent is an event handler for the popstate event on the window. */\ninterface PopStateEvent extends Event {\n    /** Returns a copy of the information that was provided to pushState() or replaceState(). */\n    readonly state: any;\n}\n\ndeclare var PopStateEvent: {\n    prototype: PopStateEvent;\n    new(type: string, eventInitDict?: PopStateEventInit): PopStateEvent;\n};\n\n/** A processing instruction embeds application-specific instructions in XML which can be ignored by other applications that don\'t recognize them. */\ninterface ProcessingInstruction extends CharacterData, LinkStyle {\n    readonly ownerDocument: Document;\n    readonly target: string;\n}\n\ndeclare var ProcessingInstruction: {\n    prototype: ProcessingInstruction;\n    new(): ProcessingInstruction;\n};\n\n/** Events measuring progress of an underlying process, like an HTTP request (for an XMLHttpRequest, or the loading of the underlying resource of an <img>, <audio>, <video>, <style> or <link>). */\ninterface ProgressEvent<T extends EventTarget = EventTarget> extends Event {\n    readonly lengthComputable: boolean;\n    readonly loaded: number;\n    readonly target: T | null;\n    readonly total: number;\n}\n\ndeclare var ProgressEvent: {\n    prototype: ProgressEvent;\n    new(type: string, eventInitDict?: ProgressEventInit): ProgressEvent;\n};\n\ninterface PromiseRejectionEvent extends Event {\n    readonly promise: Promise<any>;\n    readonly reason: any;\n}\n\ndeclare var PromiseRejectionEvent: {\n    prototype: PromiseRejectionEvent;\n    new(type: string, eventInitDict: PromiseRejectionEventInit): PromiseRejectionEvent;\n};\n\n/** Available only in secure contexts. */\ninterface PublicKeyCredential extends Credential {\n    readonly rawId: ArrayBuffer;\n    readonly response: AuthenticatorResponse;\n    getClientExtensionResults(): AuthenticationExtensionsClientOutputs;\n}\n\ndeclare var PublicKeyCredential: {\n    prototype: PublicKeyCredential;\n    new(): PublicKeyCredential;\n    isUserVerifyingPlatformAuthenticatorAvailable(): Promise<boolean>;\n};\n\n/**\n * This Push API interface provides a way to receive notifications from third-party servers as well as request URLs for push notifications.\n * Available only in secure contexts.\n */\ninterface PushManager {\n    getSubscription(): Promise<PushSubscription | null>;\n    permissionState(options?: PushSubscriptionOptionsInit): Promise<PermissionState>;\n    subscribe(options?: PushSubscriptionOptionsInit): Promise<PushSubscription>;\n}\n\ndeclare var PushManager: {\n    prototype: PushManager;\n    new(): PushManager;\n    readonly supportedContentEncodings: ReadonlyArray<string>;\n};\n\n/**\n * This Push API interface provides a subcription\'s URL endpoint and allows unsubscription from a push service.\n * Available only in secure contexts.\n */\ninterface PushSubscription {\n    readonly endpoint: string;\n    readonly options: PushSubscriptionOptions;\n    getKey(name: PushEncryptionKeyName): ArrayBuffer | null;\n    toJSON(): PushSubscriptionJSON;\n    unsubscribe(): Promise<boolean>;\n}\n\ndeclare var PushSubscription: {\n    prototype: PushSubscription;\n    new(): PushSubscription;\n};\n\n/** Available only in secure contexts. */\ninterface PushSubscriptionOptions {\n    readonly applicationServerKey: ArrayBuffer | null;\n}\n\ndeclare var PushSubscriptionOptions: {\n    prototype: PushSubscriptionOptions;\n    new(): PushSubscriptionOptions;\n};\n\ninterface RTCCertificate {\n    readonly expires: EpochTimeStamp;\n    getFingerprints(): RTCDtlsFingerprint[];\n}\n\ndeclare var RTCCertificate: {\n    prototype: RTCCertificate;\n    new(): RTCCertificate;\n};\n\ninterface RTCDTMFSenderEventMap {\n    "tonechange": RTCDTMFToneChangeEvent;\n}\n\ninterface RTCDTMFSender extends EventTarget {\n    readonly canInsertDTMF: boolean;\n    ontonechange: ((this: RTCDTMFSender, ev: RTCDTMFToneChangeEvent) => any) | null;\n    readonly toneBuffer: string;\n    insertDTMF(tones: string, duration?: number, interToneGap?: number): void;\n    addEventListener<K extends keyof RTCDTMFSenderEventMap>(type: K, listener: (this: RTCDTMFSender, ev: RTCDTMFSenderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof RTCDTMFSenderEventMap>(type: K, listener: (this: RTCDTMFSender, ev: RTCDTMFSenderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var RTCDTMFSender: {\n    prototype: RTCDTMFSender;\n    new(): RTCDTMFSender;\n};\n\n/** Events sent to indicate that DTMF tones have started or finished playing. This interface is used by the tonechange event. */\ninterface RTCDTMFToneChangeEvent extends Event {\n    readonly tone: string;\n}\n\ndeclare var RTCDTMFToneChangeEvent: {\n    prototype: RTCDTMFToneChangeEvent;\n    new(type: string, eventInitDict?: RTCDTMFToneChangeEventInit): RTCDTMFToneChangeEvent;\n};\n\ninterface RTCDataChannelEventMap {\n    "bufferedamountlow": Event;\n    "close": Event;\n    "error": Event;\n    "message": MessageEvent;\n    "open": Event;\n}\n\ninterface RTCDataChannel extends EventTarget {\n    binaryType: BinaryType;\n    readonly bufferedAmount: number;\n    bufferedAmountLowThreshold: number;\n    readonly id: number | null;\n    readonly label: string;\n    readonly maxPacketLifeTime: number | null;\n    readonly maxRetransmits: number | null;\n    readonly negotiated: boolean;\n    onbufferedamountlow: ((this: RTCDataChannel, ev: Event) => any) | null;\n    onclose: ((this: RTCDataChannel, ev: Event) => any) | null;\n    onerror: ((this: RTCDataChannel, ev: Event) => any) | null;\n    onmessage: ((this: RTCDataChannel, ev: MessageEvent) => any) | null;\n    onopen: ((this: RTCDataChannel, ev: Event) => any) | null;\n    readonly ordered: boolean;\n    readonly protocol: string;\n    readonly readyState: RTCDataChannelState;\n    close(): void;\n    send(data: string): void;\n    send(data: Blob): void;\n    send(data: ArrayBuffer): void;\n    send(data: ArrayBufferView): void;\n    addEventListener<K extends keyof RTCDataChannelEventMap>(type: K, listener: (this: RTCDataChannel, ev: RTCDataChannelEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof RTCDataChannelEventMap>(type: K, listener: (this: RTCDataChannel, ev: RTCDataChannelEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var RTCDataChannel: {\n    prototype: RTCDataChannel;\n    new(): RTCDataChannel;\n};\n\ninterface RTCDataChannelEvent extends Event {\n    readonly channel: RTCDataChannel;\n}\n\ndeclare var RTCDataChannelEvent: {\n    prototype: RTCDataChannelEvent;\n    new(type: string, eventInitDict: RTCDataChannelEventInit): RTCDataChannelEvent;\n};\n\ninterface RTCDtlsTransportEventMap {\n    "statechange": Event;\n}\n\ninterface RTCDtlsTransport extends EventTarget {\n    onstatechange: ((this: RTCDtlsTransport, ev: Event) => any) | null;\n    readonly state: RTCDtlsTransportState;\n    addEventListener<K extends keyof RTCDtlsTransportEventMap>(type: K, listener: (this: RTCDtlsTransport, ev: RTCDtlsTransportEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof RTCDtlsTransportEventMap>(type: K, listener: (this: RTCDtlsTransport, ev: RTCDtlsTransportEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var RTCDtlsTransport: {\n    prototype: RTCDtlsTransport;\n    new(): RTCDtlsTransport;\n};\n\n/** The RTCIceCandidate interface—part of the WebRTC API—represents a candidate Internet Connectivity Establishment (ICE) configuration which may be used to establish an RTCPeerConnection. */\ninterface RTCIceCandidate {\n    readonly address: string | null;\n    readonly candidate: string;\n    readonly component: RTCIceComponent | null;\n    readonly foundation: string | null;\n    readonly port: number | null;\n    readonly priority: number | null;\n    readonly protocol: RTCIceProtocol | null;\n    readonly relatedAddress: string | null;\n    readonly relatedPort: number | null;\n    readonly sdpMLineIndex: number | null;\n    readonly sdpMid: string | null;\n    readonly tcpType: RTCIceTcpCandidateType | null;\n    readonly type: RTCIceCandidateType | null;\n    readonly usernameFragment: string | null;\n    toJSON(): RTCIceCandidateInit;\n}\n\ndeclare var RTCIceCandidate: {\n    prototype: RTCIceCandidate;\n    new(candidateInitDict?: RTCIceCandidateInit): RTCIceCandidate;\n};\n\n/** Provides access to information about the ICE transport layer over which the data is being sent and received. */\ninterface RTCIceTransport extends EventTarget {\n    readonly gatheringState: RTCIceGathererState;\n    readonly state: RTCIceTransportState;\n}\n\ndeclare var RTCIceTransport: {\n    prototype: RTCIceTransport;\n    new(): RTCIceTransport;\n};\n\ninterface RTCPeerConnectionEventMap {\n    "connectionstatechange": Event;\n    "datachannel": RTCDataChannelEvent;\n    "icecandidate": RTCPeerConnectionIceEvent;\n    "icecandidateerror": Event;\n    "iceconnectionstatechange": Event;\n    "icegatheringstatechange": Event;\n    "negotiationneeded": Event;\n    "signalingstatechange": Event;\n    "track": RTCTrackEvent;\n}\n\n/** A WebRTC connection between the local computer and a remote peer. It provides methods to connect to a remote peer, maintain and monitor the connection, and close the connection once it\'s no longer needed. */\ninterface RTCPeerConnection extends EventTarget {\n    readonly canTrickleIceCandidates: boolean | null;\n    readonly connectionState: RTCPeerConnectionState;\n    readonly currentLocalDescription: RTCSessionDescription | null;\n    readonly currentRemoteDescription: RTCSessionDescription | null;\n    readonly iceConnectionState: RTCIceConnectionState;\n    readonly iceGatheringState: RTCIceGatheringState;\n    readonly localDescription: RTCSessionDescription | null;\n    onconnectionstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;\n    ondatachannel: ((this: RTCPeerConnection, ev: RTCDataChannelEvent) => any) | null;\n    onicecandidate: ((this: RTCPeerConnection, ev: RTCPeerConnectionIceEvent) => any) | null;\n    onicecandidateerror: ((this: RTCPeerConnection, ev: Event) => any) | null;\n    oniceconnectionstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;\n    onicegatheringstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;\n    onnegotiationneeded: ((this: RTCPeerConnection, ev: Event) => any) | null;\n    onsignalingstatechange: ((this: RTCPeerConnection, ev: Event) => any) | null;\n    ontrack: ((this: RTCPeerConnection, ev: RTCTrackEvent) => any) | null;\n    readonly pendingLocalDescription: RTCSessionDescription | null;\n    readonly pendingRemoteDescription: RTCSessionDescription | null;\n    readonly remoteDescription: RTCSessionDescription | null;\n    readonly signalingState: RTCSignalingState;\n    addIceCandidate(candidate?: RTCIceCandidateInit): Promise<void>;\n    /** @deprecated */\n    addIceCandidate(candidate: RTCIceCandidateInit, successCallback: VoidFunction, failureCallback: RTCPeerConnectionErrorCallback): Promise<void>;\n    addTrack(track: MediaStreamTrack, ...streams: MediaStream[]): RTCRtpSender;\n    addTransceiver(trackOrKind: MediaStreamTrack | string, init?: RTCRtpTransceiverInit): RTCRtpTransceiver;\n    close(): void;\n    createAnswer(options?: RTCAnswerOptions): Promise<RTCSessionDescriptionInit>;\n    /** @deprecated */\n    createAnswer(successCallback: RTCSessionDescriptionCallback, failureCallback: RTCPeerConnectionErrorCallback): Promise<void>;\n    createDataChannel(label: string, dataChannelDict?: RTCDataChannelInit): RTCDataChannel;\n    createOffer(options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit>;\n    /** @deprecated */\n    createOffer(successCallback: RTCSessionDescriptionCallback, failureCallback: RTCPeerConnectionErrorCallback, options?: RTCOfferOptions): Promise<void>;\n    getConfiguration(): RTCConfiguration;\n    getReceivers(): RTCRtpReceiver[];\n    getSenders(): RTCRtpSender[];\n    getStats(selector?: MediaStreamTrack | null): Promise<RTCStatsReport>;\n    getTransceivers(): RTCRtpTransceiver[];\n    removeTrack(sender: RTCRtpSender): void;\n    restartIce(): void;\n    setConfiguration(configuration?: RTCConfiguration): void;\n    setLocalDescription(description?: RTCLocalSessionDescriptionInit): Promise<void>;\n    /** @deprecated */\n    setLocalDescription(description: RTCLocalSessionDescriptionInit, successCallback: VoidFunction, failureCallback: RTCPeerConnectionErrorCallback): Promise<void>;\n    setRemoteDescription(description: RTCSessionDescriptionInit): Promise<void>;\n    /** @deprecated */\n    setRemoteDescription(description: RTCSessionDescriptionInit, successCallback: VoidFunction, failureCallback: RTCPeerConnectionErrorCallback): Promise<void>;\n    addEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: RTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof RTCPeerConnectionEventMap>(type: K, listener: (this: RTCPeerConnection, ev: RTCPeerConnectionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var RTCPeerConnection: {\n    prototype: RTCPeerConnection;\n    new(configuration?: RTCConfiguration): RTCPeerConnection;\n    generateCertificate(keygenAlgorithm: AlgorithmIdentifier): Promise<RTCCertificate>;\n};\n\ninterface RTCPeerConnectionIceErrorEvent extends Event {\n    readonly address: string | null;\n    readonly errorCode: number;\n    readonly errorText: string;\n    readonly port: number | null;\n    readonly url: string;\n}\n\ndeclare var RTCPeerConnectionIceErrorEvent: {\n    prototype: RTCPeerConnectionIceErrorEvent;\n    new(type: string, eventInitDict: RTCPeerConnectionIceErrorEventInit): RTCPeerConnectionIceErrorEvent;\n};\n\n/** Events that occurs in relation to ICE candidates with the target, usually an RTCPeerConnection. Only one event is of this type: icecandidate. */\ninterface RTCPeerConnectionIceEvent extends Event {\n    readonly candidate: RTCIceCandidate | null;\n}\n\ndeclare var RTCPeerConnectionIceEvent: {\n    prototype: RTCPeerConnectionIceEvent;\n    new(type: string, eventInitDict?: RTCPeerConnectionIceEventInit): RTCPeerConnectionIceEvent;\n};\n\n/** This WebRTC API interface manages the reception and decoding of data for a MediaStreamTrack on an RTCPeerConnection. */\ninterface RTCRtpReceiver {\n    readonly track: MediaStreamTrack;\n    readonly transport: RTCDtlsTransport | null;\n    getContributingSources(): RTCRtpContributingSource[];\n    getParameters(): RTCRtpReceiveParameters;\n    getStats(): Promise<RTCStatsReport>;\n    getSynchronizationSources(): RTCRtpSynchronizationSource[];\n}\n\ndeclare var RTCRtpReceiver: {\n    prototype: RTCRtpReceiver;\n    new(): RTCRtpReceiver;\n    getCapabilities(kind: string): RTCRtpCapabilities | null;\n};\n\n/** Provides the ability to control and obtain details about how a particular MediaStreamTrack is encoded and sent to a remote peer. */\ninterface RTCRtpSender {\n    readonly dtmf: RTCDTMFSender | null;\n    readonly track: MediaStreamTrack | null;\n    readonly transport: RTCDtlsTransport | null;\n    getParameters(): RTCRtpSendParameters;\n    getStats(): Promise<RTCStatsReport>;\n    replaceTrack(withTrack: MediaStreamTrack | null): Promise<void>;\n    setParameters(parameters: RTCRtpSendParameters): Promise<void>;\n    setStreams(...streams: MediaStream[]): void;\n}\n\ndeclare var RTCRtpSender: {\n    prototype: RTCRtpSender;\n    new(): RTCRtpSender;\n    getCapabilities(kind: string): RTCRtpCapabilities | null;\n};\n\ninterface RTCRtpTransceiver {\n    readonly currentDirection: RTCRtpTransceiverDirection | null;\n    direction: RTCRtpTransceiverDirection;\n    readonly mid: string | null;\n    readonly receiver: RTCRtpReceiver;\n    readonly sender: RTCRtpSender;\n    setCodecPreferences(codecs: RTCRtpCodecCapability[]): void;\n    stop(): void;\n}\n\ndeclare var RTCRtpTransceiver: {\n    prototype: RTCRtpTransceiver;\n    new(): RTCRtpTransceiver;\n};\n\n/** One end of a connection—or potential connection—and how it\'s configured. Each RTCSessionDescription consists of a description type indicating which part of the offer/answer negotiation process it describes and of the SDP descriptor of the session. */\ninterface RTCSessionDescription {\n    readonly sdp: string;\n    readonly type: RTCSdpType;\n    toJSON(): any;\n}\n\ndeclare var RTCSessionDescription: {\n    prototype: RTCSessionDescription;\n    new(descriptionInitDict: RTCSessionDescriptionInit): RTCSessionDescription;\n};\n\ninterface RTCStatsReport {\n    forEach(callbackfn: (value: any, key: string, parent: RTCStatsReport) => void, thisArg?: any): void;\n}\n\ndeclare var RTCStatsReport: {\n    prototype: RTCStatsReport;\n    new(): RTCStatsReport;\n};\n\ninterface RTCTrackEvent extends Event {\n    readonly receiver: RTCRtpReceiver;\n    readonly streams: ReadonlyArray<MediaStream>;\n    readonly track: MediaStreamTrack;\n    readonly transceiver: RTCRtpTransceiver;\n}\n\ndeclare var RTCTrackEvent: {\n    prototype: RTCTrackEvent;\n    new(type: string, eventInitDict: RTCTrackEventInit): RTCTrackEvent;\n};\n\ninterface RadioNodeList extends NodeList {\n    value: string;\n}\n\ndeclare var RadioNodeList: {\n    prototype: RadioNodeList;\n    new(): RadioNodeList;\n};\n\n/** A fragment of a document that can contain nodes and parts of text nodes. */\ninterface Range extends AbstractRange {\n    /** Returns the node, furthest away from the document, that is an ancestor of both range\'s start node and end node. */\n    readonly commonAncestorContainer: Node;\n    cloneContents(): DocumentFragment;\n    cloneRange(): Range;\n    collapse(toStart?: boolean): void;\n    compareBoundaryPoints(how: number, sourceRange: Range): number;\n    /** Returns −1 if the point is before the range, 0 if the point is in the range, and 1 if the point is after the range. */\n    comparePoint(node: Node, offset: number): number;\n    createContextualFragment(fragment: string): DocumentFragment;\n    deleteContents(): void;\n    detach(): void;\n    extractContents(): DocumentFragment;\n    getBoundingClientRect(): DOMRect;\n    getClientRects(): DOMRectList;\n    insertNode(node: Node): void;\n    /** Returns whether range intersects node. */\n    intersectsNode(node: Node): boolean;\n    isPointInRange(node: Node, offset: number): boolean;\n    selectNode(node: Node): void;\n    selectNodeContents(node: Node): void;\n    setEnd(node: Node, offset: number): void;\n    setEndAfter(node: Node): void;\n    setEndBefore(node: Node): void;\n    setStart(node: Node, offset: number): void;\n    setStartAfter(node: Node): void;\n    setStartBefore(node: Node): void;\n    surroundContents(newParent: Node): void;\n    toString(): string;\n    readonly END_TO_END: number;\n    readonly END_TO_START: number;\n    readonly START_TO_END: number;\n    readonly START_TO_START: number;\n}\n\ndeclare var Range: {\n    prototype: Range;\n    new(): Range;\n    readonly END_TO_END: number;\n    readonly END_TO_START: number;\n    readonly START_TO_END: number;\n    readonly START_TO_START: number;\n    toString(): string;\n};\n\n/** This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object. */\ninterface ReadableStream<R = any> {\n    readonly locked: boolean;\n    cancel(reason?: any): Promise<void>;\n    getReader(): ReadableStreamDefaultReader<R>;\n    pipeThrough<T>(transform: ReadableWritablePair<T, R>, options?: StreamPipeOptions): ReadableStream<T>;\n    pipeTo(destination: WritableStream<R>, options?: StreamPipeOptions): Promise<void>;\n    tee(): [ReadableStream<R>, ReadableStream<R>];\n}\n\ndeclare var ReadableStream: {\n    prototype: ReadableStream;\n    new<R = any>(underlyingSource?: UnderlyingSource<R>, strategy?: QueuingStrategy<R>): ReadableStream<R>;\n};\n\ninterface ReadableStreamDefaultController<R = any> {\n    readonly desiredSize: number | null;\n    close(): void;\n    enqueue(chunk?: R): void;\n    error(e?: any): void;\n}\n\ndeclare var ReadableStreamDefaultController: {\n    prototype: ReadableStreamDefaultController;\n    new(): ReadableStreamDefaultController;\n};\n\ninterface ReadableStreamDefaultReader<R = any> extends ReadableStreamGenericReader {\n    read(): Promise<ReadableStreamDefaultReadResult<R>>;\n    releaseLock(): void;\n}\n\ndeclare var ReadableStreamDefaultReader: {\n    prototype: ReadableStreamDefaultReader;\n    new<R = any>(stream: ReadableStream<R>): ReadableStreamDefaultReader<R>;\n};\n\ninterface ReadableStreamGenericReader {\n    readonly closed: Promise<undefined>;\n    cancel(reason?: any): Promise<void>;\n}\n\ninterface RemotePlaybackEventMap {\n    "connect": Event;\n    "connecting": Event;\n    "disconnect": Event;\n}\n\ninterface RemotePlayback extends EventTarget {\n    onconnect: ((this: RemotePlayback, ev: Event) => any) | null;\n    onconnecting: ((this: RemotePlayback, ev: Event) => any) | null;\n    ondisconnect: ((this: RemotePlayback, ev: Event) => any) | null;\n    readonly state: RemotePlaybackState;\n    cancelWatchAvailability(id?: number): Promise<void>;\n    prompt(): Promise<void>;\n    watchAvailability(callback: RemotePlaybackAvailabilityCallback): Promise<number>;\n    addEventListener<K extends keyof RemotePlaybackEventMap>(type: K, listener: (this: RemotePlayback, ev: RemotePlaybackEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof RemotePlaybackEventMap>(type: K, listener: (this: RemotePlayback, ev: RemotePlaybackEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var RemotePlayback: {\n    prototype: RemotePlayback;\n    new(): RemotePlayback;\n};\n\n/** This Fetch API interface represents a resource request. */\ninterface Request extends Body {\n    /** Returns the cache mode associated with request, which is a string indicating how the request will interact with the browser\'s cache when fetching. */\n    readonly cache: RequestCache;\n    /** Returns the credentials mode associated with request, which is a string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. */\n    readonly credentials: RequestCredentials;\n    /** Returns the kind of resource requested by request, e.g., "document" or "script". */\n    readonly destination: RequestDestination;\n    /** Returns a Headers object consisting of the headers associated with request. Note that headers added in the network layer by the user agent will not be accounted for in this object, e.g., the "Host" header. */\n    readonly headers: Headers;\n    /** Returns request\'s subresource integrity metadata, which is a cryptographic hash of the resource being fetched. Its value consists of multiple hashes separated by whitespace. [SRI] */\n    readonly integrity: string;\n    /** Returns a boolean indicating whether or not request can outlive the global in which it was created. */\n    readonly keepalive: boolean;\n    /** Returns request\'s HTTP method, which is "GET" by default. */\n    readonly method: string;\n    /** Returns the mode associated with request, which is a string indicating whether the request will use CORS, or will be restricted to same-origin URLs. */\n    readonly mode: RequestMode;\n    /** Returns the redirect mode associated with request, which is a string indicating how redirects for the request will be handled during fetching. A request will follow redirects by default. */\n    readonly redirect: RequestRedirect;\n    /** Returns the referrer of request. Its value can be a same-origin URL if explicitly set in init, the empty string to indicate no referrer, and "about:client" when defaulting to the global\'s default. This is used during fetching to determine the value of the `Referer` header of the request being made. */\n    readonly referrer: string;\n    /** Returns the referrer policy associated with request. This is used during fetching to compute the value of the request\'s referrer. */\n    readonly referrerPolicy: ReferrerPolicy;\n    /** Returns the signal associated with request, which is an AbortSignal object indicating whether or not request has been aborted, and its abort event handler. */\n    readonly signal: AbortSignal;\n    /** Returns the URL of request as a string. */\n    readonly url: string;\n    clone(): Request;\n}\n\ndeclare var Request: {\n    prototype: Request;\n    new(input: RequestInfo, init?: RequestInit): Request;\n};\n\ninterface ResizeObserver {\n    disconnect(): void;\n    observe(target: Element, options?: ResizeObserverOptions): void;\n    unobserve(target: Element): void;\n}\n\ndeclare var ResizeObserver: {\n    prototype: ResizeObserver;\n    new(callback: ResizeObserverCallback): ResizeObserver;\n};\n\ninterface ResizeObserverEntry {\n    readonly borderBoxSize: ReadonlyArray<ResizeObserverSize>;\n    readonly contentBoxSize: ReadonlyArray<ResizeObserverSize>;\n    readonly contentRect: DOMRectReadOnly;\n    readonly devicePixelContentBoxSize: ReadonlyArray<ResizeObserverSize>;\n    readonly target: Element;\n}\n\ndeclare var ResizeObserverEntry: {\n    prototype: ResizeObserverEntry;\n    new(): ResizeObserverEntry;\n};\n\ninterface ResizeObserverSize {\n    readonly blockSize: number;\n    readonly inlineSize: number;\n}\n\ndeclare var ResizeObserverSize: {\n    prototype: ResizeObserverSize;\n    new(): ResizeObserverSize;\n};\n\n/** This Fetch API interface represents the response to a request. */\ninterface Response extends Body {\n    readonly headers: Headers;\n    readonly ok: boolean;\n    readonly redirected: boolean;\n    readonly status: number;\n    readonly statusText: string;\n    readonly type: ResponseType;\n    readonly url: string;\n    clone(): Response;\n}\n\ndeclare var Response: {\n    prototype: Response;\n    new(body?: BodyInit | null, init?: ResponseInit): Response;\n    error(): Response;\n    redirect(url: string | URL, status?: number): Response;\n};\n\n/** Provides access to the properties of <a> element, as well as methods to manipulate them. */\ninterface SVGAElement extends SVGGraphicsElement, SVGURIReference {\n    rel: string;\n    readonly relList: DOMTokenList;\n    readonly target: SVGAnimatedString;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGAElement: {\n    prototype: SVGAElement;\n    new(): SVGAElement;\n};\n\n/** Used to represent a value that can be an <angle> or <number> value. An SVGAngle reflected through the animVal attribute is always read only. */\ninterface SVGAngle {\n    readonly unitType: number;\n    value: number;\n    valueAsString: string;\n    valueInSpecifiedUnits: number;\n    convertToSpecifiedUnits(unitType: number): void;\n    newValueSpecifiedUnits(unitType: number, valueInSpecifiedUnits: number): void;\n    readonly SVG_ANGLETYPE_DEG: number;\n    readonly SVG_ANGLETYPE_GRAD: number;\n    readonly SVG_ANGLETYPE_RAD: number;\n    readonly SVG_ANGLETYPE_UNKNOWN: number;\n    readonly SVG_ANGLETYPE_UNSPECIFIED: number;\n}\n\ndeclare var SVGAngle: {\n    prototype: SVGAngle;\n    new(): SVGAngle;\n    readonly SVG_ANGLETYPE_DEG: number;\n    readonly SVG_ANGLETYPE_GRAD: number;\n    readonly SVG_ANGLETYPE_RAD: number;\n    readonly SVG_ANGLETYPE_UNKNOWN: number;\n    readonly SVG_ANGLETYPE_UNSPECIFIED: number;\n};\n\ninterface SVGAnimateElement extends SVGAnimationElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimateElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimateElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGAnimateElement: {\n    prototype: SVGAnimateElement;\n    new(): SVGAnimateElement;\n};\n\ninterface SVGAnimateMotionElement extends SVGAnimationElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimateMotionElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimateMotionElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGAnimateMotionElement: {\n    prototype: SVGAnimateMotionElement;\n    new(): SVGAnimateMotionElement;\n};\n\ninterface SVGAnimateTransformElement extends SVGAnimationElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimateTransformElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimateTransformElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGAnimateTransformElement: {\n    prototype: SVGAnimateTransformElement;\n    new(): SVGAnimateTransformElement;\n};\n\n/** Used for attributes of basic type <angle> which can be animated. */\ninterface SVGAnimatedAngle {\n    readonly animVal: SVGAngle;\n    readonly baseVal: SVGAngle;\n}\n\ndeclare var SVGAnimatedAngle: {\n    prototype: SVGAnimatedAngle;\n    new(): SVGAnimatedAngle;\n};\n\n/** Used for attributes of type boolean which can be animated. */\ninterface SVGAnimatedBoolean {\n    readonly animVal: boolean;\n    baseVal: boolean;\n}\n\ndeclare var SVGAnimatedBoolean: {\n    prototype: SVGAnimatedBoolean;\n    new(): SVGAnimatedBoolean;\n};\n\n/** Used for attributes whose value must be a constant from a particular enumeration and which can be animated. */\ninterface SVGAnimatedEnumeration {\n    readonly animVal: number;\n    baseVal: number;\n}\n\ndeclare var SVGAnimatedEnumeration: {\n    prototype: SVGAnimatedEnumeration;\n    new(): SVGAnimatedEnumeration;\n};\n\n/** Used for attributes of basic type <integer> which can be animated. */\ninterface SVGAnimatedInteger {\n    readonly animVal: number;\n    baseVal: number;\n}\n\ndeclare var SVGAnimatedInteger: {\n    prototype: SVGAnimatedInteger;\n    new(): SVGAnimatedInteger;\n};\n\n/** Used for attributes of basic type <length> which can be animated. */\ninterface SVGAnimatedLength {\n    readonly animVal: SVGLength;\n    readonly baseVal: SVGLength;\n}\n\ndeclare var SVGAnimatedLength: {\n    prototype: SVGAnimatedLength;\n    new(): SVGAnimatedLength;\n};\n\n/** Used for attributes of type SVGLengthList which can be animated. */\ninterface SVGAnimatedLengthList {\n    readonly animVal: SVGLengthList;\n    readonly baseVal: SVGLengthList;\n}\n\ndeclare var SVGAnimatedLengthList: {\n    prototype: SVGAnimatedLengthList;\n    new(): SVGAnimatedLengthList;\n};\n\n/** Used for attributes of basic type <Number> which can be animated. */\ninterface SVGAnimatedNumber {\n    readonly animVal: number;\n    baseVal: number;\n}\n\ndeclare var SVGAnimatedNumber: {\n    prototype: SVGAnimatedNumber;\n    new(): SVGAnimatedNumber;\n};\n\n/** The SVGAnimatedNumber interface is used for attributes which take a list of numbers and which can be animated. */\ninterface SVGAnimatedNumberList {\n    readonly animVal: SVGNumberList;\n    readonly baseVal: SVGNumberList;\n}\n\ndeclare var SVGAnimatedNumberList: {\n    prototype: SVGAnimatedNumberList;\n    new(): SVGAnimatedNumberList;\n};\n\ninterface SVGAnimatedPoints {\n    readonly animatedPoints: SVGPointList;\n    readonly points: SVGPointList;\n}\n\n/** Used for attributes of type SVGPreserveAspectRatio which can be animated. */\ninterface SVGAnimatedPreserveAspectRatio {\n    readonly animVal: SVGPreserveAspectRatio;\n    readonly baseVal: SVGPreserveAspectRatio;\n}\n\ndeclare var SVGAnimatedPreserveAspectRatio: {\n    prototype: SVGAnimatedPreserveAspectRatio;\n    new(): SVGAnimatedPreserveAspectRatio;\n};\n\n/** Used for attributes of basic SVGRect which can be animated. */\ninterface SVGAnimatedRect {\n    readonly animVal: DOMRectReadOnly;\n    readonly baseVal: DOMRect;\n}\n\ndeclare var SVGAnimatedRect: {\n    prototype: SVGAnimatedRect;\n    new(): SVGAnimatedRect;\n};\n\n/** The SVGAnimatedString interface represents string attributes which can be animated from each SVG declaration. You need to create SVG attribute before doing anything else, everything should be declared inside this. */\ninterface SVGAnimatedString {\n    readonly animVal: string;\n    baseVal: string;\n}\n\ndeclare var SVGAnimatedString: {\n    prototype: SVGAnimatedString;\n    new(): SVGAnimatedString;\n};\n\n/** Used for attributes which take a list of numbers and which can be animated. */\ninterface SVGAnimatedTransformList {\n    readonly animVal: SVGTransformList;\n    readonly baseVal: SVGTransformList;\n}\n\ndeclare var SVGAnimatedTransformList: {\n    prototype: SVGAnimatedTransformList;\n    new(): SVGAnimatedTransformList;\n};\n\ninterface SVGAnimationElement extends SVGElement, SVGTests {\n    readonly targetElement: SVGElement | null;\n    beginElement(): void;\n    beginElementAt(offset: number): void;\n    endElement(): void;\n    endElementAt(offset: number): void;\n    getCurrentTime(): number;\n    getSimpleDuration(): number;\n    getStartTime(): number;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimationElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGAnimationElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGAnimationElement: {\n    prototype: SVGAnimationElement;\n    new(): SVGAnimationElement;\n};\n\n/** An interface for the <circle> element. The circle element is defined by the cx and cy attributes that denote the coordinates of the centre of the circle. */\ninterface SVGCircleElement extends SVGGeometryElement {\n    readonly cx: SVGAnimatedLength;\n    readonly cy: SVGAnimatedLength;\n    readonly r: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGCircleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGCircleElement: {\n    prototype: SVGCircleElement;\n    new(): SVGCircleElement;\n};\n\n/** Provides access to the properties of <clipPath> elements, as well as methods to manipulate them. */\ninterface SVGClipPathElement extends SVGElement {\n    readonly clipPathUnits: SVGAnimatedEnumeration;\n    readonly transform: SVGAnimatedTransformList;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGClipPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGClipPathElement: {\n    prototype: SVGClipPathElement;\n    new(): SVGClipPathElement;\n};\n\n/** A base interface used by the component transfer function interfaces. */\ninterface SVGComponentTransferFunctionElement extends SVGElement {\n    readonly amplitude: SVGAnimatedNumber;\n    readonly exponent: SVGAnimatedNumber;\n    readonly intercept: SVGAnimatedNumber;\n    readonly offset: SVGAnimatedNumber;\n    readonly slope: SVGAnimatedNumber;\n    readonly tableValues: SVGAnimatedNumberList;\n    readonly type: SVGAnimatedEnumeration;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: number;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: number;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: number;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: number;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_TABLE: number;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: number;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGComponentTransferFunctionElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGComponentTransferFunctionElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGComponentTransferFunctionElement: {\n    prototype: SVGComponentTransferFunctionElement;\n    new(): SVGComponentTransferFunctionElement;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE: number;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_GAMMA: number;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY: number;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_LINEAR: number;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_TABLE: number;\n    readonly SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN: number;\n};\n\n/** Corresponds to the <defs> element. */\ninterface SVGDefsElement extends SVGGraphicsElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDefsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGDefsElement: {\n    prototype: SVGDefsElement;\n    new(): SVGDefsElement;\n};\n\n/** Corresponds to the <desc> element. */\ninterface SVGDescElement extends SVGElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGDescElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGDescElement: {\n    prototype: SVGDescElement;\n    new(): SVGDescElement;\n};\n\ninterface SVGElementEventMap extends ElementEventMap, DocumentAndElementEventHandlersEventMap, GlobalEventHandlersEventMap {\n}\n\n/** All of the SVG DOM interfaces that correspond directly to elements in the SVG language derive from the SVGElement interface. */\ninterface SVGElement extends Element, DocumentAndElementEventHandlers, ElementCSSInlineStyle, GlobalEventHandlers, HTMLOrSVGElement {\n    /** @deprecated */\n    readonly className: any;\n    readonly ownerSVGElement: SVGSVGElement | null;\n    readonly viewportElement: SVGElement | null;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGElement: {\n    prototype: SVGElement;\n    new(): SVGElement;\n};\n\n/** Provides access to the properties of <ellipse> elements. */\ninterface SVGEllipseElement extends SVGGeometryElement {\n    readonly cx: SVGAnimatedLength;\n    readonly cy: SVGAnimatedLength;\n    readonly rx: SVGAnimatedLength;\n    readonly ry: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGEllipseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGEllipseElement: {\n    prototype: SVGEllipseElement;\n    new(): SVGEllipseElement;\n};\n\n/** Corresponds to the <feBlend> element. */\ninterface SVGFEBlendElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly in1: SVGAnimatedString;\n    readonly in2: SVGAnimatedString;\n    readonly mode: SVGAnimatedEnumeration;\n    readonly SVG_FEBLEND_MODE_COLOR: number;\n    readonly SVG_FEBLEND_MODE_COLOR_BURN: number;\n    readonly SVG_FEBLEND_MODE_COLOR_DODGE: number;\n    readonly SVG_FEBLEND_MODE_DARKEN: number;\n    readonly SVG_FEBLEND_MODE_DIFFERENCE: number;\n    readonly SVG_FEBLEND_MODE_EXCLUSION: number;\n    readonly SVG_FEBLEND_MODE_HARD_LIGHT: number;\n    readonly SVG_FEBLEND_MODE_HUE: number;\n    readonly SVG_FEBLEND_MODE_LIGHTEN: number;\n    readonly SVG_FEBLEND_MODE_LUMINOSITY: number;\n    readonly SVG_FEBLEND_MODE_MULTIPLY: number;\n    readonly SVG_FEBLEND_MODE_NORMAL: number;\n    readonly SVG_FEBLEND_MODE_OVERLAY: number;\n    readonly SVG_FEBLEND_MODE_SATURATION: number;\n    readonly SVG_FEBLEND_MODE_SCREEN: number;\n    readonly SVG_FEBLEND_MODE_SOFT_LIGHT: number;\n    readonly SVG_FEBLEND_MODE_UNKNOWN: number;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEBlendElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEBlendElement: {\n    prototype: SVGFEBlendElement;\n    new(): SVGFEBlendElement;\n    readonly SVG_FEBLEND_MODE_COLOR: number;\n    readonly SVG_FEBLEND_MODE_COLOR_BURN: number;\n    readonly SVG_FEBLEND_MODE_COLOR_DODGE: number;\n    readonly SVG_FEBLEND_MODE_DARKEN: number;\n    readonly SVG_FEBLEND_MODE_DIFFERENCE: number;\n    readonly SVG_FEBLEND_MODE_EXCLUSION: number;\n    readonly SVG_FEBLEND_MODE_HARD_LIGHT: number;\n    readonly SVG_FEBLEND_MODE_HUE: number;\n    readonly SVG_FEBLEND_MODE_LIGHTEN: number;\n    readonly SVG_FEBLEND_MODE_LUMINOSITY: number;\n    readonly SVG_FEBLEND_MODE_MULTIPLY: number;\n    readonly SVG_FEBLEND_MODE_NORMAL: number;\n    readonly SVG_FEBLEND_MODE_OVERLAY: number;\n    readonly SVG_FEBLEND_MODE_SATURATION: number;\n    readonly SVG_FEBLEND_MODE_SCREEN: number;\n    readonly SVG_FEBLEND_MODE_SOFT_LIGHT: number;\n    readonly SVG_FEBLEND_MODE_UNKNOWN: number;\n};\n\n/** Corresponds to the <feColorMatrix> element. */\ninterface SVGFEColorMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly in1: SVGAnimatedString;\n    readonly type: SVGAnimatedEnumeration;\n    readonly values: SVGAnimatedNumberList;\n    readonly SVG_FECOLORMATRIX_TYPE_HUEROTATE: number;\n    readonly SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: number;\n    readonly SVG_FECOLORMATRIX_TYPE_MATRIX: number;\n    readonly SVG_FECOLORMATRIX_TYPE_SATURATE: number;\n    readonly SVG_FECOLORMATRIX_TYPE_UNKNOWN: number;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEColorMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEColorMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEColorMatrixElement: {\n    prototype: SVGFEColorMatrixElement;\n    new(): SVGFEColorMatrixElement;\n    readonly SVG_FECOLORMATRIX_TYPE_HUEROTATE: number;\n    readonly SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA: number;\n    readonly SVG_FECOLORMATRIX_TYPE_MATRIX: number;\n    readonly SVG_FECOLORMATRIX_TYPE_SATURATE: number;\n    readonly SVG_FECOLORMATRIX_TYPE_UNKNOWN: number;\n};\n\n/** Corresponds to the <feComponentTransfer> element. */\ninterface SVGFEComponentTransferElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly in1: SVGAnimatedString;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEComponentTransferElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEComponentTransferElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEComponentTransferElement: {\n    prototype: SVGFEComponentTransferElement;\n    new(): SVGFEComponentTransferElement;\n};\n\n/** Corresponds to the <feComposite> element. */\ninterface SVGFECompositeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly in1: SVGAnimatedString;\n    readonly in2: SVGAnimatedString;\n    readonly k1: SVGAnimatedNumber;\n    readonly k2: SVGAnimatedNumber;\n    readonly k3: SVGAnimatedNumber;\n    readonly k4: SVGAnimatedNumber;\n    readonly operator: SVGAnimatedEnumeration;\n    readonly SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: number;\n    readonly SVG_FECOMPOSITE_OPERATOR_ATOP: number;\n    readonly SVG_FECOMPOSITE_OPERATOR_IN: number;\n    readonly SVG_FECOMPOSITE_OPERATOR_OUT: number;\n    readonly SVG_FECOMPOSITE_OPERATOR_OVER: number;\n    readonly SVG_FECOMPOSITE_OPERATOR_UNKNOWN: number;\n    readonly SVG_FECOMPOSITE_OPERATOR_XOR: number;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFECompositeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFECompositeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFECompositeElement: {\n    prototype: SVGFECompositeElement;\n    new(): SVGFECompositeElement;\n    readonly SVG_FECOMPOSITE_OPERATOR_ARITHMETIC: number;\n    readonly SVG_FECOMPOSITE_OPERATOR_ATOP: number;\n    readonly SVG_FECOMPOSITE_OPERATOR_IN: number;\n    readonly SVG_FECOMPOSITE_OPERATOR_OUT: number;\n    readonly SVG_FECOMPOSITE_OPERATOR_OVER: number;\n    readonly SVG_FECOMPOSITE_OPERATOR_UNKNOWN: number;\n    readonly SVG_FECOMPOSITE_OPERATOR_XOR: number;\n};\n\n/** Corresponds to the <feConvolveMatrix> element. */\ninterface SVGFEConvolveMatrixElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly bias: SVGAnimatedNumber;\n    readonly divisor: SVGAnimatedNumber;\n    readonly edgeMode: SVGAnimatedEnumeration;\n    readonly in1: SVGAnimatedString;\n    readonly kernelMatrix: SVGAnimatedNumberList;\n    readonly kernelUnitLengthX: SVGAnimatedNumber;\n    readonly kernelUnitLengthY: SVGAnimatedNumber;\n    readonly orderX: SVGAnimatedInteger;\n    readonly orderY: SVGAnimatedInteger;\n    readonly preserveAlpha: SVGAnimatedBoolean;\n    readonly targetX: SVGAnimatedInteger;\n    readonly targetY: SVGAnimatedInteger;\n    readonly SVG_EDGEMODE_DUPLICATE: number;\n    readonly SVG_EDGEMODE_NONE: number;\n    readonly SVG_EDGEMODE_UNKNOWN: number;\n    readonly SVG_EDGEMODE_WRAP: number;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEConvolveMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEConvolveMatrixElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEConvolveMatrixElement: {\n    prototype: SVGFEConvolveMatrixElement;\n    new(): SVGFEConvolveMatrixElement;\n    readonly SVG_EDGEMODE_DUPLICATE: number;\n    readonly SVG_EDGEMODE_NONE: number;\n    readonly SVG_EDGEMODE_UNKNOWN: number;\n    readonly SVG_EDGEMODE_WRAP: number;\n};\n\n/** Corresponds to the <feDiffuseLighting> element. */\ninterface SVGFEDiffuseLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly diffuseConstant: SVGAnimatedNumber;\n    readonly in1: SVGAnimatedString;\n    readonly kernelUnitLengthX: SVGAnimatedNumber;\n    readonly kernelUnitLengthY: SVGAnimatedNumber;\n    readonly surfaceScale: SVGAnimatedNumber;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDiffuseLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDiffuseLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEDiffuseLightingElement: {\n    prototype: SVGFEDiffuseLightingElement;\n    new(): SVGFEDiffuseLightingElement;\n};\n\n/** Corresponds to the <feDisplacementMap> element. */\ninterface SVGFEDisplacementMapElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly in1: SVGAnimatedString;\n    readonly in2: SVGAnimatedString;\n    readonly scale: SVGAnimatedNumber;\n    readonly xChannelSelector: SVGAnimatedEnumeration;\n    readonly yChannelSelector: SVGAnimatedEnumeration;\n    readonly SVG_CHANNEL_A: number;\n    readonly SVG_CHANNEL_B: number;\n    readonly SVG_CHANNEL_G: number;\n    readonly SVG_CHANNEL_R: number;\n    readonly SVG_CHANNEL_UNKNOWN: number;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDisplacementMapElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDisplacementMapElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEDisplacementMapElement: {\n    prototype: SVGFEDisplacementMapElement;\n    new(): SVGFEDisplacementMapElement;\n    readonly SVG_CHANNEL_A: number;\n    readonly SVG_CHANNEL_B: number;\n    readonly SVG_CHANNEL_G: number;\n    readonly SVG_CHANNEL_R: number;\n    readonly SVG_CHANNEL_UNKNOWN: number;\n};\n\n/** Corresponds to the <feDistantLight> element. */\ninterface SVGFEDistantLightElement extends SVGElement {\n    readonly azimuth: SVGAnimatedNumber;\n    readonly elevation: SVGAnimatedNumber;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDistantLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDistantLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEDistantLightElement: {\n    prototype: SVGFEDistantLightElement;\n    new(): SVGFEDistantLightElement;\n};\n\ninterface SVGFEDropShadowElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly dx: SVGAnimatedNumber;\n    readonly dy: SVGAnimatedNumber;\n    readonly in1: SVGAnimatedString;\n    readonly stdDeviationX: SVGAnimatedNumber;\n    readonly stdDeviationY: SVGAnimatedNumber;\n    setStdDeviation(stdDeviationX: number, stdDeviationY: number): void;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDropShadowElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEDropShadowElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEDropShadowElement: {\n    prototype: SVGFEDropShadowElement;\n    new(): SVGFEDropShadowElement;\n};\n\n/** Corresponds to the <feFlood> element. */\ninterface SVGFEFloodElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFloodElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEFloodElement: {\n    prototype: SVGFEFloodElement;\n    new(): SVGFEFloodElement;\n};\n\n/** Corresponds to the <feFuncA> element. */\ninterface SVGFEFuncAElement extends SVGComponentTransferFunctionElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncAElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEFuncAElement: {\n    prototype: SVGFEFuncAElement;\n    new(): SVGFEFuncAElement;\n};\n\n/** Corresponds to the <feFuncB> element. */\ninterface SVGFEFuncBElement extends SVGComponentTransferFunctionElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncBElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEFuncBElement: {\n    prototype: SVGFEFuncBElement;\n    new(): SVGFEFuncBElement;\n};\n\n/** Corresponds to the <feFuncG> element. */\ninterface SVGFEFuncGElement extends SVGComponentTransferFunctionElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEFuncGElement: {\n    prototype: SVGFEFuncGElement;\n    new(): SVGFEFuncGElement;\n};\n\n/** Corresponds to the <feFuncR> element. */\ninterface SVGFEFuncRElement extends SVGComponentTransferFunctionElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEFuncRElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEFuncRElement: {\n    prototype: SVGFEFuncRElement;\n    new(): SVGFEFuncRElement;\n};\n\n/** Corresponds to the <feGaussianBlur> element. */\ninterface SVGFEGaussianBlurElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly in1: SVGAnimatedString;\n    readonly stdDeviationX: SVGAnimatedNumber;\n    readonly stdDeviationY: SVGAnimatedNumber;\n    setStdDeviation(stdDeviationX: number, stdDeviationY: number): void;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEGaussianBlurElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEGaussianBlurElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEGaussianBlurElement: {\n    prototype: SVGFEGaussianBlurElement;\n    new(): SVGFEGaussianBlurElement;\n};\n\n/** Corresponds to the <feImage> element. */\ninterface SVGFEImageElement extends SVGElement, SVGFilterPrimitiveStandardAttributes, SVGURIReference {\n    readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEImageElement: {\n    prototype: SVGFEImageElement;\n    new(): SVGFEImageElement;\n};\n\n/** Corresponds to the <feMerge> element. */\ninterface SVGFEMergeElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEMergeElement: {\n    prototype: SVGFEMergeElement;\n    new(): SVGFEMergeElement;\n};\n\n/** Corresponds to the <feMergeNode> element. */\ninterface SVGFEMergeNodeElement extends SVGElement {\n    readonly in1: SVGAnimatedString;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeNodeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMergeNodeElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEMergeNodeElement: {\n    prototype: SVGFEMergeNodeElement;\n    new(): SVGFEMergeNodeElement;\n};\n\n/** Corresponds to the <feMorphology> element. */\ninterface SVGFEMorphologyElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly in1: SVGAnimatedString;\n    readonly operator: SVGAnimatedEnumeration;\n    readonly radiusX: SVGAnimatedNumber;\n    readonly radiusY: SVGAnimatedNumber;\n    readonly SVG_MORPHOLOGY_OPERATOR_DILATE: number;\n    readonly SVG_MORPHOLOGY_OPERATOR_ERODE: number;\n    readonly SVG_MORPHOLOGY_OPERATOR_UNKNOWN: number;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMorphologyElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEMorphologyElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEMorphologyElement: {\n    prototype: SVGFEMorphologyElement;\n    new(): SVGFEMorphologyElement;\n    readonly SVG_MORPHOLOGY_OPERATOR_DILATE: number;\n    readonly SVG_MORPHOLOGY_OPERATOR_ERODE: number;\n    readonly SVG_MORPHOLOGY_OPERATOR_UNKNOWN: number;\n};\n\n/** Corresponds to the <feOffset> element. */\ninterface SVGFEOffsetElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly dx: SVGAnimatedNumber;\n    readonly dy: SVGAnimatedNumber;\n    readonly in1: SVGAnimatedString;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEOffsetElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEOffsetElement: {\n    prototype: SVGFEOffsetElement;\n    new(): SVGFEOffsetElement;\n};\n\n/** Corresponds to the <fePointLight> element. */\ninterface SVGFEPointLightElement extends SVGElement {\n    readonly x: SVGAnimatedNumber;\n    readonly y: SVGAnimatedNumber;\n    readonly z: SVGAnimatedNumber;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEPointLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFEPointLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFEPointLightElement: {\n    prototype: SVGFEPointLightElement;\n    new(): SVGFEPointLightElement;\n};\n\n/** Corresponds to the <feSpecularLighting> element. */\ninterface SVGFESpecularLightingElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly in1: SVGAnimatedString;\n    readonly kernelUnitLengthX: SVGAnimatedNumber;\n    readonly kernelUnitLengthY: SVGAnimatedNumber;\n    readonly specularConstant: SVGAnimatedNumber;\n    readonly specularExponent: SVGAnimatedNumber;\n    readonly surfaceScale: SVGAnimatedNumber;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpecularLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpecularLightingElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFESpecularLightingElement: {\n    prototype: SVGFESpecularLightingElement;\n    new(): SVGFESpecularLightingElement;\n};\n\n/** Corresponds to the <feSpotLight> element. */\ninterface SVGFESpotLightElement extends SVGElement {\n    readonly limitingConeAngle: SVGAnimatedNumber;\n    readonly pointsAtX: SVGAnimatedNumber;\n    readonly pointsAtY: SVGAnimatedNumber;\n    readonly pointsAtZ: SVGAnimatedNumber;\n    readonly specularExponent: SVGAnimatedNumber;\n    readonly x: SVGAnimatedNumber;\n    readonly y: SVGAnimatedNumber;\n    readonly z: SVGAnimatedNumber;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpotLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFESpotLightElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFESpotLightElement: {\n    prototype: SVGFESpotLightElement;\n    new(): SVGFESpotLightElement;\n};\n\n/** Corresponds to the <feTile> element. */\ninterface SVGFETileElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly in1: SVGAnimatedString;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETileElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFETileElement: {\n    prototype: SVGFETileElement;\n    new(): SVGFETileElement;\n};\n\n/** Corresponds to the <feTurbulence> element. */\ninterface SVGFETurbulenceElement extends SVGElement, SVGFilterPrimitiveStandardAttributes {\n    readonly baseFrequencyX: SVGAnimatedNumber;\n    readonly baseFrequencyY: SVGAnimatedNumber;\n    readonly numOctaves: SVGAnimatedInteger;\n    readonly seed: SVGAnimatedNumber;\n    readonly stitchTiles: SVGAnimatedEnumeration;\n    readonly type: SVGAnimatedEnumeration;\n    readonly SVG_STITCHTYPE_NOSTITCH: number;\n    readonly SVG_STITCHTYPE_STITCH: number;\n    readonly SVG_STITCHTYPE_UNKNOWN: number;\n    readonly SVG_TURBULENCE_TYPE_FRACTALNOISE: number;\n    readonly SVG_TURBULENCE_TYPE_TURBULENCE: number;\n    readonly SVG_TURBULENCE_TYPE_UNKNOWN: number;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETurbulenceElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFETurbulenceElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFETurbulenceElement: {\n    prototype: SVGFETurbulenceElement;\n    new(): SVGFETurbulenceElement;\n    readonly SVG_STITCHTYPE_NOSTITCH: number;\n    readonly SVG_STITCHTYPE_STITCH: number;\n    readonly SVG_STITCHTYPE_UNKNOWN: number;\n    readonly SVG_TURBULENCE_TYPE_FRACTALNOISE: number;\n    readonly SVG_TURBULENCE_TYPE_TURBULENCE: number;\n    readonly SVG_TURBULENCE_TYPE_UNKNOWN: number;\n};\n\n/** Provides access to the properties of <filter> elements, as well as methods to manipulate them. */\ninterface SVGFilterElement extends SVGElement, SVGURIReference {\n    readonly filterUnits: SVGAnimatedEnumeration;\n    readonly height: SVGAnimatedLength;\n    readonly primitiveUnits: SVGAnimatedEnumeration;\n    readonly width: SVGAnimatedLength;\n    readonly x: SVGAnimatedLength;\n    readonly y: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGFilterElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGFilterElement: {\n    prototype: SVGFilterElement;\n    new(): SVGFilterElement;\n};\n\ninterface SVGFilterPrimitiveStandardAttributes {\n    readonly height: SVGAnimatedLength;\n    readonly result: SVGAnimatedString;\n    readonly width: SVGAnimatedLength;\n    readonly x: SVGAnimatedLength;\n    readonly y: SVGAnimatedLength;\n}\n\ninterface SVGFitToViewBox {\n    readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\n    readonly viewBox: SVGAnimatedRect;\n}\n\n/** Provides access to the properties of <foreignObject> elements, as well as methods to manipulate them. */\ninterface SVGForeignObjectElement extends SVGGraphicsElement {\n    readonly height: SVGAnimatedLength;\n    readonly width: SVGAnimatedLength;\n    readonly x: SVGAnimatedLength;\n    readonly y: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGForeignObjectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGForeignObjectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGForeignObjectElement: {\n    prototype: SVGForeignObjectElement;\n    new(): SVGForeignObjectElement;\n};\n\n/** Corresponds to the <g> element. */\ninterface SVGGElement extends SVGGraphicsElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGGElement: {\n    prototype: SVGGElement;\n    new(): SVGGElement;\n};\n\ninterface SVGGeometryElement extends SVGGraphicsElement {\n    readonly pathLength: SVGAnimatedNumber;\n    getPointAtLength(distance: number): DOMPoint;\n    getTotalLength(): number;\n    isPointInFill(point?: DOMPointInit): boolean;\n    isPointInStroke(point?: DOMPointInit): boolean;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGeometryElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGeometryElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGGeometryElement: {\n    prototype: SVGGeometryElement;\n    new(): SVGGeometryElement;\n};\n\n/** The SVGGradient interface is a base interface used by SVGLinearGradientElement and SVGRadialGradientElement. */\ninterface SVGGradientElement extends SVGElement, SVGURIReference {\n    readonly gradientTransform: SVGAnimatedTransformList;\n    readonly gradientUnits: SVGAnimatedEnumeration;\n    readonly spreadMethod: SVGAnimatedEnumeration;\n    readonly SVG_SPREADMETHOD_PAD: number;\n    readonly SVG_SPREADMETHOD_REFLECT: number;\n    readonly SVG_SPREADMETHOD_REPEAT: number;\n    readonly SVG_SPREADMETHOD_UNKNOWN: number;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGGradientElement: {\n    prototype: SVGGradientElement;\n    new(): SVGGradientElement;\n    readonly SVG_SPREADMETHOD_PAD: number;\n    readonly SVG_SPREADMETHOD_REFLECT: number;\n    readonly SVG_SPREADMETHOD_REPEAT: number;\n    readonly SVG_SPREADMETHOD_UNKNOWN: number;\n};\n\n/** SVG elements whose primary purpose is to directly render graphics into a group. */\ninterface SVGGraphicsElement extends SVGElement, SVGTests {\n    readonly transform: SVGAnimatedTransformList;\n    getBBox(options?: SVGBoundingBoxOptions): DOMRect;\n    getCTM(): DOMMatrix | null;\n    getScreenCTM(): DOMMatrix | null;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGGraphicsElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGGraphicsElement: {\n    prototype: SVGGraphicsElement;\n    new(): SVGGraphicsElement;\n};\n\n/** Corresponds to the <image> element. */\ninterface SVGImageElement extends SVGGraphicsElement, SVGURIReference {\n    readonly height: SVGAnimatedLength;\n    readonly preserveAspectRatio: SVGAnimatedPreserveAspectRatio;\n    readonly width: SVGAnimatedLength;\n    readonly x: SVGAnimatedLength;\n    readonly y: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGImageElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGImageElement: {\n    prototype: SVGImageElement;\n    new(): SVGImageElement;\n};\n\n/** Correspond to the <length> basic data type. */\ninterface SVGLength {\n    readonly unitType: number;\n    value: number;\n    valueAsString: string;\n    valueInSpecifiedUnits: number;\n    convertToSpecifiedUnits(unitType: number): void;\n    newValueSpecifiedUnits(unitType: number, valueInSpecifiedUnits: number): void;\n    readonly SVG_LENGTHTYPE_CM: number;\n    readonly SVG_LENGTHTYPE_EMS: number;\n    readonly SVG_LENGTHTYPE_EXS: number;\n    readonly SVG_LENGTHTYPE_IN: number;\n    readonly SVG_LENGTHTYPE_MM: number;\n    readonly SVG_LENGTHTYPE_NUMBER: number;\n    readonly SVG_LENGTHTYPE_PC: number;\n    readonly SVG_LENGTHTYPE_PERCENTAGE: number;\n    readonly SVG_LENGTHTYPE_PT: number;\n    readonly SVG_LENGTHTYPE_PX: number;\n    readonly SVG_LENGTHTYPE_UNKNOWN: number;\n}\n\ndeclare var SVGLength: {\n    prototype: SVGLength;\n    new(): SVGLength;\n    readonly SVG_LENGTHTYPE_CM: number;\n    readonly SVG_LENGTHTYPE_EMS: number;\n    readonly SVG_LENGTHTYPE_EXS: number;\n    readonly SVG_LENGTHTYPE_IN: number;\n    readonly SVG_LENGTHTYPE_MM: number;\n    readonly SVG_LENGTHTYPE_NUMBER: number;\n    readonly SVG_LENGTHTYPE_PC: number;\n    readonly SVG_LENGTHTYPE_PERCENTAGE: number;\n    readonly SVG_LENGTHTYPE_PT: number;\n    readonly SVG_LENGTHTYPE_PX: number;\n    readonly SVG_LENGTHTYPE_UNKNOWN: number;\n};\n\n/** The SVGLengthList defines a list of SVGLength objects. */\ninterface SVGLengthList {\n    readonly length: number;\n    readonly numberOfItems: number;\n    appendItem(newItem: SVGLength): SVGLength;\n    clear(): void;\n    getItem(index: number): SVGLength;\n    initialize(newItem: SVGLength): SVGLength;\n    insertItemBefore(newItem: SVGLength, index: number): SVGLength;\n    removeItem(index: number): SVGLength;\n    replaceItem(newItem: SVGLength, index: number): SVGLength;\n    [index: number]: SVGLength;\n}\n\ndeclare var SVGLengthList: {\n    prototype: SVGLengthList;\n    new(): SVGLengthList;\n};\n\n/** Provides access to the properties of <line> elements, as well as methods to manipulate them. */\ninterface SVGLineElement extends SVGGeometryElement {\n    readonly x1: SVGAnimatedLength;\n    readonly x2: SVGAnimatedLength;\n    readonly y1: SVGAnimatedLength;\n    readonly y2: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGLineElement: {\n    prototype: SVGLineElement;\n    new(): SVGLineElement;\n};\n\n/** Corresponds to the <linearGradient> element. */\ninterface SVGLinearGradientElement extends SVGGradientElement {\n    readonly x1: SVGAnimatedLength;\n    readonly x2: SVGAnimatedLength;\n    readonly y1: SVGAnimatedLength;\n    readonly y2: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLinearGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGLinearGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGLinearGradientElement: {\n    prototype: SVGLinearGradientElement;\n    new(): SVGLinearGradientElement;\n};\n\ninterface SVGMPathElement extends SVGElement, SVGURIReference {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGMPathElement: {\n    prototype: SVGMPathElement;\n    new(): SVGMPathElement;\n};\n\ninterface SVGMarkerElement extends SVGElement, SVGFitToViewBox {\n    readonly markerHeight: SVGAnimatedLength;\n    readonly markerUnits: SVGAnimatedEnumeration;\n    readonly markerWidth: SVGAnimatedLength;\n    readonly orientAngle: SVGAnimatedAngle;\n    readonly orientType: SVGAnimatedEnumeration;\n    readonly refX: SVGAnimatedLength;\n    readonly refY: SVGAnimatedLength;\n    setOrientToAngle(angle: SVGAngle): void;\n    setOrientToAuto(): void;\n    readonly SVG_MARKERUNITS_STROKEWIDTH: number;\n    readonly SVG_MARKERUNITS_UNKNOWN: number;\n    readonly SVG_MARKERUNITS_USERSPACEONUSE: number;\n    readonly SVG_MARKER_ORIENT_ANGLE: number;\n    readonly SVG_MARKER_ORIENT_AUTO: number;\n    readonly SVG_MARKER_ORIENT_UNKNOWN: number;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMarkerElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGMarkerElement: {\n    prototype: SVGMarkerElement;\n    new(): SVGMarkerElement;\n    readonly SVG_MARKERUNITS_STROKEWIDTH: number;\n    readonly SVG_MARKERUNITS_UNKNOWN: number;\n    readonly SVG_MARKERUNITS_USERSPACEONUSE: number;\n    readonly SVG_MARKER_ORIENT_ANGLE: number;\n    readonly SVG_MARKER_ORIENT_AUTO: number;\n    readonly SVG_MARKER_ORIENT_UNKNOWN: number;\n};\n\n/** Provides access to the properties of <mask> elements, as well as methods to manipulate them. */\ninterface SVGMaskElement extends SVGElement {\n    readonly height: SVGAnimatedLength;\n    readonly maskContentUnits: SVGAnimatedEnumeration;\n    readonly maskUnits: SVGAnimatedEnumeration;\n    readonly width: SVGAnimatedLength;\n    readonly x: SVGAnimatedLength;\n    readonly y: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMaskElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGMaskElement: {\n    prototype: SVGMaskElement;\n    new(): SVGMaskElement;\n};\n\n/** Corresponds to the <metadata> element. */\ninterface SVGMetadataElement extends SVGElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGMetadataElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGMetadataElement: {\n    prototype: SVGMetadataElement;\n    new(): SVGMetadataElement;\n};\n\n/** Corresponds to the <number> basic data type. */\ninterface SVGNumber {\n    value: number;\n}\n\ndeclare var SVGNumber: {\n    prototype: SVGNumber;\n    new(): SVGNumber;\n};\n\n/** The SVGNumberList defines a list of SVGNumber objects. */\ninterface SVGNumberList {\n    readonly length: number;\n    readonly numberOfItems: number;\n    appendItem(newItem: SVGNumber): SVGNumber;\n    clear(): void;\n    getItem(index: number): SVGNumber;\n    initialize(newItem: SVGNumber): SVGNumber;\n    insertItemBefore(newItem: SVGNumber, index: number): SVGNumber;\n    removeItem(index: number): SVGNumber;\n    replaceItem(newItem: SVGNumber, index: number): SVGNumber;\n    [index: number]: SVGNumber;\n}\n\ndeclare var SVGNumberList: {\n    prototype: SVGNumberList;\n    new(): SVGNumberList;\n};\n\n/** Corresponds to the <path> element. */\ninterface SVGPathElement extends SVGGeometryElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGPathElement: {\n    prototype: SVGPathElement;\n    new(): SVGPathElement;\n};\n\n/** Corresponds to the <pattern> element. */\ninterface SVGPatternElement extends SVGElement, SVGFitToViewBox, SVGURIReference {\n    readonly height: SVGAnimatedLength;\n    readonly patternContentUnits: SVGAnimatedEnumeration;\n    readonly patternTransform: SVGAnimatedTransformList;\n    readonly patternUnits: SVGAnimatedEnumeration;\n    readonly width: SVGAnimatedLength;\n    readonly x: SVGAnimatedLength;\n    readonly y: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPatternElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGPatternElement: {\n    prototype: SVGPatternElement;\n    new(): SVGPatternElement;\n};\n\ninterface SVGPointList {\n    readonly length: number;\n    readonly numberOfItems: number;\n    appendItem(newItem: DOMPoint): DOMPoint;\n    clear(): void;\n    getItem(index: number): DOMPoint;\n    initialize(newItem: DOMPoint): DOMPoint;\n    insertItemBefore(newItem: DOMPoint, index: number): DOMPoint;\n    removeItem(index: number): DOMPoint;\n    replaceItem(newItem: DOMPoint, index: number): DOMPoint;\n    [index: number]: DOMPoint;\n}\n\ndeclare var SVGPointList: {\n    prototype: SVGPointList;\n    new(): SVGPointList;\n};\n\n/** Provides access to the properties of <polygon> elements, as well as methods to manipulate them. */\ninterface SVGPolygonElement extends SVGGeometryElement, SVGAnimatedPoints {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolygonElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGPolygonElement: {\n    prototype: SVGPolygonElement;\n    new(): SVGPolygonElement;\n};\n\n/** Provides access to the properties of <polyline> elements, as well as methods to manipulate them. */\ninterface SVGPolylineElement extends SVGGeometryElement, SVGAnimatedPoints {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGPolylineElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGPolylineElement: {\n    prototype: SVGPolylineElement;\n    new(): SVGPolylineElement;\n};\n\n/** Corresponds to the preserveAspectRatio attribute, which is available for some of SVG\'s elements. */\ninterface SVGPreserveAspectRatio {\n    align: number;\n    meetOrSlice: number;\n    readonly SVG_MEETORSLICE_MEET: number;\n    readonly SVG_MEETORSLICE_SLICE: number;\n    readonly SVG_MEETORSLICE_UNKNOWN: number;\n    readonly SVG_PRESERVEASPECTRATIO_NONE: number;\n    readonly SVG_PRESERVEASPECTRATIO_UNKNOWN: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMAX: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMID: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMIN: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMAX: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMID: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMIN: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMAX: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMID: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMIN: number;\n}\n\ndeclare var SVGPreserveAspectRatio: {\n    prototype: SVGPreserveAspectRatio;\n    new(): SVGPreserveAspectRatio;\n    readonly SVG_MEETORSLICE_MEET: number;\n    readonly SVG_MEETORSLICE_SLICE: number;\n    readonly SVG_MEETORSLICE_UNKNOWN: number;\n    readonly SVG_PRESERVEASPECTRATIO_NONE: number;\n    readonly SVG_PRESERVEASPECTRATIO_UNKNOWN: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMAX: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMID: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMAXYMIN: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMAX: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMID: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMIDYMIN: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMAX: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMID: number;\n    readonly SVG_PRESERVEASPECTRATIO_XMINYMIN: number;\n};\n\n/** Corresponds to the <RadialGradient> element. */\ninterface SVGRadialGradientElement extends SVGGradientElement {\n    readonly cx: SVGAnimatedLength;\n    readonly cy: SVGAnimatedLength;\n    readonly fr: SVGAnimatedLength;\n    readonly fx: SVGAnimatedLength;\n    readonly fy: SVGAnimatedLength;\n    readonly r: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRadialGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRadialGradientElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGRadialGradientElement: {\n    prototype: SVGRadialGradientElement;\n    new(): SVGRadialGradientElement;\n};\n\n/** Provides access to the properties of <rect> elements, as well as methods to manipulate them. */\ninterface SVGRectElement extends SVGGeometryElement {\n    readonly height: SVGAnimatedLength;\n    readonly rx: SVGAnimatedLength;\n    readonly ry: SVGAnimatedLength;\n    readonly width: SVGAnimatedLength;\n    readonly x: SVGAnimatedLength;\n    readonly y: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGRectElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGRectElement: {\n    prototype: SVGRectElement;\n    new(): SVGRectElement;\n};\n\ninterface SVGSVGElementEventMap extends SVGElementEventMap, WindowEventHandlersEventMap {\n}\n\n/** Provides access to the properties of <svg> elements, as well as methods to manipulate them. This interface contains also various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices. */\ninterface SVGSVGElement extends SVGGraphicsElement, SVGFitToViewBox, WindowEventHandlers {\n    currentScale: number;\n    readonly currentTranslate: DOMPointReadOnly;\n    readonly height: SVGAnimatedLength;\n    readonly width: SVGAnimatedLength;\n    readonly x: SVGAnimatedLength;\n    readonly y: SVGAnimatedLength;\n    animationsPaused(): boolean;\n    checkEnclosure(element: SVGElement, rect: DOMRectReadOnly): boolean;\n    checkIntersection(element: SVGElement, rect: DOMRectReadOnly): boolean;\n    createSVGAngle(): SVGAngle;\n    createSVGLength(): SVGLength;\n    createSVGMatrix(): DOMMatrix;\n    createSVGNumber(): SVGNumber;\n    createSVGPoint(): DOMPoint;\n    createSVGRect(): DOMRect;\n    createSVGTransform(): SVGTransform;\n    createSVGTransformFromMatrix(matrix?: DOMMatrix2DInit): SVGTransform;\n    deselectAll(): void;\n    /** @deprecated */\n    forceRedraw(): void;\n    getCurrentTime(): number;\n    getElementById(elementId: string): Element;\n    getEnclosureList(rect: DOMRectReadOnly, referenceElement: SVGElement | null): NodeListOf<SVGCircleElement | SVGEllipseElement | SVGImageElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>;\n    getIntersectionList(rect: DOMRectReadOnly, referenceElement: SVGElement | null): NodeListOf<SVGCircleElement | SVGEllipseElement | SVGImageElement | SVGLineElement | SVGPathElement | SVGPolygonElement | SVGPolylineElement | SVGRectElement | SVGTextElement | SVGUseElement>;\n    pauseAnimations(): void;\n    setCurrentTime(seconds: number): void;\n    /** @deprecated */\n    suspendRedraw(maxWaitMilliseconds: number): number;\n    unpauseAnimations(): void;\n    /** @deprecated */\n    unsuspendRedraw(suspendHandleID: number): void;\n    /** @deprecated */\n    unsuspendRedrawAll(): void;\n    addEventListener<K extends keyof SVGSVGElementEventMap>(type: K, listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGSVGElementEventMap>(type: K, listener: (this: SVGSVGElement, ev: SVGSVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGSVGElement: {\n    prototype: SVGSVGElement;\n    new(): SVGSVGElement;\n};\n\n/** Corresponds to the SVG <script> element. */\ninterface SVGScriptElement extends SVGElement, SVGURIReference {\n    type: string;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGScriptElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGScriptElement: {\n    prototype: SVGScriptElement;\n    new(): SVGScriptElement;\n};\n\ninterface SVGSetElement extends SVGAnimationElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSetElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSetElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGSetElement: {\n    prototype: SVGSetElement;\n    new(): SVGSetElement;\n};\n\n/** Corresponds to the <stop> element. */\ninterface SVGStopElement extends SVGElement {\n    readonly offset: SVGAnimatedNumber;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStopElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGStopElement: {\n    prototype: SVGStopElement;\n    new(): SVGStopElement;\n};\n\n/** The SVGStringList defines a list of DOMString objects. */\ninterface SVGStringList {\n    readonly length: number;\n    readonly numberOfItems: number;\n    appendItem(newItem: string): string;\n    clear(): void;\n    getItem(index: number): string;\n    initialize(newItem: string): string;\n    insertItemBefore(newItem: string, index: number): string;\n    removeItem(index: number): string;\n    replaceItem(newItem: string, index: number): string;\n    [index: number]: string;\n}\n\ndeclare var SVGStringList: {\n    prototype: SVGStringList;\n    new(): SVGStringList;\n};\n\n/** Corresponds to the SVG <style> element. */\ninterface SVGStyleElement extends SVGElement, LinkStyle {\n    disabled: boolean;\n    media: string;\n    title: string;\n    type: string;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGStyleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGStyleElement: {\n    prototype: SVGStyleElement;\n    new(): SVGStyleElement;\n};\n\n/** Corresponds to the <switch> element. */\ninterface SVGSwitchElement extends SVGGraphicsElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSwitchElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGSwitchElement: {\n    prototype: SVGSwitchElement;\n    new(): SVGSwitchElement;\n};\n\n/** Corresponds to the <symbol> element. */\ninterface SVGSymbolElement extends SVGElement, SVGFitToViewBox {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGSymbolElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGSymbolElement: {\n    prototype: SVGSymbolElement;\n    new(): SVGSymbolElement;\n};\n\n/** A <tspan> element. */\ninterface SVGTSpanElement extends SVGTextPositioningElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTSpanElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGTSpanElement: {\n    prototype: SVGTSpanElement;\n    new(): SVGTSpanElement;\n};\n\ninterface SVGTests {\n    readonly requiredExtensions: SVGStringList;\n    readonly systemLanguage: SVGStringList;\n}\n\n/** Implemented by elements that support rendering child text content. It is inherited by various text-related interfaces, such as SVGTextElement, SVGTSpanElement, SVGTRefElement, SVGAltGlyphElement and SVGTextPathElement. */\ninterface SVGTextContentElement extends SVGGraphicsElement {\n    readonly lengthAdjust: SVGAnimatedEnumeration;\n    readonly textLength: SVGAnimatedLength;\n    getCharNumAtPosition(point?: DOMPointInit): number;\n    getComputedTextLength(): number;\n    getEndPositionOfChar(charnum: number): DOMPoint;\n    getExtentOfChar(charnum: number): DOMRect;\n    getNumberOfChars(): number;\n    getRotationOfChar(charnum: number): number;\n    getStartPositionOfChar(charnum: number): DOMPoint;\n    getSubStringLength(charnum: number, nchars: number): number;\n    /** @deprecated */\n    selectSubString(charnum: number, nchars: number): void;\n    readonly LENGTHADJUST_SPACING: number;\n    readonly LENGTHADJUST_SPACINGANDGLYPHS: number;\n    readonly LENGTHADJUST_UNKNOWN: number;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextContentElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextContentElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGTextContentElement: {\n    prototype: SVGTextContentElement;\n    new(): SVGTextContentElement;\n    readonly LENGTHADJUST_SPACING: number;\n    readonly LENGTHADJUST_SPACINGANDGLYPHS: number;\n    readonly LENGTHADJUST_UNKNOWN: number;\n};\n\n/** Corresponds to the <text> elements. */\ninterface SVGTextElement extends SVGTextPositioningElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGTextElement: {\n    prototype: SVGTextElement;\n    new(): SVGTextElement;\n};\n\n/** Corresponds to the <textPath> element. */\ninterface SVGTextPathElement extends SVGTextContentElement, SVGURIReference {\n    readonly method: SVGAnimatedEnumeration;\n    readonly spacing: SVGAnimatedEnumeration;\n    readonly startOffset: SVGAnimatedLength;\n    readonly TEXTPATH_METHODTYPE_ALIGN: number;\n    readonly TEXTPATH_METHODTYPE_STRETCH: number;\n    readonly TEXTPATH_METHODTYPE_UNKNOWN: number;\n    readonly TEXTPATH_SPACINGTYPE_AUTO: number;\n    readonly TEXTPATH_SPACINGTYPE_EXACT: number;\n    readonly TEXTPATH_SPACINGTYPE_UNKNOWN: number;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPathElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGTextPathElement: {\n    prototype: SVGTextPathElement;\n    new(): SVGTextPathElement;\n    readonly TEXTPATH_METHODTYPE_ALIGN: number;\n    readonly TEXTPATH_METHODTYPE_STRETCH: number;\n    readonly TEXTPATH_METHODTYPE_UNKNOWN: number;\n    readonly TEXTPATH_SPACINGTYPE_AUTO: number;\n    readonly TEXTPATH_SPACINGTYPE_EXACT: number;\n    readonly TEXTPATH_SPACINGTYPE_UNKNOWN: number;\n};\n\n/** Implemented by elements that support attributes that position individual text glyphs. It is inherited by SVGTextElement, SVGTSpanElement, SVGTRefElement and SVGAltGlyphElement. */\ninterface SVGTextPositioningElement extends SVGTextContentElement {\n    readonly dx: SVGAnimatedLengthList;\n    readonly dy: SVGAnimatedLengthList;\n    readonly rotate: SVGAnimatedNumberList;\n    readonly x: SVGAnimatedLengthList;\n    readonly y: SVGAnimatedLengthList;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPositioningElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTextPositioningElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGTextPositioningElement: {\n    prototype: SVGTextPositioningElement;\n    new(): SVGTextPositioningElement;\n};\n\n/** Corresponds to the <title> element. */\ninterface SVGTitleElement extends SVGElement {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGTitleElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGTitleElement: {\n    prototype: SVGTitleElement;\n    new(): SVGTitleElement;\n};\n\n/** SVGTransform is the interface for one of the component transformations within an SVGTransformList; thus, an SVGTransform object corresponds to a single component (e.g., scale(…) or matrix(…)) within a transform attribute. */\ninterface SVGTransform {\n    readonly angle: number;\n    readonly matrix: DOMMatrix;\n    readonly type: number;\n    setMatrix(matrix?: DOMMatrix2DInit): void;\n    setRotate(angle: number, cx: number, cy: number): void;\n    setScale(sx: number, sy: number): void;\n    setSkewX(angle: number): void;\n    setSkewY(angle: number): void;\n    setTranslate(tx: number, ty: number): void;\n    readonly SVG_TRANSFORM_MATRIX: number;\n    readonly SVG_TRANSFORM_ROTATE: number;\n    readonly SVG_TRANSFORM_SCALE: number;\n    readonly SVG_TRANSFORM_SKEWX: number;\n    readonly SVG_TRANSFORM_SKEWY: number;\n    readonly SVG_TRANSFORM_TRANSLATE: number;\n    readonly SVG_TRANSFORM_UNKNOWN: number;\n}\n\ndeclare var SVGTransform: {\n    prototype: SVGTransform;\n    new(): SVGTransform;\n    readonly SVG_TRANSFORM_MATRIX: number;\n    readonly SVG_TRANSFORM_ROTATE: number;\n    readonly SVG_TRANSFORM_SCALE: number;\n    readonly SVG_TRANSFORM_SKEWX: number;\n    readonly SVG_TRANSFORM_SKEWY: number;\n    readonly SVG_TRANSFORM_TRANSLATE: number;\n    readonly SVG_TRANSFORM_UNKNOWN: number;\n};\n\n/** The SVGTransformList defines a list of SVGTransform objects. */\ninterface SVGTransformList {\n    readonly length: number;\n    readonly numberOfItems: number;\n    appendItem(newItem: SVGTransform): SVGTransform;\n    clear(): void;\n    consolidate(): SVGTransform | null;\n    createSVGTransformFromMatrix(matrix?: DOMMatrix2DInit): SVGTransform;\n    getItem(index: number): SVGTransform;\n    initialize(newItem: SVGTransform): SVGTransform;\n    insertItemBefore(newItem: SVGTransform, index: number): SVGTransform;\n    removeItem(index: number): SVGTransform;\n    replaceItem(newItem: SVGTransform, index: number): SVGTransform;\n    [index: number]: SVGTransform;\n}\n\ndeclare var SVGTransformList: {\n    prototype: SVGTransformList;\n    new(): SVGTransformList;\n};\n\ninterface SVGURIReference {\n    readonly href: SVGAnimatedString;\n}\n\n/** A commonly used set of constants used for reflecting gradientUnits, patternContentUnits and other similar attributes. */\ninterface SVGUnitTypes {\n    readonly SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: number;\n    readonly SVG_UNIT_TYPE_UNKNOWN: number;\n    readonly SVG_UNIT_TYPE_USERSPACEONUSE: number;\n}\n\ndeclare var SVGUnitTypes: {\n    prototype: SVGUnitTypes;\n    new(): SVGUnitTypes;\n    readonly SVG_UNIT_TYPE_OBJECTBOUNDINGBOX: number;\n    readonly SVG_UNIT_TYPE_UNKNOWN: number;\n    readonly SVG_UNIT_TYPE_USERSPACEONUSE: number;\n};\n\n/** Corresponds to the <use> element. */\ninterface SVGUseElement extends SVGGraphicsElement, SVGURIReference {\n    readonly height: SVGAnimatedLength;\n    readonly width: SVGAnimatedLength;\n    readonly x: SVGAnimatedLength;\n    readonly y: SVGAnimatedLength;\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGUseElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGUseElement: {\n    prototype: SVGUseElement;\n    new(): SVGUseElement;\n};\n\n/** Provides access to the properties of <view> elements, as well as methods to manipulate them. */\ninterface SVGViewElement extends SVGElement, SVGFitToViewBox {\n    addEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SVGElementEventMap>(type: K, listener: (this: SVGViewElement, ev: SVGElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SVGViewElement: {\n    prototype: SVGViewElement;\n    new(): SVGViewElement;\n};\n\n/** A screen, usually the one on which the current window is being rendered, and is obtained using window.screen. */\ninterface Screen {\n    readonly availHeight: number;\n    readonly availWidth: number;\n    readonly colorDepth: number;\n    readonly height: number;\n    readonly orientation: ScreenOrientation;\n    readonly pixelDepth: number;\n    readonly width: number;\n}\n\ndeclare var Screen: {\n    prototype: Screen;\n    new(): Screen;\n};\n\ninterface ScreenOrientationEventMap {\n    "change": Event;\n}\n\ninterface ScreenOrientation extends EventTarget {\n    readonly angle: number;\n    onchange: ((this: ScreenOrientation, ev: Event) => any) | null;\n    readonly type: OrientationType;\n    lock(orientation: OrientationLockType): Promise<void>;\n    unlock(): void;\n    addEventListener<K extends keyof ScreenOrientationEventMap>(type: K, listener: (this: ScreenOrientation, ev: ScreenOrientationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ScreenOrientationEventMap>(type: K, listener: (this: ScreenOrientation, ev: ScreenOrientationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ScreenOrientation: {\n    prototype: ScreenOrientation;\n    new(): ScreenOrientation;\n};\n\ninterface ScriptProcessorNodeEventMap {\n    "audioprocess": AudioProcessingEvent;\n}\n\n/**\n * Allows the generation, processing, or analyzing of audio using JavaScript.\n * @deprecated As of the August 29 2014 Web Audio API spec publication, this feature has been marked as deprecated, and was replaced by AudioWorklet (see AudioWorkletNode).\n */\ninterface ScriptProcessorNode extends AudioNode {\n    /** @deprecated */\n    readonly bufferSize: number;\n    /** @deprecated */\n    onaudioprocess: ((this: ScriptProcessorNode, ev: AudioProcessingEvent) => any) | null;\n    addEventListener<K extends keyof ScriptProcessorNodeEventMap>(type: K, listener: (this: ScriptProcessorNode, ev: ScriptProcessorNodeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ScriptProcessorNodeEventMap>(type: K, listener: (this: ScriptProcessorNode, ev: ScriptProcessorNodeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\n/** @deprecated */\ndeclare var ScriptProcessorNode: {\n    prototype: ScriptProcessorNode;\n    new(): ScriptProcessorNode;\n};\n\n/** Inherits from Event, and represents the event object of an event sent on a document or worker when its content security policy is violated. */\ninterface SecurityPolicyViolationEvent extends Event {\n    readonly blockedURI: string;\n    readonly columnNumber: number;\n    readonly disposition: SecurityPolicyViolationEventDisposition;\n    readonly documentURI: string;\n    readonly effectiveDirective: string;\n    readonly lineNumber: number;\n    readonly originalPolicy: string;\n    readonly referrer: string;\n    readonly sample: string;\n    readonly sourceFile: string;\n    readonly statusCode: number;\n    readonly violatedDirective: string;\n}\n\ndeclare var SecurityPolicyViolationEvent: {\n    prototype: SecurityPolicyViolationEvent;\n    new(type: string, eventInitDict?: SecurityPolicyViolationEventInit): SecurityPolicyViolationEvent;\n};\n\n/** A Selection object represents the range of text selected by the user or the current position of the caret. To obtain a Selection object for examination or modification, call Window.getSelection(). */\ninterface Selection {\n    readonly anchorNode: Node | null;\n    readonly anchorOffset: number;\n    readonly focusNode: Node | null;\n    readonly focusOffset: number;\n    readonly isCollapsed: boolean;\n    readonly rangeCount: number;\n    readonly type: string;\n    addRange(range: Range): void;\n    collapse(node: Node | null, offset?: number): void;\n    collapseToEnd(): void;\n    collapseToStart(): void;\n    containsNode(node: Node, allowPartialContainment?: boolean): boolean;\n    deleteFromDocument(): void;\n    empty(): void;\n    extend(node: Node, offset?: number): void;\n    getRangeAt(index: number): Range;\n    removeAllRanges(): void;\n    removeRange(range: Range): void;\n    selectAllChildren(node: Node): void;\n    setBaseAndExtent(anchorNode: Node, anchorOffset: number, focusNode: Node, focusOffset: number): void;\n    setPosition(node: Node | null, offset?: number): void;\n    toString(): string;\n}\n\ndeclare var Selection: {\n    prototype: Selection;\n    new(): Selection;\n    toString(): string;\n};\n\ninterface ServiceWorkerEventMap extends AbstractWorkerEventMap {\n    "statechange": Event;\n}\n\n/**\n * This ServiceWorker API interface provides a reference to a service worker. Multiple browsing contexts (e.g. pages, workers, etc.) can be associated with the same service worker, each through a unique ServiceWorker object.\n * Available only in secure contexts.\n */\ninterface ServiceWorker extends EventTarget, AbstractWorker {\n    onstatechange: ((this: ServiceWorker, ev: Event) => any) | null;\n    readonly scriptURL: string;\n    readonly state: ServiceWorkerState;\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: StructuredSerializeOptions): void;\n    addEventListener<K extends keyof ServiceWorkerEventMap>(type: K, listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ServiceWorkerEventMap>(type: K, listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ServiceWorker: {\n    prototype: ServiceWorker;\n    new(): ServiceWorker;\n};\n\ninterface ServiceWorkerContainerEventMap {\n    "controllerchange": Event;\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\n/**\n * The ServiceWorkerContainer interface of the ServiceWorker API provides an object representing the service worker as an overall unit in the network ecosystem, including facilities to register, unregister and update service workers, and access the state of service workers and their registrations.\n * Available only in secure contexts.\n */\ninterface ServiceWorkerContainer extends EventTarget {\n    readonly controller: ServiceWorker | null;\n    oncontrollerchange: ((this: ServiceWorkerContainer, ev: Event) => any) | null;\n    onmessage: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;\n    onmessageerror: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;\n    readonly ready: Promise<ServiceWorkerRegistration>;\n    getRegistration(clientURL?: string | URL): Promise<ServiceWorkerRegistration | undefined>;\n    getRegistrations(): Promise<ReadonlyArray<ServiceWorkerRegistration>>;\n    register(scriptURL: string | URL, options?: RegistrationOptions): Promise<ServiceWorkerRegistration>;\n    startMessages(): void;\n    addEventListener<K extends keyof ServiceWorkerContainerEventMap>(type: K, listener: (this: ServiceWorkerContainer, ev: ServiceWorkerContainerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ServiceWorkerContainerEventMap>(type: K, listener: (this: ServiceWorkerContainer, ev: ServiceWorkerContainerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ServiceWorkerContainer: {\n    prototype: ServiceWorkerContainer;\n    new(): ServiceWorkerContainer;\n};\n\ninterface ServiceWorkerRegistrationEventMap {\n    "updatefound": Event;\n}\n\n/**\n * This ServiceWorker API interface represents the service worker registration. You register a service worker to control one or more pages that share the same origin.\n * Available only in secure contexts.\n */\ninterface ServiceWorkerRegistration extends EventTarget {\n    readonly active: ServiceWorker | null;\n    readonly installing: ServiceWorker | null;\n    onupdatefound: ((this: ServiceWorkerRegistration, ev: Event) => any) | null;\n    readonly pushManager: PushManager;\n    readonly scope: string;\n    readonly updateViaCache: ServiceWorkerUpdateViaCache;\n    readonly waiting: ServiceWorker | null;\n    getNotifications(filter?: GetNotificationOptions): Promise<Notification[]>;\n    showNotification(title: string, options?: NotificationOptions): Promise<void>;\n    unregister(): Promise<boolean>;\n    update(): Promise<void>;\n    addEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type: K, listener: (this: ServiceWorkerRegistration, ev: ServiceWorkerRegistrationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type: K, listener: (this: ServiceWorkerRegistration, ev: ServiceWorkerRegistrationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ServiceWorkerRegistration: {\n    prototype: ServiceWorkerRegistration;\n    new(): ServiceWorkerRegistration;\n};\n\ninterface ShadowRootEventMap {\n    "slotchange": Event;\n}\n\ninterface ShadowRoot extends DocumentFragment, DocumentOrShadowRoot, InnerHTML {\n    readonly delegatesFocus: boolean;\n    readonly host: Element;\n    readonly mode: ShadowRootMode;\n    onslotchange: ((this: ShadowRoot, ev: Event) => any) | null;\n    readonly slotAssignment: SlotAssignmentMode;\n    /** Throws a "NotSupportedError" DOMException if context object is a shadow root. */\n    addEventListener<K extends keyof ShadowRootEventMap>(type: K, listener: (this: ShadowRoot, ev: ShadowRootEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ShadowRootEventMap>(type: K, listener: (this: ShadowRoot, ev: ShadowRootEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ShadowRoot: {\n    prototype: ShadowRoot;\n    new(): ShadowRoot;\n};\n\ninterface SharedWorker extends EventTarget, AbstractWorker {\n    /** Returns sharedWorker\'s MessagePort object which can be used to communicate with the global environment. */\n    readonly port: MessagePort;\n    addEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: SharedWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: SharedWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SharedWorker: {\n    prototype: SharedWorker;\n    new(scriptURL: string | URL, options?: string | WorkerOptions): SharedWorker;\n};\n\ninterface Slottable {\n    readonly assignedSlot: HTMLSlotElement | null;\n}\n\ninterface SourceBufferEventMap {\n    "abort": Event;\n    "error": Event;\n    "update": Event;\n    "updateend": Event;\n    "updatestart": Event;\n}\n\n/** A chunk of media to be passed into an HTMLMediaElement and played, via a MediaSource object. This can be made up of one or several media segments. */\ninterface SourceBuffer extends EventTarget {\n    appendWindowEnd: number;\n    appendWindowStart: number;\n    readonly buffered: TimeRanges;\n    mode: AppendMode;\n    onabort: ((this: SourceBuffer, ev: Event) => any) | null;\n    onerror: ((this: SourceBuffer, ev: Event) => any) | null;\n    onupdate: ((this: SourceBuffer, ev: Event) => any) | null;\n    onupdateend: ((this: SourceBuffer, ev: Event) => any) | null;\n    onupdatestart: ((this: SourceBuffer, ev: Event) => any) | null;\n    timestampOffset: number;\n    readonly updating: boolean;\n    abort(): void;\n    appendBuffer(data: BufferSource): void;\n    changeType(type: string): void;\n    remove(start: number, end: number): void;\n    addEventListener<K extends keyof SourceBufferEventMap>(type: K, listener: (this: SourceBuffer, ev: SourceBufferEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SourceBufferEventMap>(type: K, listener: (this: SourceBuffer, ev: SourceBufferEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SourceBuffer: {\n    prototype: SourceBuffer;\n    new(): SourceBuffer;\n};\n\ninterface SourceBufferListEventMap {\n    "addsourcebuffer": Event;\n    "removesourcebuffer": Event;\n}\n\n/** A simple container list for multiple SourceBuffer objects. */\ninterface SourceBufferList extends EventTarget {\n    readonly length: number;\n    onaddsourcebuffer: ((this: SourceBufferList, ev: Event) => any) | null;\n    onremovesourcebuffer: ((this: SourceBufferList, ev: Event) => any) | null;\n    addEventListener<K extends keyof SourceBufferListEventMap>(type: K, listener: (this: SourceBufferList, ev: SourceBufferListEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SourceBufferListEventMap>(type: K, listener: (this: SourceBufferList, ev: SourceBufferListEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    [index: number]: SourceBuffer;\n}\n\ndeclare var SourceBufferList: {\n    prototype: SourceBufferList;\n    new(): SourceBufferList;\n};\n\ninterface SpeechRecognitionAlternative {\n    readonly confidence: number;\n    readonly transcript: string;\n}\n\ndeclare var SpeechRecognitionAlternative: {\n    prototype: SpeechRecognitionAlternative;\n    new(): SpeechRecognitionAlternative;\n};\n\ninterface SpeechRecognitionResult {\n    readonly isFinal: boolean;\n    readonly length: number;\n    item(index: number): SpeechRecognitionAlternative;\n    [index: number]: SpeechRecognitionAlternative;\n}\n\ndeclare var SpeechRecognitionResult: {\n    prototype: SpeechRecognitionResult;\n    new(): SpeechRecognitionResult;\n};\n\ninterface SpeechRecognitionResultList {\n    readonly length: number;\n    item(index: number): SpeechRecognitionResult;\n    [index: number]: SpeechRecognitionResult;\n}\n\ndeclare var SpeechRecognitionResultList: {\n    prototype: SpeechRecognitionResultList;\n    new(): SpeechRecognitionResultList;\n};\n\ninterface SpeechSynthesisEventMap {\n    "voiceschanged": Event;\n}\n\n/** This Web Speech API interface is the controller interface for the speech service; this can be used to retrieve information about the synthesis voices available on the device, start and pause speech, and other commands besides. */\ninterface SpeechSynthesis extends EventTarget {\n    onvoiceschanged: ((this: SpeechSynthesis, ev: Event) => any) | null;\n    readonly paused: boolean;\n    readonly pending: boolean;\n    readonly speaking: boolean;\n    cancel(): void;\n    getVoices(): SpeechSynthesisVoice[];\n    pause(): void;\n    resume(): void;\n    speak(utterance: SpeechSynthesisUtterance): void;\n    addEventListener<K extends keyof SpeechSynthesisEventMap>(type: K, listener: (this: SpeechSynthesis, ev: SpeechSynthesisEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SpeechSynthesisEventMap>(type: K, listener: (this: SpeechSynthesis, ev: SpeechSynthesisEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SpeechSynthesis: {\n    prototype: SpeechSynthesis;\n    new(): SpeechSynthesis;\n};\n\ninterface SpeechSynthesisErrorEvent extends SpeechSynthesisEvent {\n    readonly error: SpeechSynthesisErrorCode;\n}\n\ndeclare var SpeechSynthesisErrorEvent: {\n    prototype: SpeechSynthesisErrorEvent;\n    new(type: string, eventInitDict: SpeechSynthesisErrorEventInit): SpeechSynthesisErrorEvent;\n};\n\n/** This Web Speech API interface contains information about the current state of SpeechSynthesisUtterance objects that have been processed in the speech service. */\ninterface SpeechSynthesisEvent extends Event {\n    readonly charIndex: number;\n    readonly charLength: number;\n    readonly elapsedTime: number;\n    readonly name: string;\n    readonly utterance: SpeechSynthesisUtterance;\n}\n\ndeclare var SpeechSynthesisEvent: {\n    prototype: SpeechSynthesisEvent;\n    new(type: string, eventInitDict: SpeechSynthesisEventInit): SpeechSynthesisEvent;\n};\n\ninterface SpeechSynthesisUtteranceEventMap {\n    "boundary": SpeechSynthesisEvent;\n    "end": SpeechSynthesisEvent;\n    "error": SpeechSynthesisErrorEvent;\n    "mark": SpeechSynthesisEvent;\n    "pause": SpeechSynthesisEvent;\n    "resume": SpeechSynthesisEvent;\n    "start": SpeechSynthesisEvent;\n}\n\n/** This Web Speech API interface represents a speech request. It contains the content the speech service should read and information about how to read it (e.g. language, pitch and volume.) */\ninterface SpeechSynthesisUtterance extends EventTarget {\n    lang: string;\n    onboundary: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;\n    onend: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;\n    onerror: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisErrorEvent) => any) | null;\n    onmark: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;\n    onpause: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;\n    onresume: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;\n    onstart: ((this: SpeechSynthesisUtterance, ev: SpeechSynthesisEvent) => any) | null;\n    pitch: number;\n    rate: number;\n    text: string;\n    voice: SpeechSynthesisVoice | null;\n    volume: number;\n    addEventListener<K extends keyof SpeechSynthesisUtteranceEventMap>(type: K, listener: (this: SpeechSynthesisUtterance, ev: SpeechSynthesisUtteranceEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SpeechSynthesisUtteranceEventMap>(type: K, listener: (this: SpeechSynthesisUtterance, ev: SpeechSynthesisUtteranceEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SpeechSynthesisUtterance: {\n    prototype: SpeechSynthesisUtterance;\n    new(text?: string): SpeechSynthesisUtterance;\n};\n\n/** This Web Speech API interface represents a voice that the system supports. Every SpeechSynthesisVoice has its own relative speech service including information about language, name and URI. */\ninterface SpeechSynthesisVoice {\n    readonly default: boolean;\n    readonly lang: string;\n    readonly localService: boolean;\n    readonly name: string;\n    readonly voiceURI: string;\n}\n\ndeclare var SpeechSynthesisVoice: {\n    prototype: SpeechSynthesisVoice;\n    new(): SpeechSynthesisVoice;\n};\n\ninterface StaticRange extends AbstractRange {\n}\n\ndeclare var StaticRange: {\n    prototype: StaticRange;\n    new(init: StaticRangeInit): StaticRange;\n};\n\n/** The pan property takes a unitless value between -1 (full left pan) and 1 (full right pan). This interface was introduced as a much simpler way to apply a simple panning effect than having to use a full PannerNode. */\ninterface StereoPannerNode extends AudioNode {\n    readonly pan: AudioParam;\n}\n\ndeclare var StereoPannerNode: {\n    prototype: StereoPannerNode;\n    new(context: BaseAudioContext, options?: StereoPannerOptions): StereoPannerNode;\n};\n\n/** This Web Storage API interface provides access to a particular domain\'s session or local storage. It allows, for example, the addition, modification, or deletion of stored data items. */\ninterface Storage {\n    /** Returns the number of key/value pairs. */\n    readonly length: number;\n    /**\n     * Removes all key/value pairs, if there are any.\n     *\n     * Dispatches a storage event on Window objects holding an equivalent Storage object.\n     */\n    clear(): void;\n    /** Returns the current value associated with the given key, or null if the given key does not exist. */\n    getItem(key: string): string | null;\n    /** Returns the name of the nth key, or null if n is greater than or equal to the number of key/value pairs. */\n    key(index: number): string | null;\n    /**\n     * Removes the key/value pair with the given key, if a key/value pair with the given key exists.\n     *\n     * Dispatches a storage event on Window objects holding an equivalent Storage object.\n     */\n    removeItem(key: string): void;\n    /**\n     * Sets the value of the pair identified by key to value, creating a new key/value pair if none existed for key previously.\n     *\n     * Throws a "QuotaExceededError" DOMException exception if the new value couldn\'t be set. (Setting could fail if, e.g., the user has disabled storage for the site, or if the quota has been exceeded.)\n     *\n     * Dispatches a storage event on Window objects holding an equivalent Storage object.\n     */\n    setItem(key: string, value: string): void;\n    [name: string]: any;\n}\n\ndeclare var Storage: {\n    prototype: Storage;\n    new(): Storage;\n};\n\n/** A StorageEvent is sent to a window when a storage area it has access to is changed within the context of another document. */\ninterface StorageEvent extends Event {\n    /** Returns the key of the storage item being changed. */\n    readonly key: string | null;\n    /** Returns the new value of the key of the storage item whose value is being changed. */\n    readonly newValue: string | null;\n    /** Returns the old value of the key of the storage item whose value is being changed. */\n    readonly oldValue: string | null;\n    /** Returns the Storage object that was affected. */\n    readonly storageArea: Storage | null;\n    /** Returns the URL of the document whose storage item changed. */\n    readonly url: string;\n    initStorageEvent(type: string, bubbles?: boolean, cancelable?: boolean, key?: string | null, oldValue?: string | null, newValue?: string | null, url?: string | URL, storageArea?: Storage | null): void;\n}\n\ndeclare var StorageEvent: {\n    prototype: StorageEvent;\n    new(type: string, eventInitDict?: StorageEventInit): StorageEvent;\n};\n\n/** Available only in secure contexts. */\ninterface StorageManager {\n    estimate(): Promise<StorageEstimate>;\n    getDirectory(): Promise<FileSystemDirectoryHandle>;\n    persist(): Promise<boolean>;\n    persisted(): Promise<boolean>;\n}\n\ndeclare var StorageManager: {\n    prototype: StorageManager;\n    new(): StorageManager;\n};\n\n/** @deprecated */\ninterface StyleMedia {\n    type: string;\n    matchMedium(mediaquery: string): boolean;\n}\n\n/** A single style sheet. CSS style sheets will further implement the more specialized CSSStyleSheet interface. */\ninterface StyleSheet {\n    disabled: boolean;\n    readonly href: string | null;\n    readonly media: MediaList;\n    readonly ownerNode: Element | ProcessingInstruction | null;\n    readonly parentStyleSheet: CSSStyleSheet | null;\n    readonly title: string | null;\n    readonly type: string;\n}\n\ndeclare var StyleSheet: {\n    prototype: StyleSheet;\n    new(): StyleSheet;\n};\n\n/** A list of StyleSheet. */\ninterface StyleSheetList {\n    readonly length: number;\n    item(index: number): CSSStyleSheet | null;\n    [index: number]: CSSStyleSheet;\n}\n\ndeclare var StyleSheetList: {\n    prototype: StyleSheetList;\n    new(): StyleSheetList;\n};\n\ninterface SubmitEvent extends Event {\n    /** Returns the element representing the submit button that triggered the form submission, or null if the submission was not triggered by a button. */\n    readonly submitter: HTMLElement | null;\n}\n\ndeclare var SubmitEvent: {\n    prototype: SubmitEvent;\n    new(type: string, eventInitDict?: SubmitEventInit): SubmitEvent;\n};\n\n/**\n * This Web Crypto API interface provides a number of low-level cryptographic functions. It is accessed via the Crypto.subtle properties available in a window context (via Window.crypto).\n * Available only in secure contexts.\n */\ninterface SubtleCrypto {\n    decrypt(algorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams, key: CryptoKey, data: BufferSource): Promise<any>;\n    deriveBits(algorithm: AlgorithmIdentifier | EcdhKeyDeriveParams | HkdfParams | Pbkdf2Params, baseKey: CryptoKey, length: number): Promise<ArrayBuffer>;\n    deriveKey(algorithm: AlgorithmIdentifier | EcdhKeyDeriveParams | HkdfParams | Pbkdf2Params, baseKey: CryptoKey, derivedKeyType: AlgorithmIdentifier | AesDerivedKeyParams | HmacImportParams | HkdfParams | Pbkdf2Params, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    digest(algorithm: AlgorithmIdentifier, data: BufferSource): Promise<ArrayBuffer>;\n    encrypt(algorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams, key: CryptoKey, data: BufferSource): Promise<any>;\n    exportKey(format: "jwk", key: CryptoKey): Promise<JsonWebKey>;\n    exportKey(format: Exclude<KeyFormat, "jwk">, key: CryptoKey): Promise<ArrayBuffer>;\n    generateKey(algorithm: RsaHashedKeyGenParams | EcKeyGenParams, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKeyPair>;\n    generateKey(algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    generateKey(algorithm: AlgorithmIdentifier, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKeyPair | CryptoKey>;\n    importKey(format: "jwk", keyData: JsonWebKey, algorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    importKey(format: Exclude<KeyFormat, "jwk">, keyData: BufferSource, algorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    sign(algorithm: AlgorithmIdentifier | RsaPssParams | EcdsaParams, key: CryptoKey, data: BufferSource): Promise<ArrayBuffer>;\n    unwrapKey(format: KeyFormat, wrappedKey: BufferSource, unwrappingKey: CryptoKey, unwrapAlgorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams, unwrappedKeyAlgorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    verify(algorithm: AlgorithmIdentifier | RsaPssParams | EcdsaParams, key: CryptoKey, signature: BufferSource, data: BufferSource): Promise<boolean>;\n    wrapKey(format: KeyFormat, key: CryptoKey, wrappingKey: CryptoKey, wrapAlgorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams): Promise<ArrayBuffer>;\n}\n\ndeclare var SubtleCrypto: {\n    prototype: SubtleCrypto;\n    new(): SubtleCrypto;\n};\n\n/** The textual content of Element or Attr. If an element has no markup within its content, it has a single child implementing Text that contains the element\'s text. However, if the element contains markup, it is parsed into information items and Text nodes that form its children. */\ninterface Text extends CharacterData, Slottable {\n    /** Returns the combined data of all direct Text node siblings. */\n    readonly wholeText: string;\n    /** Splits data at the given offset and returns the remainder as Text node. */\n    splitText(offset: number): Text;\n}\n\ndeclare var Text: {\n    prototype: Text;\n    new(data?: string): Text;\n};\n\n/** A decoder for a specific method, that is a specific character encoding, like utf-8, iso-8859-2, koi8, cp1261, gbk, etc. A decoder takes a stream of bytes as input and emits a stream of code points. For a more scalable, non-native library, see StringView – a C-like representation of strings based on typed arrays. */\ninterface TextDecoder extends TextDecoderCommon {\n    /**\n     * Returns the result of running encoding\'s decoder. The method can be invoked zero or more times with options\'s stream set to true, and then once without options\'s stream (or set to false), to process a fragmented input. If the invocation without options\'s stream (or set to false) has no input, it\'s clearest to omit both arguments.\n     *\n     * ```\n     * var string = "", decoder = new TextDecoder(encoding), buffer;\n     * while(buffer = next_chunk()) {\n     *   string += decoder.decode(buffer, {stream:true});\n     * }\n     * string += decoder.decode(); // end-of-queue\n     * ```\n     *\n     * If the error mode is "fatal" and encoding\'s decoder returns error, throws a TypeError.\n     */\n    decode(input?: BufferSource, options?: TextDecodeOptions): string;\n}\n\ndeclare var TextDecoder: {\n    prototype: TextDecoder;\n    new(label?: string, options?: TextDecoderOptions): TextDecoder;\n};\n\ninterface TextDecoderCommon {\n    /** Returns encoding\'s name, lowercased. */\n    readonly encoding: string;\n    /** Returns true if error mode is "fatal", otherwise false. */\n    readonly fatal: boolean;\n    /** Returns the value of ignore BOM. */\n    readonly ignoreBOM: boolean;\n}\n\ninterface TextDecoderStream extends GenericTransformStream, TextDecoderCommon {\n    readonly readable: ReadableStream<string>;\n    readonly writable: WritableStream<BufferSource>;\n}\n\ndeclare var TextDecoderStream: {\n    prototype: TextDecoderStream;\n    new(label?: string, options?: TextDecoderOptions): TextDecoderStream;\n};\n\n/** TextEncoder takes a stream of code points as input and emits a stream of bytes. For a more scalable, non-native library, see StringView – a C-like representation of strings based on typed arrays. */\ninterface TextEncoder extends TextEncoderCommon {\n    /** Returns the result of running UTF-8\'s encoder. */\n    encode(input?: string): Uint8Array;\n    /** Runs the UTF-8 encoder on source, stores the result of that operation into destination, and returns the progress made as an object wherein read is the number of converted code units of source and written is the number of bytes modified in destination. */\n    encodeInto(source: string, destination: Uint8Array): TextEncoderEncodeIntoResult;\n}\n\ndeclare var TextEncoder: {\n    prototype: TextEncoder;\n    new(): TextEncoder;\n};\n\ninterface TextEncoderCommon {\n    /** Returns "utf-8". */\n    readonly encoding: string;\n}\n\ninterface TextEncoderStream extends GenericTransformStream, TextEncoderCommon {\n    readonly readable: ReadableStream<Uint8Array>;\n    readonly writable: WritableStream<string>;\n}\n\ndeclare var TextEncoderStream: {\n    prototype: TextEncoderStream;\n    new(): TextEncoderStream;\n};\n\n/** The dimensions of a piece of text in the canvas, as created by the CanvasRenderingContext2D.measureText() method. */\ninterface TextMetrics {\n    /** Returns the measurement described below. */\n    readonly actualBoundingBoxAscent: number;\n    /** Returns the measurement described below. */\n    readonly actualBoundingBoxDescent: number;\n    /** Returns the measurement described below. */\n    readonly actualBoundingBoxLeft: number;\n    /** Returns the measurement described below. */\n    readonly actualBoundingBoxRight: number;\n    /** Returns the measurement described below. */\n    readonly fontBoundingBoxAscent: number;\n    /** Returns the measurement described below. */\n    readonly fontBoundingBoxDescent: number;\n    /** Returns the measurement described below. */\n    readonly width: number;\n}\n\ndeclare var TextMetrics: {\n    prototype: TextMetrics;\n    new(): TextMetrics;\n};\n\ninterface TextTrackEventMap {\n    "cuechange": Event;\n}\n\n/** This interface also inherits properties from EventTarget. */\ninterface TextTrack extends EventTarget {\n    /** Returns the text track cues from the text track list of cues that are currently active (i.e. that start before the current playback position and end after it), as a TextTrackCueList object. */\n    readonly activeCues: TextTrackCueList | null;\n    /** Returns the text track list of cues, as a TextTrackCueList object. */\n    readonly cues: TextTrackCueList | null;\n    /**\n     * Returns the ID of the given track.\n     *\n     * For in-band tracks, this is the ID that can be used with a fragment if the format supports media fragment syntax, and that can be used with the getTrackById() method.\n     *\n     * For TextTrack objects corresponding to track elements, this is the ID of the track element.\n     */\n    readonly id: string;\n    /** Returns the text track in-band metadata track dispatch type string. */\n    readonly inBandMetadataTrackDispatchType: string;\n    /** Returns the text track kind string. */\n    readonly kind: TextTrackKind;\n    /** Returns the text track label, if there is one, or the empty string otherwise (indicating that a custom label probably needs to be generated from the other attributes of the object if the object is exposed to the user). */\n    readonly label: string;\n    /** Returns the text track language string. */\n    readonly language: string;\n    /**\n     * Returns the text track mode, represented by a string from the following list:\n     *\n     * Can be set, to change the mode.\n     */\n    mode: TextTrackMode;\n    oncuechange: ((this: TextTrack, ev: Event) => any) | null;\n    /** Adds the given cue to textTrack\'s text track list of cues. */\n    addCue(cue: TextTrackCue): void;\n    /** Removes the given cue from textTrack\'s text track list of cues. */\n    removeCue(cue: TextTrackCue): void;\n    addEventListener<K extends keyof TextTrackEventMap>(type: K, listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof TextTrackEventMap>(type: K, listener: (this: TextTrack, ev: TextTrackEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var TextTrack: {\n    prototype: TextTrack;\n    new(): TextTrack;\n};\n\ninterface TextTrackCueEventMap {\n    "enter": Event;\n    "exit": Event;\n}\n\n/** TextTrackCues represent a string of text that will be displayed for some duration of time on a TextTrack. This includes the start and end times that the cue will be displayed. A TextTrackCue cannot be used directly, instead one of the derived types (e.g. VTTCue) must be used. */\ninterface TextTrackCue extends EventTarget {\n    /**\n     * Returns the text track cue end time, in seconds.\n     *\n     * Can be set.\n     */\n    endTime: number;\n    /**\n     * Returns the text track cue identifier.\n     *\n     * Can be set.\n     */\n    id: string;\n    onenter: ((this: TextTrackCue, ev: Event) => any) | null;\n    onexit: ((this: TextTrackCue, ev: Event) => any) | null;\n    /**\n     * Returns true if the text track cue pause-on-exit flag is set, false otherwise.\n     *\n     * Can be set.\n     */\n    pauseOnExit: boolean;\n    /**\n     * Returns the text track cue start time, in seconds.\n     *\n     * Can be set.\n     */\n    startTime: number;\n    /** Returns the TextTrack object to which this text track cue belongs, if any, or null otherwise. */\n    readonly track: TextTrack | null;\n    addEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: TextTrackCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var TextTrackCue: {\n    prototype: TextTrackCue;\n    new(): TextTrackCue;\n};\n\ninterface TextTrackCueList {\n    /** Returns the number of cues in the list. */\n    readonly length: number;\n    /**\n     * Returns the first text track cue (in text track cue order) with text track cue identifier id.\n     *\n     * Returns null if none of the cues have the given identifier or if the argument is the empty string.\n     */\n    getCueById(id: string): TextTrackCue | null;\n    [index: number]: TextTrackCue;\n}\n\ndeclare var TextTrackCueList: {\n    prototype: TextTrackCueList;\n    new(): TextTrackCueList;\n};\n\ninterface TextTrackListEventMap {\n    "addtrack": TrackEvent;\n    "change": Event;\n    "removetrack": TrackEvent;\n}\n\ninterface TextTrackList extends EventTarget {\n    readonly length: number;\n    onaddtrack: ((this: TextTrackList, ev: TrackEvent) => any) | null;\n    onchange: ((this: TextTrackList, ev: Event) => any) | null;\n    onremovetrack: ((this: TextTrackList, ev: TrackEvent) => any) | null;\n    getTrackById(id: string): TextTrack | null;\n    addEventListener<K extends keyof TextTrackListEventMap>(type: K, listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof TextTrackListEventMap>(type: K, listener: (this: TextTrackList, ev: TextTrackListEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    [index: number]: TextTrack;\n}\n\ndeclare var TextTrackList: {\n    prototype: TextTrackList;\n    new(): TextTrackList;\n};\n\n/** Used to represent a set of time ranges, primarily for the purpose of tracking which portions of media have been buffered when loading it for use by the <audio> and <video> elements. */\ninterface TimeRanges {\n    /** Returns the number of ranges in the object. */\n    readonly length: number;\n    /**\n     * Returns the time for the end of the range with the given index.\n     *\n     * Throws an "IndexSizeError" DOMException if the index is out of range.\n     */\n    end(index: number): number;\n    /**\n     * Returns the time for the start of the range with the given index.\n     *\n     * Throws an "IndexSizeError" DOMException if the index is out of range.\n     */\n    start(index: number): number;\n}\n\ndeclare var TimeRanges: {\n    prototype: TimeRanges;\n    new(): TimeRanges;\n};\n\n/** A single contact point on a touch-sensitive device. The contact point is commonly a finger or stylus and the device may be a touchscreen or trackpad. */\ninterface Touch {\n    readonly clientX: number;\n    readonly clientY: number;\n    readonly force: number;\n    readonly identifier: number;\n    readonly pageX: number;\n    readonly pageY: number;\n    readonly radiusX: number;\n    readonly radiusY: number;\n    readonly rotationAngle: number;\n    readonly screenX: number;\n    readonly screenY: number;\n    readonly target: EventTarget;\n}\n\ndeclare var Touch: {\n    prototype: Touch;\n    new(touchInitDict: TouchInit): Touch;\n};\n\n/** An event sent when the state of contacts with a touch-sensitive surface changes. This surface can be a touch screen or trackpad, for example. The event can describe one or more points of contact with the screen and includes support for detecting movement, addition and removal of contact points, and so forth. */\ninterface TouchEvent extends UIEvent {\n    readonly altKey: boolean;\n    readonly changedTouches: TouchList;\n    readonly ctrlKey: boolean;\n    readonly metaKey: boolean;\n    readonly shiftKey: boolean;\n    readonly targetTouches: TouchList;\n    readonly touches: TouchList;\n}\n\ndeclare var TouchEvent: {\n    prototype: TouchEvent;\n    new(type: string, eventInitDict?: TouchEventInit): TouchEvent;\n};\n\n/** A list of contact points on a touch surface. For example, if the user has three fingers on the touch surface (such as a screen or trackpad), the corresponding TouchList object would have one Touch object for each finger, for a total of three entries. */\ninterface TouchList {\n    readonly length: number;\n    item(index: number): Touch | null;\n    [index: number]: Touch;\n}\n\ndeclare var TouchList: {\n    prototype: TouchList;\n    new(): TouchList;\n};\n\n/** The TrackEvent interface, part of the HTML DOM specification, is used for events which represent changes to the set of available tracks on an HTML media element; these events are addtrack and removetrack. */\ninterface TrackEvent extends Event {\n    /** Returns the track object (TextTrack, AudioTrack, or VideoTrack) to which the event relates. */\n    readonly track: TextTrack | null;\n}\n\ndeclare var TrackEvent: {\n    prototype: TrackEvent;\n    new(type: string, eventInitDict?: TrackEventInit): TrackEvent;\n};\n\ninterface TransformStream<I = any, O = any> {\n    readonly readable: ReadableStream<O>;\n    readonly writable: WritableStream<I>;\n}\n\ndeclare var TransformStream: {\n    prototype: TransformStream;\n    new<I = any, O = any>(transformer?: Transformer<I, O>, writableStrategy?: QueuingStrategy<I>, readableStrategy?: QueuingStrategy<O>): TransformStream<I, O>;\n};\n\ninterface TransformStreamDefaultController<O = any> {\n    readonly desiredSize: number | null;\n    enqueue(chunk?: O): void;\n    error(reason?: any): void;\n    terminate(): void;\n}\n\ndeclare var TransformStreamDefaultController: {\n    prototype: TransformStreamDefaultController;\n    new(): TransformStreamDefaultController;\n};\n\n/** Events providing information related to transitions. */\ninterface TransitionEvent extends Event {\n    readonly elapsedTime: number;\n    readonly propertyName: string;\n    readonly pseudoElement: string;\n}\n\ndeclare var TransitionEvent: {\n    prototype: TransitionEvent;\n    new(type: string, transitionEventInitDict?: TransitionEventInit): TransitionEvent;\n};\n\n/** The nodes of a document subtree and a position within them. */\ninterface TreeWalker {\n    currentNode: Node;\n    readonly filter: NodeFilter | null;\n    readonly root: Node;\n    readonly whatToShow: number;\n    firstChild(): Node | null;\n    lastChild(): Node | null;\n    nextNode(): Node | null;\n    nextSibling(): Node | null;\n    parentNode(): Node | null;\n    previousNode(): Node | null;\n    previousSibling(): Node | null;\n}\n\ndeclare var TreeWalker: {\n    prototype: TreeWalker;\n    new(): TreeWalker;\n};\n\n/** Simple user interface events. */\ninterface UIEvent extends Event {\n    readonly detail: number;\n    readonly view: Window | null;\n    /** @deprecated */\n    readonly which: number;\n    /** @deprecated */\n    initUIEvent(typeArg: string, bubblesArg?: boolean, cancelableArg?: boolean, viewArg?: Window | null, detailArg?: number): void;\n}\n\ndeclare var UIEvent: {\n    prototype: UIEvent;\n    new(type: string, eventInitDict?: UIEventInit): UIEvent;\n};\n\n/** The URL interface represents an object providing static methods used for creating object URLs. */\ninterface URL {\n    hash: string;\n    host: string;\n    hostname: string;\n    href: string;\n    toString(): string;\n    readonly origin: string;\n    password: string;\n    pathname: string;\n    port: string;\n    protocol: string;\n    search: string;\n    readonly searchParams: URLSearchParams;\n    username: string;\n    toJSON(): string;\n}\n\ndeclare var URL: {\n    prototype: URL;\n    new(url: string | URL, base?: string | URL): URL;\n    createObjectURL(obj: Blob | MediaSource): string;\n    revokeObjectURL(url: string): void;\n};\n\ntype webkitURL = URL;\ndeclare var webkitURL: typeof URL;\n\ninterface URLSearchParams {\n    /** Appends a specified key/value pair as a new search parameter. */\n    append(name: string, value: string): void;\n    /** Deletes the given search parameter, and its associated value, from the list of all search parameters. */\n    delete(name: string): void;\n    /** Returns the first value associated to the given search parameter. */\n    get(name: string): string | null;\n    /** Returns all the values association with a given search parameter. */\n    getAll(name: string): string[];\n    /** Returns a Boolean indicating if such a search parameter exists. */\n    has(name: string): boolean;\n    /** Sets the value associated to a given search parameter to the given value. If there were several values, delete the others. */\n    set(name: string, value: string): void;\n    sort(): void;\n    /** Returns a string containing a query string suitable for use in a URL. Does not include the question mark. */\n    toString(): string;\n    forEach(callbackfn: (value: string, key: string, parent: URLSearchParams) => void, thisArg?: any): void;\n}\n\ndeclare var URLSearchParams: {\n    prototype: URLSearchParams;\n    new(init?: string[][] | Record<string, string> | string | URLSearchParams): URLSearchParams;\n    toString(): string;\n};\n\ninterface VTTCue extends TextTrackCue {\n    align: AlignSetting;\n    line: LineAndPositionSetting;\n    lineAlign: LineAlignSetting;\n    position: LineAndPositionSetting;\n    positionAlign: PositionAlignSetting;\n    region: VTTRegion | null;\n    size: number;\n    snapToLines: boolean;\n    text: string;\n    vertical: DirectionSetting;\n    getCueAsHTML(): DocumentFragment;\n    addEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: VTTCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof TextTrackCueEventMap>(type: K, listener: (this: VTTCue, ev: TextTrackCueEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var VTTCue: {\n    prototype: VTTCue;\n    new(startTime: number, endTime: number, text: string): VTTCue;\n};\n\ninterface VTTRegion {\n    id: string;\n    lines: number;\n    regionAnchorX: number;\n    regionAnchorY: number;\n    scroll: ScrollSetting;\n    viewportAnchorX: number;\n    viewportAnchorY: number;\n    width: number;\n}\n\ndeclare var VTTRegion: {\n    prototype: VTTRegion;\n    new(): VTTRegion;\n};\n\n/** The validity states that an element can be in, with respect to constraint validation. Together, they help explain why an element\'s value fails to validate, if it\'s not valid. */\ninterface ValidityState {\n    readonly badInput: boolean;\n    readonly customError: boolean;\n    readonly patternMismatch: boolean;\n    readonly rangeOverflow: boolean;\n    readonly rangeUnderflow: boolean;\n    readonly stepMismatch: boolean;\n    readonly tooLong: boolean;\n    readonly tooShort: boolean;\n    readonly typeMismatch: boolean;\n    readonly valid: boolean;\n    readonly valueMissing: boolean;\n}\n\ndeclare var ValidityState: {\n    prototype: ValidityState;\n    new(): ValidityState;\n};\n\n/** Returned by the HTMLVideoElement.getVideoPlaybackQuality() method and contains metrics that can be used to determine the playback quality of a video. */\ninterface VideoPlaybackQuality {\n    /** @deprecated */\n    readonly corruptedVideoFrames: number;\n    readonly creationTime: DOMHighResTimeStamp;\n    readonly droppedVideoFrames: number;\n    readonly totalVideoFrames: number;\n}\n\ndeclare var VideoPlaybackQuality: {\n    prototype: VideoPlaybackQuality;\n    new(): VideoPlaybackQuality;\n};\n\ninterface VisualViewportEventMap {\n    "resize": Event;\n    "scroll": Event;\n}\n\ninterface VisualViewport extends EventTarget {\n    readonly height: number;\n    readonly offsetLeft: number;\n    readonly offsetTop: number;\n    onresize: ((this: VisualViewport, ev: Event) => any) | null;\n    onscroll: ((this: VisualViewport, ev: Event) => any) | null;\n    readonly pageLeft: number;\n    readonly pageTop: number;\n    readonly scale: number;\n    readonly width: number;\n    addEventListener<K extends keyof VisualViewportEventMap>(type: K, listener: (this: VisualViewport, ev: VisualViewportEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof VisualViewportEventMap>(type: K, listener: (this: VisualViewport, ev: VisualViewportEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var VisualViewport: {\n    prototype: VisualViewport;\n    new(): VisualViewport;\n};\n\ninterface WEBGL_color_buffer_float {\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: GLenum;\n    readonly RGBA32F_EXT: GLenum;\n    readonly UNSIGNED_NORMALIZED_EXT: GLenum;\n}\n\ninterface WEBGL_compressed_texture_astc {\n    getSupportedProfiles(): string[];\n    readonly COMPRESSED_RGBA_ASTC_10x10_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_10x5_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_10x6_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_10x8_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_12x10_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_12x12_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_4x4_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_5x4_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_5x5_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_6x5_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_6x6_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_8x5_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_8x6_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_8x8_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: GLenum;\n}\n\ninterface WEBGL_compressed_texture_etc {\n    readonly COMPRESSED_R11_EAC: GLenum;\n    readonly COMPRESSED_RG11_EAC: GLenum;\n    readonly COMPRESSED_RGB8_ETC2: GLenum;\n    readonly COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: GLenum;\n    readonly COMPRESSED_RGBA8_ETC2_EAC: GLenum;\n    readonly COMPRESSED_SIGNED_R11_EAC: GLenum;\n    readonly COMPRESSED_SIGNED_RG11_EAC: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: GLenum;\n    readonly COMPRESSED_SRGB8_ETC2: GLenum;\n    readonly COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: GLenum;\n}\n\ninterface WEBGL_compressed_texture_etc1 {\n    readonly COMPRESSED_RGB_ETC1_WEBGL: GLenum;\n}\n\ninterface WEBGL_compressed_texture_pvrtc {\n    readonly COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: GLenum;\n    readonly COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: GLenum;\n    readonly COMPRESSED_RGB_PVRTC_2BPPV1_IMG: GLenum;\n    readonly COMPRESSED_RGB_PVRTC_4BPPV1_IMG: GLenum;\n}\n\n/** The WEBGL_compressed_texture_s3tc extension is part of the WebGL API and exposes four S3TC compressed texture formats. */\ninterface WEBGL_compressed_texture_s3tc {\n    readonly COMPRESSED_RGBA_S3TC_DXT1_EXT: GLenum;\n    readonly COMPRESSED_RGBA_S3TC_DXT3_EXT: GLenum;\n    readonly COMPRESSED_RGBA_S3TC_DXT5_EXT: GLenum;\n    readonly COMPRESSED_RGB_S3TC_DXT1_EXT: GLenum;\n}\n\ninterface WEBGL_compressed_texture_s3tc_srgb {\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: GLenum;\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: GLenum;\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: GLenum;\n    readonly COMPRESSED_SRGB_S3TC_DXT1_EXT: GLenum;\n}\n\n/** The WEBGL_debug_renderer_info extension is part of the WebGL API and exposes two constants with information about the graphics driver for debugging purposes. */\ninterface WEBGL_debug_renderer_info {\n    readonly UNMASKED_RENDERER_WEBGL: GLenum;\n    readonly UNMASKED_VENDOR_WEBGL: GLenum;\n}\n\ninterface WEBGL_debug_shaders {\n    getTranslatedShaderSource(shader: WebGLShader): string;\n}\n\n/** The WEBGL_depth_texture extension is part of the WebGL API and defines 2D depth and depth-stencil textures. */\ninterface WEBGL_depth_texture {\n    readonly UNSIGNED_INT_24_8_WEBGL: GLenum;\n}\n\ninterface WEBGL_draw_buffers {\n    drawBuffersWEBGL(buffers: GLenum[]): void;\n    readonly COLOR_ATTACHMENT0_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT10_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT11_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT12_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT13_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT14_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT15_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT1_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT2_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT3_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT4_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT5_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT6_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT7_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT8_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT9_WEBGL: GLenum;\n    readonly DRAW_BUFFER0_WEBGL: GLenum;\n    readonly DRAW_BUFFER10_WEBGL: GLenum;\n    readonly DRAW_BUFFER11_WEBGL: GLenum;\n    readonly DRAW_BUFFER12_WEBGL: GLenum;\n    readonly DRAW_BUFFER13_WEBGL: GLenum;\n    readonly DRAW_BUFFER14_WEBGL: GLenum;\n    readonly DRAW_BUFFER15_WEBGL: GLenum;\n    readonly DRAW_BUFFER1_WEBGL: GLenum;\n    readonly DRAW_BUFFER2_WEBGL: GLenum;\n    readonly DRAW_BUFFER3_WEBGL: GLenum;\n    readonly DRAW_BUFFER4_WEBGL: GLenum;\n    readonly DRAW_BUFFER5_WEBGL: GLenum;\n    readonly DRAW_BUFFER6_WEBGL: GLenum;\n    readonly DRAW_BUFFER7_WEBGL: GLenum;\n    readonly DRAW_BUFFER8_WEBGL: GLenum;\n    readonly DRAW_BUFFER9_WEBGL: GLenum;\n    readonly MAX_COLOR_ATTACHMENTS_WEBGL: GLenum;\n    readonly MAX_DRAW_BUFFERS_WEBGL: GLenum;\n}\n\ninterface WEBGL_lose_context {\n    loseContext(): void;\n    restoreContext(): void;\n}\n\ninterface WEBGL_multi_draw {\n    multiDrawArraysInstancedWEBGL(mode: GLenum, firstsList: Int32Array | GLint[], firstsOffset: GLuint, countsList: Int32Array | GLsizei[], countsOffset: GLuint, instanceCountsList: Int32Array | GLsizei[], instanceCountsOffset: GLuint, drawcount: GLsizei): void;\n    multiDrawArraysWEBGL(mode: GLenum, firstsList: Int32Array | GLint[], firstsOffset: GLuint, countsList: Int32Array | GLsizei[], countsOffset: GLuint, drawcount: GLsizei): void;\n    multiDrawElementsInstancedWEBGL(mode: GLenum, countsList: Int32Array | GLint[], countsOffset: GLuint, type: GLenum, offsetsList: Int32Array | GLsizei[], offsetsOffset: GLuint, instanceCountsList: Int32Array | GLsizei[], instanceCountsOffset: GLuint, drawcount: GLsizei): void;\n    multiDrawElementsWEBGL(mode: GLenum, countsList: Int32Array | GLint[], countsOffset: GLuint, type: GLenum, offsetsList: Int32Array | GLsizei[], offsetsOffset: GLuint, drawcount: GLsizei): void;\n}\n\n/** A WaveShaperNode always has exactly one input and one output. */\ninterface WaveShaperNode extends AudioNode {\n    curve: Float32Array | null;\n    oversample: OverSampleType;\n}\n\ndeclare var WaveShaperNode: {\n    prototype: WaveShaperNode;\n    new(context: BaseAudioContext, options?: WaveShaperOptions): WaveShaperNode;\n};\n\ninterface WebGL2RenderingContext extends WebGL2RenderingContextBase, WebGL2RenderingContextOverloads, WebGLRenderingContextBase {\n}\n\ndeclare var WebGL2RenderingContext: {\n    prototype: WebGL2RenderingContext;\n    new(): WebGL2RenderingContext;\n    readonly ACTIVE_UNIFORM_BLOCKS: GLenum;\n    readonly ALREADY_SIGNALED: GLenum;\n    readonly ANY_SAMPLES_PASSED: GLenum;\n    readonly ANY_SAMPLES_PASSED_CONSERVATIVE: GLenum;\n    readonly COLOR: GLenum;\n    readonly COLOR_ATTACHMENT1: GLenum;\n    readonly COLOR_ATTACHMENT10: GLenum;\n    readonly COLOR_ATTACHMENT11: GLenum;\n    readonly COLOR_ATTACHMENT12: GLenum;\n    readonly COLOR_ATTACHMENT13: GLenum;\n    readonly COLOR_ATTACHMENT14: GLenum;\n    readonly COLOR_ATTACHMENT15: GLenum;\n    readonly COLOR_ATTACHMENT2: GLenum;\n    readonly COLOR_ATTACHMENT3: GLenum;\n    readonly COLOR_ATTACHMENT4: GLenum;\n    readonly COLOR_ATTACHMENT5: GLenum;\n    readonly COLOR_ATTACHMENT6: GLenum;\n    readonly COLOR_ATTACHMENT7: GLenum;\n    readonly COLOR_ATTACHMENT8: GLenum;\n    readonly COLOR_ATTACHMENT9: GLenum;\n    readonly COMPARE_REF_TO_TEXTURE: GLenum;\n    readonly CONDITION_SATISFIED: GLenum;\n    readonly COPY_READ_BUFFER: GLenum;\n    readonly COPY_READ_BUFFER_BINDING: GLenum;\n    readonly COPY_WRITE_BUFFER: GLenum;\n    readonly COPY_WRITE_BUFFER_BINDING: GLenum;\n    readonly CURRENT_QUERY: GLenum;\n    readonly DEPTH: GLenum;\n    readonly DEPTH24_STENCIL8: GLenum;\n    readonly DEPTH32F_STENCIL8: GLenum;\n    readonly DEPTH_COMPONENT24: GLenum;\n    readonly DEPTH_COMPONENT32F: GLenum;\n    readonly DRAW_BUFFER0: GLenum;\n    readonly DRAW_BUFFER1: GLenum;\n    readonly DRAW_BUFFER10: GLenum;\n    readonly DRAW_BUFFER11: GLenum;\n    readonly DRAW_BUFFER12: GLenum;\n    readonly DRAW_BUFFER13: GLenum;\n    readonly DRAW_BUFFER14: GLenum;\n    readonly DRAW_BUFFER15: GLenum;\n    readonly DRAW_BUFFER2: GLenum;\n    readonly DRAW_BUFFER3: GLenum;\n    readonly DRAW_BUFFER4: GLenum;\n    readonly DRAW_BUFFER5: GLenum;\n    readonly DRAW_BUFFER6: GLenum;\n    readonly DRAW_BUFFER7: GLenum;\n    readonly DRAW_BUFFER8: GLenum;\n    readonly DRAW_BUFFER9: GLenum;\n    readonly DRAW_FRAMEBUFFER: GLenum;\n    readonly DRAW_FRAMEBUFFER_BINDING: GLenum;\n    readonly DYNAMIC_COPY: GLenum;\n    readonly DYNAMIC_READ: GLenum;\n    readonly FLOAT_32_UNSIGNED_INT_24_8_REV: GLenum;\n    readonly FLOAT_MAT2x3: GLenum;\n    readonly FLOAT_MAT2x4: GLenum;\n    readonly FLOAT_MAT3x2: GLenum;\n    readonly FLOAT_MAT3x4: GLenum;\n    readonly FLOAT_MAT4x2: GLenum;\n    readonly FLOAT_MAT4x3: GLenum;\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: GLenum;\n    readonly FRAMEBUFFER_DEFAULT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: GLenum;\n    readonly HALF_FLOAT: GLenum;\n    readonly INTERLEAVED_ATTRIBS: GLenum;\n    readonly INT_2_10_10_10_REV: GLenum;\n    readonly INT_SAMPLER_2D: GLenum;\n    readonly INT_SAMPLER_2D_ARRAY: GLenum;\n    readonly INT_SAMPLER_3D: GLenum;\n    readonly INT_SAMPLER_CUBE: GLenum;\n    readonly INVALID_INDEX: GLenum;\n    readonly MAX: GLenum;\n    readonly MAX_3D_TEXTURE_SIZE: GLenum;\n    readonly MAX_ARRAY_TEXTURE_LAYERS: GLenum;\n    readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: GLenum;\n    readonly MAX_COLOR_ATTACHMENTS: GLenum;\n    readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_COMBINED_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_DRAW_BUFFERS: GLenum;\n    readonly MAX_ELEMENTS_INDICES: GLenum;\n    readonly MAX_ELEMENTS_VERTICES: GLenum;\n    readonly MAX_ELEMENT_INDEX: GLenum;\n    readonly MAX_FRAGMENT_INPUT_COMPONENTS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_PROGRAM_TEXEL_OFFSET: GLenum;\n    readonly MAX_SAMPLES: GLenum;\n    readonly MAX_SERVER_WAIT_TIMEOUT: GLenum;\n    readonly MAX_TEXTURE_LOD_BIAS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: GLenum;\n    readonly MAX_UNIFORM_BLOCK_SIZE: GLenum;\n    readonly MAX_UNIFORM_BUFFER_BINDINGS: GLenum;\n    readonly MAX_VARYING_COMPONENTS: GLenum;\n    readonly MAX_VERTEX_OUTPUT_COMPONENTS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_COMPONENTS: GLenum;\n    readonly MIN: GLenum;\n    readonly MIN_PROGRAM_TEXEL_OFFSET: GLenum;\n    readonly OBJECT_TYPE: GLenum;\n    readonly PACK_ROW_LENGTH: GLenum;\n    readonly PACK_SKIP_PIXELS: GLenum;\n    readonly PACK_SKIP_ROWS: GLenum;\n    readonly PIXEL_PACK_BUFFER: GLenum;\n    readonly PIXEL_PACK_BUFFER_BINDING: GLenum;\n    readonly PIXEL_UNPACK_BUFFER: GLenum;\n    readonly PIXEL_UNPACK_BUFFER_BINDING: GLenum;\n    readonly QUERY_RESULT: GLenum;\n    readonly QUERY_RESULT_AVAILABLE: GLenum;\n    readonly R11F_G11F_B10F: GLenum;\n    readonly R16F: GLenum;\n    readonly R16I: GLenum;\n    readonly R16UI: GLenum;\n    readonly R32F: GLenum;\n    readonly R32I: GLenum;\n    readonly R32UI: GLenum;\n    readonly R8: GLenum;\n    readonly R8I: GLenum;\n    readonly R8UI: GLenum;\n    readonly R8_SNORM: GLenum;\n    readonly RASTERIZER_DISCARD: GLenum;\n    readonly READ_BUFFER: GLenum;\n    readonly READ_FRAMEBUFFER: GLenum;\n    readonly READ_FRAMEBUFFER_BINDING: GLenum;\n    readonly RED: GLenum;\n    readonly RED_INTEGER: GLenum;\n    readonly RENDERBUFFER_SAMPLES: GLenum;\n    readonly RG: GLenum;\n    readonly RG16F: GLenum;\n    readonly RG16I: GLenum;\n    readonly RG16UI: GLenum;\n    readonly RG32F: GLenum;\n    readonly RG32I: GLenum;\n    readonly RG32UI: GLenum;\n    readonly RG8: GLenum;\n    readonly RG8I: GLenum;\n    readonly RG8UI: GLenum;\n    readonly RG8_SNORM: GLenum;\n    readonly RGB10_A2: GLenum;\n    readonly RGB10_A2UI: GLenum;\n    readonly RGB16F: GLenum;\n    readonly RGB16I: GLenum;\n    readonly RGB16UI: GLenum;\n    readonly RGB32F: GLenum;\n    readonly RGB32I: GLenum;\n    readonly RGB32UI: GLenum;\n    readonly RGB8: GLenum;\n    readonly RGB8I: GLenum;\n    readonly RGB8UI: GLenum;\n    readonly RGB8_SNORM: GLenum;\n    readonly RGB9_E5: GLenum;\n    readonly RGBA16F: GLenum;\n    readonly RGBA16I: GLenum;\n    readonly RGBA16UI: GLenum;\n    readonly RGBA32F: GLenum;\n    readonly RGBA32I: GLenum;\n    readonly RGBA32UI: GLenum;\n    readonly RGBA8: GLenum;\n    readonly RGBA8I: GLenum;\n    readonly RGBA8UI: GLenum;\n    readonly RGBA8_SNORM: GLenum;\n    readonly RGBA_INTEGER: GLenum;\n    readonly RGB_INTEGER: GLenum;\n    readonly RG_INTEGER: GLenum;\n    readonly SAMPLER_2D_ARRAY: GLenum;\n    readonly SAMPLER_2D_ARRAY_SHADOW: GLenum;\n    readonly SAMPLER_2D_SHADOW: GLenum;\n    readonly SAMPLER_3D: GLenum;\n    readonly SAMPLER_BINDING: GLenum;\n    readonly SAMPLER_CUBE_SHADOW: GLenum;\n    readonly SEPARATE_ATTRIBS: GLenum;\n    readonly SIGNALED: GLenum;\n    readonly SIGNED_NORMALIZED: GLenum;\n    readonly SRGB: GLenum;\n    readonly SRGB8: GLenum;\n    readonly SRGB8_ALPHA8: GLenum;\n    readonly STATIC_COPY: GLenum;\n    readonly STATIC_READ: GLenum;\n    readonly STENCIL: GLenum;\n    readonly STREAM_COPY: GLenum;\n    readonly STREAM_READ: GLenum;\n    readonly SYNC_CONDITION: GLenum;\n    readonly SYNC_FENCE: GLenum;\n    readonly SYNC_FLAGS: GLenum;\n    readonly SYNC_FLUSH_COMMANDS_BIT: GLenum;\n    readonly SYNC_GPU_COMMANDS_COMPLETE: GLenum;\n    readonly SYNC_STATUS: GLenum;\n    readonly TEXTURE_2D_ARRAY: GLenum;\n    readonly TEXTURE_3D: GLenum;\n    readonly TEXTURE_BASE_LEVEL: GLenum;\n    readonly TEXTURE_BINDING_2D_ARRAY: GLenum;\n    readonly TEXTURE_BINDING_3D: GLenum;\n    readonly TEXTURE_COMPARE_FUNC: GLenum;\n    readonly TEXTURE_COMPARE_MODE: GLenum;\n    readonly TEXTURE_IMMUTABLE_FORMAT: GLenum;\n    readonly TEXTURE_IMMUTABLE_LEVELS: GLenum;\n    readonly TEXTURE_MAX_LEVEL: GLenum;\n    readonly TEXTURE_MAX_LOD: GLenum;\n    readonly TEXTURE_MIN_LOD: GLenum;\n    readonly TEXTURE_WRAP_R: GLenum;\n    readonly TIMEOUT_EXPIRED: GLenum;\n    readonly TIMEOUT_IGNORED: GLint64;\n    readonly TRANSFORM_FEEDBACK: GLenum;\n    readonly TRANSFORM_FEEDBACK_ACTIVE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BINDING: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_MODE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_START: GLenum;\n    readonly TRANSFORM_FEEDBACK_PAUSED: GLenum;\n    readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: GLenum;\n    readonly TRANSFORM_FEEDBACK_VARYINGS: GLenum;\n    readonly UNIFORM_ARRAY_STRIDE: GLenum;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: GLenum;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: GLenum;\n    readonly UNIFORM_BLOCK_BINDING: GLenum;\n    readonly UNIFORM_BLOCK_DATA_SIZE: GLenum;\n    readonly UNIFORM_BLOCK_INDEX: GLenum;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: GLenum;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: GLenum;\n    readonly UNIFORM_BUFFER: GLenum;\n    readonly UNIFORM_BUFFER_BINDING: GLenum;\n    readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: GLenum;\n    readonly UNIFORM_BUFFER_SIZE: GLenum;\n    readonly UNIFORM_BUFFER_START: GLenum;\n    readonly UNIFORM_IS_ROW_MAJOR: GLenum;\n    readonly UNIFORM_MATRIX_STRIDE: GLenum;\n    readonly UNIFORM_OFFSET: GLenum;\n    readonly UNIFORM_SIZE: GLenum;\n    readonly UNIFORM_TYPE: GLenum;\n    readonly UNPACK_IMAGE_HEIGHT: GLenum;\n    readonly UNPACK_ROW_LENGTH: GLenum;\n    readonly UNPACK_SKIP_IMAGES: GLenum;\n    readonly UNPACK_SKIP_PIXELS: GLenum;\n    readonly UNPACK_SKIP_ROWS: GLenum;\n    readonly UNSIGNALED: GLenum;\n    readonly UNSIGNED_INT_10F_11F_11F_REV: GLenum;\n    readonly UNSIGNED_INT_24_8: GLenum;\n    readonly UNSIGNED_INT_2_10_10_10_REV: GLenum;\n    readonly UNSIGNED_INT_5_9_9_9_REV: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_2D: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_3D: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_CUBE: GLenum;\n    readonly UNSIGNED_INT_VEC2: GLenum;\n    readonly UNSIGNED_INT_VEC3: GLenum;\n    readonly UNSIGNED_INT_VEC4: GLenum;\n    readonly UNSIGNED_NORMALIZED: GLenum;\n    readonly VERTEX_ARRAY_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_INTEGER: GLenum;\n    readonly WAIT_FAILED: GLenum;\n    readonly ACTIVE_ATTRIBUTES: GLenum;\n    readonly ACTIVE_TEXTURE: GLenum;\n    readonly ACTIVE_UNIFORMS: GLenum;\n    readonly ALIASED_LINE_WIDTH_RANGE: GLenum;\n    readonly ALIASED_POINT_SIZE_RANGE: GLenum;\n    readonly ALPHA: GLenum;\n    readonly ALPHA_BITS: GLenum;\n    readonly ALWAYS: GLenum;\n    readonly ARRAY_BUFFER: GLenum;\n    readonly ARRAY_BUFFER_BINDING: GLenum;\n    readonly ATTACHED_SHADERS: GLenum;\n    readonly BACK: GLenum;\n    readonly BLEND: GLenum;\n    readonly BLEND_COLOR: GLenum;\n    readonly BLEND_DST_ALPHA: GLenum;\n    readonly BLEND_DST_RGB: GLenum;\n    readonly BLEND_EQUATION: GLenum;\n    readonly BLEND_EQUATION_ALPHA: GLenum;\n    readonly BLEND_EQUATION_RGB: GLenum;\n    readonly BLEND_SRC_ALPHA: GLenum;\n    readonly BLEND_SRC_RGB: GLenum;\n    readonly BLUE_BITS: GLenum;\n    readonly BOOL: GLenum;\n    readonly BOOL_VEC2: GLenum;\n    readonly BOOL_VEC3: GLenum;\n    readonly BOOL_VEC4: GLenum;\n    readonly BROWSER_DEFAULT_WEBGL: GLenum;\n    readonly BUFFER_SIZE: GLenum;\n    readonly BUFFER_USAGE: GLenum;\n    readonly BYTE: GLenum;\n    readonly CCW: GLenum;\n    readonly CLAMP_TO_EDGE: GLenum;\n    readonly COLOR_ATTACHMENT0: GLenum;\n    readonly COLOR_BUFFER_BIT: GLenum;\n    readonly COLOR_CLEAR_VALUE: GLenum;\n    readonly COLOR_WRITEMASK: GLenum;\n    readonly COMPILE_STATUS: GLenum;\n    readonly COMPRESSED_TEXTURE_FORMATS: GLenum;\n    readonly CONSTANT_ALPHA: GLenum;\n    readonly CONSTANT_COLOR: GLenum;\n    readonly CONTEXT_LOST_WEBGL: GLenum;\n    readonly CULL_FACE: GLenum;\n    readonly CULL_FACE_MODE: GLenum;\n    readonly CURRENT_PROGRAM: GLenum;\n    readonly CURRENT_VERTEX_ATTRIB: GLenum;\n    readonly CW: GLenum;\n    readonly DECR: GLenum;\n    readonly DECR_WRAP: GLenum;\n    readonly DELETE_STATUS: GLenum;\n    readonly DEPTH_ATTACHMENT: GLenum;\n    readonly DEPTH_BITS: GLenum;\n    readonly DEPTH_BUFFER_BIT: GLenum;\n    readonly DEPTH_CLEAR_VALUE: GLenum;\n    readonly DEPTH_COMPONENT: GLenum;\n    readonly DEPTH_COMPONENT16: GLenum;\n    readonly DEPTH_FUNC: GLenum;\n    readonly DEPTH_RANGE: GLenum;\n    readonly DEPTH_STENCIL: GLenum;\n    readonly DEPTH_STENCIL_ATTACHMENT: GLenum;\n    readonly DEPTH_TEST: GLenum;\n    readonly DEPTH_WRITEMASK: GLenum;\n    readonly DITHER: GLenum;\n    readonly DONT_CARE: GLenum;\n    readonly DST_ALPHA: GLenum;\n    readonly DST_COLOR: GLenum;\n    readonly DYNAMIC_DRAW: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: GLenum;\n    readonly EQUAL: GLenum;\n    readonly FASTEST: GLenum;\n    readonly FLOAT: GLenum;\n    readonly FLOAT_MAT2: GLenum;\n    readonly FLOAT_MAT3: GLenum;\n    readonly FLOAT_MAT4: GLenum;\n    readonly FLOAT_VEC2: GLenum;\n    readonly FLOAT_VEC3: GLenum;\n    readonly FLOAT_VEC4: GLenum;\n    readonly FRAGMENT_SHADER: GLenum;\n    readonly FRAMEBUFFER: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: GLenum;\n    readonly FRAMEBUFFER_BINDING: GLenum;\n    readonly FRAMEBUFFER_COMPLETE: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_UNSUPPORTED: GLenum;\n    readonly FRONT: GLenum;\n    readonly FRONT_AND_BACK: GLenum;\n    readonly FRONT_FACE: GLenum;\n    readonly FUNC_ADD: GLenum;\n    readonly FUNC_REVERSE_SUBTRACT: GLenum;\n    readonly FUNC_SUBTRACT: GLenum;\n    readonly GENERATE_MIPMAP_HINT: GLenum;\n    readonly GEQUAL: GLenum;\n    readonly GREATER: GLenum;\n    readonly GREEN_BITS: GLenum;\n    readonly HIGH_FLOAT: GLenum;\n    readonly HIGH_INT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: GLenum;\n    readonly INCR: GLenum;\n    readonly INCR_WRAP: GLenum;\n    readonly INT: GLenum;\n    readonly INT_VEC2: GLenum;\n    readonly INT_VEC3: GLenum;\n    readonly INT_VEC4: GLenum;\n    readonly INVALID_ENUM: GLenum;\n    readonly INVALID_FRAMEBUFFER_OPERATION: GLenum;\n    readonly INVALID_OPERATION: GLenum;\n    readonly INVALID_VALUE: GLenum;\n    readonly INVERT: GLenum;\n    readonly KEEP: GLenum;\n    readonly LEQUAL: GLenum;\n    readonly LESS: GLenum;\n    readonly LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_NEAREST: GLenum;\n    readonly LINES: GLenum;\n    readonly LINE_LOOP: GLenum;\n    readonly LINE_STRIP: GLenum;\n    readonly LINE_WIDTH: GLenum;\n    readonly LINK_STATUS: GLenum;\n    readonly LOW_FLOAT: GLenum;\n    readonly LOW_INT: GLenum;\n    readonly LUMINANCE: GLenum;\n    readonly LUMINANCE_ALPHA: GLenum;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: GLenum;\n    readonly MAX_RENDERBUFFER_SIZE: GLenum;\n    readonly MAX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_TEXTURE_SIZE: GLenum;\n    readonly MAX_VARYING_VECTORS: GLenum;\n    readonly MAX_VERTEX_ATTRIBS: GLenum;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: GLenum;\n    readonly MAX_VIEWPORT_DIMS: GLenum;\n    readonly MEDIUM_FLOAT: GLenum;\n    readonly MEDIUM_INT: GLenum;\n    readonly MIRRORED_REPEAT: GLenum;\n    readonly NEAREST: GLenum;\n    readonly NEAREST_MIPMAP_LINEAR: GLenum;\n    readonly NEAREST_MIPMAP_NEAREST: GLenum;\n    readonly NEVER: GLenum;\n    readonly NICEST: GLenum;\n    readonly NONE: GLenum;\n    readonly NOTEQUAL: GLenum;\n    readonly NO_ERROR: GLenum;\n    readonly ONE: GLenum;\n    readonly ONE_MINUS_CONSTANT_ALPHA: GLenum;\n    readonly ONE_MINUS_CONSTANT_COLOR: GLenum;\n    readonly ONE_MINUS_DST_ALPHA: GLenum;\n    readonly ONE_MINUS_DST_COLOR: GLenum;\n    readonly ONE_MINUS_SRC_ALPHA: GLenum;\n    readonly ONE_MINUS_SRC_COLOR: GLenum;\n    readonly OUT_OF_MEMORY: GLenum;\n    readonly PACK_ALIGNMENT: GLenum;\n    readonly POINTS: GLenum;\n    readonly POLYGON_OFFSET_FACTOR: GLenum;\n    readonly POLYGON_OFFSET_FILL: GLenum;\n    readonly POLYGON_OFFSET_UNITS: GLenum;\n    readonly RED_BITS: GLenum;\n    readonly RENDERBUFFER: GLenum;\n    readonly RENDERBUFFER_ALPHA_SIZE: GLenum;\n    readonly RENDERBUFFER_BINDING: GLenum;\n    readonly RENDERBUFFER_BLUE_SIZE: GLenum;\n    readonly RENDERBUFFER_DEPTH_SIZE: GLenum;\n    readonly RENDERBUFFER_GREEN_SIZE: GLenum;\n    readonly RENDERBUFFER_HEIGHT: GLenum;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: GLenum;\n    readonly RENDERBUFFER_RED_SIZE: GLenum;\n    readonly RENDERBUFFER_STENCIL_SIZE: GLenum;\n    readonly RENDERBUFFER_WIDTH: GLenum;\n    readonly RENDERER: GLenum;\n    readonly REPEAT: GLenum;\n    readonly REPLACE: GLenum;\n    readonly RGB: GLenum;\n    readonly RGB565: GLenum;\n    readonly RGB5_A1: GLenum;\n    readonly RGBA: GLenum;\n    readonly RGBA4: GLenum;\n    readonly SAMPLER_2D: GLenum;\n    readonly SAMPLER_CUBE: GLenum;\n    readonly SAMPLES: GLenum;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: GLenum;\n    readonly SAMPLE_BUFFERS: GLenum;\n    readonly SAMPLE_COVERAGE: GLenum;\n    readonly SAMPLE_COVERAGE_INVERT: GLenum;\n    readonly SAMPLE_COVERAGE_VALUE: GLenum;\n    readonly SCISSOR_BOX: GLenum;\n    readonly SCISSOR_TEST: GLenum;\n    readonly SHADER_TYPE: GLenum;\n    readonly SHADING_LANGUAGE_VERSION: GLenum;\n    readonly SHORT: GLenum;\n    readonly SRC_ALPHA: GLenum;\n    readonly SRC_ALPHA_SATURATE: GLenum;\n    readonly SRC_COLOR: GLenum;\n    readonly STATIC_DRAW: GLenum;\n    readonly STENCIL_ATTACHMENT: GLenum;\n    readonly STENCIL_BACK_FAIL: GLenum;\n    readonly STENCIL_BACK_FUNC: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_BACK_REF: GLenum;\n    readonly STENCIL_BACK_VALUE_MASK: GLenum;\n    readonly STENCIL_BACK_WRITEMASK: GLenum;\n    readonly STENCIL_BITS: GLenum;\n    readonly STENCIL_BUFFER_BIT: GLenum;\n    readonly STENCIL_CLEAR_VALUE: GLenum;\n    readonly STENCIL_FAIL: GLenum;\n    readonly STENCIL_FUNC: GLenum;\n    readonly STENCIL_INDEX8: GLenum;\n    readonly STENCIL_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_REF: GLenum;\n    readonly STENCIL_TEST: GLenum;\n    readonly STENCIL_VALUE_MASK: GLenum;\n    readonly STENCIL_WRITEMASK: GLenum;\n    readonly STREAM_DRAW: GLenum;\n    readonly SUBPIXEL_BITS: GLenum;\n    readonly TEXTURE: GLenum;\n    readonly TEXTURE0: GLenum;\n    readonly TEXTURE1: GLenum;\n    readonly TEXTURE10: GLenum;\n    readonly TEXTURE11: GLenum;\n    readonly TEXTURE12: GLenum;\n    readonly TEXTURE13: GLenum;\n    readonly TEXTURE14: GLenum;\n    readonly TEXTURE15: GLenum;\n    readonly TEXTURE16: GLenum;\n    readonly TEXTURE17: GLenum;\n    readonly TEXTURE18: GLenum;\n    readonly TEXTURE19: GLenum;\n    readonly TEXTURE2: GLenum;\n    readonly TEXTURE20: GLenum;\n    readonly TEXTURE21: GLenum;\n    readonly TEXTURE22: GLenum;\n    readonly TEXTURE23: GLenum;\n    readonly TEXTURE24: GLenum;\n    readonly TEXTURE25: GLenum;\n    readonly TEXTURE26: GLenum;\n    readonly TEXTURE27: GLenum;\n    readonly TEXTURE28: GLenum;\n    readonly TEXTURE29: GLenum;\n    readonly TEXTURE3: GLenum;\n    readonly TEXTURE30: GLenum;\n    readonly TEXTURE31: GLenum;\n    readonly TEXTURE4: GLenum;\n    readonly TEXTURE5: GLenum;\n    readonly TEXTURE6: GLenum;\n    readonly TEXTURE7: GLenum;\n    readonly TEXTURE8: GLenum;\n    readonly TEXTURE9: GLenum;\n    readonly TEXTURE_2D: GLenum;\n    readonly TEXTURE_BINDING_2D: GLenum;\n    readonly TEXTURE_BINDING_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: GLenum;\n    readonly TEXTURE_MAG_FILTER: GLenum;\n    readonly TEXTURE_MIN_FILTER: GLenum;\n    readonly TEXTURE_WRAP_S: GLenum;\n    readonly TEXTURE_WRAP_T: GLenum;\n    readonly TRIANGLES: GLenum;\n    readonly TRIANGLE_FAN: GLenum;\n    readonly TRIANGLE_STRIP: GLenum;\n    readonly UNPACK_ALIGNMENT: GLenum;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: GLenum;\n    readonly UNPACK_FLIP_Y_WEBGL: GLenum;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: GLenum;\n    readonly UNSIGNED_BYTE: GLenum;\n    readonly UNSIGNED_INT: GLenum;\n    readonly UNSIGNED_SHORT: GLenum;\n    readonly UNSIGNED_SHORT_4_4_4_4: GLenum;\n    readonly UNSIGNED_SHORT_5_5_5_1: GLenum;\n    readonly UNSIGNED_SHORT_5_6_5: GLenum;\n    readonly VALIDATE_STATUS: GLenum;\n    readonly VENDOR: GLenum;\n    readonly VERSION: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: GLenum;\n    readonly VERTEX_SHADER: GLenum;\n    readonly VIEWPORT: GLenum;\n    readonly ZERO: GLenum;\n};\n\ninterface WebGL2RenderingContextBase {\n    beginQuery(target: GLenum, query: WebGLQuery): void;\n    beginTransformFeedback(primitiveMode: GLenum): void;\n    bindBufferBase(target: GLenum, index: GLuint, buffer: WebGLBuffer | null): void;\n    bindBufferRange(target: GLenum, index: GLuint, buffer: WebGLBuffer | null, offset: GLintptr, size: GLsizeiptr): void;\n    bindSampler(unit: GLuint, sampler: WebGLSampler | null): void;\n    bindTransformFeedback(target: GLenum, tf: WebGLTransformFeedback | null): void;\n    bindVertexArray(array: WebGLVertexArrayObject | null): void;\n    blitFramebuffer(srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum): void;\n    clearBufferfi(buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint): void;\n    clearBufferfv(buffer: GLenum, drawbuffer: GLint, values: Float32List, srcOffset?: GLuint): void;\n    clearBufferiv(buffer: GLenum, drawbuffer: GLint, values: Int32List, srcOffset?: GLuint): void;\n    clearBufferuiv(buffer: GLenum, drawbuffer: GLint, values: Uint32List, srcOffset?: GLuint): void;\n    clientWaitSync(sync: WebGLSync, flags: GLbitfield, timeout: GLuint64): GLenum;\n    compressedTexImage3D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, offset: GLintptr): void;\n    compressedTexImage3D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, srcData: ArrayBufferView, srcOffset?: GLuint, srcLengthOverride?: GLuint): void;\n    compressedTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, offset: GLintptr): void;\n    compressedTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, srcData: ArrayBufferView, srcOffset?: GLuint, srcLengthOverride?: GLuint): void;\n    copyBufferSubData(readTarget: GLenum, writeTarget: GLenum, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr): void;\n    copyTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    createQuery(): WebGLQuery | null;\n    createSampler(): WebGLSampler | null;\n    createTransformFeedback(): WebGLTransformFeedback | null;\n    createVertexArray(): WebGLVertexArrayObject | null;\n    deleteQuery(query: WebGLQuery | null): void;\n    deleteSampler(sampler: WebGLSampler | null): void;\n    deleteSync(sync: WebGLSync | null): void;\n    deleteTransformFeedback(tf: WebGLTransformFeedback | null): void;\n    deleteVertexArray(vertexArray: WebGLVertexArrayObject | null): void;\n    drawArraysInstanced(mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei): void;\n    drawBuffers(buffers: GLenum[]): void;\n    drawElementsInstanced(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr, instanceCount: GLsizei): void;\n    drawRangeElements(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, offset: GLintptr): void;\n    endQuery(target: GLenum): void;\n    endTransformFeedback(): void;\n    fenceSync(condition: GLenum, flags: GLbitfield): WebGLSync | null;\n    framebufferTextureLayer(target: GLenum, attachment: GLenum, texture: WebGLTexture | null, level: GLint, layer: GLint): void;\n    getActiveUniformBlockName(program: WebGLProgram, uniformBlockIndex: GLuint): string | null;\n    getActiveUniformBlockParameter(program: WebGLProgram, uniformBlockIndex: GLuint, pname: GLenum): any;\n    getActiveUniforms(program: WebGLProgram, uniformIndices: GLuint[], pname: GLenum): any;\n    getBufferSubData(target: GLenum, srcByteOffset: GLintptr, dstBuffer: ArrayBufferView, dstOffset?: GLuint, length?: GLuint): void;\n    getFragDataLocation(program: WebGLProgram, name: string): GLint;\n    getIndexedParameter(target: GLenum, index: GLuint): any;\n    getInternalformatParameter(target: GLenum, internalformat: GLenum, pname: GLenum): any;\n    getQuery(target: GLenum, pname: GLenum): WebGLQuery | null;\n    getQueryParameter(query: WebGLQuery, pname: GLenum): any;\n    getSamplerParameter(sampler: WebGLSampler, pname: GLenum): any;\n    getSyncParameter(sync: WebGLSync, pname: GLenum): any;\n    getTransformFeedbackVarying(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;\n    getUniformBlockIndex(program: WebGLProgram, uniformBlockName: string): GLuint;\n    getUniformIndices(program: WebGLProgram, uniformNames: string[]): GLuint[] | null;\n    invalidateFramebuffer(target: GLenum, attachments: GLenum[]): void;\n    invalidateSubFramebuffer(target: GLenum, attachments: GLenum[], x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    isQuery(query: WebGLQuery | null): GLboolean;\n    isSampler(sampler: WebGLSampler | null): GLboolean;\n    isSync(sync: WebGLSync | null): GLboolean;\n    isTransformFeedback(tf: WebGLTransformFeedback | null): GLboolean;\n    isVertexArray(vertexArray: WebGLVertexArrayObject | null): GLboolean;\n    pauseTransformFeedback(): void;\n    readBuffer(src: GLenum): void;\n    renderbufferStorageMultisample(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei): void;\n    resumeTransformFeedback(): void;\n    samplerParameterf(sampler: WebGLSampler, pname: GLenum, param: GLfloat): void;\n    samplerParameteri(sampler: WebGLSampler, pname: GLenum, param: GLint): void;\n    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pboOffset: GLintptr): void;\n    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, srcData: ArrayBufferView | null): void;\n    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, srcData: ArrayBufferView, srcOffset: GLuint): void;\n    texStorage2D(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei): void;\n    texStorage3D(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei): void;\n    texSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pboOffset: GLintptr): void;\n    texSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, srcData: ArrayBufferView | null, srcOffset?: GLuint): void;\n    transformFeedbackVaryings(program: WebGLProgram, varyings: string[], bufferMode: GLenum): void;\n    uniform1ui(location: WebGLUniformLocation | null, v0: GLuint): void;\n    uniform1uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform2ui(location: WebGLUniformLocation | null, v0: GLuint, v1: GLuint): void;\n    uniform2uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform3ui(location: WebGLUniformLocation | null, v0: GLuint, v1: GLuint, v2: GLuint): void;\n    uniform3uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform4ui(location: WebGLUniformLocation | null, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint): void;\n    uniform4uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformBlockBinding(program: WebGLProgram, uniformBlockIndex: GLuint, uniformBlockBinding: GLuint): void;\n    uniformMatrix2x3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix2x4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix3x2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix3x4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix4x2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix4x3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    vertexAttribDivisor(index: GLuint, divisor: GLuint): void;\n    vertexAttribI4i(index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint): void;\n    vertexAttribI4iv(index: GLuint, values: Int32List): void;\n    vertexAttribI4ui(index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint): void;\n    vertexAttribI4uiv(index: GLuint, values: Uint32List): void;\n    vertexAttribIPointer(index: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr): void;\n    waitSync(sync: WebGLSync, flags: GLbitfield, timeout: GLint64): void;\n    readonly ACTIVE_UNIFORM_BLOCKS: GLenum;\n    readonly ALREADY_SIGNALED: GLenum;\n    readonly ANY_SAMPLES_PASSED: GLenum;\n    readonly ANY_SAMPLES_PASSED_CONSERVATIVE: GLenum;\n    readonly COLOR: GLenum;\n    readonly COLOR_ATTACHMENT1: GLenum;\n    readonly COLOR_ATTACHMENT10: GLenum;\n    readonly COLOR_ATTACHMENT11: GLenum;\n    readonly COLOR_ATTACHMENT12: GLenum;\n    readonly COLOR_ATTACHMENT13: GLenum;\n    readonly COLOR_ATTACHMENT14: GLenum;\n    readonly COLOR_ATTACHMENT15: GLenum;\n    readonly COLOR_ATTACHMENT2: GLenum;\n    readonly COLOR_ATTACHMENT3: GLenum;\n    readonly COLOR_ATTACHMENT4: GLenum;\n    readonly COLOR_ATTACHMENT5: GLenum;\n    readonly COLOR_ATTACHMENT6: GLenum;\n    readonly COLOR_ATTACHMENT7: GLenum;\n    readonly COLOR_ATTACHMENT8: GLenum;\n    readonly COLOR_ATTACHMENT9: GLenum;\n    readonly COMPARE_REF_TO_TEXTURE: GLenum;\n    readonly CONDITION_SATISFIED: GLenum;\n    readonly COPY_READ_BUFFER: GLenum;\n    readonly COPY_READ_BUFFER_BINDING: GLenum;\n    readonly COPY_WRITE_BUFFER: GLenum;\n    readonly COPY_WRITE_BUFFER_BINDING: GLenum;\n    readonly CURRENT_QUERY: GLenum;\n    readonly DEPTH: GLenum;\n    readonly DEPTH24_STENCIL8: GLenum;\n    readonly DEPTH32F_STENCIL8: GLenum;\n    readonly DEPTH_COMPONENT24: GLenum;\n    readonly DEPTH_COMPONENT32F: GLenum;\n    readonly DRAW_BUFFER0: GLenum;\n    readonly DRAW_BUFFER1: GLenum;\n    readonly DRAW_BUFFER10: GLenum;\n    readonly DRAW_BUFFER11: GLenum;\n    readonly DRAW_BUFFER12: GLenum;\n    readonly DRAW_BUFFER13: GLenum;\n    readonly DRAW_BUFFER14: GLenum;\n    readonly DRAW_BUFFER15: GLenum;\n    readonly DRAW_BUFFER2: GLenum;\n    readonly DRAW_BUFFER3: GLenum;\n    readonly DRAW_BUFFER4: GLenum;\n    readonly DRAW_BUFFER5: GLenum;\n    readonly DRAW_BUFFER6: GLenum;\n    readonly DRAW_BUFFER7: GLenum;\n    readonly DRAW_BUFFER8: GLenum;\n    readonly DRAW_BUFFER9: GLenum;\n    readonly DRAW_FRAMEBUFFER: GLenum;\n    readonly DRAW_FRAMEBUFFER_BINDING: GLenum;\n    readonly DYNAMIC_COPY: GLenum;\n    readonly DYNAMIC_READ: GLenum;\n    readonly FLOAT_32_UNSIGNED_INT_24_8_REV: GLenum;\n    readonly FLOAT_MAT2x3: GLenum;\n    readonly FLOAT_MAT2x4: GLenum;\n    readonly FLOAT_MAT3x2: GLenum;\n    readonly FLOAT_MAT3x4: GLenum;\n    readonly FLOAT_MAT4x2: GLenum;\n    readonly FLOAT_MAT4x3: GLenum;\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: GLenum;\n    readonly FRAMEBUFFER_DEFAULT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: GLenum;\n    readonly HALF_FLOAT: GLenum;\n    readonly INTERLEAVED_ATTRIBS: GLenum;\n    readonly INT_2_10_10_10_REV: GLenum;\n    readonly INT_SAMPLER_2D: GLenum;\n    readonly INT_SAMPLER_2D_ARRAY: GLenum;\n    readonly INT_SAMPLER_3D: GLenum;\n    readonly INT_SAMPLER_CUBE: GLenum;\n    readonly INVALID_INDEX: GLenum;\n    readonly MAX: GLenum;\n    readonly MAX_3D_TEXTURE_SIZE: GLenum;\n    readonly MAX_ARRAY_TEXTURE_LAYERS: GLenum;\n    readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: GLenum;\n    readonly MAX_COLOR_ATTACHMENTS: GLenum;\n    readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_COMBINED_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_DRAW_BUFFERS: GLenum;\n    readonly MAX_ELEMENTS_INDICES: GLenum;\n    readonly MAX_ELEMENTS_VERTICES: GLenum;\n    readonly MAX_ELEMENT_INDEX: GLenum;\n    readonly MAX_FRAGMENT_INPUT_COMPONENTS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_PROGRAM_TEXEL_OFFSET: GLenum;\n    readonly MAX_SAMPLES: GLenum;\n    readonly MAX_SERVER_WAIT_TIMEOUT: GLenum;\n    readonly MAX_TEXTURE_LOD_BIAS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: GLenum;\n    readonly MAX_UNIFORM_BLOCK_SIZE: GLenum;\n    readonly MAX_UNIFORM_BUFFER_BINDINGS: GLenum;\n    readonly MAX_VARYING_COMPONENTS: GLenum;\n    readonly MAX_VERTEX_OUTPUT_COMPONENTS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_COMPONENTS: GLenum;\n    readonly MIN: GLenum;\n    readonly MIN_PROGRAM_TEXEL_OFFSET: GLenum;\n    readonly OBJECT_TYPE: GLenum;\n    readonly PACK_ROW_LENGTH: GLenum;\n    readonly PACK_SKIP_PIXELS: GLenum;\n    readonly PACK_SKIP_ROWS: GLenum;\n    readonly PIXEL_PACK_BUFFER: GLenum;\n    readonly PIXEL_PACK_BUFFER_BINDING: GLenum;\n    readonly PIXEL_UNPACK_BUFFER: GLenum;\n    readonly PIXEL_UNPACK_BUFFER_BINDING: GLenum;\n    readonly QUERY_RESULT: GLenum;\n    readonly QUERY_RESULT_AVAILABLE: GLenum;\n    readonly R11F_G11F_B10F: GLenum;\n    readonly R16F: GLenum;\n    readonly R16I: GLenum;\n    readonly R16UI: GLenum;\n    readonly R32F: GLenum;\n    readonly R32I: GLenum;\n    readonly R32UI: GLenum;\n    readonly R8: GLenum;\n    readonly R8I: GLenum;\n    readonly R8UI: GLenum;\n    readonly R8_SNORM: GLenum;\n    readonly RASTERIZER_DISCARD: GLenum;\n    readonly READ_BUFFER: GLenum;\n    readonly READ_FRAMEBUFFER: GLenum;\n    readonly READ_FRAMEBUFFER_BINDING: GLenum;\n    readonly RED: GLenum;\n    readonly RED_INTEGER: GLenum;\n    readonly RENDERBUFFER_SAMPLES: GLenum;\n    readonly RG: GLenum;\n    readonly RG16F: GLenum;\n    readonly RG16I: GLenum;\n    readonly RG16UI: GLenum;\n    readonly RG32F: GLenum;\n    readonly RG32I: GLenum;\n    readonly RG32UI: GLenum;\n    readonly RG8: GLenum;\n    readonly RG8I: GLenum;\n    readonly RG8UI: GLenum;\n    readonly RG8_SNORM: GLenum;\n    readonly RGB10_A2: GLenum;\n    readonly RGB10_A2UI: GLenum;\n    readonly RGB16F: GLenum;\n    readonly RGB16I: GLenum;\n    readonly RGB16UI: GLenum;\n    readonly RGB32F: GLenum;\n    readonly RGB32I: GLenum;\n    readonly RGB32UI: GLenum;\n    readonly RGB8: GLenum;\n    readonly RGB8I: GLenum;\n    readonly RGB8UI: GLenum;\n    readonly RGB8_SNORM: GLenum;\n    readonly RGB9_E5: GLenum;\n    readonly RGBA16F: GLenum;\n    readonly RGBA16I: GLenum;\n    readonly RGBA16UI: GLenum;\n    readonly RGBA32F: GLenum;\n    readonly RGBA32I: GLenum;\n    readonly RGBA32UI: GLenum;\n    readonly RGBA8: GLenum;\n    readonly RGBA8I: GLenum;\n    readonly RGBA8UI: GLenum;\n    readonly RGBA8_SNORM: GLenum;\n    readonly RGBA_INTEGER: GLenum;\n    readonly RGB_INTEGER: GLenum;\n    readonly RG_INTEGER: GLenum;\n    readonly SAMPLER_2D_ARRAY: GLenum;\n    readonly SAMPLER_2D_ARRAY_SHADOW: GLenum;\n    readonly SAMPLER_2D_SHADOW: GLenum;\n    readonly SAMPLER_3D: GLenum;\n    readonly SAMPLER_BINDING: GLenum;\n    readonly SAMPLER_CUBE_SHADOW: GLenum;\n    readonly SEPARATE_ATTRIBS: GLenum;\n    readonly SIGNALED: GLenum;\n    readonly SIGNED_NORMALIZED: GLenum;\n    readonly SRGB: GLenum;\n    readonly SRGB8: GLenum;\n    readonly SRGB8_ALPHA8: GLenum;\n    readonly STATIC_COPY: GLenum;\n    readonly STATIC_READ: GLenum;\n    readonly STENCIL: GLenum;\n    readonly STREAM_COPY: GLenum;\n    readonly STREAM_READ: GLenum;\n    readonly SYNC_CONDITION: GLenum;\n    readonly SYNC_FENCE: GLenum;\n    readonly SYNC_FLAGS: GLenum;\n    readonly SYNC_FLUSH_COMMANDS_BIT: GLenum;\n    readonly SYNC_GPU_COMMANDS_COMPLETE: GLenum;\n    readonly SYNC_STATUS: GLenum;\n    readonly TEXTURE_2D_ARRAY: GLenum;\n    readonly TEXTURE_3D: GLenum;\n    readonly TEXTURE_BASE_LEVEL: GLenum;\n    readonly TEXTURE_BINDING_2D_ARRAY: GLenum;\n    readonly TEXTURE_BINDING_3D: GLenum;\n    readonly TEXTURE_COMPARE_FUNC: GLenum;\n    readonly TEXTURE_COMPARE_MODE: GLenum;\n    readonly TEXTURE_IMMUTABLE_FORMAT: GLenum;\n    readonly TEXTURE_IMMUTABLE_LEVELS: GLenum;\n    readonly TEXTURE_MAX_LEVEL: GLenum;\n    readonly TEXTURE_MAX_LOD: GLenum;\n    readonly TEXTURE_MIN_LOD: GLenum;\n    readonly TEXTURE_WRAP_R: GLenum;\n    readonly TIMEOUT_EXPIRED: GLenum;\n    readonly TIMEOUT_IGNORED: GLint64;\n    readonly TRANSFORM_FEEDBACK: GLenum;\n    readonly TRANSFORM_FEEDBACK_ACTIVE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BINDING: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_MODE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_START: GLenum;\n    readonly TRANSFORM_FEEDBACK_PAUSED: GLenum;\n    readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: GLenum;\n    readonly TRANSFORM_FEEDBACK_VARYINGS: GLenum;\n    readonly UNIFORM_ARRAY_STRIDE: GLenum;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: GLenum;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: GLenum;\n    readonly UNIFORM_BLOCK_BINDING: GLenum;\n    readonly UNIFORM_BLOCK_DATA_SIZE: GLenum;\n    readonly UNIFORM_BLOCK_INDEX: GLenum;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: GLenum;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: GLenum;\n    readonly UNIFORM_BUFFER: GLenum;\n    readonly UNIFORM_BUFFER_BINDING: GLenum;\n    readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: GLenum;\n    readonly UNIFORM_BUFFER_SIZE: GLenum;\n    readonly UNIFORM_BUFFER_START: GLenum;\n    readonly UNIFORM_IS_ROW_MAJOR: GLenum;\n    readonly UNIFORM_MATRIX_STRIDE: GLenum;\n    readonly UNIFORM_OFFSET: GLenum;\n    readonly UNIFORM_SIZE: GLenum;\n    readonly UNIFORM_TYPE: GLenum;\n    readonly UNPACK_IMAGE_HEIGHT: GLenum;\n    readonly UNPACK_ROW_LENGTH: GLenum;\n    readonly UNPACK_SKIP_IMAGES: GLenum;\n    readonly UNPACK_SKIP_PIXELS: GLenum;\n    readonly UNPACK_SKIP_ROWS: GLenum;\n    readonly UNSIGNALED: GLenum;\n    readonly UNSIGNED_INT_10F_11F_11F_REV: GLenum;\n    readonly UNSIGNED_INT_24_8: GLenum;\n    readonly UNSIGNED_INT_2_10_10_10_REV: GLenum;\n    readonly UNSIGNED_INT_5_9_9_9_REV: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_2D: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_3D: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_CUBE: GLenum;\n    readonly UNSIGNED_INT_VEC2: GLenum;\n    readonly UNSIGNED_INT_VEC3: GLenum;\n    readonly UNSIGNED_INT_VEC4: GLenum;\n    readonly UNSIGNED_NORMALIZED: GLenum;\n    readonly VERTEX_ARRAY_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_INTEGER: GLenum;\n    readonly WAIT_FAILED: GLenum;\n}\n\ninterface WebGL2RenderingContextOverloads {\n    bufferData(target: GLenum, size: GLsizeiptr, usage: GLenum): void;\n    bufferData(target: GLenum, srcData: BufferSource | null, usage: GLenum): void;\n    bufferData(target: GLenum, srcData: ArrayBufferView, usage: GLenum, srcOffset: GLuint, length?: GLuint): void;\n    bufferSubData(target: GLenum, dstByteOffset: GLintptr, srcData: BufferSource): void;\n    bufferSubData(target: GLenum, dstByteOffset: GLintptr, srcData: ArrayBufferView, srcOffset: GLuint, length?: GLuint): void;\n    compressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, offset: GLintptr): void;\n    compressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, srcData: ArrayBufferView, srcOffset?: GLuint, srcLengthOverride?: GLuint): void;\n    compressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, offset: GLintptr): void;\n    compressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, srcData: ArrayBufferView, srcOffset?: GLuint, srcLengthOverride?: GLuint): void;\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, dstData: ArrayBufferView | null): void;\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, offset: GLintptr): void;\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, dstData: ArrayBufferView, dstOffset: GLuint): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pboOffset: GLintptr): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, srcData: ArrayBufferView, srcOffset: GLuint): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pboOffset: GLintptr): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, srcData: ArrayBufferView, srcOffset: GLuint): void;\n    uniform1fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform1iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform2fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform2iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform3fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform3iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform4fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform4iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n}\n\n/** Part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getActiveAttrib() and WebGLRenderingContext.getActiveUniform() methods. */\ninterface WebGLActiveInfo {\n    readonly name: string;\n    readonly size: GLint;\n    readonly type: GLenum;\n}\n\ndeclare var WebGLActiveInfo: {\n    prototype: WebGLActiveInfo;\n    new(): WebGLActiveInfo;\n};\n\n/** Part of the WebGL API and represents an opaque buffer object storing data such as vertices or colors. */\ninterface WebGLBuffer {\n}\n\ndeclare var WebGLBuffer: {\n    prototype: WebGLBuffer;\n    new(): WebGLBuffer;\n};\n\n/** The WebContextEvent interface is part of the WebGL API and is an interface for an event that is generated in response to a status change to the WebGL rendering context. */\ninterface WebGLContextEvent extends Event {\n    readonly statusMessage: string;\n}\n\ndeclare var WebGLContextEvent: {\n    prototype: WebGLContextEvent;\n    new(type: string, eventInit?: WebGLContextEventInit): WebGLContextEvent;\n};\n\n/** Part of the WebGL API and represents a collection of buffers that serve as a rendering destination. */\ninterface WebGLFramebuffer {\n}\n\ndeclare var WebGLFramebuffer: {\n    prototype: WebGLFramebuffer;\n    new(): WebGLFramebuffer;\n};\n\n/** The WebGLProgram is part of the WebGL API and is a combination of two compiled WebGLShaders consisting of a vertex shader and a fragment shader (both written in GLSL). */\ninterface WebGLProgram {\n}\n\ndeclare var WebGLProgram: {\n    prototype: WebGLProgram;\n    new(): WebGLProgram;\n};\n\ninterface WebGLQuery {\n}\n\ndeclare var WebGLQuery: {\n    prototype: WebGLQuery;\n    new(): WebGLQuery;\n};\n\n/** Part of the WebGL API and represents a buffer that can contain an image, or can be source or target of an rendering operation. */\ninterface WebGLRenderbuffer {\n}\n\ndeclare var WebGLRenderbuffer: {\n    prototype: WebGLRenderbuffer;\n    new(): WebGLRenderbuffer;\n};\n\n/** Provides an interface to the OpenGL ES 2.0 graphics rendering context for the drawing surface of an HTML <canvas> element. */\ninterface WebGLRenderingContext extends WebGLRenderingContextBase, WebGLRenderingContextOverloads {\n}\n\ndeclare var WebGLRenderingContext: {\n    prototype: WebGLRenderingContext;\n    new(): WebGLRenderingContext;\n    readonly ACTIVE_ATTRIBUTES: GLenum;\n    readonly ACTIVE_TEXTURE: GLenum;\n    readonly ACTIVE_UNIFORMS: GLenum;\n    readonly ALIASED_LINE_WIDTH_RANGE: GLenum;\n    readonly ALIASED_POINT_SIZE_RANGE: GLenum;\n    readonly ALPHA: GLenum;\n    readonly ALPHA_BITS: GLenum;\n    readonly ALWAYS: GLenum;\n    readonly ARRAY_BUFFER: GLenum;\n    readonly ARRAY_BUFFER_BINDING: GLenum;\n    readonly ATTACHED_SHADERS: GLenum;\n    readonly BACK: GLenum;\n    readonly BLEND: GLenum;\n    readonly BLEND_COLOR: GLenum;\n    readonly BLEND_DST_ALPHA: GLenum;\n    readonly BLEND_DST_RGB: GLenum;\n    readonly BLEND_EQUATION: GLenum;\n    readonly BLEND_EQUATION_ALPHA: GLenum;\n    readonly BLEND_EQUATION_RGB: GLenum;\n    readonly BLEND_SRC_ALPHA: GLenum;\n    readonly BLEND_SRC_RGB: GLenum;\n    readonly BLUE_BITS: GLenum;\n    readonly BOOL: GLenum;\n    readonly BOOL_VEC2: GLenum;\n    readonly BOOL_VEC3: GLenum;\n    readonly BOOL_VEC4: GLenum;\n    readonly BROWSER_DEFAULT_WEBGL: GLenum;\n    readonly BUFFER_SIZE: GLenum;\n    readonly BUFFER_USAGE: GLenum;\n    readonly BYTE: GLenum;\n    readonly CCW: GLenum;\n    readonly CLAMP_TO_EDGE: GLenum;\n    readonly COLOR_ATTACHMENT0: GLenum;\n    readonly COLOR_BUFFER_BIT: GLenum;\n    readonly COLOR_CLEAR_VALUE: GLenum;\n    readonly COLOR_WRITEMASK: GLenum;\n    readonly COMPILE_STATUS: GLenum;\n    readonly COMPRESSED_TEXTURE_FORMATS: GLenum;\n    readonly CONSTANT_ALPHA: GLenum;\n    readonly CONSTANT_COLOR: GLenum;\n    readonly CONTEXT_LOST_WEBGL: GLenum;\n    readonly CULL_FACE: GLenum;\n    readonly CULL_FACE_MODE: GLenum;\n    readonly CURRENT_PROGRAM: GLenum;\n    readonly CURRENT_VERTEX_ATTRIB: GLenum;\n    readonly CW: GLenum;\n    readonly DECR: GLenum;\n    readonly DECR_WRAP: GLenum;\n    readonly DELETE_STATUS: GLenum;\n    readonly DEPTH_ATTACHMENT: GLenum;\n    readonly DEPTH_BITS: GLenum;\n    readonly DEPTH_BUFFER_BIT: GLenum;\n    readonly DEPTH_CLEAR_VALUE: GLenum;\n    readonly DEPTH_COMPONENT: GLenum;\n    readonly DEPTH_COMPONENT16: GLenum;\n    readonly DEPTH_FUNC: GLenum;\n    readonly DEPTH_RANGE: GLenum;\n    readonly DEPTH_STENCIL: GLenum;\n    readonly DEPTH_STENCIL_ATTACHMENT: GLenum;\n    readonly DEPTH_TEST: GLenum;\n    readonly DEPTH_WRITEMASK: GLenum;\n    readonly DITHER: GLenum;\n    readonly DONT_CARE: GLenum;\n    readonly DST_ALPHA: GLenum;\n    readonly DST_COLOR: GLenum;\n    readonly DYNAMIC_DRAW: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: GLenum;\n    readonly EQUAL: GLenum;\n    readonly FASTEST: GLenum;\n    readonly FLOAT: GLenum;\n    readonly FLOAT_MAT2: GLenum;\n    readonly FLOAT_MAT3: GLenum;\n    readonly FLOAT_MAT4: GLenum;\n    readonly FLOAT_VEC2: GLenum;\n    readonly FLOAT_VEC3: GLenum;\n    readonly FLOAT_VEC4: GLenum;\n    readonly FRAGMENT_SHADER: GLenum;\n    readonly FRAMEBUFFER: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: GLenum;\n    readonly FRAMEBUFFER_BINDING: GLenum;\n    readonly FRAMEBUFFER_COMPLETE: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_UNSUPPORTED: GLenum;\n    readonly FRONT: GLenum;\n    readonly FRONT_AND_BACK: GLenum;\n    readonly FRONT_FACE: GLenum;\n    readonly FUNC_ADD: GLenum;\n    readonly FUNC_REVERSE_SUBTRACT: GLenum;\n    readonly FUNC_SUBTRACT: GLenum;\n    readonly GENERATE_MIPMAP_HINT: GLenum;\n    readonly GEQUAL: GLenum;\n    readonly GREATER: GLenum;\n    readonly GREEN_BITS: GLenum;\n    readonly HIGH_FLOAT: GLenum;\n    readonly HIGH_INT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: GLenum;\n    readonly INCR: GLenum;\n    readonly INCR_WRAP: GLenum;\n    readonly INT: GLenum;\n    readonly INT_VEC2: GLenum;\n    readonly INT_VEC3: GLenum;\n    readonly INT_VEC4: GLenum;\n    readonly INVALID_ENUM: GLenum;\n    readonly INVALID_FRAMEBUFFER_OPERATION: GLenum;\n    readonly INVALID_OPERATION: GLenum;\n    readonly INVALID_VALUE: GLenum;\n    readonly INVERT: GLenum;\n    readonly KEEP: GLenum;\n    readonly LEQUAL: GLenum;\n    readonly LESS: GLenum;\n    readonly LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_NEAREST: GLenum;\n    readonly LINES: GLenum;\n    readonly LINE_LOOP: GLenum;\n    readonly LINE_STRIP: GLenum;\n    readonly LINE_WIDTH: GLenum;\n    readonly LINK_STATUS: GLenum;\n    readonly LOW_FLOAT: GLenum;\n    readonly LOW_INT: GLenum;\n    readonly LUMINANCE: GLenum;\n    readonly LUMINANCE_ALPHA: GLenum;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: GLenum;\n    readonly MAX_RENDERBUFFER_SIZE: GLenum;\n    readonly MAX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_TEXTURE_SIZE: GLenum;\n    readonly MAX_VARYING_VECTORS: GLenum;\n    readonly MAX_VERTEX_ATTRIBS: GLenum;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: GLenum;\n    readonly MAX_VIEWPORT_DIMS: GLenum;\n    readonly MEDIUM_FLOAT: GLenum;\n    readonly MEDIUM_INT: GLenum;\n    readonly MIRRORED_REPEAT: GLenum;\n    readonly NEAREST: GLenum;\n    readonly NEAREST_MIPMAP_LINEAR: GLenum;\n    readonly NEAREST_MIPMAP_NEAREST: GLenum;\n    readonly NEVER: GLenum;\n    readonly NICEST: GLenum;\n    readonly NONE: GLenum;\n    readonly NOTEQUAL: GLenum;\n    readonly NO_ERROR: GLenum;\n    readonly ONE: GLenum;\n    readonly ONE_MINUS_CONSTANT_ALPHA: GLenum;\n    readonly ONE_MINUS_CONSTANT_COLOR: GLenum;\n    readonly ONE_MINUS_DST_ALPHA: GLenum;\n    readonly ONE_MINUS_DST_COLOR: GLenum;\n    readonly ONE_MINUS_SRC_ALPHA: GLenum;\n    readonly ONE_MINUS_SRC_COLOR: GLenum;\n    readonly OUT_OF_MEMORY: GLenum;\n    readonly PACK_ALIGNMENT: GLenum;\n    readonly POINTS: GLenum;\n    readonly POLYGON_OFFSET_FACTOR: GLenum;\n    readonly POLYGON_OFFSET_FILL: GLenum;\n    readonly POLYGON_OFFSET_UNITS: GLenum;\n    readonly RED_BITS: GLenum;\n    readonly RENDERBUFFER: GLenum;\n    readonly RENDERBUFFER_ALPHA_SIZE: GLenum;\n    readonly RENDERBUFFER_BINDING: GLenum;\n    readonly RENDERBUFFER_BLUE_SIZE: GLenum;\n    readonly RENDERBUFFER_DEPTH_SIZE: GLenum;\n    readonly RENDERBUFFER_GREEN_SIZE: GLenum;\n    readonly RENDERBUFFER_HEIGHT: GLenum;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: GLenum;\n    readonly RENDERBUFFER_RED_SIZE: GLenum;\n    readonly RENDERBUFFER_STENCIL_SIZE: GLenum;\n    readonly RENDERBUFFER_WIDTH: GLenum;\n    readonly RENDERER: GLenum;\n    readonly REPEAT: GLenum;\n    readonly REPLACE: GLenum;\n    readonly RGB: GLenum;\n    readonly RGB565: GLenum;\n    readonly RGB5_A1: GLenum;\n    readonly RGBA: GLenum;\n    readonly RGBA4: GLenum;\n    readonly SAMPLER_2D: GLenum;\n    readonly SAMPLER_CUBE: GLenum;\n    readonly SAMPLES: GLenum;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: GLenum;\n    readonly SAMPLE_BUFFERS: GLenum;\n    readonly SAMPLE_COVERAGE: GLenum;\n    readonly SAMPLE_COVERAGE_INVERT: GLenum;\n    readonly SAMPLE_COVERAGE_VALUE: GLenum;\n    readonly SCISSOR_BOX: GLenum;\n    readonly SCISSOR_TEST: GLenum;\n    readonly SHADER_TYPE: GLenum;\n    readonly SHADING_LANGUAGE_VERSION: GLenum;\n    readonly SHORT: GLenum;\n    readonly SRC_ALPHA: GLenum;\n    readonly SRC_ALPHA_SATURATE: GLenum;\n    readonly SRC_COLOR: GLenum;\n    readonly STATIC_DRAW: GLenum;\n    readonly STENCIL_ATTACHMENT: GLenum;\n    readonly STENCIL_BACK_FAIL: GLenum;\n    readonly STENCIL_BACK_FUNC: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_BACK_REF: GLenum;\n    readonly STENCIL_BACK_VALUE_MASK: GLenum;\n    readonly STENCIL_BACK_WRITEMASK: GLenum;\n    readonly STENCIL_BITS: GLenum;\n    readonly STENCIL_BUFFER_BIT: GLenum;\n    readonly STENCIL_CLEAR_VALUE: GLenum;\n    readonly STENCIL_FAIL: GLenum;\n    readonly STENCIL_FUNC: GLenum;\n    readonly STENCIL_INDEX8: GLenum;\n    readonly STENCIL_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_REF: GLenum;\n    readonly STENCIL_TEST: GLenum;\n    readonly STENCIL_VALUE_MASK: GLenum;\n    readonly STENCIL_WRITEMASK: GLenum;\n    readonly STREAM_DRAW: GLenum;\n    readonly SUBPIXEL_BITS: GLenum;\n    readonly TEXTURE: GLenum;\n    readonly TEXTURE0: GLenum;\n    readonly TEXTURE1: GLenum;\n    readonly TEXTURE10: GLenum;\n    readonly TEXTURE11: GLenum;\n    readonly TEXTURE12: GLenum;\n    readonly TEXTURE13: GLenum;\n    readonly TEXTURE14: GLenum;\n    readonly TEXTURE15: GLenum;\n    readonly TEXTURE16: GLenum;\n    readonly TEXTURE17: GLenum;\n    readonly TEXTURE18: GLenum;\n    readonly TEXTURE19: GLenum;\n    readonly TEXTURE2: GLenum;\n    readonly TEXTURE20: GLenum;\n    readonly TEXTURE21: GLenum;\n    readonly TEXTURE22: GLenum;\n    readonly TEXTURE23: GLenum;\n    readonly TEXTURE24: GLenum;\n    readonly TEXTURE25: GLenum;\n    readonly TEXTURE26: GLenum;\n    readonly TEXTURE27: GLenum;\n    readonly TEXTURE28: GLenum;\n    readonly TEXTURE29: GLenum;\n    readonly TEXTURE3: GLenum;\n    readonly TEXTURE30: GLenum;\n    readonly TEXTURE31: GLenum;\n    readonly TEXTURE4: GLenum;\n    readonly TEXTURE5: GLenum;\n    readonly TEXTURE6: GLenum;\n    readonly TEXTURE7: GLenum;\n    readonly TEXTURE8: GLenum;\n    readonly TEXTURE9: GLenum;\n    readonly TEXTURE_2D: GLenum;\n    readonly TEXTURE_BINDING_2D: GLenum;\n    readonly TEXTURE_BINDING_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: GLenum;\n    readonly TEXTURE_MAG_FILTER: GLenum;\n    readonly TEXTURE_MIN_FILTER: GLenum;\n    readonly TEXTURE_WRAP_S: GLenum;\n    readonly TEXTURE_WRAP_T: GLenum;\n    readonly TRIANGLES: GLenum;\n    readonly TRIANGLE_FAN: GLenum;\n    readonly TRIANGLE_STRIP: GLenum;\n    readonly UNPACK_ALIGNMENT: GLenum;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: GLenum;\n    readonly UNPACK_FLIP_Y_WEBGL: GLenum;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: GLenum;\n    readonly UNSIGNED_BYTE: GLenum;\n    readonly UNSIGNED_INT: GLenum;\n    readonly UNSIGNED_SHORT: GLenum;\n    readonly UNSIGNED_SHORT_4_4_4_4: GLenum;\n    readonly UNSIGNED_SHORT_5_5_5_1: GLenum;\n    readonly UNSIGNED_SHORT_5_6_5: GLenum;\n    readonly VALIDATE_STATUS: GLenum;\n    readonly VENDOR: GLenum;\n    readonly VERSION: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: GLenum;\n    readonly VERTEX_SHADER: GLenum;\n    readonly VIEWPORT: GLenum;\n    readonly ZERO: GLenum;\n};\n\ninterface WebGLRenderingContextBase {\n    readonly canvas: HTMLCanvasElement;\n    readonly drawingBufferHeight: GLsizei;\n    readonly drawingBufferWidth: GLsizei;\n    activeTexture(texture: GLenum): void;\n    attachShader(program: WebGLProgram, shader: WebGLShader): void;\n    bindAttribLocation(program: WebGLProgram, index: GLuint, name: string): void;\n    bindBuffer(target: GLenum, buffer: WebGLBuffer | null): void;\n    bindFramebuffer(target: GLenum, framebuffer: WebGLFramebuffer | null): void;\n    bindRenderbuffer(target: GLenum, renderbuffer: WebGLRenderbuffer | null): void;\n    bindTexture(target: GLenum, texture: WebGLTexture | null): void;\n    blendColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf): void;\n    blendEquation(mode: GLenum): void;\n    blendEquationSeparate(modeRGB: GLenum, modeAlpha: GLenum): void;\n    blendFunc(sfactor: GLenum, dfactor: GLenum): void;\n    blendFuncSeparate(srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum): void;\n    checkFramebufferStatus(target: GLenum): GLenum;\n    clear(mask: GLbitfield): void;\n    clearColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf): void;\n    clearDepth(depth: GLclampf): void;\n    clearStencil(s: GLint): void;\n    colorMask(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean): void;\n    compileShader(shader: WebGLShader): void;\n    copyTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint): void;\n    copyTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    createBuffer(): WebGLBuffer | null;\n    createFramebuffer(): WebGLFramebuffer | null;\n    createProgram(): WebGLProgram | null;\n    createRenderbuffer(): WebGLRenderbuffer | null;\n    createShader(type: GLenum): WebGLShader | null;\n    createTexture(): WebGLTexture | null;\n    cullFace(mode: GLenum): void;\n    deleteBuffer(buffer: WebGLBuffer | null): void;\n    deleteFramebuffer(framebuffer: WebGLFramebuffer | null): void;\n    deleteProgram(program: WebGLProgram | null): void;\n    deleteRenderbuffer(renderbuffer: WebGLRenderbuffer | null): void;\n    deleteShader(shader: WebGLShader | null): void;\n    deleteTexture(texture: WebGLTexture | null): void;\n    depthFunc(func: GLenum): void;\n    depthMask(flag: GLboolean): void;\n    depthRange(zNear: GLclampf, zFar: GLclampf): void;\n    detachShader(program: WebGLProgram, shader: WebGLShader): void;\n    disable(cap: GLenum): void;\n    disableVertexAttribArray(index: GLuint): void;\n    drawArrays(mode: GLenum, first: GLint, count: GLsizei): void;\n    drawElements(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr): void;\n    enable(cap: GLenum): void;\n    enableVertexAttribArray(index: GLuint): void;\n    finish(): void;\n    flush(): void;\n    framebufferRenderbuffer(target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: WebGLRenderbuffer | null): void;\n    framebufferTexture2D(target: GLenum, attachment: GLenum, textarget: GLenum, texture: WebGLTexture | null, level: GLint): void;\n    frontFace(mode: GLenum): void;\n    generateMipmap(target: GLenum): void;\n    getActiveAttrib(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;\n    getActiveUniform(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;\n    getAttachedShaders(program: WebGLProgram): WebGLShader[] | null;\n    getAttribLocation(program: WebGLProgram, name: string): GLint;\n    getBufferParameter(target: GLenum, pname: GLenum): any;\n    getContextAttributes(): WebGLContextAttributes | null;\n    getError(): GLenum;\n    getExtension(extensionName: "EXT_blend_minmax"): EXT_blend_minmax | null;\n    getExtension(extensionName: "EXT_color_buffer_float"): EXT_color_buffer_float | null;\n    getExtension(extensionName: "EXT_color_buffer_half_float"): EXT_color_buffer_half_float | null;\n    getExtension(extensionName: "EXT_float_blend"): EXT_float_blend | null;\n    getExtension(extensionName: "EXT_texture_filter_anisotropic"): EXT_texture_filter_anisotropic | null;\n    getExtension(extensionName: "EXT_frag_depth"): EXT_frag_depth | null;\n    getExtension(extensionName: "EXT_shader_texture_lod"): EXT_shader_texture_lod | null;\n    getExtension(extensionName: "EXT_sRGB"): EXT_sRGB | null;\n    getExtension(extensionName: "KHR_parallel_shader_compile"): KHR_parallel_shader_compile | null;\n    getExtension(extensionName: "OES_vertex_array_object"): OES_vertex_array_object | null;\n    getExtension(extensionName: "OVR_multiview2"): OVR_multiview2 | null;\n    getExtension(extensionName: "WEBGL_color_buffer_float"): WEBGL_color_buffer_float | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_astc"): WEBGL_compressed_texture_astc | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_etc"): WEBGL_compressed_texture_etc | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_etc1"): WEBGL_compressed_texture_etc1 | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_pvrtc"): WEBGL_compressed_texture_pvrtc | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_s3tc_srgb"): WEBGL_compressed_texture_s3tc_srgb | null;\n    getExtension(extensionName: "WEBGL_debug_shaders"): WEBGL_debug_shaders | null;\n    getExtension(extensionName: "WEBGL_draw_buffers"): WEBGL_draw_buffers | null;\n    getExtension(extensionName: "WEBGL_lose_context"): WEBGL_lose_context | null;\n    getExtension(extensionName: "WEBGL_depth_texture"): WEBGL_depth_texture | null;\n    getExtension(extensionName: "WEBGL_debug_renderer_info"): WEBGL_debug_renderer_info | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_s3tc"): WEBGL_compressed_texture_s3tc | null;\n    getExtension(extensionName: "OES_texture_half_float_linear"): OES_texture_half_float_linear | null;\n    getExtension(extensionName: "OES_texture_half_float"): OES_texture_half_float | null;\n    getExtension(extensionName: "OES_texture_float_linear"): OES_texture_float_linear | null;\n    getExtension(extensionName: "OES_texture_float"): OES_texture_float | null;\n    getExtension(extensionName: "OES_standard_derivatives"): OES_standard_derivatives | null;\n    getExtension(extensionName: "OES_element_index_uint"): OES_element_index_uint | null;\n    getExtension(extensionName: "ANGLE_instanced_arrays"): ANGLE_instanced_arrays | null;\n    getExtension(name: string): any;\n    getFramebufferAttachmentParameter(target: GLenum, attachment: GLenum, pname: GLenum): any;\n    getParameter(pname: GLenum): any;\n    getProgramInfoLog(program: WebGLProgram): string | null;\n    getProgramParameter(program: WebGLProgram, pname: GLenum): any;\n    getRenderbufferParameter(target: GLenum, pname: GLenum): any;\n    getShaderInfoLog(shader: WebGLShader): string | null;\n    getShaderParameter(shader: WebGLShader, pname: GLenum): any;\n    getShaderPrecisionFormat(shadertype: GLenum, precisiontype: GLenum): WebGLShaderPrecisionFormat | null;\n    getShaderSource(shader: WebGLShader): string | null;\n    getSupportedExtensions(): string[] | null;\n    getTexParameter(target: GLenum, pname: GLenum): any;\n    getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;\n    getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation | null;\n    getVertexAttrib(index: GLuint, pname: GLenum): any;\n    getVertexAttribOffset(index: GLuint, pname: GLenum): GLintptr;\n    hint(target: GLenum, mode: GLenum): void;\n    isBuffer(buffer: WebGLBuffer | null): GLboolean;\n    isContextLost(): boolean;\n    isEnabled(cap: GLenum): GLboolean;\n    isFramebuffer(framebuffer: WebGLFramebuffer | null): GLboolean;\n    isProgram(program: WebGLProgram | null): GLboolean;\n    isRenderbuffer(renderbuffer: WebGLRenderbuffer | null): GLboolean;\n    isShader(shader: WebGLShader | null): GLboolean;\n    isTexture(texture: WebGLTexture | null): GLboolean;\n    lineWidth(width: GLfloat): void;\n    linkProgram(program: WebGLProgram): void;\n    pixelStorei(pname: GLenum, param: GLint | GLboolean): void;\n    polygonOffset(factor: GLfloat, units: GLfloat): void;\n    renderbufferStorage(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei): void;\n    sampleCoverage(value: GLclampf, invert: GLboolean): void;\n    scissor(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    shaderSource(shader: WebGLShader, source: string): void;\n    stencilFunc(func: GLenum, ref: GLint, mask: GLuint): void;\n    stencilFuncSeparate(face: GLenum, func: GLenum, ref: GLint, mask: GLuint): void;\n    stencilMask(mask: GLuint): void;\n    stencilMaskSeparate(face: GLenum, mask: GLuint): void;\n    stencilOp(fail: GLenum, zfail: GLenum, zpass: GLenum): void;\n    stencilOpSeparate(face: GLenum, fail: GLenum, zfail: GLenum, zpass: GLenum): void;\n    texParameterf(target: GLenum, pname: GLenum, param: GLfloat): void;\n    texParameteri(target: GLenum, pname: GLenum, param: GLint): void;\n    uniform1f(location: WebGLUniformLocation | null, x: GLfloat): void;\n    uniform1i(location: WebGLUniformLocation | null, x: GLint): void;\n    uniform2f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat): void;\n    uniform2i(location: WebGLUniformLocation | null, x: GLint, y: GLint): void;\n    uniform3f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat, z: GLfloat): void;\n    uniform3i(location: WebGLUniformLocation | null, x: GLint, y: GLint, z: GLint): void;\n    uniform4f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat): void;\n    uniform4i(location: WebGLUniformLocation | null, x: GLint, y: GLint, z: GLint, w: GLint): void;\n    useProgram(program: WebGLProgram | null): void;\n    validateProgram(program: WebGLProgram): void;\n    vertexAttrib1f(index: GLuint, x: GLfloat): void;\n    vertexAttrib1fv(index: GLuint, values: Float32List): void;\n    vertexAttrib2f(index: GLuint, x: GLfloat, y: GLfloat): void;\n    vertexAttrib2fv(index: GLuint, values: Float32List): void;\n    vertexAttrib3f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat): void;\n    vertexAttrib3fv(index: GLuint, values: Float32List): void;\n    vertexAttrib4f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat): void;\n    vertexAttrib4fv(index: GLuint, values: Float32List): void;\n    vertexAttribPointer(index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, offset: GLintptr): void;\n    viewport(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    readonly ACTIVE_ATTRIBUTES: GLenum;\n    readonly ACTIVE_TEXTURE: GLenum;\n    readonly ACTIVE_UNIFORMS: GLenum;\n    readonly ALIASED_LINE_WIDTH_RANGE: GLenum;\n    readonly ALIASED_POINT_SIZE_RANGE: GLenum;\n    readonly ALPHA: GLenum;\n    readonly ALPHA_BITS: GLenum;\n    readonly ALWAYS: GLenum;\n    readonly ARRAY_BUFFER: GLenum;\n    readonly ARRAY_BUFFER_BINDING: GLenum;\n    readonly ATTACHED_SHADERS: GLenum;\n    readonly BACK: GLenum;\n    readonly BLEND: GLenum;\n    readonly BLEND_COLOR: GLenum;\n    readonly BLEND_DST_ALPHA: GLenum;\n    readonly BLEND_DST_RGB: GLenum;\n    readonly BLEND_EQUATION: GLenum;\n    readonly BLEND_EQUATION_ALPHA: GLenum;\n    readonly BLEND_EQUATION_RGB: GLenum;\n    readonly BLEND_SRC_ALPHA: GLenum;\n    readonly BLEND_SRC_RGB: GLenum;\n    readonly BLUE_BITS: GLenum;\n    readonly BOOL: GLenum;\n    readonly BOOL_VEC2: GLenum;\n    readonly BOOL_VEC3: GLenum;\n    readonly BOOL_VEC4: GLenum;\n    readonly BROWSER_DEFAULT_WEBGL: GLenum;\n    readonly BUFFER_SIZE: GLenum;\n    readonly BUFFER_USAGE: GLenum;\n    readonly BYTE: GLenum;\n    readonly CCW: GLenum;\n    readonly CLAMP_TO_EDGE: GLenum;\n    readonly COLOR_ATTACHMENT0: GLenum;\n    readonly COLOR_BUFFER_BIT: GLenum;\n    readonly COLOR_CLEAR_VALUE: GLenum;\n    readonly COLOR_WRITEMASK: GLenum;\n    readonly COMPILE_STATUS: GLenum;\n    readonly COMPRESSED_TEXTURE_FORMATS: GLenum;\n    readonly CONSTANT_ALPHA: GLenum;\n    readonly CONSTANT_COLOR: GLenum;\n    readonly CONTEXT_LOST_WEBGL: GLenum;\n    readonly CULL_FACE: GLenum;\n    readonly CULL_FACE_MODE: GLenum;\n    readonly CURRENT_PROGRAM: GLenum;\n    readonly CURRENT_VERTEX_ATTRIB: GLenum;\n    readonly CW: GLenum;\n    readonly DECR: GLenum;\n    readonly DECR_WRAP: GLenum;\n    readonly DELETE_STATUS: GLenum;\n    readonly DEPTH_ATTACHMENT: GLenum;\n    readonly DEPTH_BITS: GLenum;\n    readonly DEPTH_BUFFER_BIT: GLenum;\n    readonly DEPTH_CLEAR_VALUE: GLenum;\n    readonly DEPTH_COMPONENT: GLenum;\n    readonly DEPTH_COMPONENT16: GLenum;\n    readonly DEPTH_FUNC: GLenum;\n    readonly DEPTH_RANGE: GLenum;\n    readonly DEPTH_STENCIL: GLenum;\n    readonly DEPTH_STENCIL_ATTACHMENT: GLenum;\n    readonly DEPTH_TEST: GLenum;\n    readonly DEPTH_WRITEMASK: GLenum;\n    readonly DITHER: GLenum;\n    readonly DONT_CARE: GLenum;\n    readonly DST_ALPHA: GLenum;\n    readonly DST_COLOR: GLenum;\n    readonly DYNAMIC_DRAW: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: GLenum;\n    readonly EQUAL: GLenum;\n    readonly FASTEST: GLenum;\n    readonly FLOAT: GLenum;\n    readonly FLOAT_MAT2: GLenum;\n    readonly FLOAT_MAT3: GLenum;\n    readonly FLOAT_MAT4: GLenum;\n    readonly FLOAT_VEC2: GLenum;\n    readonly FLOAT_VEC3: GLenum;\n    readonly FLOAT_VEC4: GLenum;\n    readonly FRAGMENT_SHADER: GLenum;\n    readonly FRAMEBUFFER: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: GLenum;\n    readonly FRAMEBUFFER_BINDING: GLenum;\n    readonly FRAMEBUFFER_COMPLETE: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_UNSUPPORTED: GLenum;\n    readonly FRONT: GLenum;\n    readonly FRONT_AND_BACK: GLenum;\n    readonly FRONT_FACE: GLenum;\n    readonly FUNC_ADD: GLenum;\n    readonly FUNC_REVERSE_SUBTRACT: GLenum;\n    readonly FUNC_SUBTRACT: GLenum;\n    readonly GENERATE_MIPMAP_HINT: GLenum;\n    readonly GEQUAL: GLenum;\n    readonly GREATER: GLenum;\n    readonly GREEN_BITS: GLenum;\n    readonly HIGH_FLOAT: GLenum;\n    readonly HIGH_INT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: GLenum;\n    readonly INCR: GLenum;\n    readonly INCR_WRAP: GLenum;\n    readonly INT: GLenum;\n    readonly INT_VEC2: GLenum;\n    readonly INT_VEC3: GLenum;\n    readonly INT_VEC4: GLenum;\n    readonly INVALID_ENUM: GLenum;\n    readonly INVALID_FRAMEBUFFER_OPERATION: GLenum;\n    readonly INVALID_OPERATION: GLenum;\n    readonly INVALID_VALUE: GLenum;\n    readonly INVERT: GLenum;\n    readonly KEEP: GLenum;\n    readonly LEQUAL: GLenum;\n    readonly LESS: GLenum;\n    readonly LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_NEAREST: GLenum;\n    readonly LINES: GLenum;\n    readonly LINE_LOOP: GLenum;\n    readonly LINE_STRIP: GLenum;\n    readonly LINE_WIDTH: GLenum;\n    readonly LINK_STATUS: GLenum;\n    readonly LOW_FLOAT: GLenum;\n    readonly LOW_INT: GLenum;\n    readonly LUMINANCE: GLenum;\n    readonly LUMINANCE_ALPHA: GLenum;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: GLenum;\n    readonly MAX_RENDERBUFFER_SIZE: GLenum;\n    readonly MAX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_TEXTURE_SIZE: GLenum;\n    readonly MAX_VARYING_VECTORS: GLenum;\n    readonly MAX_VERTEX_ATTRIBS: GLenum;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: GLenum;\n    readonly MAX_VIEWPORT_DIMS: GLenum;\n    readonly MEDIUM_FLOAT: GLenum;\n    readonly MEDIUM_INT: GLenum;\n    readonly MIRRORED_REPEAT: GLenum;\n    readonly NEAREST: GLenum;\n    readonly NEAREST_MIPMAP_LINEAR: GLenum;\n    readonly NEAREST_MIPMAP_NEAREST: GLenum;\n    readonly NEVER: GLenum;\n    readonly NICEST: GLenum;\n    readonly NONE: GLenum;\n    readonly NOTEQUAL: GLenum;\n    readonly NO_ERROR: GLenum;\n    readonly ONE: GLenum;\n    readonly ONE_MINUS_CONSTANT_ALPHA: GLenum;\n    readonly ONE_MINUS_CONSTANT_COLOR: GLenum;\n    readonly ONE_MINUS_DST_ALPHA: GLenum;\n    readonly ONE_MINUS_DST_COLOR: GLenum;\n    readonly ONE_MINUS_SRC_ALPHA: GLenum;\n    readonly ONE_MINUS_SRC_COLOR: GLenum;\n    readonly OUT_OF_MEMORY: GLenum;\n    readonly PACK_ALIGNMENT: GLenum;\n    readonly POINTS: GLenum;\n    readonly POLYGON_OFFSET_FACTOR: GLenum;\n    readonly POLYGON_OFFSET_FILL: GLenum;\n    readonly POLYGON_OFFSET_UNITS: GLenum;\n    readonly RED_BITS: GLenum;\n    readonly RENDERBUFFER: GLenum;\n    readonly RENDERBUFFER_ALPHA_SIZE: GLenum;\n    readonly RENDERBUFFER_BINDING: GLenum;\n    readonly RENDERBUFFER_BLUE_SIZE: GLenum;\n    readonly RENDERBUFFER_DEPTH_SIZE: GLenum;\n    readonly RENDERBUFFER_GREEN_SIZE: GLenum;\n    readonly RENDERBUFFER_HEIGHT: GLenum;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: GLenum;\n    readonly RENDERBUFFER_RED_SIZE: GLenum;\n    readonly RENDERBUFFER_STENCIL_SIZE: GLenum;\n    readonly RENDERBUFFER_WIDTH: GLenum;\n    readonly RENDERER: GLenum;\n    readonly REPEAT: GLenum;\n    readonly REPLACE: GLenum;\n    readonly RGB: GLenum;\n    readonly RGB565: GLenum;\n    readonly RGB5_A1: GLenum;\n    readonly RGBA: GLenum;\n    readonly RGBA4: GLenum;\n    readonly SAMPLER_2D: GLenum;\n    readonly SAMPLER_CUBE: GLenum;\n    readonly SAMPLES: GLenum;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: GLenum;\n    readonly SAMPLE_BUFFERS: GLenum;\n    readonly SAMPLE_COVERAGE: GLenum;\n    readonly SAMPLE_COVERAGE_INVERT: GLenum;\n    readonly SAMPLE_COVERAGE_VALUE: GLenum;\n    readonly SCISSOR_BOX: GLenum;\n    readonly SCISSOR_TEST: GLenum;\n    readonly SHADER_TYPE: GLenum;\n    readonly SHADING_LANGUAGE_VERSION: GLenum;\n    readonly SHORT: GLenum;\n    readonly SRC_ALPHA: GLenum;\n    readonly SRC_ALPHA_SATURATE: GLenum;\n    readonly SRC_COLOR: GLenum;\n    readonly STATIC_DRAW: GLenum;\n    readonly STENCIL_ATTACHMENT: GLenum;\n    readonly STENCIL_BACK_FAIL: GLenum;\n    readonly STENCIL_BACK_FUNC: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_BACK_REF: GLenum;\n    readonly STENCIL_BACK_VALUE_MASK: GLenum;\n    readonly STENCIL_BACK_WRITEMASK: GLenum;\n    readonly STENCIL_BITS: GLenum;\n    readonly STENCIL_BUFFER_BIT: GLenum;\n    readonly STENCIL_CLEAR_VALUE: GLenum;\n    readonly STENCIL_FAIL: GLenum;\n    readonly STENCIL_FUNC: GLenum;\n    readonly STENCIL_INDEX8: GLenum;\n    readonly STENCIL_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_REF: GLenum;\n    readonly STENCIL_TEST: GLenum;\n    readonly STENCIL_VALUE_MASK: GLenum;\n    readonly STENCIL_WRITEMASK: GLenum;\n    readonly STREAM_DRAW: GLenum;\n    readonly SUBPIXEL_BITS: GLenum;\n    readonly TEXTURE: GLenum;\n    readonly TEXTURE0: GLenum;\n    readonly TEXTURE1: GLenum;\n    readonly TEXTURE10: GLenum;\n    readonly TEXTURE11: GLenum;\n    readonly TEXTURE12: GLenum;\n    readonly TEXTURE13: GLenum;\n    readonly TEXTURE14: GLenum;\n    readonly TEXTURE15: GLenum;\n    readonly TEXTURE16: GLenum;\n    readonly TEXTURE17: GLenum;\n    readonly TEXTURE18: GLenum;\n    readonly TEXTURE19: GLenum;\n    readonly TEXTURE2: GLenum;\n    readonly TEXTURE20: GLenum;\n    readonly TEXTURE21: GLenum;\n    readonly TEXTURE22: GLenum;\n    readonly TEXTURE23: GLenum;\n    readonly TEXTURE24: GLenum;\n    readonly TEXTURE25: GLenum;\n    readonly TEXTURE26: GLenum;\n    readonly TEXTURE27: GLenum;\n    readonly TEXTURE28: GLenum;\n    readonly TEXTURE29: GLenum;\n    readonly TEXTURE3: GLenum;\n    readonly TEXTURE30: GLenum;\n    readonly TEXTURE31: GLenum;\n    readonly TEXTURE4: GLenum;\n    readonly TEXTURE5: GLenum;\n    readonly TEXTURE6: GLenum;\n    readonly TEXTURE7: GLenum;\n    readonly TEXTURE8: GLenum;\n    readonly TEXTURE9: GLenum;\n    readonly TEXTURE_2D: GLenum;\n    readonly TEXTURE_BINDING_2D: GLenum;\n    readonly TEXTURE_BINDING_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: GLenum;\n    readonly TEXTURE_MAG_FILTER: GLenum;\n    readonly TEXTURE_MIN_FILTER: GLenum;\n    readonly TEXTURE_WRAP_S: GLenum;\n    readonly TEXTURE_WRAP_T: GLenum;\n    readonly TRIANGLES: GLenum;\n    readonly TRIANGLE_FAN: GLenum;\n    readonly TRIANGLE_STRIP: GLenum;\n    readonly UNPACK_ALIGNMENT: GLenum;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: GLenum;\n    readonly UNPACK_FLIP_Y_WEBGL: GLenum;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: GLenum;\n    readonly UNSIGNED_BYTE: GLenum;\n    readonly UNSIGNED_INT: GLenum;\n    readonly UNSIGNED_SHORT: GLenum;\n    readonly UNSIGNED_SHORT_4_4_4_4: GLenum;\n    readonly UNSIGNED_SHORT_5_5_5_1: GLenum;\n    readonly UNSIGNED_SHORT_5_6_5: GLenum;\n    readonly VALIDATE_STATUS: GLenum;\n    readonly VENDOR: GLenum;\n    readonly VERSION: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: GLenum;\n    readonly VERTEX_SHADER: GLenum;\n    readonly VIEWPORT: GLenum;\n    readonly ZERO: GLenum;\n}\n\ninterface WebGLRenderingContextOverloads {\n    bufferData(target: GLenum, size: GLsizeiptr, usage: GLenum): void;\n    bufferData(target: GLenum, data: BufferSource | null, usage: GLenum): void;\n    bufferSubData(target: GLenum, offset: GLintptr, data: BufferSource): void;\n    compressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, data: ArrayBufferView): void;\n    compressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, data: ArrayBufferView): void;\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    uniform1fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform1iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniform2fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform2iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniform3fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform3iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniform4fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform4iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;\n    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;\n    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;\n}\n\ninterface WebGLSampler {\n}\n\ndeclare var WebGLSampler: {\n    prototype: WebGLSampler;\n    new(): WebGLSampler;\n};\n\n/** The WebGLShader is part of the WebGL API and can either be a vertex or a fragment shader. A WebGLProgram requires both types of shaders. */\ninterface WebGLShader {\n}\n\ndeclare var WebGLShader: {\n    prototype: WebGLShader;\n    new(): WebGLShader;\n};\n\n/** Part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getShaderPrecisionFormat() method. */\ninterface WebGLShaderPrecisionFormat {\n    readonly precision: GLint;\n    readonly rangeMax: GLint;\n    readonly rangeMin: GLint;\n}\n\ndeclare var WebGLShaderPrecisionFormat: {\n    prototype: WebGLShaderPrecisionFormat;\n    new(): WebGLShaderPrecisionFormat;\n};\n\ninterface WebGLSync {\n}\n\ndeclare var WebGLSync: {\n    prototype: WebGLSync;\n    new(): WebGLSync;\n};\n\n/** Part of the WebGL API and represents an opaque texture object providing storage and state for texturing operations. */\ninterface WebGLTexture {\n}\n\ndeclare var WebGLTexture: {\n    prototype: WebGLTexture;\n    new(): WebGLTexture;\n};\n\ninterface WebGLTransformFeedback {\n}\n\ndeclare var WebGLTransformFeedback: {\n    prototype: WebGLTransformFeedback;\n    new(): WebGLTransformFeedback;\n};\n\n/** Part of the WebGL API and represents the location of a uniform variable in a shader program. */\ninterface WebGLUniformLocation {\n}\n\ndeclare var WebGLUniformLocation: {\n    prototype: WebGLUniformLocation;\n    new(): WebGLUniformLocation;\n};\n\ninterface WebGLVertexArrayObject {\n}\n\ndeclare var WebGLVertexArrayObject: {\n    prototype: WebGLVertexArrayObject;\n    new(): WebGLVertexArrayObject;\n};\n\ninterface WebGLVertexArrayObjectOES {\n}\n\ninterface WebSocketEventMap {\n    "close": CloseEvent;\n    "error": Event;\n    "message": MessageEvent;\n    "open": Event;\n}\n\n/** Provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection. */\ninterface WebSocket extends EventTarget {\n    /**\n     * Returns a string that indicates how binary data from the WebSocket object is exposed to scripts:\n     *\n     * Can be set, to change how binary data is returned. The default is "blob".\n     */\n    binaryType: BinaryType;\n    /**\n     * Returns the number of bytes of application data (UTF-8 text and binary data) that have been queued using send() but not yet been transmitted to the network.\n     *\n     * If the WebSocket connection is closed, this attribute\'s value will only increase with each call to the send() method. (The number does not reset to zero once the connection closes.)\n     */\n    readonly bufferedAmount: number;\n    /** Returns the extensions selected by the server, if any. */\n    readonly extensions: string;\n    onclose: ((this: WebSocket, ev: CloseEvent) => any) | null;\n    onerror: ((this: WebSocket, ev: Event) => any) | null;\n    onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null;\n    onopen: ((this: WebSocket, ev: Event) => any) | null;\n    /** Returns the subprotocol selected by the server, if any. It can be used in conjunction with the array form of the constructor\'s second argument to perform subprotocol negotiation. */\n    readonly protocol: string;\n    /** Returns the state of the WebSocket object\'s connection. It can have the values described below. */\n    readonly readyState: number;\n    /** Returns the URL that was used to establish the WebSocket connection. */\n    readonly url: string;\n    /** Closes the WebSocket connection, optionally using code as the the WebSocket connection close code and reason as the the WebSocket connection close reason. */\n    close(code?: number, reason?: string): void;\n    /** Transmits data using the WebSocket connection. data can be a string, a Blob, an ArrayBuffer, or an ArrayBufferView. */\n    send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void;\n    readonly CLOSED: number;\n    readonly CLOSING: number;\n    readonly CONNECTING: number;\n    readonly OPEN: number;\n    addEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var WebSocket: {\n    prototype: WebSocket;\n    new(url: string | URL, protocols?: string | string[]): WebSocket;\n    readonly CLOSED: number;\n    readonly CLOSING: number;\n    readonly CONNECTING: number;\n    readonly OPEN: number;\n};\n\n/** Events that occur due to the user moving a mouse wheel or similar input device. */\ninterface WheelEvent extends MouseEvent {\n    readonly deltaMode: number;\n    readonly deltaX: number;\n    readonly deltaY: number;\n    readonly deltaZ: number;\n    readonly DOM_DELTA_LINE: number;\n    readonly DOM_DELTA_PAGE: number;\n    readonly DOM_DELTA_PIXEL: number;\n}\n\ndeclare var WheelEvent: {\n    prototype: WheelEvent;\n    new(type: string, eventInitDict?: WheelEventInit): WheelEvent;\n    readonly DOM_DELTA_LINE: number;\n    readonly DOM_DELTA_PAGE: number;\n    readonly DOM_DELTA_PIXEL: number;\n};\n\ninterface WindowEventMap extends GlobalEventHandlersEventMap, WindowEventHandlersEventMap {\n    "devicemotion": DeviceMotionEvent;\n    "deviceorientation": DeviceOrientationEvent;\n    "gamepadconnected": GamepadEvent;\n    "gamepaddisconnected": GamepadEvent;\n    "orientationchange": Event;\n}\n\n/** A window containing a DOM document; the document property points to the DOM document loaded in that window. */\ninterface Window extends EventTarget, AnimationFrameProvider, GlobalEventHandlers, WindowEventHandlers, WindowLocalStorage, WindowOrWorkerGlobalScope, WindowSessionStorage {\n    /** @deprecated This is a legacy alias of `navigator`. */\n    readonly clientInformation: Navigator;\n    /** Returns true if the window has been closed, false otherwise. */\n    readonly closed: boolean;\n    /** Defines a new custom element, mapping the given name to the given constructor as an autonomous custom element. */\n    readonly customElements: CustomElementRegistry;\n    readonly devicePixelRatio: number;\n    readonly document: Document;\n    /** @deprecated */\n    readonly event: Event | undefined;\n    /** @deprecated */\n    readonly external: External;\n    readonly frameElement: Element | null;\n    readonly frames: WindowProxy;\n    readonly history: History;\n    readonly innerHeight: number;\n    readonly innerWidth: number;\n    readonly length: number;\n    get location(): Location;\n    set location(href: string | Location);\n    /** Returns true if the location bar is visible; otherwise, returns false. */\n    readonly locationbar: BarProp;\n    /** Returns true if the menu bar is visible; otherwise, returns false. */\n    readonly menubar: BarProp;\n    name: string;\n    readonly navigator: Navigator;\n    /** Available only in secure contexts. */\n    ondevicemotion: ((this: Window, ev: DeviceMotionEvent) => any) | null;\n    /** Available only in secure contexts. */\n    ondeviceorientation: ((this: Window, ev: DeviceOrientationEvent) => any) | null;\n    /** @deprecated */\n    onorientationchange: ((this: Window, ev: Event) => any) | null;\n    opener: any;\n    /** @deprecated */\n    readonly orientation: number;\n    readonly outerHeight: number;\n    readonly outerWidth: number;\n    /** @deprecated This is a legacy alias of `scrollX`. */\n    readonly pageXOffset: number;\n    /** @deprecated This is a legacy alias of `scrollY`. */\n    readonly pageYOffset: number;\n    /**\n     * Refers to either the parent WindowProxy, or itself.\n     *\n     * It can rarely be null e.g. for contentWindow of an iframe that is already removed from the parent.\n     */\n    readonly parent: WindowProxy;\n    /** Returns true if the personal bar is visible; otherwise, returns false. */\n    readonly personalbar: BarProp;\n    readonly screen: Screen;\n    readonly screenLeft: number;\n    readonly screenTop: number;\n    readonly screenX: number;\n    readonly screenY: number;\n    readonly scrollX: number;\n    readonly scrollY: number;\n    /** Returns true if the scrollbars are visible; otherwise, returns false. */\n    readonly scrollbars: BarProp;\n    readonly self: Window & typeof globalThis;\n    readonly speechSynthesis: SpeechSynthesis;\n    /** @deprecated */\n    status: string;\n    /** Returns true if the status bar is visible; otherwise, returns false. */\n    readonly statusbar: BarProp;\n    /** Returns true if the toolbar is visible; otherwise, returns false. */\n    readonly toolbar: BarProp;\n    readonly top: WindowProxy | null;\n    readonly visualViewport: VisualViewport;\n    readonly window: Window & typeof globalThis;\n    alert(message?: any): void;\n    blur(): void;\n    cancelIdleCallback(handle: number): void;\n    /** @deprecated */\n    captureEvents(): void;\n    /** Closes the window. */\n    close(): void;\n    confirm(message?: string): boolean;\n    /** Moves the focus to the window\'s browsing context, if any. */\n    focus(): void;\n    getComputedStyle(elt: Element, pseudoElt?: string | null): CSSStyleDeclaration;\n    getSelection(): Selection | null;\n    matchMedia(query: string): MediaQueryList;\n    moveBy(x: number, y: number): void;\n    moveTo(x: number, y: number): void;\n    open(url?: string | URL, target?: string, features?: string): WindowProxy | null;\n    /**\n     * Posts a message to the given window. Messages can be structured objects, e.g. nested objects and arrays, can contain JavaScript values (strings, numbers, Date objects, etc), and can contain certain data objects such as File Blob, FileList, and ArrayBuffer objects.\n     *\n     * Objects listed in the transfer member of options are transferred, not just cloned, meaning that they are no longer usable on the sending side.\n     *\n     * A target origin can be specified using the targetOrigin member of options. If not provided, it defaults to "/". This default restricts the message to same-origin targets only.\n     *\n     * If the origin of the target window doesn\'t match the given target origin, the message is discarded, to avoid information leakage. To send the message to the target regardless of origin, set the target origin to "*".\n     *\n     * Throws a "DataCloneError" DOMException if transfer array contains duplicate objects or if message could not be cloned.\n     */\n    postMessage(message: any, targetOrigin: string, transfer?: Transferable[]): void;\n    postMessage(message: any, options?: WindowPostMessageOptions): void;\n    print(): void;\n    prompt(message?: string, _default?: string): string | null;\n    /** @deprecated */\n    releaseEvents(): void;\n    requestIdleCallback(callback: IdleRequestCallback, options?: IdleRequestOptions): number;\n    resizeBy(x: number, y: number): void;\n    resizeTo(width: number, height: number): void;\n    scroll(options?: ScrollToOptions): void;\n    scroll(x: number, y: number): void;\n    scrollBy(options?: ScrollToOptions): void;\n    scrollBy(x: number, y: number): void;\n    scrollTo(options?: ScrollToOptions): void;\n    scrollTo(x: number, y: number): void;\n    /** Cancels the document load. */\n    stop(): void;\n    addEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n    [index: number]: Window;\n}\n\ndeclare var Window: {\n    prototype: Window;\n    new(): Window;\n};\n\ninterface WindowEventHandlersEventMap {\n    "afterprint": Event;\n    "beforeprint": Event;\n    "beforeunload": BeforeUnloadEvent;\n    "gamepadconnected": GamepadEvent;\n    "gamepaddisconnected": GamepadEvent;\n    "hashchange": HashChangeEvent;\n    "languagechange": Event;\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n    "offline": Event;\n    "online": Event;\n    "pagehide": PageTransitionEvent;\n    "pageshow": PageTransitionEvent;\n    "popstate": PopStateEvent;\n    "rejectionhandled": PromiseRejectionEvent;\n    "storage": StorageEvent;\n    "unhandledrejection": PromiseRejectionEvent;\n    "unload": Event;\n}\n\ninterface WindowEventHandlers {\n    onafterprint: ((this: WindowEventHandlers, ev: Event) => any) | null;\n    onbeforeprint: ((this: WindowEventHandlers, ev: Event) => any) | null;\n    onbeforeunload: ((this: WindowEventHandlers, ev: BeforeUnloadEvent) => any) | null;\n    ongamepadconnected: ((this: WindowEventHandlers, ev: GamepadEvent) => any) | null;\n    ongamepaddisconnected: ((this: WindowEventHandlers, ev: GamepadEvent) => any) | null;\n    onhashchange: ((this: WindowEventHandlers, ev: HashChangeEvent) => any) | null;\n    onlanguagechange: ((this: WindowEventHandlers, ev: Event) => any) | null;\n    onmessage: ((this: WindowEventHandlers, ev: MessageEvent) => any) | null;\n    onmessageerror: ((this: WindowEventHandlers, ev: MessageEvent) => any) | null;\n    onoffline: ((this: WindowEventHandlers, ev: Event) => any) | null;\n    ononline: ((this: WindowEventHandlers, ev: Event) => any) | null;\n    onpagehide: ((this: WindowEventHandlers, ev: PageTransitionEvent) => any) | null;\n    onpageshow: ((this: WindowEventHandlers, ev: PageTransitionEvent) => any) | null;\n    onpopstate: ((this: WindowEventHandlers, ev: PopStateEvent) => any) | null;\n    onrejectionhandled: ((this: WindowEventHandlers, ev: PromiseRejectionEvent) => any) | null;\n    onstorage: ((this: WindowEventHandlers, ev: StorageEvent) => any) | null;\n    onunhandledrejection: ((this: WindowEventHandlers, ev: PromiseRejectionEvent) => any) | null;\n    onunload: ((this: WindowEventHandlers, ev: Event) => any) | null;\n    addEventListener<K extends keyof WindowEventHandlersEventMap>(type: K, listener: (this: WindowEventHandlers, ev: WindowEventHandlersEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof WindowEventHandlersEventMap>(type: K, listener: (this: WindowEventHandlers, ev: WindowEventHandlersEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ninterface WindowLocalStorage {\n    readonly localStorage: Storage;\n}\n\ninterface WindowOrWorkerGlobalScope {\n    /** Available only in secure contexts. */\n    readonly caches: CacheStorage;\n    readonly crossOriginIsolated: boolean;\n    readonly crypto: Crypto;\n    readonly indexedDB: IDBFactory;\n    readonly isSecureContext: boolean;\n    readonly origin: string;\n    readonly performance: Performance;\n    atob(data: string): string;\n    btoa(data: string): string;\n    clearInterval(id?: number): void;\n    clearTimeout(id?: number): void;\n    createImageBitmap(image: ImageBitmapSource, options?: ImageBitmapOptions): Promise<ImageBitmap>;\n    createImageBitmap(image: ImageBitmapSource, sx: number, sy: number, sw: number, sh: number, options?: ImageBitmapOptions): Promise<ImageBitmap>;\n    fetch(input: RequestInfo, init?: RequestInit): Promise<Response>;\n    queueMicrotask(callback: VoidFunction): void;\n    reportError(e: any): void;\n    setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;\n    setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;\n}\n\ninterface WindowSessionStorage {\n    readonly sessionStorage: Storage;\n}\n\ninterface WorkerEventMap extends AbstractWorkerEventMap {\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\n/** This Web Workers API interface represents a background task that can be easily created and can send messages back to its creator. Creating a worker is as simple as calling the Worker() constructor and specifying a script to be run in the worker thread. */\ninterface Worker extends EventTarget, AbstractWorker {\n    onmessage: ((this: Worker, ev: MessageEvent) => any) | null;\n    onmessageerror: ((this: Worker, ev: MessageEvent) => any) | null;\n    /** Clones message and transmits it to worker\'s global environment. transfer can be passed as a list of objects that are to be transferred rather than cloned. */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: StructuredSerializeOptions): void;\n    /** Aborts worker\'s associated global environment. */\n    terminate(): void;\n    addEventListener<K extends keyof WorkerEventMap>(type: K, listener: (this: Worker, ev: WorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof WorkerEventMap>(type: K, listener: (this: Worker, ev: WorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Worker: {\n    prototype: Worker;\n    new(scriptURL: string | URL, options?: WorkerOptions): Worker;\n};\n\n/** Available only in secure contexts. */\ninterface Worklet {\n    /**\n     * Loads and executes the module script given by moduleURL into all of worklet\'s global scopes. It can also create additional global scopes as part of this process, depending on the worklet type. The returned promise will fulfill once the script has been successfully loaded and run in all global scopes.\n     *\n     * The credentials option can be set to a credentials mode to modify the script-fetching process. It defaults to "same-origin".\n     *\n     * Any failures in fetching the script or its dependencies will cause the returned promise to be rejected with an "AbortError" DOMException. Any errors in parsing the script or its dependencies will cause the returned promise to be rejected with the exception generated during parsing.\n     */\n    addModule(moduleURL: string | URL, options?: WorkletOptions): Promise<void>;\n}\n\ndeclare var Worklet: {\n    prototype: Worklet;\n    new(): Worklet;\n};\n\n/** This Streams API interface provides a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing. */\ninterface WritableStream<W = any> {\n    readonly locked: boolean;\n    abort(reason?: any): Promise<void>;\n    close(): Promise<void>;\n    getWriter(): WritableStreamDefaultWriter<W>;\n}\n\ndeclare var WritableStream: {\n    prototype: WritableStream;\n    new<W = any>(underlyingSink?: UnderlyingSink<W>, strategy?: QueuingStrategy<W>): WritableStream<W>;\n};\n\n/** This Streams API interface represents a controller allowing control of a WritableStream\'s state. When constructing a WritableStream, the underlying sink is given a corresponding WritableStreamDefaultController instance to manipulate. */\ninterface WritableStreamDefaultController {\n    error(e?: any): void;\n}\n\ndeclare var WritableStreamDefaultController: {\n    prototype: WritableStreamDefaultController;\n    new(): WritableStreamDefaultController;\n};\n\n/** This Streams API interface is the object returned by WritableStream.getWriter() and once created locks the < writer to the WritableStream ensuring that no other streams can write to the underlying sink. */\ninterface WritableStreamDefaultWriter<W = any> {\n    readonly closed: Promise<undefined>;\n    readonly desiredSize: number | null;\n    readonly ready: Promise<undefined>;\n    abort(reason?: any): Promise<void>;\n    close(): Promise<void>;\n    releaseLock(): void;\n    write(chunk?: W): Promise<void>;\n}\n\ndeclare var WritableStreamDefaultWriter: {\n    prototype: WritableStreamDefaultWriter;\n    new<W = any>(stream: WritableStream<W>): WritableStreamDefaultWriter<W>;\n};\n\n/** An XML document. It inherits from the generic Document and does not add any specific methods or properties to it: nevertheless, several algorithms behave differently with the two types of documents. */\ninterface XMLDocument extends Document {\n    addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: XMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: XMLDocument, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var XMLDocument: {\n    prototype: XMLDocument;\n    new(): XMLDocument;\n};\n\ninterface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap {\n    "readystatechange": Event;\n}\n\n/** Use XMLHttpRequest (XHR) objects to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing. */\ninterface XMLHttpRequest extends XMLHttpRequestEventTarget {\n    onreadystatechange: ((this: XMLHttpRequest, ev: Event) => any) | null;\n    /** Returns client\'s state. */\n    readonly readyState: number;\n    /** Returns the response body. */\n    readonly response: any;\n    /**\n     * Returns response as text.\n     *\n     * Throws an "InvalidStateError" DOMException if responseType is not the empty string or "text".\n     */\n    readonly responseText: string;\n    /**\n     * Returns the response type.\n     *\n     * Can be set to change the response type. Values are: the empty string (default), "arraybuffer", "blob", "document", "json", and "text".\n     *\n     * When set: setting to "document" is ignored if current global object is not a Window object.\n     *\n     * When set: throws an "InvalidStateError" DOMException if state is loading or done.\n     *\n     * When set: throws an "InvalidAccessError" DOMException if the synchronous flag is set and current global object is a Window object.\n     */\n    responseType: XMLHttpRequestResponseType;\n    readonly responseURL: string;\n    /**\n     * Returns the response as document.\n     *\n     * Throws an "InvalidStateError" DOMException if responseType is not the empty string or "document".\n     */\n    readonly responseXML: Document | null;\n    readonly status: number;\n    readonly statusText: string;\n    /**\n     * Can be set to a time in milliseconds. When set to a non-zero value will cause fetching to terminate after the given time has passed. When the time has passed, the request has not yet completed, and this\'s synchronous flag is unset, a timeout event will then be dispatched, or a "TimeoutError" DOMException will be thrown otherwise (for the send() method).\n     *\n     * When set: throws an "InvalidAccessError" DOMException if the synchronous flag is set and current global object is a Window object.\n     */\n    timeout: number;\n    /** Returns the associated XMLHttpRequestUpload object. It can be used to gather transmission information when data is transferred to a server. */\n    readonly upload: XMLHttpRequestUpload;\n    /**\n     * True when credentials are to be included in a cross-origin request. False when they are to be excluded in a cross-origin request and when cookies are to be ignored in its response. Initially false.\n     *\n     * When set: throws an "InvalidStateError" DOMException if state is not unsent or opened, or if the send() flag is set.\n     */\n    withCredentials: boolean;\n    /** Cancels any network activity. */\n    abort(): void;\n    getAllResponseHeaders(): string;\n    getResponseHeader(name: string): string | null;\n    /**\n     * Sets the request method, request URL, and synchronous flag.\n     *\n     * Throws a "SyntaxError" DOMException if either method is not a valid method or url cannot be parsed.\n     *\n     * Throws a "SecurityError" DOMException if method is a case-insensitive match for `CONNECT`, `TRACE`, or `TRACK`.\n     *\n     * Throws an "InvalidAccessError" DOMException if async is false, current global object is a Window object, and the timeout attribute is not zero or the responseType attribute is not the empty string.\n     */\n    open(method: string, url: string | URL): void;\n    open(method: string, url: string | URL, async: boolean, username?: string | null, password?: string | null): void;\n    /**\n     * Acts as if the `Content-Type` header value for a response is mime. (It does not change the header.)\n     *\n     * Throws an "InvalidStateError" DOMException if state is loading or done.\n     */\n    overrideMimeType(mime: string): void;\n    /**\n     * Initiates the request. The body argument provides the request body, if any, and is ignored if the request method is GET or HEAD.\n     *\n     * Throws an "InvalidStateError" DOMException if either state is not opened or the send() flag is set.\n     */\n    send(body?: Document | XMLHttpRequestBodyInit | null): void;\n    /**\n     * Combines a header in author request headers.\n     *\n     * Throws an "InvalidStateError" DOMException if either state is not opened or the send() flag is set.\n     *\n     * Throws a "SyntaxError" DOMException if name is not a header name or if value is not a header value.\n     */\n    setRequestHeader(name: string, value: string): void;\n    readonly DONE: number;\n    readonly HEADERS_RECEIVED: number;\n    readonly LOADING: number;\n    readonly OPENED: number;\n    readonly UNSENT: number;\n    addEventListener<K extends keyof XMLHttpRequestEventMap>(type: K, listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventMap>(type: K, listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var XMLHttpRequest: {\n    prototype: XMLHttpRequest;\n    new(): XMLHttpRequest;\n    readonly DONE: number;\n    readonly HEADERS_RECEIVED: number;\n    readonly LOADING: number;\n    readonly OPENED: number;\n    readonly UNSENT: number;\n};\n\ninterface XMLHttpRequestEventTargetEventMap {\n    "abort": ProgressEvent<XMLHttpRequestEventTarget>;\n    "error": ProgressEvent<XMLHttpRequestEventTarget>;\n    "load": ProgressEvent<XMLHttpRequestEventTarget>;\n    "loadend": ProgressEvent<XMLHttpRequestEventTarget>;\n    "loadstart": ProgressEvent<XMLHttpRequestEventTarget>;\n    "progress": ProgressEvent<XMLHttpRequestEventTarget>;\n    "timeout": ProgressEvent<XMLHttpRequestEventTarget>;\n}\n\ninterface XMLHttpRequestEventTarget extends EventTarget {\n    onabort: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onerror: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onload: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onloadstart: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var XMLHttpRequestEventTarget: {\n    prototype: XMLHttpRequestEventTarget;\n    new(): XMLHttpRequestEventTarget;\n};\n\ninterface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {\n    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestUpload, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestUpload, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var XMLHttpRequestUpload: {\n    prototype: XMLHttpRequestUpload;\n    new(): XMLHttpRequestUpload;\n};\n\n/** Provides the serializeToString() method to construct an XML string representing a DOM tree. */\ninterface XMLSerializer {\n    serializeToString(root: Node): string;\n}\n\ndeclare var XMLSerializer: {\n    prototype: XMLSerializer;\n    new(): XMLSerializer;\n};\n\n/** The XPathEvaluator interface allows to compile and evaluate XPath expressions. */\ninterface XPathEvaluator extends XPathEvaluatorBase {\n}\n\ndeclare var XPathEvaluator: {\n    prototype: XPathEvaluator;\n    new(): XPathEvaluator;\n};\n\ninterface XPathEvaluatorBase {\n    createExpression(expression: string, resolver?: XPathNSResolver | null): XPathExpression;\n    createNSResolver(nodeResolver: Node): XPathNSResolver;\n    evaluate(expression: string, contextNode: Node, resolver?: XPathNSResolver | null, type?: number, result?: XPathResult | null): XPathResult;\n}\n\n/** This interface is a compiled XPath expression that can be evaluated on a document or specific node to return information its DOM tree. */\ninterface XPathExpression {\n    evaluate(contextNode: Node, type?: number, result?: XPathResult | null): XPathResult;\n}\n\ndeclare var XPathExpression: {\n    prototype: XPathExpression;\n    new(): XPathExpression;\n};\n\n/** The results generated by evaluating an XPath expression within the context of a given node. */\ninterface XPathResult {\n    readonly booleanValue: boolean;\n    readonly invalidIteratorState: boolean;\n    readonly numberValue: number;\n    readonly resultType: number;\n    readonly singleNodeValue: Node | null;\n    readonly snapshotLength: number;\n    readonly stringValue: string;\n    iterateNext(): Node | null;\n    snapshotItem(index: number): Node | null;\n    readonly ANY_TYPE: number;\n    readonly ANY_UNORDERED_NODE_TYPE: number;\n    readonly BOOLEAN_TYPE: number;\n    readonly FIRST_ORDERED_NODE_TYPE: number;\n    readonly NUMBER_TYPE: number;\n    readonly ORDERED_NODE_ITERATOR_TYPE: number;\n    readonly ORDERED_NODE_SNAPSHOT_TYPE: number;\n    readonly STRING_TYPE: number;\n    readonly UNORDERED_NODE_ITERATOR_TYPE: number;\n    readonly UNORDERED_NODE_SNAPSHOT_TYPE: number;\n}\n\ndeclare var XPathResult: {\n    prototype: XPathResult;\n    new(): XPathResult;\n    readonly ANY_TYPE: number;\n    readonly ANY_UNORDERED_NODE_TYPE: number;\n    readonly BOOLEAN_TYPE: number;\n    readonly FIRST_ORDERED_NODE_TYPE: number;\n    readonly NUMBER_TYPE: number;\n    readonly ORDERED_NODE_ITERATOR_TYPE: number;\n    readonly ORDERED_NODE_SNAPSHOT_TYPE: number;\n    readonly STRING_TYPE: number;\n    readonly UNORDERED_NODE_ITERATOR_TYPE: number;\n    readonly UNORDERED_NODE_SNAPSHOT_TYPE: number;\n};\n\n/** An XSLTProcessor applies an XSLT stylesheet transformation to an XML document to produce a new XML document as output. It has methods to load the XSLT stylesheet, to manipulate <xsl:param> parameter values, and to apply the transformation to documents. */\ninterface XSLTProcessor {\n    clearParameters(): void;\n    getParameter(namespaceURI: string | null, localName: string): any;\n    importStylesheet(style: Node): void;\n    removeParameter(namespaceURI: string | null, localName: string): void;\n    reset(): void;\n    setParameter(namespaceURI: string | null, localName: string, value: any): void;\n    transformToDocument(source: Node): Document;\n    transformToFragment(source: Node, output: Document): DocumentFragment;\n}\n\ndeclare var XSLTProcessor: {\n    prototype: XSLTProcessor;\n    new(): XSLTProcessor;\n};\n\ninterface Console {\n    assert(condition?: boolean, ...data: any[]): void;\n    clear(): void;\n    count(label?: string): void;\n    countReset(label?: string): void;\n    debug(...data: any[]): void;\n    dir(item?: any, options?: any): void;\n    dirxml(...data: any[]): void;\n    error(...data: any[]): void;\n    group(...data: any[]): void;\n    groupCollapsed(...data: any[]): void;\n    groupEnd(): void;\n    info(...data: any[]): void;\n    log(...data: any[]): void;\n    table(tabularData?: any, properties?: string[]): void;\n    time(label?: string): void;\n    timeEnd(label?: string): void;\n    timeLog(label?: string, ...data: any[]): void;\n    timeStamp(label?: string): void;\n    trace(...data: any[]): void;\n    warn(...data: any[]): void;\n}\n\ndeclare var console: Console;\n\n/** Holds useful CSS-related methods. No object with this interface are implemented: it contains only static methods and therefore is a utilitarian interface. */\ndeclare namespace CSS {\n    function escape(ident: string): string;\n    function supports(property: string, value: string): boolean;\n    function supports(conditionText: string): boolean;\n}\n\ndeclare namespace WebAssembly {\n    interface CompileError extends Error {\n    }\n\n    var CompileError: {\n        prototype: CompileError;\n        new(message?: string): CompileError;\n        (message?: string): CompileError;\n    };\n\n    interface Global {\n        value: any;\n        valueOf(): any;\n    }\n\n    var Global: {\n        prototype: Global;\n        new(descriptor: GlobalDescriptor, v?: any): Global;\n    };\n\n    interface Instance {\n        readonly exports: Exports;\n    }\n\n    var Instance: {\n        prototype: Instance;\n        new(module: Module, importObject?: Imports): Instance;\n    };\n\n    interface LinkError extends Error {\n    }\n\n    var LinkError: {\n        prototype: LinkError;\n        new(message?: string): LinkError;\n        (message?: string): LinkError;\n    };\n\n    interface Memory {\n        readonly buffer: ArrayBuffer;\n        grow(delta: number): number;\n    }\n\n    var Memory: {\n        prototype: Memory;\n        new(descriptor: MemoryDescriptor): Memory;\n    };\n\n    interface Module {\n    }\n\n    var Module: {\n        prototype: Module;\n        new(bytes: BufferSource): Module;\n        customSections(moduleObject: Module, sectionName: string): ArrayBuffer[];\n        exports(moduleObject: Module): ModuleExportDescriptor[];\n        imports(moduleObject: Module): ModuleImportDescriptor[];\n    };\n\n    interface RuntimeError extends Error {\n    }\n\n    var RuntimeError: {\n        prototype: RuntimeError;\n        new(message?: string): RuntimeError;\n        (message?: string): RuntimeError;\n    };\n\n    interface Table {\n        readonly length: number;\n        get(index: number): any;\n        grow(delta: number, value?: any): number;\n        set(index: number, value?: any): void;\n    }\n\n    var Table: {\n        prototype: Table;\n        new(descriptor: TableDescriptor, value?: any): Table;\n    };\n\n    interface GlobalDescriptor {\n        mutable?: boolean;\n        value: ValueType;\n    }\n\n    interface MemoryDescriptor {\n        initial: number;\n        maximum?: number;\n        shared?: boolean;\n    }\n\n    interface ModuleExportDescriptor {\n        kind: ImportExportKind;\n        name: string;\n    }\n\n    interface ModuleImportDescriptor {\n        kind: ImportExportKind;\n        module: string;\n        name: string;\n    }\n\n    interface TableDescriptor {\n        element: TableKind;\n        initial: number;\n        maximum?: number;\n    }\n\n    interface WebAssemblyInstantiatedSource {\n        instance: Instance;\n        module: Module;\n    }\n\n    type ImportExportKind = "function" | "global" | "memory" | "table";\n    type TableKind = "anyfunc" | "externref";\n    type ValueType = "anyfunc" | "externref" | "f32" | "f64" | "i32" | "i64" | "v128";\n    type ExportValue = Function | Global | Memory | Table;\n    type Exports = Record<string, ExportValue>;\n    type ImportValue = ExportValue | number;\n    type Imports = Record<string, ModuleImports>;\n    type ModuleImports = Record<string, ImportValue>;\n    function compile(bytes: BufferSource): Promise<Module>;\n    function compileStreaming(source: Response | PromiseLike<Response>): Promise<Module>;\n    function instantiate(bytes: BufferSource, importObject?: Imports): Promise<WebAssemblyInstantiatedSource>;\n    function instantiate(moduleObject: Module, importObject?: Imports): Promise<Instance>;\n    function instantiateStreaming(source: Response | PromiseLike<Response>, importObject?: Imports): Promise<WebAssemblyInstantiatedSource>;\n    function validate(bytes: BufferSource): boolean;\n}\n\ninterface BlobCallback {\n    (blob: Blob | null): void;\n}\n\ninterface CustomElementConstructor {\n    new (...params: any[]): HTMLElement;\n}\n\ninterface DecodeErrorCallback {\n    (error: DOMException): void;\n}\n\ninterface DecodeSuccessCallback {\n    (decodedData: AudioBuffer): void;\n}\n\ninterface ErrorCallback {\n    (err: DOMException): void;\n}\n\ninterface FileCallback {\n    (file: File): void;\n}\n\ninterface FileSystemEntriesCallback {\n    (entries: FileSystemEntry[]): void;\n}\n\ninterface FileSystemEntryCallback {\n    (entry: FileSystemEntry): void;\n}\n\ninterface FrameRequestCallback {\n    (time: DOMHighResTimeStamp): void;\n}\n\ninterface FunctionStringCallback {\n    (data: string): void;\n}\n\ninterface IdleRequestCallback {\n    (deadline: IdleDeadline): void;\n}\n\ninterface IntersectionObserverCallback {\n    (entries: IntersectionObserverEntry[], observer: IntersectionObserver): void;\n}\n\ninterface LockGrantedCallback {\n    (lock: Lock | null): any;\n}\n\ninterface MediaSessionActionHandler {\n    (details: MediaSessionActionDetails): void;\n}\n\ninterface MutationCallback {\n    (mutations: MutationRecord[], observer: MutationObserver): void;\n}\n\ninterface NotificationPermissionCallback {\n    (permission: NotificationPermission): void;\n}\n\ninterface OnBeforeUnloadEventHandlerNonNull {\n    (event: Event): string | null;\n}\n\ninterface OnErrorEventHandlerNonNull {\n    (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n}\n\ninterface PerformanceObserverCallback {\n    (entries: PerformanceObserverEntryList, observer: PerformanceObserver): void;\n}\n\ninterface PositionCallback {\n    (position: GeolocationPosition): void;\n}\n\ninterface PositionErrorCallback {\n    (positionError: GeolocationPositionError): void;\n}\n\ninterface QueuingStrategySize<T = any> {\n    (chunk: T): number;\n}\n\ninterface RTCPeerConnectionErrorCallback {\n    (error: DOMException): void;\n}\n\ninterface RTCSessionDescriptionCallback {\n    (description: RTCSessionDescriptionInit): void;\n}\n\ninterface RemotePlaybackAvailabilityCallback {\n    (available: boolean): void;\n}\n\ninterface ResizeObserverCallback {\n    (entries: ResizeObserverEntry[], observer: ResizeObserver): void;\n}\n\ninterface TransformerFlushCallback<O> {\n    (controller: TransformStreamDefaultController<O>): void | PromiseLike<void>;\n}\n\ninterface TransformerStartCallback<O> {\n    (controller: TransformStreamDefaultController<O>): any;\n}\n\ninterface TransformerTransformCallback<I, O> {\n    (chunk: I, controller: TransformStreamDefaultController<O>): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSinkAbortCallback {\n    (reason?: any): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSinkCloseCallback {\n    (): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSinkStartCallback {\n    (controller: WritableStreamDefaultController): any;\n}\n\ninterface UnderlyingSinkWriteCallback<W> {\n    (chunk: W, controller: WritableStreamDefaultController): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSourceCancelCallback {\n    (reason?: any): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSourcePullCallback<R> {\n    (controller: ReadableStreamController<R>): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSourceStartCallback<R> {\n    (controller: ReadableStreamController<R>): any;\n}\n\ninterface VoidFunction {\n    (): void;\n}\n\ninterface HTMLElementTagNameMap {\n    "a": HTMLAnchorElement;\n    "abbr": HTMLElement;\n    "address": HTMLElement;\n    "area": HTMLAreaElement;\n    "article": HTMLElement;\n    "aside": HTMLElement;\n    "audio": HTMLAudioElement;\n    "b": HTMLElement;\n    "base": HTMLBaseElement;\n    "bdi": HTMLElement;\n    "bdo": HTMLElement;\n    "blockquote": HTMLQuoteElement;\n    "body": HTMLBodyElement;\n    "br": HTMLBRElement;\n    "button": HTMLButtonElement;\n    "canvas": HTMLCanvasElement;\n    "caption": HTMLTableCaptionElement;\n    "cite": HTMLElement;\n    "code": HTMLElement;\n    "col": HTMLTableColElement;\n    "colgroup": HTMLTableColElement;\n    "data": HTMLDataElement;\n    "datalist": HTMLDataListElement;\n    "dd": HTMLElement;\n    "del": HTMLModElement;\n    "details": HTMLDetailsElement;\n    "dfn": HTMLElement;\n    "dialog": HTMLDialogElement;\n    "dir": HTMLDirectoryElement;\n    "div": HTMLDivElement;\n    "dl": HTMLDListElement;\n    "dt": HTMLElement;\n    "em": HTMLElement;\n    "embed": HTMLEmbedElement;\n    "fieldset": HTMLFieldSetElement;\n    "figcaption": HTMLElement;\n    "figure": HTMLElement;\n    "font": HTMLFontElement;\n    "footer": HTMLElement;\n    "form": HTMLFormElement;\n    "frame": HTMLFrameElement;\n    "frameset": HTMLFrameSetElement;\n    "h1": HTMLHeadingElement;\n    "h2": HTMLHeadingElement;\n    "h3": HTMLHeadingElement;\n    "h4": HTMLHeadingElement;\n    "h5": HTMLHeadingElement;\n    "h6": HTMLHeadingElement;\n    "head": HTMLHeadElement;\n    "header": HTMLElement;\n    "hgroup": HTMLElement;\n    "hr": HTMLHRElement;\n    "html": HTMLHtmlElement;\n    "i": HTMLElement;\n    "iframe": HTMLIFrameElement;\n    "img": HTMLImageElement;\n    "input": HTMLInputElement;\n    "ins": HTMLModElement;\n    "kbd": HTMLElement;\n    "label": HTMLLabelElement;\n    "legend": HTMLLegendElement;\n    "li": HTMLLIElement;\n    "link": HTMLLinkElement;\n    "main": HTMLElement;\n    "map": HTMLMapElement;\n    "mark": HTMLElement;\n    "marquee": HTMLMarqueeElement;\n    "menu": HTMLMenuElement;\n    "meta": HTMLMetaElement;\n    "meter": HTMLMeterElement;\n    "nav": HTMLElement;\n    "noscript": HTMLElement;\n    "object": HTMLObjectElement;\n    "ol": HTMLOListElement;\n    "optgroup": HTMLOptGroupElement;\n    "option": HTMLOptionElement;\n    "output": HTMLOutputElement;\n    "p": HTMLParagraphElement;\n    "param": HTMLParamElement;\n    "picture": HTMLPictureElement;\n    "pre": HTMLPreElement;\n    "progress": HTMLProgressElement;\n    "q": HTMLQuoteElement;\n    "rp": HTMLElement;\n    "rt": HTMLElement;\n    "ruby": HTMLElement;\n    "s": HTMLElement;\n    "samp": HTMLElement;\n    "script": HTMLScriptElement;\n    "section": HTMLElement;\n    "select": HTMLSelectElement;\n    "slot": HTMLSlotElement;\n    "small": HTMLElement;\n    "source": HTMLSourceElement;\n    "span": HTMLSpanElement;\n    "strong": HTMLElement;\n    "style": HTMLStyleElement;\n    "sub": HTMLElement;\n    "summary": HTMLElement;\n    "sup": HTMLElement;\n    "table": HTMLTableElement;\n    "tbody": HTMLTableSectionElement;\n    "td": HTMLTableCellElement;\n    "template": HTMLTemplateElement;\n    "textarea": HTMLTextAreaElement;\n    "tfoot": HTMLTableSectionElement;\n    "th": HTMLTableCellElement;\n    "thead": HTMLTableSectionElement;\n    "time": HTMLTimeElement;\n    "title": HTMLTitleElement;\n    "tr": HTMLTableRowElement;\n    "track": HTMLTrackElement;\n    "u": HTMLElement;\n    "ul": HTMLUListElement;\n    "var": HTMLElement;\n    "video": HTMLVideoElement;\n    "wbr": HTMLElement;\n}\n\ninterface HTMLElementDeprecatedTagNameMap {\n    "listing": HTMLPreElement;\n    "xmp": HTMLPreElement;\n}\n\ninterface SVGElementTagNameMap {\n    "a": SVGAElement;\n    "animate": SVGAnimateElement;\n    "animateMotion": SVGAnimateMotionElement;\n    "animateTransform": SVGAnimateTransformElement;\n    "circle": SVGCircleElement;\n    "clipPath": SVGClipPathElement;\n    "defs": SVGDefsElement;\n    "desc": SVGDescElement;\n    "ellipse": SVGEllipseElement;\n    "feBlend": SVGFEBlendElement;\n    "feColorMatrix": SVGFEColorMatrixElement;\n    "feComponentTransfer": SVGFEComponentTransferElement;\n    "feComposite": SVGFECompositeElement;\n    "feConvolveMatrix": SVGFEConvolveMatrixElement;\n    "feDiffuseLighting": SVGFEDiffuseLightingElement;\n    "feDisplacementMap": SVGFEDisplacementMapElement;\n    "feDistantLight": SVGFEDistantLightElement;\n    "feDropShadow": SVGFEDropShadowElement;\n    "feFlood": SVGFEFloodElement;\n    "feFuncA": SVGFEFuncAElement;\n    "feFuncB": SVGFEFuncBElement;\n    "feFuncG": SVGFEFuncGElement;\n    "feFuncR": SVGFEFuncRElement;\n    "feGaussianBlur": SVGFEGaussianBlurElement;\n    "feImage": SVGFEImageElement;\n    "feMerge": SVGFEMergeElement;\n    "feMergeNode": SVGFEMergeNodeElement;\n    "feMorphology": SVGFEMorphologyElement;\n    "feOffset": SVGFEOffsetElement;\n    "fePointLight": SVGFEPointLightElement;\n    "feSpecularLighting": SVGFESpecularLightingElement;\n    "feSpotLight": SVGFESpotLightElement;\n    "feTile": SVGFETileElement;\n    "feTurbulence": SVGFETurbulenceElement;\n    "filter": SVGFilterElement;\n    "foreignObject": SVGForeignObjectElement;\n    "g": SVGGElement;\n    "image": SVGImageElement;\n    "line": SVGLineElement;\n    "linearGradient": SVGLinearGradientElement;\n    "marker": SVGMarkerElement;\n    "mask": SVGMaskElement;\n    "metadata": SVGMetadataElement;\n    "mpath": SVGMPathElement;\n    "path": SVGPathElement;\n    "pattern": SVGPatternElement;\n    "polygon": SVGPolygonElement;\n    "polyline": SVGPolylineElement;\n    "radialGradient": SVGRadialGradientElement;\n    "rect": SVGRectElement;\n    "script": SVGScriptElement;\n    "set": SVGSetElement;\n    "stop": SVGStopElement;\n    "style": SVGStyleElement;\n    "svg": SVGSVGElement;\n    "switch": SVGSwitchElement;\n    "symbol": SVGSymbolElement;\n    "text": SVGTextElement;\n    "textPath": SVGTextPathElement;\n    "title": SVGTitleElement;\n    "tspan": SVGTSpanElement;\n    "use": SVGUseElement;\n    "view": SVGViewElement;\n}\n\n/** @deprecated Directly use HTMLElementTagNameMap or SVGElementTagNameMap as appropriate, instead. */\ntype ElementTagNameMap = HTMLElementTagNameMap & Pick<SVGElementTagNameMap, Exclude<keyof SVGElementTagNameMap, keyof HTMLElementTagNameMap>>;\n\ndeclare var Audio: {\n    new(src?: string): HTMLAudioElement;\n};\ndeclare var Image: {\n    new(width?: number, height?: number): HTMLImageElement;\n};\ndeclare var Option: {\n    new(text?: string, value?: string, defaultSelected?: boolean, selected?: boolean): HTMLOptionElement;\n};\n/** @deprecated This is a legacy alias of `navigator`. */\ndeclare var clientInformation: Navigator;\n/** Returns true if the window has been closed, false otherwise. */\ndeclare var closed: boolean;\n/** Defines a new custom element, mapping the given name to the given constructor as an autonomous custom element. */\ndeclare var customElements: CustomElementRegistry;\ndeclare var devicePixelRatio: number;\ndeclare var document: Document;\n/** @deprecated */\ndeclare var event: Event | undefined;\n/** @deprecated */\ndeclare var external: External;\ndeclare var frameElement: Element | null;\ndeclare var frames: WindowProxy;\ndeclare var history: History;\ndeclare var innerHeight: number;\ndeclare var innerWidth: number;\ndeclare var length: number;\ndeclare var location: Location;\n/** Returns true if the location bar is visible; otherwise, returns false. */\ndeclare var locationbar: BarProp;\n/** Returns true if the menu bar is visible; otherwise, returns false. */\ndeclare var menubar: BarProp;\n/** @deprecated */\ndeclare const name: void;\ndeclare var navigator: Navigator;\n/** Available only in secure contexts. */\ndeclare var ondevicemotion: ((this: Window, ev: DeviceMotionEvent) => any) | null;\n/** Available only in secure contexts. */\ndeclare var ondeviceorientation: ((this: Window, ev: DeviceOrientationEvent) => any) | null;\n/** @deprecated */\ndeclare var onorientationchange: ((this: Window, ev: Event) => any) | null;\ndeclare var opener: any;\n/** @deprecated */\ndeclare var orientation: number;\ndeclare var outerHeight: number;\ndeclare var outerWidth: number;\n/** @deprecated This is a legacy alias of `scrollX`. */\ndeclare var pageXOffset: number;\n/** @deprecated This is a legacy alias of `scrollY`. */\ndeclare var pageYOffset: number;\n/**\n * Refers to either the parent WindowProxy, or itself.\n *\n * It can rarely be null e.g. for contentWindow of an iframe that is already removed from the parent.\n */\ndeclare var parent: WindowProxy;\n/** Returns true if the personal bar is visible; otherwise, returns false. */\ndeclare var personalbar: BarProp;\ndeclare var screen: Screen;\ndeclare var screenLeft: number;\ndeclare var screenTop: number;\ndeclare var screenX: number;\ndeclare var screenY: number;\ndeclare var scrollX: number;\ndeclare var scrollY: number;\n/** Returns true if the scrollbars are visible; otherwise, returns false. */\ndeclare var scrollbars: BarProp;\ndeclare var self: Window & typeof globalThis;\ndeclare var speechSynthesis: SpeechSynthesis;\n/** @deprecated */\ndeclare var status: string;\n/** Returns true if the status bar is visible; otherwise, returns false. */\ndeclare var statusbar: BarProp;\n/** Returns true if the toolbar is visible; otherwise, returns false. */\ndeclare var toolbar: BarProp;\ndeclare var top: WindowProxy | null;\ndeclare var visualViewport: VisualViewport;\ndeclare var window: Window & typeof globalThis;\ndeclare function alert(message?: any): void;\ndeclare function blur(): void;\ndeclare function cancelIdleCallback(handle: number): void;\n/** @deprecated */\ndeclare function captureEvents(): void;\n/** Closes the window. */\ndeclare function close(): void;\ndeclare function confirm(message?: string): boolean;\n/** Moves the focus to the window\'s browsing context, if any. */\ndeclare function focus(): void;\ndeclare function getComputedStyle(elt: Element, pseudoElt?: string | null): CSSStyleDeclaration;\ndeclare function getSelection(): Selection | null;\ndeclare function matchMedia(query: string): MediaQueryList;\ndeclare function moveBy(x: number, y: number): void;\ndeclare function moveTo(x: number, y: number): void;\ndeclare function open(url?: string | URL, target?: string, features?: string): WindowProxy | null;\n/**\n * Posts a message to the given window. Messages can be structured objects, e.g. nested objects and arrays, can contain JavaScript values (strings, numbers, Date objects, etc), and can contain certain data objects such as File Blob, FileList, and ArrayBuffer objects.\n *\n * Objects listed in the transfer member of options are transferred, not just cloned, meaning that they are no longer usable on the sending side.\n *\n * A target origin can be specified using the targetOrigin member of options. If not provided, it defaults to "/". This default restricts the message to same-origin targets only.\n *\n * If the origin of the target window doesn\'t match the given target origin, the message is discarded, to avoid information leakage. To send the message to the target regardless of origin, set the target origin to "*".\n *\n * Throws a "DataCloneError" DOMException if transfer array contains duplicate objects or if message could not be cloned.\n */\ndeclare function postMessage(message: any, targetOrigin: string, transfer?: Transferable[]): void;\ndeclare function postMessage(message: any, options?: WindowPostMessageOptions): void;\ndeclare function print(): void;\ndeclare function prompt(message?: string, _default?: string): string | null;\n/** @deprecated */\ndeclare function releaseEvents(): void;\ndeclare function requestIdleCallback(callback: IdleRequestCallback, options?: IdleRequestOptions): number;\ndeclare function resizeBy(x: number, y: number): void;\ndeclare function resizeTo(width: number, height: number): void;\ndeclare function scroll(options?: ScrollToOptions): void;\ndeclare function scroll(x: number, y: number): void;\ndeclare function scrollBy(options?: ScrollToOptions): void;\ndeclare function scrollBy(x: number, y: number): void;\ndeclare function scrollTo(options?: ScrollToOptions): void;\ndeclare function scrollTo(x: number, y: number): void;\n/** Cancels the document load. */\ndeclare function stop(): void;\ndeclare function toString(): string;\n/** Dispatches a synthetic event event to target and returns true if either event\'s cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise. */\ndeclare function dispatchEvent(event: Event): boolean;\ndeclare function cancelAnimationFrame(handle: number): void;\ndeclare function requestAnimationFrame(callback: FrameRequestCallback): number;\n/**\n * Fires when the user aborts the download.\n * @param ev The event.\n */\ndeclare var onabort: ((this: Window, ev: UIEvent) => any) | null;\ndeclare var onanimationcancel: ((this: Window, ev: AnimationEvent) => any) | null;\ndeclare var onanimationend: ((this: Window, ev: AnimationEvent) => any) | null;\ndeclare var onanimationiteration: ((this: Window, ev: AnimationEvent) => any) | null;\ndeclare var onanimationstart: ((this: Window, ev: AnimationEvent) => any) | null;\ndeclare var onauxclick: ((this: Window, ev: MouseEvent) => any) | null;\n/**\n * Fires when the object loses the input focus.\n * @param ev The focus event.\n */\ndeclare var onblur: ((this: Window, ev: FocusEvent) => any) | null;\n/**\n * Occurs when playback is possible, but would require further buffering.\n * @param ev The event.\n */\ndeclare var oncanplay: ((this: Window, ev: Event) => any) | null;\ndeclare var oncanplaythrough: ((this: Window, ev: Event) => any) | null;\n/**\n * Fires when the contents of the object or selection have changed.\n * @param ev The event.\n */\ndeclare var onchange: ((this: Window, ev: Event) => any) | null;\n/**\n * Fires when the user clicks the left mouse button on the object\n * @param ev The mouse event.\n */\ndeclare var onclick: ((this: Window, ev: MouseEvent) => any) | null;\ndeclare var onclose: ((this: Window, ev: Event) => any) | null;\n/**\n * Fires when the user clicks the right mouse button in the client area, opening the context menu.\n * @param ev The mouse event.\n */\ndeclare var oncontextmenu: ((this: Window, ev: MouseEvent) => any) | null;\ndeclare var oncuechange: ((this: Window, ev: Event) => any) | null;\n/**\n * Fires when the user double-clicks the object.\n * @param ev The mouse event.\n */\ndeclare var ondblclick: ((this: Window, ev: MouseEvent) => any) | null;\n/**\n * Fires on the source object continuously during a drag operation.\n * @param ev The event.\n */\ndeclare var ondrag: ((this: Window, ev: DragEvent) => any) | null;\n/**\n * Fires on the source object when the user releases the mouse at the close of a drag operation.\n * @param ev The event.\n */\ndeclare var ondragend: ((this: Window, ev: DragEvent) => any) | null;\n/**\n * Fires on the target element when the user drags the object to a valid drop target.\n * @param ev The drag event.\n */\ndeclare var ondragenter: ((this: Window, ev: DragEvent) => any) | null;\n/**\n * Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.\n * @param ev The drag event.\n */\ndeclare var ondragleave: ((this: Window, ev: DragEvent) => any) | null;\n/**\n * Fires on the target element continuously while the user drags the object over a valid drop target.\n * @param ev The event.\n */\ndeclare var ondragover: ((this: Window, ev: DragEvent) => any) | null;\n/**\n * Fires on the source object when the user starts to drag a text selection or selected object.\n * @param ev The event.\n */\ndeclare var ondragstart: ((this: Window, ev: DragEvent) => any) | null;\ndeclare var ondrop: ((this: Window, ev: DragEvent) => any) | null;\n/**\n * Occurs when the duration attribute is updated.\n * @param ev The event.\n */\ndeclare var ondurationchange: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when the media element is reset to its initial state.\n * @param ev The event.\n */\ndeclare var onemptied: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when the end of playback is reached.\n * @param ev The event\n */\ndeclare var onended: ((this: Window, ev: Event) => any) | null;\n/**\n * Fires when an error occurs during object loading.\n * @param ev The event.\n */\ndeclare var onerror: OnErrorEventHandler;\n/**\n * Fires when the object receives focus.\n * @param ev The event.\n */\ndeclare var onfocus: ((this: Window, ev: FocusEvent) => any) | null;\ndeclare var onformdata: ((this: Window, ev: FormDataEvent) => any) | null;\ndeclare var ongotpointercapture: ((this: Window, ev: PointerEvent) => any) | null;\ndeclare var oninput: ((this: Window, ev: Event) => any) | null;\ndeclare var oninvalid: ((this: Window, ev: Event) => any) | null;\n/**\n * Fires when the user presses a key.\n * @param ev The keyboard event\n */\ndeclare var onkeydown: ((this: Window, ev: KeyboardEvent) => any) | null;\n/**\n * Fires when the user presses an alphanumeric key.\n * @param ev The event.\n * @deprecated\n */\ndeclare var onkeypress: ((this: Window, ev: KeyboardEvent) => any) | null;\n/**\n * Fires when the user releases a key.\n * @param ev The keyboard event\n */\ndeclare var onkeyup: ((this: Window, ev: KeyboardEvent) => any) | null;\n/**\n * Fires immediately after the browser loads the object.\n * @param ev The event.\n */\ndeclare var onload: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when media data is loaded at the current playback position.\n * @param ev The event.\n */\ndeclare var onloadeddata: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when the duration and dimensions of the media have been determined.\n * @param ev The event.\n */\ndeclare var onloadedmetadata: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when Internet Explorer begins looking for media data.\n * @param ev The event.\n */\ndeclare var onloadstart: ((this: Window, ev: Event) => any) | null;\ndeclare var onlostpointercapture: ((this: Window, ev: PointerEvent) => any) | null;\n/**\n * Fires when the user clicks the object with either mouse button.\n * @param ev The mouse event.\n */\ndeclare var onmousedown: ((this: Window, ev: MouseEvent) => any) | null;\ndeclare var onmouseenter: ((this: Window, ev: MouseEvent) => any) | null;\ndeclare var onmouseleave: ((this: Window, ev: MouseEvent) => any) | null;\n/**\n * Fires when the user moves the mouse over the object.\n * @param ev The mouse event.\n */\ndeclare var onmousemove: ((this: Window, ev: MouseEvent) => any) | null;\n/**\n * Fires when the user moves the mouse pointer outside the boundaries of the object.\n * @param ev The mouse event.\n */\ndeclare var onmouseout: ((this: Window, ev: MouseEvent) => any) | null;\n/**\n * Fires when the user moves the mouse pointer into the object.\n * @param ev The mouse event.\n */\ndeclare var onmouseover: ((this: Window, ev: MouseEvent) => any) | null;\n/**\n * Fires when the user releases a mouse button while the mouse is over the object.\n * @param ev The mouse event.\n */\ndeclare var onmouseup: ((this: Window, ev: MouseEvent) => any) | null;\n/**\n * Occurs when playback is paused.\n * @param ev The event.\n */\ndeclare var onpause: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when the play method is requested.\n * @param ev The event.\n */\ndeclare var onplay: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when the audio or video has started playing.\n * @param ev The event.\n */\ndeclare var onplaying: ((this: Window, ev: Event) => any) | null;\ndeclare var onpointercancel: ((this: Window, ev: PointerEvent) => any) | null;\ndeclare var onpointerdown: ((this: Window, ev: PointerEvent) => any) | null;\ndeclare var onpointerenter: ((this: Window, ev: PointerEvent) => any) | null;\ndeclare var onpointerleave: ((this: Window, ev: PointerEvent) => any) | null;\ndeclare var onpointermove: ((this: Window, ev: PointerEvent) => any) | null;\ndeclare var onpointerout: ((this: Window, ev: PointerEvent) => any) | null;\ndeclare var onpointerover: ((this: Window, ev: PointerEvent) => any) | null;\ndeclare var onpointerup: ((this: Window, ev: PointerEvent) => any) | null;\n/**\n * Occurs to indicate progress while downloading media data.\n * @param ev The event.\n */\ndeclare var onprogress: ((this: Window, ev: ProgressEvent) => any) | null;\n/**\n * Occurs when the playback rate is increased or decreased.\n * @param ev The event.\n */\ndeclare var onratechange: ((this: Window, ev: Event) => any) | null;\n/**\n * Fires when the user resets a form.\n * @param ev The event.\n */\ndeclare var onreset: ((this: Window, ev: Event) => any) | null;\ndeclare var onresize: ((this: Window, ev: UIEvent) => any) | null;\n/**\n * Fires when the user repositions the scroll box in the scroll bar on the object.\n * @param ev The event.\n */\ndeclare var onscroll: ((this: Window, ev: Event) => any) | null;\ndeclare var onsecuritypolicyviolation: ((this: Window, ev: SecurityPolicyViolationEvent) => any) | null;\n/**\n * Occurs when the seek operation ends.\n * @param ev The event.\n */\ndeclare var onseeked: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when the current playback position is moved.\n * @param ev The event.\n */\ndeclare var onseeking: ((this: Window, ev: Event) => any) | null;\n/**\n * Fires when the current selection changes.\n * @param ev The event.\n */\ndeclare var onselect: ((this: Window, ev: Event) => any) | null;\ndeclare var onselectionchange: ((this: Window, ev: Event) => any) | null;\ndeclare var onselectstart: ((this: Window, ev: Event) => any) | null;\ndeclare var onslotchange: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when the download has stopped.\n * @param ev The event.\n */\ndeclare var onstalled: ((this: Window, ev: Event) => any) | null;\ndeclare var onsubmit: ((this: Window, ev: SubmitEvent) => any) | null;\n/**\n * Occurs if the load operation has been intentionally halted.\n * @param ev The event.\n */\ndeclare var onsuspend: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs to indicate the current playback position.\n * @param ev The event.\n */\ndeclare var ontimeupdate: ((this: Window, ev: Event) => any) | null;\ndeclare var ontoggle: ((this: Window, ev: Event) => any) | null;\ndeclare var ontouchcancel: ((this: Window, ev: TouchEvent) => any) | null | undefined;\ndeclare var ontouchend: ((this: Window, ev: TouchEvent) => any) | null | undefined;\ndeclare var ontouchmove: ((this: Window, ev: TouchEvent) => any) | null | undefined;\ndeclare var ontouchstart: ((this: Window, ev: TouchEvent) => any) | null | undefined;\ndeclare var ontransitioncancel: ((this: Window, ev: TransitionEvent) => any) | null;\ndeclare var ontransitionend: ((this: Window, ev: TransitionEvent) => any) | null;\ndeclare var ontransitionrun: ((this: Window, ev: TransitionEvent) => any) | null;\ndeclare var ontransitionstart: ((this: Window, ev: TransitionEvent) => any) | null;\n/**\n * Occurs when the volume is changed, or playback is muted or unmuted.\n * @param ev The event.\n */\ndeclare var onvolumechange: ((this: Window, ev: Event) => any) | null;\n/**\n * Occurs when playback stops because the next frame of a video resource is not available.\n * @param ev The event.\n */\ndeclare var onwaiting: ((this: Window, ev: Event) => any) | null;\n/** @deprecated This is a legacy alias of `onanimationend`. */\ndeclare var onwebkitanimationend: ((this: Window, ev: Event) => any) | null;\n/** @deprecated This is a legacy alias of `onanimationiteration`. */\ndeclare var onwebkitanimationiteration: ((this: Window, ev: Event) => any) | null;\n/** @deprecated This is a legacy alias of `onanimationstart`. */\ndeclare var onwebkitanimationstart: ((this: Window, ev: Event) => any) | null;\n/** @deprecated This is a legacy alias of `ontransitionend`. */\ndeclare var onwebkittransitionend: ((this: Window, ev: Event) => any) | null;\ndeclare var onwheel: ((this: Window, ev: WheelEvent) => any) | null;\ndeclare var onafterprint: ((this: Window, ev: Event) => any) | null;\ndeclare var onbeforeprint: ((this: Window, ev: Event) => any) | null;\ndeclare var onbeforeunload: ((this: Window, ev: BeforeUnloadEvent) => any) | null;\ndeclare var ongamepadconnected: ((this: Window, ev: GamepadEvent) => any) | null;\ndeclare var ongamepaddisconnected: ((this: Window, ev: GamepadEvent) => any) | null;\ndeclare var onhashchange: ((this: Window, ev: HashChangeEvent) => any) | null;\ndeclare var onlanguagechange: ((this: Window, ev: Event) => any) | null;\ndeclare var onmessage: ((this: Window, ev: MessageEvent) => any) | null;\ndeclare var onmessageerror: ((this: Window, ev: MessageEvent) => any) | null;\ndeclare var onoffline: ((this: Window, ev: Event) => any) | null;\ndeclare var ononline: ((this: Window, ev: Event) => any) | null;\ndeclare var onpagehide: ((this: Window, ev: PageTransitionEvent) => any) | null;\ndeclare var onpageshow: ((this: Window, ev: PageTransitionEvent) => any) | null;\ndeclare var onpopstate: ((this: Window, ev: PopStateEvent) => any) | null;\ndeclare var onrejectionhandled: ((this: Window, ev: PromiseRejectionEvent) => any) | null;\ndeclare var onstorage: ((this: Window, ev: StorageEvent) => any) | null;\ndeclare var onunhandledrejection: ((this: Window, ev: PromiseRejectionEvent) => any) | null;\ndeclare var onunload: ((this: Window, ev: Event) => any) | null;\ndeclare var localStorage: Storage;\n/** Available only in secure contexts. */\ndeclare var caches: CacheStorage;\ndeclare var crossOriginIsolated: boolean;\ndeclare var crypto: Crypto;\ndeclare var indexedDB: IDBFactory;\ndeclare var isSecureContext: boolean;\ndeclare var origin: string;\ndeclare var performance: Performance;\ndeclare function atob(data: string): string;\ndeclare function btoa(data: string): string;\ndeclare function clearInterval(id?: number): void;\ndeclare function clearTimeout(id?: number): void;\ndeclare function createImageBitmap(image: ImageBitmapSource, options?: ImageBitmapOptions): Promise<ImageBitmap>;\ndeclare function createImageBitmap(image: ImageBitmapSource, sx: number, sy: number, sw: number, sh: number, options?: ImageBitmapOptions): Promise<ImageBitmap>;\ndeclare function fetch(input: RequestInfo, init?: RequestInit): Promise<Response>;\ndeclare function queueMicrotask(callback: VoidFunction): void;\ndeclare function reportError(e: any): void;\ndeclare function setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;\ndeclare function setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;\ndeclare var sessionStorage: Storage;\ndeclare function addEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\ndeclare function addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\ndeclare function removeEventListener<K extends keyof WindowEventMap>(type: K, listener: (this: Window, ev: WindowEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\ndeclare function removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\ntype AlgorithmIdentifier = Algorithm | string;\ntype BigInteger = Uint8Array;\ntype BinaryData = ArrayBuffer | ArrayBufferView;\ntype BlobPart = BufferSource | Blob | string;\ntype BodyInit = ReadableStream | XMLHttpRequestBodyInit;\ntype BufferSource = ArrayBufferView | ArrayBuffer;\ntype COSEAlgorithmIdentifier = number;\ntype CSSNumberish = number;\ntype CanvasImageSource = HTMLOrSVGImageElement | HTMLVideoElement | HTMLCanvasElement | ImageBitmap;\ntype ClipboardItemData = Promise<ClipboardItemDataType>;\ntype ClipboardItemDataType = string | Blob;\ntype ClipboardItems = ClipboardItem[];\ntype ConstrainBoolean = boolean | ConstrainBooleanParameters;\ntype ConstrainDOMString = string | string[] | ConstrainDOMStringParameters;\ntype ConstrainDouble = number | ConstrainDoubleRange;\ntype ConstrainULong = number | ConstrainULongRange;\ntype DOMHighResTimeStamp = number;\ntype EpochTimeStamp = number;\ntype EventListenerOrEventListenerObject = EventListener | EventListenerObject;\ntype Float32List = Float32Array | GLfloat[];\ntype FormDataEntryValue = File | string;\ntype GLbitfield = number;\ntype GLboolean = boolean;\ntype GLclampf = number;\ntype GLenum = number;\ntype GLfloat = number;\ntype GLint = number;\ntype GLint64 = number;\ntype GLintptr = number;\ntype GLsizei = number;\ntype GLsizeiptr = number;\ntype GLuint = number;\ntype GLuint64 = number;\ntype HTMLOrSVGImageElement = HTMLImageElement | SVGImageElement;\ntype HTMLOrSVGScriptElement = HTMLScriptElement | SVGScriptElement;\ntype HashAlgorithmIdentifier = AlgorithmIdentifier;\ntype HeadersInit = string[][] | Record<string, string> | Headers;\ntype IDBValidKey = number | string | Date | BufferSource | IDBValidKey[];\ntype ImageBitmapSource = CanvasImageSource | Blob | ImageData;\ntype InsertPosition = "beforebegin" | "afterbegin" | "beforeend" | "afterend";\ntype Int32List = Int32Array | GLint[];\ntype LineAndPositionSetting = number | AutoKeyword;\ntype MediaProvider = MediaStream | MediaSource | Blob;\ntype MessageEventSource = WindowProxy | MessagePort | ServiceWorker;\ntype MutationRecordType = "attributes" | "characterData" | "childList";\ntype NamedCurve = string;\ntype OnBeforeUnloadEventHandler = OnBeforeUnloadEventHandlerNonNull | null;\ntype OnErrorEventHandler = OnErrorEventHandlerNonNull | null;\ntype PerformanceEntryList = PerformanceEntry[];\ntype ReadableStreamController<T> = ReadableStreamDefaultController<T>;\ntype ReadableStreamDefaultReadResult<T> = ReadableStreamDefaultReadValueResult<T> | ReadableStreamDefaultReadDoneResult;\ntype ReadableStreamReader<T> = ReadableStreamDefaultReader<T>;\ntype RenderingContext = CanvasRenderingContext2D | ImageBitmapRenderingContext | WebGLRenderingContext | WebGL2RenderingContext;\ntype RequestInfo = Request | string;\ntype TexImageSource = ImageBitmap | ImageData | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement;\ntype TimerHandler = string | Function;\ntype Transferable = ArrayBuffer | MessagePort | ImageBitmap;\ntype Uint32List = Uint32Array | GLuint[];\ntype UvmEntries = UvmEntry[];\ntype UvmEntry = number[];\ntype VibratePattern = number | number[];\ntype WindowProxy = Window;\ntype XMLHttpRequestBodyInit = Blob | BufferSource | FormData | URLSearchParams | string;\ntype AlignSetting = "center" | "end" | "left" | "right" | "start";\ntype AnimationPlayState = "finished" | "idle" | "paused" | "running";\ntype AnimationReplaceState = "active" | "persisted" | "removed";\ntype AppendMode = "segments" | "sequence";\ntype AttestationConveyancePreference = "direct" | "enterprise" | "indirect" | "none";\ntype AudioContextLatencyCategory = "balanced" | "interactive" | "playback";\ntype AudioContextState = "closed" | "running" | "suspended";\ntype AuthenticatorAttachment = "cross-platform" | "platform";\ntype AuthenticatorTransport = "ble" | "internal" | "nfc" | "usb";\ntype AutoKeyword = "auto";\ntype AutomationRate = "a-rate" | "k-rate";\ntype BinaryType = "arraybuffer" | "blob";\ntype BiquadFilterType = "allpass" | "bandpass" | "highpass" | "highshelf" | "lowpass" | "lowshelf" | "notch" | "peaking";\ntype CanPlayTypeResult = "" | "maybe" | "probably";\ntype CanvasDirection = "inherit" | "ltr" | "rtl";\ntype CanvasFillRule = "evenodd" | "nonzero";\ntype CanvasFontKerning = "auto" | "none" | "normal";\ntype CanvasFontStretch = "condensed" | "expanded" | "extra-condensed" | "extra-expanded" | "normal" | "semi-condensed" | "semi-expanded" | "ultra-condensed" | "ultra-expanded";\ntype CanvasFontVariantCaps = "all-petite-caps" | "all-small-caps" | "normal" | "petite-caps" | "small-caps" | "titling-caps" | "unicase";\ntype CanvasLineCap = "butt" | "round" | "square";\ntype CanvasLineJoin = "bevel" | "miter" | "round";\ntype CanvasTextAlign = "center" | "end" | "left" | "right" | "start";\ntype CanvasTextBaseline = "alphabetic" | "bottom" | "hanging" | "ideographic" | "middle" | "top";\ntype CanvasTextRendering = "auto" | "geometricPrecision" | "optimizeLegibility" | "optimizeSpeed";\ntype ChannelCountMode = "clamped-max" | "explicit" | "max";\ntype ChannelInterpretation = "discrete" | "speakers";\ntype ClientTypes = "all" | "sharedworker" | "window" | "worker";\ntype ColorGamut = "p3" | "rec2020" | "srgb";\ntype ColorSpaceConversion = "default" | "none";\ntype CompositeOperation = "accumulate" | "add" | "replace";\ntype CompositeOperationOrAuto = "accumulate" | "add" | "auto" | "replace";\ntype ConnectionType = "bluetooth" | "cellular" | "ethernet" | "mixed" | "none" | "other" | "unknown" | "wifi";\ntype CredentialMediationRequirement = "optional" | "required" | "silent";\ntype DOMParserSupportedType = "application/xhtml+xml" | "application/xml" | "image/svg+xml" | "text/html" | "text/xml";\ntype DirectionSetting = "" | "lr" | "rl";\ntype DisplayCaptureSurfaceType = "application" | "browser" | "monitor" | "window";\ntype DistanceModelType = "exponential" | "inverse" | "linear";\ntype DocumentReadyState = "complete" | "interactive" | "loading";\ntype DocumentVisibilityState = "hidden" | "visible";\ntype EndOfStreamError = "decode" | "network";\ntype EndingType = "native" | "transparent";\ntype FileSystemHandleKind = "directory" | "file";\ntype FillMode = "auto" | "backwards" | "both" | "forwards" | "none";\ntype FontFaceLoadStatus = "error" | "loaded" | "loading" | "unloaded";\ntype FontFaceSetLoadStatus = "loaded" | "loading";\ntype FullscreenNavigationUI = "auto" | "hide" | "show";\ntype GamepadHapticActuatorType = "vibration";\ntype GamepadMappingType = "" | "standard" | "xr-standard";\ntype GlobalCompositeOperation = "color" | "color-burn" | "color-dodge" | "copy" | "darken" | "destination-atop" | "destination-in" | "destination-out" | "destination-over" | "difference" | "exclusion" | "hard-light" | "hue" | "lighten" | "lighter" | "luminosity" | "multiply" | "overlay" | "saturation" | "screen" | "soft-light" | "source-atop" | "source-in" | "source-out" | "source-over" | "xor";\ntype HdrMetadataType = "smpteSt2086" | "smpteSt2094-10" | "smpteSt2094-40";\ntype IDBCursorDirection = "next" | "nextunique" | "prev" | "prevunique";\ntype IDBRequestReadyState = "done" | "pending";\ntype IDBTransactionDurability = "default" | "relaxed" | "strict";\ntype IDBTransactionMode = "readonly" | "readwrite" | "versionchange";\ntype ImageOrientation = "flipY" | "none";\ntype ImageSmoothingQuality = "high" | "low" | "medium";\ntype IterationCompositeOperation = "accumulate" | "replace";\ntype KeyFormat = "jwk" | "pkcs8" | "raw" | "spki";\ntype KeyType = "private" | "public" | "secret";\ntype KeyUsage = "decrypt" | "deriveBits" | "deriveKey" | "encrypt" | "sign" | "unwrapKey" | "verify" | "wrapKey";\ntype LineAlignSetting = "center" | "end" | "start";\ntype LockMode = "exclusive" | "shared";\ntype MediaDecodingType = "file" | "media-source" | "webrtc";\ntype MediaDeviceKind = "audioinput" | "audiooutput" | "videoinput";\ntype MediaEncodingType = "record" | "webrtc";\ntype MediaKeyMessageType = "individualization-request" | "license-release" | "license-renewal" | "license-request";\ntype MediaKeySessionClosedReason = "closed-by-application" | "hardware-context-reset" | "internal-error" | "release-acknowledged" | "resource-evicted";\ntype MediaKeySessionType = "persistent-license" | "temporary";\ntype MediaKeyStatus = "expired" | "internal-error" | "output-downscaled" | "output-restricted" | "released" | "status-pending" | "usable" | "usable-in-future";\ntype MediaKeysRequirement = "not-allowed" | "optional" | "required";\ntype MediaSessionAction = "hangup" | "nexttrack" | "pause" | "play" | "previoustrack" | "seekbackward" | "seekforward" | "seekto" | "skipad" | "stop" | "togglecamera" | "togglemicrophone";\ntype MediaSessionPlaybackState = "none" | "paused" | "playing";\ntype MediaStreamTrackState = "ended" | "live";\ntype NavigationType = "back_forward" | "navigate" | "prerender" | "reload";\ntype NotificationDirection = "auto" | "ltr" | "rtl";\ntype NotificationPermission = "default" | "denied" | "granted";\ntype OrientationLockType = "any" | "landscape" | "landscape-primary" | "landscape-secondary" | "natural" | "portrait" | "portrait-primary" | "portrait-secondary";\ntype OrientationType = "landscape-primary" | "landscape-secondary" | "portrait-primary" | "portrait-secondary";\ntype OscillatorType = "custom" | "sawtooth" | "sine" | "square" | "triangle";\ntype OverSampleType = "2x" | "4x" | "none";\ntype PanningModelType = "HRTF" | "equalpower";\ntype PaymentComplete = "fail" | "success" | "unknown";\ntype PermissionName = "geolocation" | "notifications" | "persistent-storage" | "push" | "screen-wake-lock" | "xr-spatial-tracking";\ntype PermissionState = "denied" | "granted" | "prompt";\ntype PlaybackDirection = "alternate" | "alternate-reverse" | "normal" | "reverse";\ntype PositionAlignSetting = "auto" | "center" | "line-left" | "line-right";\ntype PredefinedColorSpace = "display-p3" | "srgb";\ntype PremultiplyAlpha = "default" | "none" | "premultiply";\ntype PresentationStyle = "attachment" | "inline" | "unspecified";\ntype PublicKeyCredentialType = "public-key";\ntype PushEncryptionKeyName = "auth" | "p256dh";\ntype RTCBundlePolicy = "balanced" | "max-bundle" | "max-compat";\ntype RTCDataChannelState = "closed" | "closing" | "connecting" | "open";\ntype RTCDegradationPreference = "balanced" | "maintain-framerate" | "maintain-resolution";\ntype RTCDtlsTransportState = "closed" | "connected" | "connecting" | "failed" | "new";\ntype RTCIceCandidateType = "host" | "prflx" | "relay" | "srflx";\ntype RTCIceComponent = "rtcp" | "rtp";\ntype RTCIceConnectionState = "checking" | "closed" | "completed" | "connected" | "disconnected" | "failed" | "new";\ntype RTCIceCredentialType = "password";\ntype RTCIceGathererState = "complete" | "gathering" | "new";\ntype RTCIceGatheringState = "complete" | "gathering" | "new";\ntype RTCIceProtocol = "tcp" | "udp";\ntype RTCIceTcpCandidateType = "active" | "passive" | "so";\ntype RTCIceTransportPolicy = "all" | "relay";\ntype RTCIceTransportState = "checking" | "closed" | "completed" | "connected" | "disconnected" | "failed" | "new";\ntype RTCPeerConnectionState = "closed" | "connected" | "connecting" | "disconnected" | "failed" | "new";\ntype RTCPriorityType = "high" | "low" | "medium" | "very-low";\ntype RTCRtcpMuxPolicy = "require";\ntype RTCRtpTransceiverDirection = "inactive" | "recvonly" | "sendonly" | "sendrecv" | "stopped";\ntype RTCSdpType = "answer" | "offer" | "pranswer" | "rollback";\ntype RTCSignalingState = "closed" | "have-local-offer" | "have-local-pranswer" | "have-remote-offer" | "have-remote-pranswer" | "stable";\ntype RTCStatsIceCandidatePairState = "failed" | "frozen" | "in-progress" | "inprogress" | "succeeded" | "waiting";\ntype RTCStatsType = "candidate-pair" | "certificate" | "codec" | "csrc" | "data-channel" | "inbound-rtp" | "local-candidate" | "media-source" | "outbound-rtp" | "peer-connection" | "remote-candidate" | "remote-inbound-rtp" | "remote-outbound-rtp" | "track" | "transport";\ntype ReadyState = "closed" | "ended" | "open";\ntype RecordingState = "inactive" | "paused" | "recording";\ntype ReferrerPolicy = "" | "no-referrer" | "no-referrer-when-downgrade" | "origin" | "origin-when-cross-origin" | "same-origin" | "strict-origin" | "strict-origin-when-cross-origin" | "unsafe-url";\ntype RemotePlaybackState = "connected" | "connecting" | "disconnected";\ntype RequestCache = "default" | "force-cache" | "no-cache" | "no-store" | "only-if-cached" | "reload";\ntype RequestCredentials = "include" | "omit" | "same-origin";\ntype RequestDestination = "" | "audio" | "audioworklet" | "document" | "embed" | "font" | "frame" | "iframe" | "image" | "manifest" | "object" | "paintworklet" | "report" | "script" | "sharedworker" | "style" | "track" | "video" | "worker" | "xslt";\ntype RequestMode = "cors" | "navigate" | "no-cors" | "same-origin";\ntype RequestRedirect = "error" | "follow" | "manual";\ntype ResidentKeyRequirement = "discouraged" | "preferred" | "required";\ntype ResizeObserverBoxOptions = "border-box" | "content-box" | "device-pixel-content-box";\ntype ResizeQuality = "high" | "low" | "medium" | "pixelated";\ntype ResponseType = "basic" | "cors" | "default" | "error" | "opaque" | "opaqueredirect";\ntype ScrollBehavior = "auto" | "smooth";\ntype ScrollLogicalPosition = "center" | "end" | "nearest" | "start";\ntype ScrollRestoration = "auto" | "manual";\ntype ScrollSetting = "" | "up";\ntype SecurityPolicyViolationEventDisposition = "enforce" | "report";\ntype SelectionMode = "end" | "preserve" | "select" | "start";\ntype ServiceWorkerState = "activated" | "activating" | "installed" | "installing" | "parsed" | "redundant";\ntype ServiceWorkerUpdateViaCache = "all" | "imports" | "none";\ntype ShadowRootMode = "closed" | "open";\ntype SlotAssignmentMode = "manual" | "named";\ntype SpeechSynthesisErrorCode = "audio-busy" | "audio-hardware" | "canceled" | "interrupted" | "invalid-argument" | "language-unavailable" | "network" | "not-allowed" | "synthesis-failed" | "synthesis-unavailable" | "text-too-long" | "voice-unavailable";\ntype TextTrackKind = "captions" | "chapters" | "descriptions" | "metadata" | "subtitles";\ntype TextTrackMode = "disabled" | "hidden" | "showing";\ntype TouchType = "direct" | "stylus";\ntype TransferFunction = "hlg" | "pq" | "srgb";\ntype UserVerificationRequirement = "discouraged" | "preferred" | "required";\ntype VideoFacingModeEnum = "environment" | "left" | "right" | "user";\ntype WebGLPowerPreference = "default" | "high-performance" | "low-power";\ntype WorkerType = "classic" | "module";\ntype XMLHttpRequestResponseType = "" | "arraybuffer" | "blob" | "document" | "json" | "text";\n'},81933:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/////////////////////////////\n/// Window Iterable APIs\n/////////////////////////////\n\ninterface AudioParam {\n    setValueCurveAtTime(values: Iterable<number>, startTime: number, duration: number): AudioParam;\n}\n\ninterface AudioParamMap extends ReadonlyMap<string, AudioParam> {\n}\n\ninterface BaseAudioContext {\n    createIIRFilter(feedforward: Iterable<number>, feedback: Iterable<number>): IIRFilterNode;\n    createPeriodicWave(real: Iterable<number>, imag: Iterable<number>, constraints?: PeriodicWaveConstraints): PeriodicWave;\n}\n\ninterface CSSRuleList {\n    [Symbol.iterator](): IterableIterator<CSSRule>;\n}\n\ninterface CSSStyleDeclaration {\n    [Symbol.iterator](): IterableIterator<string>;\n}\n\ninterface Cache {\n    addAll(requests: Iterable<RequestInfo>): Promise<void>;\n}\n\ninterface CanvasPathDrawingStyles {\n    setLineDash(segments: Iterable<number>): void;\n}\n\ninterface DOMRectList {\n    [Symbol.iterator](): IterableIterator<DOMRect>;\n}\n\ninterface DOMStringList {\n    [Symbol.iterator](): IterableIterator<string>;\n}\n\ninterface DOMTokenList {\n    [Symbol.iterator](): IterableIterator<string>;\n    entries(): IterableIterator<[number, string]>;\n    keys(): IterableIterator<number>;\n    values(): IterableIterator<string>;\n}\n\ninterface DataTransferItemList {\n    [Symbol.iterator](): IterableIterator<DataTransferItem>;\n}\n\ninterface FileList {\n    [Symbol.iterator](): IterableIterator<File>;\n}\n\ninterface FontFaceSet extends Set<FontFace> {\n}\n\ninterface FormData {\n    [Symbol.iterator](): IterableIterator<[string, FormDataEntryValue]>;\n    /** Returns an array of key, value pairs for every entry in the list. */\n    entries(): IterableIterator<[string, FormDataEntryValue]>;\n    /** Returns a list of keys in the list. */\n    keys(): IterableIterator<string>;\n    /** Returns a list of values in the list. */\n    values(): IterableIterator<FormDataEntryValue>;\n}\n\ninterface HTMLAllCollection {\n    [Symbol.iterator](): IterableIterator<Element>;\n}\n\ninterface HTMLCollectionBase {\n    [Symbol.iterator](): IterableIterator<Element>;\n}\n\ninterface HTMLCollectionOf<T extends Element> {\n    [Symbol.iterator](): IterableIterator<T>;\n}\n\ninterface HTMLFormElement {\n    [Symbol.iterator](): IterableIterator<Element>;\n}\n\ninterface HTMLSelectElement {\n    [Symbol.iterator](): IterableIterator<HTMLOptionElement>;\n}\n\ninterface Headers {\n    [Symbol.iterator](): IterableIterator<[string, string]>;\n    /** Returns an iterator allowing to go through all key/value pairs contained in this object. */\n    entries(): IterableIterator<[string, string]>;\n    /** Returns an iterator allowing to go through all keys of the key/value pairs contained in this object. */\n    keys(): IterableIterator<string>;\n    /** Returns an iterator allowing to go through all values of the key/value pairs contained in this object. */\n    values(): IterableIterator<string>;\n}\n\ninterface IDBDatabase {\n    /** Returns a new transaction with the given mode ("readonly" or "readwrite") and scope which can be a single object store name or an array of names. */\n    transaction(storeNames: string | Iterable<string>, mode?: IDBTransactionMode): IDBTransaction;\n}\n\ninterface IDBObjectStore {\n    /**\n     * Creates a new index in store with the given name, keyPath and options and returns a new IDBIndex. If the keyPath and options define constraints that cannot be satisfied with the data already in store the upgrade transaction will abort with a "ConstraintError" DOMException.\n     *\n     * Throws an "InvalidStateError" DOMException if not called within an upgrade transaction.\n     */\n    createIndex(name: string, keyPath: string | Iterable<string>, options?: IDBIndexParameters): IDBIndex;\n}\n\ninterface MediaKeyStatusMap {\n    [Symbol.iterator](): IterableIterator<[BufferSource, MediaKeyStatus]>;\n    entries(): IterableIterator<[BufferSource, MediaKeyStatus]>;\n    keys(): IterableIterator<BufferSource>;\n    values(): IterableIterator<MediaKeyStatus>;\n}\n\ninterface MediaList {\n    [Symbol.iterator](): IterableIterator<string>;\n}\n\ninterface MessageEvent<T = any> {\n    /** @deprecated */\n    initMessageEvent(type: string, bubbles?: boolean, cancelable?: boolean, data?: any, origin?: string, lastEventId?: string, source?: MessageEventSource | null, ports?: Iterable<MessagePort>): void;\n}\n\ninterface MimeTypeArray {\n    [Symbol.iterator](): IterableIterator<MimeType>;\n}\n\ninterface NamedNodeMap {\n    [Symbol.iterator](): IterableIterator<Attr>;\n}\n\ninterface Navigator {\n    /** Available only in secure contexts. */\n    requestMediaKeySystemAccess(keySystem: string, supportedConfigurations: Iterable<MediaKeySystemConfiguration>): Promise<MediaKeySystemAccess>;\n    vibrate(pattern: Iterable<number>): boolean;\n}\n\ninterface NodeList {\n    [Symbol.iterator](): IterableIterator<Node>;\n    /** Returns an array of key, value pairs for every entry in the list. */\n    entries(): IterableIterator<[number, Node]>;\n    /** Returns an list of keys in the list. */\n    keys(): IterableIterator<number>;\n    /** Returns an list of values in the list. */\n    values(): IterableIterator<Node>;\n}\n\ninterface NodeListOf<TNode extends Node> {\n    [Symbol.iterator](): IterableIterator<TNode>;\n    /** Returns an array of key, value pairs for every entry in the list. */\n    entries(): IterableIterator<[number, TNode]>;\n    /** Returns an list of keys in the list. */\n    keys(): IterableIterator<number>;\n    /** Returns an list of values in the list. */\n    values(): IterableIterator<TNode>;\n}\n\ninterface Plugin {\n    [Symbol.iterator](): IterableIterator<MimeType>;\n}\n\ninterface PluginArray {\n    [Symbol.iterator](): IterableIterator<Plugin>;\n}\n\ninterface RTCRtpTransceiver {\n    setCodecPreferences(codecs: Iterable<RTCRtpCodecCapability>): void;\n}\n\ninterface RTCStatsReport extends ReadonlyMap<string, any> {\n}\n\ninterface SVGLengthList {\n    [Symbol.iterator](): IterableIterator<SVGLength>;\n}\n\ninterface SVGNumberList {\n    [Symbol.iterator](): IterableIterator<SVGNumber>;\n}\n\ninterface SVGPointList {\n    [Symbol.iterator](): IterableIterator<DOMPoint>;\n}\n\ninterface SVGStringList {\n    [Symbol.iterator](): IterableIterator<string>;\n}\n\ninterface SVGTransformList {\n    [Symbol.iterator](): IterableIterator<SVGTransform>;\n}\n\ninterface SourceBufferList {\n    [Symbol.iterator](): IterableIterator<SourceBuffer>;\n}\n\ninterface SpeechRecognitionResult {\n    [Symbol.iterator](): IterableIterator<SpeechRecognitionAlternative>;\n}\n\ninterface SpeechRecognitionResultList {\n    [Symbol.iterator](): IterableIterator<SpeechRecognitionResult>;\n}\n\ninterface StyleSheetList {\n    [Symbol.iterator](): IterableIterator<CSSStyleSheet>;\n}\n\ninterface SubtleCrypto {\n    deriveKey(algorithm: AlgorithmIdentifier | EcdhKeyDeriveParams | HkdfParams | Pbkdf2Params, baseKey: CryptoKey, derivedKeyType: AlgorithmIdentifier | AesDerivedKeyParams | HmacImportParams | HkdfParams | Pbkdf2Params, extractable: boolean, keyUsages: Iterable<KeyUsage>): Promise<CryptoKey>;\n    generateKey(algorithm: RsaHashedKeyGenParams | EcKeyGenParams, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKeyPair>;\n    generateKey(algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    generateKey(algorithm: AlgorithmIdentifier, extractable: boolean, keyUsages: Iterable<KeyUsage>): Promise<CryptoKeyPair | CryptoKey>;\n    importKey(format: "jwk", keyData: JsonWebKey, algorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    importKey(format: Exclude<KeyFormat, "jwk">, keyData: BufferSource, algorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: Iterable<KeyUsage>): Promise<CryptoKey>;\n    unwrapKey(format: KeyFormat, wrappedKey: BufferSource, unwrappingKey: CryptoKey, unwrapAlgorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams, unwrappedKeyAlgorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: Iterable<KeyUsage>): Promise<CryptoKey>;\n}\n\ninterface TextTrackCueList {\n    [Symbol.iterator](): IterableIterator<TextTrackCue>;\n}\n\ninterface TextTrackList {\n    [Symbol.iterator](): IterableIterator<TextTrack>;\n}\n\ninterface TouchList {\n    [Symbol.iterator](): IterableIterator<Touch>;\n}\n\ninterface URLSearchParams {\n    [Symbol.iterator](): IterableIterator<[string, string]>;\n    /** Returns an array of key, value pairs for every entry in the search params. */\n    entries(): IterableIterator<[string, string]>;\n    /** Returns a list of keys in the search params. */\n    keys(): IterableIterator<string>;\n    /** Returns a list of values in the search params. */\n    values(): IterableIterator<string>;\n}\n\ninterface WEBGL_draw_buffers {\n    drawBuffersWEBGL(buffers: Iterable<GLenum>): void;\n}\n\ninterface WEBGL_multi_draw {\n    multiDrawArraysInstancedWEBGL(mode: GLenum, firstsList: Int32Array | Iterable<GLint>, firstsOffset: GLuint, countsList: Int32Array | Iterable<GLsizei>, countsOffset: GLuint, instanceCountsList: Int32Array | Iterable<GLsizei>, instanceCountsOffset: GLuint, drawcount: GLsizei): void;\n    multiDrawArraysWEBGL(mode: GLenum, firstsList: Int32Array | Iterable<GLint>, firstsOffset: GLuint, countsList: Int32Array | Iterable<GLsizei>, countsOffset: GLuint, drawcount: GLsizei): void;\n    multiDrawElementsInstancedWEBGL(mode: GLenum, countsList: Int32Array | Iterable<GLint>, countsOffset: GLuint, type: GLenum, offsetsList: Int32Array | Iterable<GLsizei>, offsetsOffset: GLuint, instanceCountsList: Int32Array | Iterable<GLsizei>, instanceCountsOffset: GLuint, drawcount: GLsizei): void;\n    multiDrawElementsWEBGL(mode: GLenum, countsList: Int32Array | Iterable<GLint>, countsOffset: GLuint, type: GLenum, offsetsList: Int32Array | Iterable<GLsizei>, offsetsOffset: GLuint, drawcount: GLsizei): void;\n}\n\ninterface WebGL2RenderingContextBase {\n    clearBufferfv(buffer: GLenum, drawbuffer: GLint, values: Iterable<GLfloat>, srcOffset?: GLuint): void;\n    clearBufferiv(buffer: GLenum, drawbuffer: GLint, values: Iterable<GLint>, srcOffset?: GLuint): void;\n    clearBufferuiv(buffer: GLenum, drawbuffer: GLint, values: Iterable<GLuint>, srcOffset?: GLuint): void;\n    drawBuffers(buffers: Iterable<GLenum>): void;\n    getActiveUniforms(program: WebGLProgram, uniformIndices: Iterable<GLuint>, pname: GLenum): any;\n    getUniformIndices(program: WebGLProgram, uniformNames: Iterable<string>): Iterable<GLuint> | null;\n    invalidateFramebuffer(target: GLenum, attachments: Iterable<GLenum>): void;\n    invalidateSubFramebuffer(target: GLenum, attachments: Iterable<GLenum>, x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    transformFeedbackVaryings(program: WebGLProgram, varyings: Iterable<string>, bufferMode: GLenum): void;\n    uniform1uiv(location: WebGLUniformLocation | null, data: Iterable<GLuint>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform2uiv(location: WebGLUniformLocation | null, data: Iterable<GLuint>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform3uiv(location: WebGLUniformLocation | null, data: Iterable<GLuint>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform4uiv(location: WebGLUniformLocation | null, data: Iterable<GLuint>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix2x3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix2x4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix3x2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix3x4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix4x2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix4x3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    vertexAttribI4iv(index: GLuint, values: Iterable<GLint>): void;\n    vertexAttribI4uiv(index: GLuint, values: Iterable<GLuint>): void;\n}\n\ninterface WebGL2RenderingContextOverloads {\n    uniform1fv(location: WebGLUniformLocation | null, data: Iterable<GLfloat>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform1iv(location: WebGLUniformLocation | null, data: Iterable<GLint>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform2fv(location: WebGLUniformLocation | null, data: Iterable<GLfloat>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform2iv(location: WebGLUniformLocation | null, data: Iterable<GLint>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform3fv(location: WebGLUniformLocation | null, data: Iterable<GLfloat>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform3iv(location: WebGLUniformLocation | null, data: Iterable<GLint>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform4fv(location: WebGLUniformLocation | null, data: Iterable<GLfloat>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform4iv(location: WebGLUniformLocation | null, data: Iterable<GLint>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Iterable<GLfloat>, srcOffset?: GLuint, srcLength?: GLuint): void;\n}\n\ninterface WebGLRenderingContextBase {\n    vertexAttrib1fv(index: GLuint, values: Iterable<GLfloat>): void;\n    vertexAttrib2fv(index: GLuint, values: Iterable<GLfloat>): void;\n    vertexAttrib3fv(index: GLuint, values: Iterable<GLfloat>): void;\n    vertexAttrib4fv(index: GLuint, values: Iterable<GLfloat>): void;\n}\n\ninterface WebGLRenderingContextOverloads {\n    uniform1fv(location: WebGLUniformLocation | null, v: Iterable<GLfloat>): void;\n    uniform1iv(location: WebGLUniformLocation | null, v: Iterable<GLint>): void;\n    uniform2fv(location: WebGLUniformLocation | null, v: Iterable<GLfloat>): void;\n    uniform2iv(location: WebGLUniformLocation | null, v: Iterable<GLint>): void;\n    uniform3fv(location: WebGLUniformLocation | null, v: Iterable<GLfloat>): void;\n    uniform3iv(location: WebGLUniformLocation | null, v: Iterable<GLint>): void;\n    uniform4fv(location: WebGLUniformLocation | null, v: Iterable<GLfloat>): void;\n    uniform4iv(location: WebGLUniformLocation | null, v: Iterable<GLint>): void;\n    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Iterable<GLfloat>): void;\n    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Iterable<GLfloat>): void;\n    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Iterable<GLfloat>): void;\n}\n'},88526:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface Map<K, V> {\r\n    clear(): void;\r\n    delete(key: K): boolean;\r\n    forEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;\r\n    get(key: K): V | undefined;\r\n    has(key: K): boolean;\r\n    set(key: K, value: V): this;\r\n    readonly size: number;\r\n}\r\n\r\ninterface MapConstructor {\r\n    new(): Map<any, any>;\r\n    new<K, V>(entries?: readonly (readonly [K, V])[] | null): Map<K, V>;\r\n    readonly prototype: Map<any, any>;\r\n}\r\ndeclare var Map: MapConstructor;\r\n\r\ninterface ReadonlyMap<K, V> {\r\n    forEach(callbackfn: (value: V, key: K, map: ReadonlyMap<K, V>) => void, thisArg?: any): void;\r\n    get(key: K): V | undefined;\r\n    has(key: K): boolean;\r\n    readonly size: number;\r\n}\r\n\r\ninterface WeakMap<K extends object, V> {\r\n    delete(key: K): boolean;\r\n    get(key: K): V | undefined;\r\n    has(key: K): boolean;\r\n    set(key: K, value: V): this;\r\n}\r\n\r\ninterface WeakMapConstructor {\r\n    new <K extends object = object, V = any>(entries?: readonly [K, V][] | null): WeakMap<K, V>;\r\n    readonly prototype: WeakMap<object, any>;\r\n}\r\ndeclare var WeakMap: WeakMapConstructor;\r\n\r\ninterface Set<T> {\r\n    add(value: T): this;\r\n    clear(): void;\r\n    delete(value: T): boolean;\r\n    forEach(callbackfn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any): void;\r\n    has(value: T): boolean;\r\n    readonly size: number;\r\n}\r\n\r\ninterface SetConstructor {\r\n    new <T = any>(values?: readonly T[] | null): Set<T>;\r\n    readonly prototype: Set<any>;\r\n}\r\ndeclare var Set: SetConstructor;\r\n\r\ninterface ReadonlySet<T> {\r\n    forEach(callbackfn: (value: T, value2: T, set: ReadonlySet<T>) => void, thisArg?: any): void;\r\n    has(value: T): boolean;\r\n    readonly size: number;\r\n}\r\n\r\ninterface WeakSet<T extends object> {\r\n    add(value: T): this;\r\n    delete(value: T): boolean;\r\n    has(value: T): boolean;\r\n}\r\n\r\ninterface WeakSetConstructor {\r\n    new <T extends object = object>(values?: readonly T[] | null): WeakSet<T>;\r\n    readonly prototype: WeakSet<object>;\r\n}\r\ndeclare var WeakSet: WeakSetConstructor;\r\n'},25872:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface Array<T> {\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find<S extends T>(predicate: (this: void, value: T, index: number, obj: T[]) => value is S, thisArg?: any): S | undefined;\r\n    find(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): T | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: T, index: number, obj: T[]) => unknown, thisArg?: any): number;\r\n\r\n    /**\r\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: T, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n}\r\n\r\ninterface ArrayConstructor {\r\n    /**\r\n     * Creates an array from an array-like object.\r\n     * @param arrayLike An array-like object to convert to an array.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>): T[];\r\n\r\n    /**\r\n     * Creates an array from an iterable object.\r\n     * @param arrayLike An array-like object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\r\n     */\r\n    from<T, U>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => U, thisArg?: any): U[];\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of<T>(...items: T[]): T[];\r\n}\r\n\r\ninterface DateConstructor {\r\n    new (value: number | string | Date): Date;\r\n}\r\n\r\ninterface Function {\r\n    /**\r\n     * Returns the name of the function. Function names are read-only and can not be changed.\r\n     */\r\n    readonly name: string;\r\n}\r\n\r\ninterface Math {\r\n    /**\r\n     * Returns the number of leading zero bits in the 32-bit binary representation of a number.\r\n     * @param x A numeric expression.\r\n     */\r\n    clz32(x: number): number;\r\n\r\n    /**\r\n     * Returns the result of 32-bit multiplication of two numbers.\r\n     * @param x First number\r\n     * @param y Second number\r\n     */\r\n    imul(x: number, y: number): number;\r\n\r\n    /**\r\n     * Returns the sign of the x, indicating whether x is positive, negative or zero.\r\n     * @param x The numeric expression to test\r\n     */\r\n    sign(x: number): number;\r\n\r\n    /**\r\n     * Returns the base 10 logarithm of a number.\r\n     * @param x A numeric expression.\r\n     */\r\n    log10(x: number): number;\r\n\r\n    /**\r\n     * Returns the base 2 logarithm of a number.\r\n     * @param x A numeric expression.\r\n     */\r\n    log2(x: number): number;\r\n\r\n    /**\r\n     * Returns the natural logarithm of 1 + x.\r\n     * @param x A numeric expression.\r\n     */\r\n    log1p(x: number): number;\r\n\r\n    /**\r\n     * Returns the result of (e^x - 1), which is an implementation-dependent approximation to\r\n     * subtracting 1 from the exponential function of x (e raised to the power of x, where e\r\n     * is the base of the natural logarithms).\r\n     * @param x A numeric expression.\r\n     */\r\n    expm1(x: number): number;\r\n\r\n    /**\r\n     * Returns the hyperbolic cosine of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    cosh(x: number): number;\r\n\r\n    /**\r\n     * Returns the hyperbolic sine of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    sinh(x: number): number;\r\n\r\n    /**\r\n     * Returns the hyperbolic tangent of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    tanh(x: number): number;\r\n\r\n    /**\r\n     * Returns the inverse hyperbolic cosine of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    acosh(x: number): number;\r\n\r\n    /**\r\n     * Returns the inverse hyperbolic sine of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    asinh(x: number): number;\r\n\r\n    /**\r\n     * Returns the inverse hyperbolic tangent of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    atanh(x: number): number;\r\n\r\n    /**\r\n     * Returns the square root of the sum of squares of its arguments.\r\n     * @param values Values to compute the square root for.\r\n     *     If no arguments are passed, the result is +0.\r\n     *     If there is only one argument, the result is the absolute value.\r\n     *     If any argument is +Infinity or -Infinity, the result is +Infinity.\r\n     *     If any argument is NaN, the result is NaN.\r\n     *     If all arguments are either +0 or −0, the result is +0.\r\n     */\r\n    hypot(...values: number[]): number;\r\n\r\n    /**\r\n     * Returns the integral part of the a numeric expression, x, removing any fractional digits.\r\n     * If x is already an integer, the result is x.\r\n     * @param x A numeric expression.\r\n     */\r\n    trunc(x: number): number;\r\n\r\n    /**\r\n     * Returns the nearest single precision float representation of a number.\r\n     * @param x A numeric expression.\r\n     */\r\n    fround(x: number): number;\r\n\r\n    /**\r\n     * Returns an implementation-dependent approximation to the cube root of number.\r\n     * @param x A numeric expression.\r\n     */\r\n    cbrt(x: number): number;\r\n}\r\n\r\ninterface NumberConstructor {\r\n    /**\r\n     * The value of Number.EPSILON is the difference between 1 and the smallest value greater than 1\r\n     * that is representable as a Number value, which is approximately:\r\n     * 2.2204460492503130808472633361816 x 10‍−‍16.\r\n     */\r\n    readonly EPSILON: number;\r\n\r\n    /**\r\n     * Returns true if passed value is finite.\r\n     * Unlike the global isFinite, Number.isFinite doesn\'t forcibly convert the parameter to a\r\n     * number. Only finite values of the type number, result in true.\r\n     * @param number A numeric value.\r\n     */\r\n    isFinite(number: unknown): boolean;\r\n\r\n    /**\r\n     * Returns true if the value passed is an integer, false otherwise.\r\n     * @param number A numeric value.\r\n     */\r\n    isInteger(number: unknown): boolean;\r\n\r\n    /**\r\n     * Returns a Boolean value that indicates whether a value is the reserved value NaN (not a\r\n     * number). Unlike the global isNaN(), Number.isNaN() doesn\'t forcefully convert the parameter\r\n     * to a number. Only values of the type number, that are also NaN, result in true.\r\n     * @param number A numeric value.\r\n     */\r\n    isNaN(number: unknown): boolean;\r\n\r\n    /**\r\n     * Returns true if the value passed is a safe integer.\r\n     * @param number A numeric value.\r\n     */\r\n    isSafeInteger(number: unknown): boolean;\r\n\r\n    /**\r\n     * The value of the largest integer n such that n and n + 1 are both exactly representable as\r\n     * a Number value.\r\n     * The value of Number.MAX_SAFE_INTEGER is 9007199254740991 2^53 − 1.\r\n     */\r\n    readonly MAX_SAFE_INTEGER: number;\r\n\r\n    /**\r\n     * The value of the smallest integer n such that n and n − 1 are both exactly representable as\r\n     * a Number value.\r\n     * The value of Number.MIN_SAFE_INTEGER is −9007199254740991 (−(2^53 − 1)).\r\n     */\r\n    readonly MIN_SAFE_INTEGER: number;\r\n\r\n    /**\r\n     * Converts a string to a floating-point number.\r\n     * @param string A string that contains a floating-point number.\r\n     */\r\n    parseFloat(string: string): number;\r\n\r\n    /**\r\n     * Converts A string to an integer.\r\n     * @param string A string to convert into a number.\r\n     * @param radix A value between 2 and 36 that specifies the base of the number in `string`.\r\n     * If this argument is not supplied, strings with a prefix of \'0x\' are considered hexadecimal.\r\n     * All other strings are considered decimal.\r\n     */\r\n    parseInt(string: string, radix?: number): number;\r\n}\r\n\r\ninterface ObjectConstructor {\r\n    /**\r\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\r\n     * target object. Returns the target object.\r\n     * @param target The target object to copy to.\r\n     * @param source The source object from which to copy properties.\r\n     */\r\n    assign<T, U>(target: T, source: U): T & U;\r\n\r\n    /**\r\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\r\n     * target object. Returns the target object.\r\n     * @param target The target object to copy to.\r\n     * @param source1 The first source object from which to copy properties.\r\n     * @param source2 The second source object from which to copy properties.\r\n     */\r\n    assign<T, U, V>(target: T, source1: U, source2: V): T & U & V;\r\n\r\n    /**\r\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\r\n     * target object. Returns the target object.\r\n     * @param target The target object to copy to.\r\n     * @param source1 The first source object from which to copy properties.\r\n     * @param source2 The second source object from which to copy properties.\r\n     * @param source3 The third source object from which to copy properties.\r\n     */\r\n    assign<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\r\n\r\n    /**\r\n     * Copy the values of all of the enumerable own properties from one or more source objects to a\r\n     * target object. Returns the target object.\r\n     * @param target The target object to copy to.\r\n     * @param sources One or more source objects from which to copy properties\r\n     */\r\n    assign(target: object, ...sources: any[]): any;\r\n\r\n    /**\r\n     * Returns an array of all symbol properties found directly on object o.\r\n     * @param o Object to retrieve the symbols from.\r\n     */\r\n    getOwnPropertySymbols(o: any): symbol[];\r\n\r\n    /**\r\n     * Returns the names of the enumerable string properties and methods of an object.\r\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\r\n     */\r\n    keys(o: {}): string[];\r\n\r\n    /**\r\n     * Returns true if the values are the same value, false otherwise.\r\n     * @param value1 The first value.\r\n     * @param value2 The second value.\r\n     */\r\n    is(value1: any, value2: any): boolean;\r\n\r\n    /**\r\n     * Sets the prototype of a specified object o to object proto or null. Returns the object o.\r\n     * @param o The object to change its prototype.\r\n     * @param proto The value of the new prototype or null.\r\n     */\r\n    setPrototypeOf(o: any, proto: object | null): any;\r\n}\r\n\r\ninterface ReadonlyArray<T> {\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find<S extends T>(predicate: (this: void, value: T, index: number, obj: readonly T[]) => value is S, thisArg?: any): S | undefined;\r\n    find(predicate: (value: T, index: number, obj: readonly T[]) => unknown, thisArg?: any): T | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: T, index: number, obj: readonly T[]) => unknown, thisArg?: any): number;\r\n}\r\n\r\ninterface RegExp {\r\n    /**\r\n     * Returns a string indicating the flags of the regular expression in question. This field is read-only.\r\n     * The characters in this string are sequenced and concatenated in the following order:\r\n     *\r\n     *    - "g" for global\r\n     *    - "i" for ignoreCase\r\n     *    - "m" for multiline\r\n     *    - "u" for unicode\r\n     *    - "y" for sticky\r\n     *\r\n     * If no flags are set, the value is the empty string.\r\n     */\r\n    readonly flags: string;\r\n\r\n    /**\r\n     * Returns a Boolean value indicating the state of the sticky flag (y) used with a regular\r\n     * expression. Default is false. Read-only.\r\n     */\r\n    readonly sticky: boolean;\r\n\r\n    /**\r\n     * Returns a Boolean value indicating the state of the Unicode flag (u) used with a regular\r\n     * expression. Default is false. Read-only.\r\n     */\r\n    readonly unicode: boolean;\r\n}\r\n\r\ninterface RegExpConstructor {\r\n    new (pattern: RegExp | string, flags?: string): RegExp;\r\n    (pattern: RegExp | string, flags?: string): RegExp;\r\n}\r\n\r\ninterface String {\r\n    /**\r\n     * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\r\n     * value of the UTF-16 encoded code point starting at the string element at position pos in\r\n     * the String resulting from converting this object to a String.\r\n     * If there is no element at that position, the result is undefined.\r\n     * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\r\n     */\r\n    codePointAt(pos: number): number | undefined;\r\n\r\n    /**\r\n     * Returns true if searchString appears as a substring of the result of converting this\r\n     * object to a String, at one or more positions that are\r\n     * greater than or equal to position; otherwise, returns false.\r\n     * @param searchString search string\r\n     * @param position If position is undefined, 0 is assumed, so as to search all of the String.\r\n     */\r\n    includes(searchString: string, position?: number): boolean;\r\n\r\n    /**\r\n     * Returns true if the sequence of elements of searchString converted to a String is the\r\n     * same as the corresponding elements of this object (converted to a String) starting at\r\n     * endPosition – length(this). Otherwise returns false.\r\n     */\r\n    endsWith(searchString: string, endPosition?: number): boolean;\r\n\r\n    /**\r\n     * Returns the String value result of normalizing the string into the normalization form\r\n     * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\r\n     * @param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\r\n     * is "NFC"\r\n     */\r\n    normalize(form: "NFC" | "NFD" | "NFKC" | "NFKD"): string;\r\n\r\n    /**\r\n     * Returns the String value result of normalizing the string into the normalization form\r\n     * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\r\n     * @param form Applicable values: "NFC", "NFD", "NFKC", or "NFKD", If not specified default\r\n     * is "NFC"\r\n     */\r\n    normalize(form?: string): string;\r\n\r\n    /**\r\n     * Returns a String value that is made from count copies appended together. If count is 0,\r\n     * the empty string is returned.\r\n     * @param count number of copies to append\r\n     */\r\n    repeat(count: number): string;\r\n\r\n    /**\r\n     * Returns true if the sequence of elements of searchString converted to a String is the\r\n     * same as the corresponding elements of this object (converted to a String) starting at\r\n     * position. Otherwise returns false.\r\n     */\r\n    startsWith(searchString: string, position?: number): boolean;\r\n\r\n    /**\r\n     * Returns an `<a>` HTML anchor element and sets the name attribute to the text value\r\n     * @deprecated A legacy feature for browser compatibility\r\n     * @param name\r\n     */\r\n    anchor(name: string): string;\r\n\r\n    /**\r\n     * Returns a `<big>` HTML element\r\n     * @deprecated A legacy feature for browser compatibility\r\n     */\r\n    big(): string;\r\n\r\n    /**\r\n     * Returns a `<blink>` HTML element\r\n     * @deprecated A legacy feature for browser compatibility\r\n     */\r\n    blink(): string;\r\n\r\n    /**\r\n     * Returns a `<b>` HTML element\r\n     * @deprecated A legacy feature for browser compatibility\r\n     */\r\n    bold(): string;\r\n\r\n    /**\r\n     * Returns a `<tt>` HTML element\r\n     * @deprecated A legacy feature for browser compatibility\r\n     */\r\n    fixed(): string;\r\n\r\n    /**\r\n     * Returns a `<font>` HTML element and sets the color attribute value\r\n     * @deprecated A legacy feature for browser compatibility\r\n     */\r\n    fontcolor(color: string): string;\r\n\r\n    /**\r\n     * Returns a `<font>` HTML element and sets the size attribute value\r\n     * @deprecated A legacy feature for browser compatibility\r\n     */\r\n    fontsize(size: number): string;\r\n\r\n    /**\r\n     * Returns a `<font>` HTML element and sets the size attribute value\r\n     * @deprecated A legacy feature for browser compatibility\r\n     */\r\n    fontsize(size: string): string;\r\n\r\n    /**\r\n     * Returns an `<i>` HTML element\r\n     * @deprecated A legacy feature for browser compatibility\r\n     */\r\n    italics(): string;\r\n\r\n    /**\r\n     * Returns an `<a>` HTML element and sets the href attribute value\r\n     * @deprecated A legacy feature for browser compatibility\r\n     */\r\n    link(url: string): string;\r\n\r\n    /**\r\n     * Returns a `<small>` HTML element\r\n     * @deprecated A legacy feature for browser compatibility\r\n     */\r\n    small(): string;\r\n\r\n    /**\r\n     * Returns a `<strike>` HTML element\r\n     * @deprecated A legacy feature for browser compatibility\r\n     */\r\n    strike(): string;\r\n\r\n    /**\r\n     * Returns a `<sub>` HTML element\r\n     * @deprecated A legacy feature for browser compatibility\r\n     */\r\n    sub(): string;\r\n\r\n    /**\r\n     * Returns a `<sup>` HTML element\r\n     * @deprecated A legacy feature for browser compatibility\r\n     */\r\n    sup(): string;\r\n}\r\n\r\ninterface StringConstructor {\r\n    /**\r\n     * Return the String value whose elements are, in order, the elements in the List elements.\r\n     * If length is 0, the empty string is returned.\r\n     */\r\n    fromCodePoint(...codePoints: number[]): string;\r\n\r\n    /**\r\n     * String.raw is usually used as a tag function of a Tagged Template String. When called as\r\n     * such, the first argument will be a well formed template call site object and the rest\r\n     * parameter will contain the substitution values. It can also be called directly, for example,\r\n     * to interleave strings and values from your own tag function, and in this case the only thing\r\n     * it needs from the first argument is the raw property.\r\n     * @param template A well-formed template string call site representation.\r\n     * @param substitutions A set of substitution values.\r\n     */\r\n    raw(template: { raw: readonly string[] | ArrayLike<string>}, ...substitutions: any[]): string;\r\n}\r\n'},9667:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es5" />\r\n/// <reference lib="es2015.core" />\r\n/// <reference lib="es2015.collection" />\r\n/// <reference lib="es2015.iterable" />\r\n/// <reference lib="es2015.generator" />\r\n/// <reference lib="es2015.promise" />\r\n/// <reference lib="es2015.proxy" />\r\n/// <reference lib="es2015.reflect" />\r\n/// <reference lib="es2015.symbol" />\r\n/// <reference lib="es2015.symbol.wellknown" />\r\n'},36091:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2015.iterable" />\r\n\r\ninterface Generator<T = unknown, TReturn = any, TNext = unknown> extends Iterator<T, TReturn, TNext> {\r\n    // NOTE: \'next\' is defined using a tuple to ensure we report the correct assignability errors in all places.\r\n    next(...args: [] | [TNext]): IteratorResult<T, TReturn>;\r\n    return(value: TReturn): IteratorResult<T, TReturn>;\r\n    throw(e: any): IteratorResult<T, TReturn>;\r\n    [Symbol.iterator](): Generator<T, TReturn, TNext>;\r\n}\r\n\r\ninterface GeneratorFunction {\r\n    /**\r\n     * Creates a new Generator object.\r\n     * @param args A list of arguments the function accepts.\r\n     */\r\n    new (...args: any[]): Generator;\r\n    /**\r\n     * Creates a new Generator object.\r\n     * @param args A list of arguments the function accepts.\r\n     */\r\n    (...args: any[]): Generator;\r\n    /**\r\n     * The length of the arguments.\r\n     */\r\n    readonly length: number;\r\n    /**\r\n     * Returns the name of the function.\r\n     */\r\n    readonly name: string;\r\n    /**\r\n     * A reference to the prototype.\r\n     */\r\n    readonly prototype: Generator;\r\n}\r\n\r\ninterface GeneratorFunctionConstructor {\r\n    /**\r\n     * Creates a new Generator function.\r\n     * @param args A list of arguments the function accepts.\r\n     */\r\n    new (...args: string[]): GeneratorFunction;\r\n    /**\r\n     * Creates a new Generator function.\r\n     * @param args A list of arguments the function accepts.\r\n     */\r\n    (...args: string[]): GeneratorFunction;\r\n    /**\r\n     * The length of the arguments.\r\n     */\r\n    readonly length: number;\r\n    /**\r\n     * Returns the name of the function.\r\n     */\r\n    readonly name: string;\r\n    /**\r\n     * A reference to the prototype.\r\n     */\r\n    readonly prototype: GeneratorFunction;\r\n}\r\n'},6698:(e,n,t)=>{t.d(n,{Z:()=>r});const r="/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib=\"true\"/>\r\n\n\n/// <reference lib=\"es2015.symbol\" />\r\n\r\ninterface SymbolConstructor {\r\n    /**\r\n     * A method that returns the default iterator for an object. Called by the semantics of the\r\n     * for-of statement.\r\n     */\r\n    readonly iterator: unique symbol;\r\n}\r\n\r\ninterface IteratorYieldResult<TYield> {\r\n    done?: false;\r\n    value: TYield;\r\n}\r\n\r\ninterface IteratorReturnResult<TReturn> {\r\n    done: true;\r\n    value: TReturn;\r\n}\r\n\r\ntype IteratorResult<T, TReturn = any> = IteratorYieldResult<T> | IteratorReturnResult<TReturn>;\r\n\r\ninterface Iterator<T, TReturn = any, TNext = undefined> {\r\n    // NOTE: 'next' is defined using a tuple to ensure we report the correct assignability errors in all places.\r\n    next(...args: [] | [TNext]): IteratorResult<T, TReturn>;\r\n    return?(value?: TReturn): IteratorResult<T, TReturn>;\r\n    throw?(e?: any): IteratorResult<T, TReturn>;\r\n}\r\n\r\ninterface Iterable<T> {\r\n    [Symbol.iterator](): Iterator<T>;\r\n}\r\n\r\ninterface IterableIterator<T> extends Iterator<T> {\r\n    [Symbol.iterator](): IterableIterator<T>;\r\n}\r\n\r\ninterface Array<T> {\r\n    /** Iterator */\r\n    [Symbol.iterator](): IterableIterator<T>;\r\n\r\n    /**\r\n     * Returns an iterable of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, T]>;\r\n\r\n    /**\r\n     * Returns an iterable of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n\r\n    /**\r\n     * Returns an iterable of values in the array\r\n     */\r\n    values(): IterableIterator<T>;\r\n}\r\n\r\ninterface ArrayConstructor {\r\n    /**\r\n     * Creates an array from an iterable object.\r\n     * @param iterable An iterable object to convert to an array.\r\n     */\r\n    from<T>(iterable: Iterable<T> | ArrayLike<T>): T[];\r\n\r\n    /**\r\n     * Creates an array from an iterable object.\r\n     * @param iterable An iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T, U>(iterable: Iterable<T> | ArrayLike<T>, mapfn: (v: T, k: number) => U, thisArg?: any): U[];\r\n}\r\n\r\ninterface ReadonlyArray<T> {\r\n    /** Iterator of values in the array. */\r\n    [Symbol.iterator](): IterableIterator<T>;\r\n\r\n    /**\r\n     * Returns an iterable of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, T]>;\r\n\r\n    /**\r\n     * Returns an iterable of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n\r\n    /**\r\n     * Returns an iterable of values in the array\r\n     */\r\n    values(): IterableIterator<T>;\r\n}\r\n\r\ninterface IArguments {\r\n    /** Iterator */\r\n    [Symbol.iterator](): IterableIterator<any>;\r\n}\r\n\r\ninterface Map<K, V> {\r\n    /** Returns an iterable of entries in the map. */\r\n    [Symbol.iterator](): IterableIterator<[K, V]>;\r\n\r\n    /**\r\n     * Returns an iterable of key, value pairs for every entry in the map.\r\n     */\r\n    entries(): IterableIterator<[K, V]>;\r\n\r\n    /**\r\n     * Returns an iterable of keys in the map\r\n     */\r\n    keys(): IterableIterator<K>;\r\n\r\n    /**\r\n     * Returns an iterable of values in the map\r\n     */\r\n    values(): IterableIterator<V>;\r\n}\r\n\r\ninterface ReadonlyMap<K, V> {\r\n    /** Returns an iterable of entries in the map. */\r\n    [Symbol.iterator](): IterableIterator<[K, V]>;\r\n\r\n    /**\r\n     * Returns an iterable of key, value pairs for every entry in the map.\r\n     */\r\n    entries(): IterableIterator<[K, V]>;\r\n\r\n    /**\r\n     * Returns an iterable of keys in the map\r\n     */\r\n    keys(): IterableIterator<K>;\r\n\r\n    /**\r\n     * Returns an iterable of values in the map\r\n     */\r\n    values(): IterableIterator<V>;\r\n}\r\n\r\ninterface MapConstructor {\r\n    new(): Map<any, any>;\r\n    new <K, V>(iterable?: Iterable<readonly [K, V]> | null): Map<K, V>;\r\n}\r\n\r\ninterface WeakMap<K extends object, V> { }\r\n\r\ninterface WeakMapConstructor {\r\n    new <K extends object, V>(iterable: Iterable<readonly [K, V]>): WeakMap<K, V>;\r\n}\r\n\r\ninterface Set<T> {\r\n    /** Iterates over values in the set. */\r\n    [Symbol.iterator](): IterableIterator<T>;\r\n    /**\r\n     * Returns an iterable of [v,v] pairs for every value `v` in the set.\r\n     */\r\n    entries(): IterableIterator<[T, T]>;\r\n    /**\r\n     * Despite its name, returns an iterable of the values in the set.\r\n     */\r\n    keys(): IterableIterator<T>;\r\n\r\n    /**\r\n     * Returns an iterable of values in the set.\r\n     */\r\n    values(): IterableIterator<T>;\r\n}\r\n\r\ninterface ReadonlySet<T> {\r\n    /** Iterates over values in the set. */\r\n    [Symbol.iterator](): IterableIterator<T>;\r\n\r\n    /**\r\n     * Returns an iterable of [v,v] pairs for every value `v` in the set.\r\n     */\r\n    entries(): IterableIterator<[T, T]>;\r\n\r\n    /**\r\n     * Despite its name, returns an iterable of the values in the set.\r\n     */\r\n    keys(): IterableIterator<T>;\r\n\r\n    /**\r\n     * Returns an iterable of values in the set.\r\n     */\r\n    values(): IterableIterator<T>;\r\n}\r\n\r\ninterface SetConstructor {\r\n    new <T>(iterable?: Iterable<T> | null): Set<T>;\r\n}\r\n\r\ninterface WeakSet<T extends object> { }\r\n\r\ninterface WeakSetConstructor {\r\n    new <T extends object = object>(iterable: Iterable<T>): WeakSet<T>;\r\n}\r\n\r\ninterface Promise<T> { }\r\n\r\ninterface PromiseConstructor {\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\r\n     * resolve, or rejected when any Promise is rejected.\r\n     * @param values An iterable of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    all<T>(values: Iterable<T | PromiseLike<T>>): Promise<Awaited<T>[]>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\r\n     * or rejected.\r\n     * @param values An iterable of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    race<T>(values: Iterable<T | PromiseLike<T>>): Promise<Awaited<T>>;\r\n}\r\n\r\ninterface String {\r\n    /** Iterator */\r\n    [Symbol.iterator](): IterableIterator<string>;\r\n}\r\n\r\ninterface Int8Array {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Int8ArrayConstructor {\r\n    new (elements: Iterable<number>): Int8Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int8Array;\r\n}\r\n\r\ninterface Uint8Array {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Uint8ArrayConstructor {\r\n    new (elements: Iterable<number>): Uint8Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint8Array;\r\n}\r\n\r\ninterface Uint8ClampedArray {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Uint8ClampedArrayConstructor {\r\n    new (elements: Iterable<number>): Uint8ClampedArray;\r\n\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint8ClampedArray;\r\n}\r\n\r\ninterface Int16Array {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Int16ArrayConstructor {\r\n    new (elements: Iterable<number>): Int16Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int16Array;\r\n}\r\n\r\ninterface Uint16Array {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Uint16ArrayConstructor {\r\n    new (elements: Iterable<number>): Uint16Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint16Array;\r\n}\r\n\r\ninterface Int32Array {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Int32ArrayConstructor {\r\n    new (elements: Iterable<number>): Int32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Int32Array;\r\n}\r\n\r\ninterface Uint32Array {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Uint32ArrayConstructor {\r\n    new (elements: Iterable<number>): Uint32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Uint32Array;\r\n}\r\n\r\ninterface Float32Array {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Float32ArrayConstructor {\r\n    new (elements: Iterable<number>): Float32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Float32Array;\r\n}\r\n\r\ninterface Float64Array {\r\n    [Symbol.iterator](): IterableIterator<number>;\r\n    /**\r\n     * Returns an array of key, value pairs for every entry in the array\r\n     */\r\n    entries(): IterableIterator<[number, number]>;\r\n    /**\r\n     * Returns an list of keys in the array\r\n     */\r\n    keys(): IterableIterator<number>;\r\n    /**\r\n     * Returns an list of values in the array\r\n     */\r\n    values(): IterableIterator<number>;\r\n}\r\n\r\ninterface Float64ArrayConstructor {\r\n    new (elements: Iterable<number>): Float64Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: Iterable<number>, mapfn?: (v: number, k: number) => number, thisArg?: any): Float64Array;\r\n}\r\n"},33024:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface PromiseConstructor {\r\n    /**\r\n     * A reference to the prototype.\r\n     */\r\n    readonly prototype: Promise<any>;\r\n\r\n    /**\r\n     * Creates a new Promise.\r\n     * @param executor A callback used to initialize the promise. This callback is passed two arguments:\r\n     * a resolve callback used to resolve the promise with a value or the result of another promise,\r\n     * and a reject callback used to reject the promise with a provided reason or error.\r\n     */\r\n    new <T>(executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void): Promise<T>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all of the provided Promises\r\n     * resolve, or rejected when any Promise is rejected.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    all<T extends readonly unknown[] | []>(values: T): Promise<{ -readonly [P in keyof T]: Awaited<T[P]> }>;\r\n\r\n    // see: lib.es2015.iterable.d.ts\r\n    // all<T>(values: Iterable<T | PromiseLike<T>>): Promise<T[]>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved or rejected when any of the provided Promises are resolved\r\n     * or rejected.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    race<T extends readonly unknown[] | []>(values: T): Promise<Awaited<T[number]>>;\r\n\r\n    // see: lib.es2015.iterable.d.ts\r\n    // race<T>(values: Iterable<T>): Promise<T extends PromiseLike<infer U> ? U : T>;\r\n\r\n    /**\r\n     * Creates a new rejected promise for the provided reason.\r\n     * @param reason The reason the promise was rejected.\r\n     * @returns A new rejected Promise.\r\n     */\r\n    reject<T = never>(reason?: any): Promise<T>;\r\n\r\n    /**\r\n     * Creates a new resolved promise.\r\n     * @returns A resolved promise.\r\n     */\r\n    resolve(): Promise<void>;\r\n\r\n    /**\r\n     * Creates a new resolved promise for the provided value.\r\n     * @param value A promise.\r\n     * @returns A promise whose internal state matches the provided promise.\r\n     */\r\n    resolve<T>(value: T | PromiseLike<T>): Promise<T>;\r\n}\r\n\r\ndeclare var Promise: PromiseConstructor;\r\n'},77140:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface ProxyHandler<T extends object> {\r\n    apply?(target: T, thisArg: any, argArray: any[]): any;\r\n    construct?(target: T, argArray: any[], newTarget: Function): object;\r\n    defineProperty?(target: T, p: string | symbol, attributes: PropertyDescriptor): boolean;\r\n    deleteProperty?(target: T, p: string | symbol): boolean;\r\n    get?(target: T, p: string | symbol, receiver: any): any;\r\n    getOwnPropertyDescriptor?(target: T, p: string | symbol): PropertyDescriptor | undefined;\r\n    getPrototypeOf?(target: T): object | null;\r\n    has?(target: T, p: string | symbol): boolean;\r\n    isExtensible?(target: T): boolean;\r\n    ownKeys?(target: T): ArrayLike<string | symbol>;\r\n    preventExtensions?(target: T): boolean;\r\n    set?(target: T, p: string | symbol, value: any, receiver: any): boolean;\r\n    setPrototypeOf?(target: T, v: object | null): boolean;\r\n}\r\n\r\ninterface ProxyConstructor {\r\n    revocable<T extends object>(target: T, handler: ProxyHandler<T>): { proxy: T; revoke: () => void; };\r\n    new <T extends object>(target: T, handler: ProxyHandler<T>): T;\r\n}\r\ndeclare var Proxy: ProxyConstructor;\r\n'},12814:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ndeclare namespace Reflect {\r\n    /**\r\n     * Calls the function with the specified object as the this value\r\n     * and the elements of specified array as the arguments.\r\n     * @param target The function to call.\r\n     * @param thisArgument The object to be used as the this object.\r\n     * @param argumentsList An array of argument values to be passed to the function.\r\n     */\r\n    function apply(target: Function, thisArgument: any, argumentsList: ArrayLike<any>): any;\r\n\r\n    /**\r\n     * Constructs the target with the elements of specified array as the arguments\r\n     * and the specified constructor as the `new.target` value.\r\n     * @param target The constructor to invoke.\r\n     * @param argumentsList An array of argument values to be passed to the constructor.\r\n     * @param newTarget The constructor to be used as the `new.target` object.\r\n     */\r\n    function construct(target: Function, argumentsList: ArrayLike<any>, newTarget?: Function): any;\r\n\r\n    /**\r\n     * Adds a property to an object, or modifies attributes of an existing property.\r\n     * @param target Object on which to add or modify the property. This can be a native JavaScript object\r\n     *        (that is, a user-defined object or a built in object) or a DOM object.\r\n     * @param propertyKey The property name.\r\n     * @param attributes Descriptor for the property. It can be for a data property or an accessor property.\r\n     */\r\n    function defineProperty(target: object, propertyKey: PropertyKey, attributes: PropertyDescriptor): boolean;\r\n\r\n    /**\r\n     * Removes a property from an object, equivalent to `delete target[propertyKey]`,\r\n     * except it won\'t throw if `target[propertyKey]` is non-configurable.\r\n     * @param target Object from which to remove the own property.\r\n     * @param propertyKey The property name.\r\n     */\r\n    function deleteProperty(target: object, propertyKey: PropertyKey): boolean;\r\n\r\n    /**\r\n     * Gets the property of target, equivalent to `target[propertyKey]` when `receiver === target`.\r\n     * @param target Object that contains the property on itself or in its prototype chain.\r\n     * @param propertyKey The property name.\r\n     * @param receiver The reference to use as the `this` value in the getter function,\r\n     *        if `target[propertyKey]` is an accessor property.\r\n     */\r\n    function get(target: object, propertyKey: PropertyKey, receiver?: any): any;\r\n\r\n    /**\r\n     * Gets the own property descriptor of the specified object.\r\n     * An own property descriptor is one that is defined directly on the object and is not inherited from the object\'s prototype.\r\n     * @param target Object that contains the property.\r\n     * @param propertyKey The property name.\r\n     */\r\n    function getOwnPropertyDescriptor(target: object, propertyKey: PropertyKey): PropertyDescriptor | undefined;\r\n\r\n    /**\r\n     * Returns the prototype of an object.\r\n     * @param target The object that references the prototype.\r\n     */\r\n    function getPrototypeOf(target: object): object | null;\r\n\r\n    /**\r\n     * Equivalent to `propertyKey in target`.\r\n     * @param target Object that contains the property on itself or in its prototype chain.\r\n     * @param propertyKey Name of the property.\r\n     */\r\n    function has(target: object, propertyKey: PropertyKey): boolean;\r\n\r\n    /**\r\n     * Returns a value that indicates whether new properties can be added to an object.\r\n     * @param target Object to test.\r\n     */\r\n    function isExtensible(target: object): boolean;\r\n\r\n    /**\r\n     * Returns the string and symbol keys of the own properties of an object. The own properties of an object\r\n     * are those that are defined directly on that object, and are not inherited from the object\'s prototype.\r\n     * @param target Object that contains the own properties.\r\n     */\r\n    function ownKeys(target: object): (string | symbol)[];\r\n\r\n    /**\r\n     * Prevents the addition of new properties to an object.\r\n     * @param target Object to make non-extensible.\r\n     * @return Whether the object has been made non-extensible.\r\n     */\r\n    function preventExtensions(target: object): boolean;\r\n\r\n    /**\r\n     * Sets the property of target, equivalent to `target[propertyKey] = value` when `receiver === target`.\r\n     * @param target Object that contains the property on itself or in its prototype chain.\r\n     * @param propertyKey Name of the property.\r\n     * @param receiver The reference to use as the `this` value in the setter function,\r\n     *        if `target[propertyKey]` is an accessor property.\r\n     */\r\n    function set(target: object, propertyKey: PropertyKey, value: any, receiver?: any): boolean;\r\n\r\n    /**\r\n     * Sets the prototype of a specified object o to object proto or null.\r\n     * @param target The object to change its prototype.\r\n     * @param proto The value of the new prototype or null.\r\n     * @return Whether setting the prototype was successful.\r\n     */\r\n    function setPrototypeOf(target: object, proto: object | null): boolean;\r\n}\r\n'},39735:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface SymbolConstructor {\r\n    /**\r\n     * A reference to the prototype.\r\n     */\r\n    readonly prototype: Symbol;\r\n\r\n    /**\r\n     * Returns a new unique Symbol value.\r\n     * @param  description Description of the new Symbol object.\r\n     */\r\n    (description?: string | number): symbol;\r\n\r\n    /**\r\n     * Returns a Symbol object from the global symbol registry matching the given key if found.\r\n     * Otherwise, returns a new symbol with this key.\r\n     * @param key key to search for.\r\n     */\r\n    for(key: string): symbol;\r\n\r\n    /**\r\n     * Returns a key from the global symbol registry matching the given Symbol if found.\r\n     * Otherwise, returns a undefined.\r\n     * @param sym Symbol to find the key for.\r\n     */\r\n    keyFor(sym: symbol): string | undefined;\r\n}\r\n\r\ndeclare var Symbol: SymbolConstructor;'},81526:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2015.symbol" />\r\n\r\ninterface SymbolConstructor {\r\n    /**\r\n     * A method that determines if a constructor object recognizes an object as one of the\r\n     * constructor’s instances. Called by the semantics of the instanceof operator.\r\n     */\r\n    readonly hasInstance: unique symbol;\r\n\r\n    /**\r\n     * A Boolean value that if true indicates that an object should flatten to its array elements\r\n     * by Array.prototype.concat.\r\n     */\r\n    readonly isConcatSpreadable: unique symbol;\r\n\r\n    /**\r\n     * A regular expression method that matches the regular expression against a string. Called\r\n     * by the String.prototype.match method.\r\n     */\r\n    readonly match: unique symbol;\r\n\r\n    /**\r\n     * A regular expression method that replaces matched substrings of a string. Called by the\r\n     * String.prototype.replace method.\r\n     */\r\n    readonly replace: unique symbol;\r\n\r\n    /**\r\n     * A regular expression method that returns the index within a string that matches the\r\n     * regular expression. Called by the String.prototype.search method.\r\n     */\r\n    readonly search: unique symbol;\r\n\r\n    /**\r\n     * A function valued property that is the constructor function that is used to create\r\n     * derived objects.\r\n     */\r\n    readonly species: unique symbol;\r\n\r\n    /**\r\n     * A regular expression method that splits a string at the indices that match the regular\r\n     * expression. Called by the String.prototype.split method.\r\n     */\r\n    readonly split: unique symbol;\r\n\r\n    /**\r\n     * A method that converts an object to a corresponding primitive value.\r\n     * Called by the ToPrimitive abstract operation.\r\n     */\r\n    readonly toPrimitive: unique symbol;\r\n\r\n    /**\r\n     * A String value that is used in the creation of the default string description of an object.\r\n     * Called by the built-in method Object.prototype.toString.\r\n     */\r\n    readonly toStringTag: unique symbol;\r\n\r\n    /**\r\n     * An Object whose own property names are property names that are excluded from the \'with\'\r\n     * environment bindings of the associated objects.\r\n     */\r\n    readonly unscopables: unique symbol;\r\n}\r\n\r\ninterface Symbol {\r\n    /**\r\n     * Converts a Symbol object to a symbol.\r\n     */\r\n    [Symbol.toPrimitive](hint: string): symbol;\r\n\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface Array<T> {\r\n    /**\r\n     * Returns an object whose properties have the value \'true\'\r\n     * when they will be absent when used in a \'with\' statement.\r\n     */\r\n    [Symbol.unscopables](): {\r\n        copyWithin: boolean;\r\n        entries: boolean;\r\n        fill: boolean;\r\n        find: boolean;\r\n        findIndex: boolean;\r\n        keys: boolean;\r\n        values: boolean;\r\n    };\r\n}\r\n\r\ninterface Date {\r\n    /**\r\n     * Converts a Date object to a string.\r\n     */\r\n    [Symbol.toPrimitive](hint: "default"): string;\r\n    /**\r\n     * Converts a Date object to a string.\r\n     */\r\n    [Symbol.toPrimitive](hint: "string"): string;\r\n    /**\r\n     * Converts a Date object to a number.\r\n     */\r\n    [Symbol.toPrimitive](hint: "number"): number;\r\n    /**\r\n     * Converts a Date object to a string or number.\r\n     *\r\n     * @param hint The strings "number", "string", or "default" to specify what primitive to return.\r\n     *\r\n     * @throws {TypeError} If \'hint\' was given something other than "number", "string", or "default".\r\n     * @returns A number if \'hint\' was "number", a string if \'hint\' was "string" or "default".\r\n     */\r\n    [Symbol.toPrimitive](hint: string): string | number;\r\n}\r\n\r\ninterface Map<K, V> {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface WeakMap<K extends object, V> {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface Set<T> {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface WeakSet<T extends object> {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface JSON {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface Function {\r\n    /**\r\n     * Determines whether the given value inherits from this function if this function was used\r\n     * as a constructor function.\r\n     *\r\n     * A constructor function can control which objects are recognized as its instances by\r\n     * \'instanceof\' by overriding this method.\r\n     */\r\n    [Symbol.hasInstance](value: any): boolean;\r\n}\r\n\r\ninterface GeneratorFunction {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface Math {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface Promise<T> {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface PromiseConstructor {\r\n    readonly [Symbol.species]: PromiseConstructor;\r\n}\r\n\r\ninterface RegExp {\r\n    /**\r\n     * Matches a string with this regular expression, and returns an array containing the results of\r\n     * that search.\r\n     * @param string A string to search within.\r\n     */\r\n    [Symbol.match](string: string): RegExpMatchArray | null;\r\n\r\n    /**\r\n     * Replaces text in a string, using this regular expression.\r\n     * @param string A String object or string literal whose contents matching against\r\n     *               this regular expression will be replaced\r\n     * @param replaceValue A String object or string literal containing the text to replace for every\r\n     *                     successful match of this regular expression.\r\n     */\r\n    [Symbol.replace](string: string, replaceValue: string): string;\r\n\r\n    /**\r\n     * Replaces text in a string, using this regular expression.\r\n     * @param string A String object or string literal whose contents matching against\r\n     *               this regular expression will be replaced\r\n     * @param replacer A function that returns the replacement text.\r\n     */\r\n    [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string;\r\n\r\n    /**\r\n     * Finds the position beginning first substring match in a regular expression search\r\n     * using this regular expression.\r\n     *\r\n     * @param string The string to search within.\r\n     */\r\n    [Symbol.search](string: string): number;\r\n\r\n    /**\r\n     * Returns an array of substrings that were delimited by strings in the original input that\r\n     * match against this regular expression.\r\n     *\r\n     * If the regular expression contains capturing parentheses, then each time this\r\n     * regular expression matches, the results (including any undefined results) of the\r\n     * capturing parentheses are spliced.\r\n     *\r\n     * @param string string value to split\r\n     * @param limit if not undefined, the output array is truncated so that it contains no more\r\n     * than \'limit\' elements.\r\n     */\r\n    [Symbol.split](string: string, limit?: number): string[];\r\n}\r\n\r\ninterface RegExpConstructor {\r\n    readonly [Symbol.species]: RegExpConstructor;\r\n}\r\n\r\ninterface String {\r\n    /**\r\n     * Matches a string or an object that supports being matched against, and returns an array\r\n     * containing the results of that search, or null if no matches are found.\r\n     * @param matcher An object that supports being matched against.\r\n     */\r\n    match(matcher: { [Symbol.match](string: string): RegExpMatchArray | null; }): RegExpMatchArray | null;\r\n\r\n    /**\r\n     * Replaces first match with string or all matches with RegExp.\r\n     * @param searchValue A string or RegExp search value.\r\n     * @param replaceValue A string containing the text to replace for match.\r\n     */\r\n    replace(searchValue: { [Symbol.replace](string: string, replaceValue: string): string; }, replaceValue: string): string;\r\n\r\n    /**\r\n     * Replaces text in a string, using an object that supports replacement within a string.\r\n     * @param searchValue A object can search for and replace matches within a string.\r\n     * @param replacer A function that returns the replacement text.\r\n     */\r\n    replace(searchValue: { [Symbol.replace](string: string, replacer: (substring: string, ...args: any[]) => string): string; }, replacer: (substring: string, ...args: any[]) => string): string;\r\n\r\n    /**\r\n     * Finds the first substring match in a regular expression search.\r\n     * @param searcher An object which supports searching within a string.\r\n     */\r\n    search(searcher: { [Symbol.search](string: string): number; }): number;\r\n\r\n    /**\r\n     * Split a string into substrings using the specified separator and return them as an array.\r\n     * @param splitter An object that can split a string.\r\n     * @param limit A value used to limit the number of elements returned in the array.\r\n     */\r\n    split(splitter: { [Symbol.split](string: string, limit?: number): string[]; }, limit?: number): string[];\r\n}\r\n\r\ninterface ArrayBuffer {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface DataView {\r\n    readonly [Symbol.toStringTag]: string;\r\n}\r\n\r\ninterface Int8Array {\r\n    readonly [Symbol.toStringTag]: "Int8Array";\r\n}\r\n\r\ninterface Uint8Array {\r\n    readonly [Symbol.toStringTag]: "Uint8Array";\r\n}\r\n\r\ninterface Uint8ClampedArray {\r\n    readonly [Symbol.toStringTag]: "Uint8ClampedArray";\r\n}\r\n\r\ninterface Int16Array {\r\n    readonly [Symbol.toStringTag]: "Int16Array";\r\n}\r\n\r\ninterface Uint16Array {\r\n    readonly [Symbol.toStringTag]: "Uint16Array";\r\n}\r\n\r\ninterface Int32Array {\r\n    readonly [Symbol.toStringTag]: "Int32Array";\r\n}\r\n\r\ninterface Uint32Array {\r\n    readonly [Symbol.toStringTag]: "Uint32Array";\r\n}\r\n\r\ninterface Float32Array {\r\n    readonly [Symbol.toStringTag]: "Float32Array";\r\n}\r\n\r\ninterface Float64Array {\r\n    readonly [Symbol.toStringTag]: "Float64Array";\r\n}\r\n\r\ninterface ArrayConstructor {\r\n    readonly [Symbol.species]: ArrayConstructor;\r\n}\r\ninterface MapConstructor {\r\n    readonly [Symbol.species]: MapConstructor;\r\n}\r\ninterface SetConstructor {\r\n    readonly [Symbol.species]: SetConstructor;\r\n}\r\ninterface ArrayBufferConstructor {\r\n    readonly [Symbol.species]: ArrayBufferConstructor;\r\n}\r\n'},89488:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface Array<T> {\r\n    /**\r\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\r\n     * @param searchElement The element to search for.\r\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\r\n     */\r\n    includes(searchElement: T, fromIndex?: number): boolean;\r\n}\r\n\r\ninterface ReadonlyArray<T> {\r\n    /**\r\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\r\n     * @param searchElement The element to search for.\r\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\r\n     */\r\n    includes(searchElement: T, fromIndex?: number): boolean;\r\n}\r\n\r\ninterface Int8Array {\r\n    /**\r\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\r\n     * @param searchElement The element to search for.\r\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\r\n     */\r\n    includes(searchElement: number, fromIndex?: number): boolean;\r\n}\r\n\r\ninterface Uint8Array {\r\n    /**\r\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\r\n     * @param searchElement The element to search for.\r\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\r\n     */\r\n    includes(searchElement: number, fromIndex?: number): boolean;\r\n}\r\n\r\ninterface Uint8ClampedArray {\r\n    /**\r\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\r\n     * @param searchElement The element to search for.\r\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\r\n     */\r\n    includes(searchElement: number, fromIndex?: number): boolean;\r\n}\r\n\r\ninterface Int16Array {\r\n    /**\r\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\r\n     * @param searchElement The element to search for.\r\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\r\n     */\r\n    includes(searchElement: number, fromIndex?: number): boolean;\r\n}\r\n\r\ninterface Uint16Array {\r\n    /**\r\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\r\n     * @param searchElement The element to search for.\r\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\r\n     */\r\n    includes(searchElement: number, fromIndex?: number): boolean;\r\n}\r\n\r\ninterface Int32Array {\r\n    /**\r\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\r\n     * @param searchElement The element to search for.\r\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\r\n     */\r\n    includes(searchElement: number, fromIndex?: number): boolean;\r\n}\r\n\r\ninterface Uint32Array {\r\n    /**\r\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\r\n     * @param searchElement The element to search for.\r\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\r\n     */\r\n    includes(searchElement: number, fromIndex?: number): boolean;\r\n}\r\n\r\ninterface Float32Array {\r\n    /**\r\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\r\n     * @param searchElement The element to search for.\r\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\r\n     */\r\n    includes(searchElement: number, fromIndex?: number): boolean;\r\n}\r\n\r\ninterface Float64Array {\r\n    /**\r\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\r\n     * @param searchElement The element to search for.\r\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\r\n     */\r\n    includes(searchElement: number, fromIndex?: number): boolean;\r\n}'},90025:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2015" />\r\n/// <reference lib="es2016.array.include" />'},7676:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2016" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n/// <reference lib="dom.iterable" />'},32069:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2016" />\r\n/// <reference lib="es2017.object" />\r\n/// <reference lib="es2017.sharedmemory" />\r\n/// <reference lib="es2017.string" />\r\n/// <reference lib="es2017.intl" />\r\n/// <reference lib="es2017.typedarrays" />\r\n'},66690:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2017" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n/// <reference lib="dom.iterable" />'},88426:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ndeclare namespace Intl {\r\n    type DateTimeFormatPartTypes = "day" | "dayPeriod" | "era" | "hour" | "literal" | "minute" | "month" | "second" | "timeZoneName" | "weekday" | "year";\r\n\r\n    interface DateTimeFormatPart {\r\n        type: DateTimeFormatPartTypes;\r\n        value: string;\r\n    }\r\n\r\n    interface DateTimeFormat {\r\n        formatToParts(date?: Date | number): DateTimeFormatPart[];\r\n    }\r\n}\r\n'},65202:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface ObjectConstructor {\r\n    /**\r\n     * Returns an array of values of the enumerable properties of an object\r\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\r\n     */\r\n    values<T>(o: { [s: string]: T } | ArrayLike<T>): T[];\r\n\r\n    /**\r\n     * Returns an array of values of the enumerable properties of an object\r\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\r\n     */\r\n    values(o: {}): any[];\r\n\r\n    /**\r\n     * Returns an array of key/values of the enumerable properties of an object\r\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\r\n     */\r\n    entries<T>(o: { [s: string]: T } | ArrayLike<T>): [string, T][];\r\n\r\n    /**\r\n     * Returns an array of key/values of the enumerable properties of an object\r\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\r\n     */\r\n    entries(o: {}): [string, any][];\r\n\r\n    /**\r\n     * Returns an object containing all own property descriptors of an object\r\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\r\n     */\r\n    getOwnPropertyDescriptors<T>(o: T): {[P in keyof T]: TypedPropertyDescriptor<T[P]>} & { [x: string]: PropertyDescriptor };\r\n}\r\n'},40823:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2015.symbol" />\r\n/// <reference lib="es2015.symbol.wellknown" />\r\n\r\ninterface SharedArrayBuffer {\r\n    /**\r\n     * Read-only. The length of the ArrayBuffer (in bytes).\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * Returns a section of an SharedArrayBuffer.\r\n     */\r\n    slice(begin: number, end?: number): SharedArrayBuffer;\r\n    readonly [Symbol.species]: SharedArrayBuffer;\r\n    readonly [Symbol.toStringTag]: "SharedArrayBuffer";\r\n}\r\n\r\ninterface SharedArrayBufferConstructor {\r\n    readonly prototype: SharedArrayBuffer;\r\n    new (byteLength: number): SharedArrayBuffer;\r\n}\r\ndeclare var SharedArrayBuffer: SharedArrayBufferConstructor;\r\n\r\ninterface ArrayBufferTypes {\r\n    SharedArrayBuffer: SharedArrayBuffer;\r\n}\r\n\r\ninterface Atomics {\r\n    /**\r\n     * Adds a value to the value at the given position in the array, returning the original value.\r\n     * Until this atomic operation completes, any other read or write operation against the array\r\n     * will block.\r\n     */\r\n    add(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number, value: number): number;\r\n\r\n    /**\r\n     * Stores the bitwise AND of a value with the value at the given position in the array,\r\n     * returning the original value. Until this atomic operation completes, any other read or\r\n     * write operation against the array will block.\r\n     */\r\n    and(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number, value: number): number;\r\n\r\n    /**\r\n     * Replaces the value at the given position in the array if the original value equals the given\r\n     * expected value, returning the original value. Until this atomic operation completes, any\r\n     * other read or write operation against the array will block.\r\n     */\r\n    compareExchange(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number, expectedValue: number, replacementValue: number): number;\r\n\r\n    /**\r\n     * Replaces the value at the given position in the array, returning the original value. Until\r\n     * this atomic operation completes, any other read or write operation against the array will\r\n     * block.\r\n     */\r\n    exchange(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number, value: number): number;\r\n\r\n    /**\r\n     * Returns a value indicating whether high-performance algorithms can use atomic operations\r\n     * (`true`) or must use locks (`false`) for the given number of bytes-per-element of a typed\r\n     * array.\r\n     */\r\n    isLockFree(size: number): boolean;\r\n\r\n    /**\r\n     * Returns the value at the given position in the array. Until this atomic operation completes,\r\n     * any other read or write operation against the array will block.\r\n     */\r\n    load(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number): number;\r\n\r\n    /**\r\n     * Stores the bitwise OR of a value with the value at the given position in the array,\r\n     * returning the original value. Until this atomic operation completes, any other read or write\r\n     * operation against the array will block.\r\n     */\r\n    or(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number, value: number): number;\r\n\r\n    /**\r\n     * Stores a value at the given position in the array, returning the new value. Until this\r\n     * atomic operation completes, any other read or write operation against the array will block.\r\n     */\r\n    store(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number, value: number): number;\r\n\r\n    /**\r\n     * Subtracts a value from the value at the given position in the array, returning the original\r\n     * value. Until this atomic operation completes, any other read or write operation against the\r\n     * array will block.\r\n     */\r\n    sub(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number, value: number): number;\r\n\r\n    /**\r\n     * If the value at the given position in the array is equal to the provided value, the current\r\n     * agent is put to sleep causing execution to suspend until the timeout expires (returning\r\n     * `"timed-out"`) or until the agent is awoken (returning `"ok"`); otherwise, returns\r\n     * `"not-equal"`.\r\n     */\r\n    wait(typedArray: Int32Array, index: number, value: number, timeout?: number): "ok" | "not-equal" | "timed-out";\r\n\r\n    /**\r\n     * Wakes up sleeping agents that are waiting on the given index of the array, returning the\r\n     * number of agents that were awoken.\r\n     * @param typedArray A shared Int32Array.\r\n     * @param index The position in the typedArray to wake up on.\r\n     * @param count The number of sleeping agents to notify. Defaults to +Infinity.\r\n     */\r\n    notify(typedArray: Int32Array, index: number, count?: number): number;\r\n\r\n    /**\r\n     * Stores the bitwise XOR of a value with the value at the given position in the array,\r\n     * returning the original value. Until this atomic operation completes, any other read or write\r\n     * operation against the array will block.\r\n     */\r\n    xor(typedArray: Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array, index: number, value: number): number;\r\n\r\n    readonly [Symbol.toStringTag]: "Atomics";\r\n}\r\n\r\ndeclare var Atomics: Atomics;\r\n'},58693:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface String {\r\n    /**\r\n     * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\r\n     * The padding is applied from the start (left) of the current string.\r\n     *\r\n     * @param maxLength The length of the resulting string once the current string has been padded.\r\n     *        If this parameter is smaller than the current string\'s length, the current string will be returned as it is.\r\n     *\r\n     * @param fillString The string to pad the current string with.\r\n     *        If this string is too long, it will be truncated and the left-most part will be applied.\r\n     *        The default value for this parameter is " " (U+0020).\r\n     */\r\n    padStart(maxLength: number, fillString?: string): string;\r\n\r\n    /**\r\n     * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\r\n     * The padding is applied from the end (right) of the current string.\r\n     *\r\n     * @param maxLength The length of the resulting string once the current string has been padded.\r\n     *        If this parameter is smaller than the current string\'s length, the current string will be returned as it is.\r\n     *\r\n     * @param fillString The string to pad the current string with.\r\n     *        If this string is too long, it will be truncated and the left-most part will be applied.\r\n     *        The default value for this parameter is " " (U+0020).\r\n     */\r\n    padEnd(maxLength: number, fillString?: string): string;\r\n}\r\n'},65417:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface Int8ArrayConstructor {\r\n    new (): Int8Array;\r\n}\r\n\r\ninterface Uint8ArrayConstructor {\r\n    new (): Uint8Array;\r\n}\r\n\r\ninterface Uint8ClampedArrayConstructor {\r\n    new (): Uint8ClampedArray;\r\n}\r\n\r\ninterface Int16ArrayConstructor {\r\n    new (): Int16Array;\r\n}\r\n\r\ninterface Uint16ArrayConstructor {\r\n    new (): Uint16Array;\r\n}\r\n\r\ninterface Int32ArrayConstructor {\r\n    new (): Int32Array;\r\n}\r\n\r\ninterface Uint32ArrayConstructor {\r\n    new (): Uint32Array;\r\n}\r\n\r\ninterface Float32ArrayConstructor {\r\n    new (): Float32Array;\r\n}\r\n\r\ninterface Float64ArrayConstructor {\r\n    new (): Float64Array;\r\n}\r\n'},74489:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2018.asynciterable" />\r\n\r\ninterface AsyncGenerator<T = unknown, TReturn = any, TNext = unknown> extends AsyncIterator<T, TReturn, TNext> {\r\n    // NOTE: \'next\' is defined using a tuple to ensure we report the correct assignability errors in all places.\r\n    next(...args: [] | [TNext]): Promise<IteratorResult<T, TReturn>>;\r\n    return(value: TReturn | PromiseLike<TReturn>): Promise<IteratorResult<T, TReturn>>;\r\n    throw(e: any): Promise<IteratorResult<T, TReturn>>;\r\n    [Symbol.asyncIterator](): AsyncGenerator<T, TReturn, TNext>;\r\n}\r\n\r\ninterface AsyncGeneratorFunction {\r\n    /**\r\n     * Creates a new AsyncGenerator object.\r\n     * @param args A list of arguments the function accepts.\r\n     */\r\n    new (...args: any[]): AsyncGenerator;\r\n    /**\r\n     * Creates a new AsyncGenerator object.\r\n     * @param args A list of arguments the function accepts.\r\n     */\r\n    (...args: any[]): AsyncGenerator;\r\n    /**\r\n     * The length of the arguments.\r\n     */\r\n    readonly length: number;\r\n    /**\r\n     * Returns the name of the function.\r\n     */\r\n    readonly name: string;\r\n    /**\r\n     * A reference to the prototype.\r\n     */\r\n    readonly prototype: AsyncGenerator;\r\n}\r\n\r\ninterface AsyncGeneratorFunctionConstructor {\r\n    /**\r\n     * Creates a new AsyncGenerator function.\r\n     * @param args A list of arguments the function accepts.\r\n     */\r\n    new (...args: string[]): AsyncGeneratorFunction;\r\n    /**\r\n     * Creates a new AsyncGenerator function.\r\n     * @param args A list of arguments the function accepts.\r\n     */\r\n    (...args: string[]): AsyncGeneratorFunction;\r\n    /**\r\n     * The length of the arguments.\r\n     */\r\n    readonly length: number;\r\n    /**\r\n     * Returns the name of the function.\r\n     */\r\n    readonly name: string;\r\n    /**\r\n     * A reference to the prototype.\r\n     */\r\n    readonly prototype: AsyncGeneratorFunction;\r\n}\r\n'},33036:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2015.symbol" />\r\n/// <reference lib="es2015.iterable" />\r\n\r\ninterface SymbolConstructor {\r\n    /**\r\n     * A method that returns the default async iterator for an object. Called by the semantics of\r\n     * the for-await-of statement.\r\n     */\r\n    readonly asyncIterator: unique symbol;\r\n}\r\n\r\ninterface AsyncIterator<T, TReturn = any, TNext = undefined> {\r\n    // NOTE: \'next\' is defined using a tuple to ensure we report the correct assignability errors in all places.\r\n    next(...args: [] | [TNext]): Promise<IteratorResult<T, TReturn>>;\r\n    return?(value?: TReturn | PromiseLike<TReturn>): Promise<IteratorResult<T, TReturn>>;\r\n    throw?(e?: any): Promise<IteratorResult<T, TReturn>>;\r\n}\r\n\r\ninterface AsyncIterable<T> {\r\n    [Symbol.asyncIterator](): AsyncIterator<T>;\r\n}\r\n\r\ninterface AsyncIterableIterator<T> extends AsyncIterator<T> {\r\n    [Symbol.asyncIterator](): AsyncIterableIterator<T>;\r\n}'},85428:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2017" />\r\n/// <reference lib="es2018.asynciterable" />\r\n/// <reference lib="es2018.asyncgenerator" />\r\n/// <reference lib="es2018.promise" />\r\n/// <reference lib="es2018.regexp" />\r\n/// <reference lib="es2018.intl" />\r\n'},26643:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2018" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n/// <reference lib="dom.iterable" />'},76271:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ndeclare namespace Intl {\r\n\r\n    // http://cldr.unicode.org/index/cldr-spec/plural-rules#TOC-Determining-Plural-Categories\r\n    type LDMLPluralRule = "zero" | "one" | "two" | "few" | "many" | "other";\r\n    type PluralRuleType = "cardinal" | "ordinal";\r\n\r\n    interface PluralRulesOptions {\r\n        localeMatcher?: "lookup" | "best fit" | undefined;\r\n        type?: PluralRuleType | undefined;\r\n        minimumIntegerDigits?: number | undefined;\r\n        minimumFractionDigits?: number | undefined;\r\n        maximumFractionDigits?: number | undefined;\r\n        minimumSignificantDigits?: number | undefined;\r\n        maximumSignificantDigits?: number | undefined;\r\n    }\r\n\r\n    interface ResolvedPluralRulesOptions {\r\n        locale: string;\r\n        pluralCategories: LDMLPluralRule[];\r\n        type: PluralRuleType;\r\n        minimumIntegerDigits: number;\r\n        minimumFractionDigits: number;\r\n        maximumFractionDigits: number;\r\n        minimumSignificantDigits?: number;\r\n        maximumSignificantDigits?: number;\r\n    }\r\n\r\n    interface PluralRules {\r\n        resolvedOptions(): ResolvedPluralRulesOptions;\r\n        select(n: number): LDMLPluralRule;\r\n    }\r\n\r\n    const PluralRules: {\r\n        new (locales?: string | string[], options?: PluralRulesOptions): PluralRules;\r\n        (locales?: string | string[], options?: PluralRulesOptions): PluralRules;\r\n\r\n        supportedLocalesOf(locales: string | string[], options?: { localeMatcher?: "lookup" | "best fit" }): string[];\r\n    };\r\n\r\n    // We can only have one definition for \'type\' in TypeScript, and so you can learn where the keys come from here:\r\n    type ES2018NumberFormatPartType = "literal" | "nan" | "infinity" | "percent" | "integer" | "group" | "decimal" | "fraction" | "plusSign" | "minusSign" | "percentSign" | "currency" | "code" | "symbol" | "name";\r\n    type ES2020NumberFormatPartType = "compact" | "exponentInteger" | "exponentMinusSign" | "exponentSeparator" | "unit" | "unknown";\r\n    type NumberFormatPartTypes = ES2018NumberFormatPartType | ES2020NumberFormatPartType;\r\n\r\n    interface NumberFormatPart {\r\n        type: NumberFormatPartTypes;\r\n        value: string;\r\n    }\r\n\r\n    interface NumberFormat {\r\n        formatToParts(number?: number | bigint): NumberFormatPart[];\r\n    }\r\n}\r\n'},66773:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/**\r\n * Represents the completion of an asynchronous operation\r\n */\r\ninterface Promise<T> {\r\n    /**\r\n     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\r\n     * resolved value cannot be modified from the callback.\r\n     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).\r\n     * @returns A Promise for the completion of the callback.\r\n     */\r\n    finally(onfinally?: (() => void) | undefined | null): Promise<T>\r\n}\r\n'},32745:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface RegExpMatchArray {\r\n    groups?: {\r\n        [key: string]: string\r\n    }\r\n}\r\n\r\ninterface RegExpExecArray {\r\n    groups?: {\r\n        [key: string]: string\r\n    }\r\n}\r\n\r\ninterface RegExp {\r\n    /**\r\n     * Returns a Boolean value indicating the state of the dotAll flag (s) used with a regular expression.\r\n     * Default is false. Read-only.\r\n     */\r\n    readonly dotAll: boolean;\r\n}'},85816:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ntype FlatArray<Arr, Depth extends number> = {\r\n    "done": Arr,\r\n    "recur": Arr extends ReadonlyArray<infer InnerArr>\r\n        ? FlatArray<InnerArr, [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20][Depth]>\r\n        : Arr\r\n}[Depth extends -1 ? "done" : "recur"];\r\n\r\ninterface ReadonlyArray<T> {\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array. Then, flattens the result into\r\n     * a new array.\r\n     * This is identical to a map followed by flat with depth 1.\r\n     *\r\n     * @param callback A function that accepts up to three arguments. The flatMap method calls the\r\n     * callback function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callback function. If\r\n     * thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    flatMap<U, This = undefined> (\r\n        callback: (this: This, value: T, index: number, array: T[]) => U | ReadonlyArray<U>,\r\n        thisArg?: This\r\n    ): U[]\r\n\r\n\r\n    /**\r\n     * Returns a new array with all sub-array elements concatenated into it recursively up to the\r\n     * specified depth.\r\n     *\r\n     * @param depth The maximum recursion depth\r\n     */\r\n    flat<A, D extends number = 1>(\r\n        this: A,\r\n        depth?: D\r\n    ): FlatArray<A, D>[]\r\n  }\r\n\r\ninterface Array<T> {\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array. Then, flattens the result into\r\n     * a new array.\r\n     * This is identical to a map followed by flat with depth 1.\r\n     *\r\n     * @param callback A function that accepts up to three arguments. The flatMap method calls the\r\n     * callback function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callback function. If\r\n     * thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    flatMap<U, This = undefined> (\r\n        callback: (this: This, value: T, index: number, array: T[]) => U | ReadonlyArray<U>,\r\n        thisArg?: This\r\n    ): U[]\r\n\r\n    /**\r\n     * Returns a new array with all sub-array elements concatenated into it recursively up to the\r\n     * specified depth.\r\n     *\r\n     * @param depth The maximum recursion depth\r\n     */\r\n    flat<A, D extends number = 1>(\r\n        this: A,\r\n        depth?: D\r\n    ): FlatArray<A, D>[]\r\n}\r\n'},84670:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2018" />\r\n/// <reference lib="es2019.array" />\r\n/// <reference lib="es2019.object" />\r\n/// <reference lib="es2019.string" />\r\n/// <reference lib="es2019.symbol" />\r\n'},47182:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2019" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n/// <reference lib="dom.iterable" />\r\n'},42695:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2015.iterable" />\r\n\r\ninterface ObjectConstructor {\r\n    /**\r\n     * Returns an object created by key-value entries for properties and methods\r\n     * @param entries An iterable object that contains key-value entries for properties and methods.\r\n     */\r\n    fromEntries<T = any>(entries: Iterable<readonly [PropertyKey, T]>): { [k: string]: T };\r\n\r\n    /**\r\n     * Returns an object created by key-value entries for properties and methods\r\n     * @param entries An iterable object that contains key-value entries for properties and methods.\r\n     */\r\n    fromEntries(entries: Iterable<readonly any[]>): any;\r\n}\r\n'},75576:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface String {\r\n    /** Removes the trailing white space and line terminator characters from a string. */\r\n    trimEnd(): string;\r\n\r\n    /** Removes the leading white space and line terminator characters from a string. */\r\n    trimStart(): string;\r\n\r\n    /**\r\n     * Removes the leading white space and line terminator characters from a string.\r\n     * @deprecated A legacy feature for browser compatibility. Use `trimStart` instead\r\n     */\r\n    trimLeft(): string;\r\n\r\n    /**\r\n     * Removes the trailing white space and line terminator characters from a string.\r\n     * @deprecated A legacy feature for browser compatibility. Use `trimEnd` instead\r\n     */\r\n    trimRight(): string;\r\n}\r\n'},29519:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface Symbol {\r\n    /**\r\n     * Expose the [[Description]] internal slot of a symbol directly.\r\n     */\r\n    readonly description: string | undefined;\r\n}\r\n'},11918:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface BigIntToLocaleStringOptions {\r\n    /**\r\n     * The locale matching algorithm to use.The default is "best fit". For information about this option, see the {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_negotiation Intl page}.\r\n     */\r\n    localeMatcher?: string;\r\n    /**\r\n     * The formatting style to use , the default is "decimal".\r\n     */\r\n    style?: string;\r\n\r\n    numberingSystem?: string;\r\n    /**\r\n     * The unit to use in unit formatting, Possible values are core unit identifiers, defined in UTS #35, Part 2, Section 6. A subset of units from the full list was selected for use in ECMAScript. Pairs of simple units can be concatenated with "-per-" to make a compound unit. There is no default value; if the style is "unit", the unit property must be provided.\r\n     */\r\n    unit?: string;\r\n\r\n    /**\r\n     * The unit formatting style to use in unit formatting, the defaults is "short".\r\n     */\r\n    unitDisplay?: string;\r\n\r\n    /**\r\n     * The currency to use in currency formatting. Possible values are the ISO 4217 currency codes, such as "USD" for the US dollar, "EUR" for the euro, or "CNY" for the Chinese RMB — see the Current currency & funds code list. There is no default value; if the style is "currency", the currency property must be provided. It is only used when [[Style]] has the value "currency".\r\n     */\r\n    currency?: string;\r\n\r\n    /**\r\n     * How to display the currency in currency formatting. It is only used when [[Style]] has the value "currency". The default is "symbol".\r\n     *\r\n     * "symbol" to use a localized currency symbol such as €,\r\n     *\r\n     * "code" to use the ISO currency code,\r\n     *\r\n     * "name" to use a localized currency name such as "dollar"\r\n     */\r\n    currencyDisplay?: string;\r\n\r\n    /**\r\n     * Whether to use grouping separators, such as thousands separators or thousand/lakh/crore separators. The default is true.\r\n     */\r\n    useGrouping?: boolean;\r\n\r\n    /**\r\n     * The minimum number of integer digits to use. Possible values are from 1 to 21; the default is 1.\r\n     */\r\n    minimumIntegerDigits?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21;\r\n\r\n    /**\r\n     * The minimum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number and percent formatting is 0; the default for currency formatting is the number of minor unit digits provided by the {@link http://www.currency-iso.org/en/home/tables/table-a1.html ISO 4217 currency codes list} (2 if the list doesn\'t provide that information).\r\n     */\r\n    minimumFractionDigits?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20;\r\n\r\n    /**\r\n     * The maximum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number formatting is the larger of minimumFractionDigits and 3; the default for currency formatting is the larger of minimumFractionDigits and the number of minor unit digits provided by the {@link http://www.currency-iso.org/en/home/tables/table-a1.html ISO 4217 currency codes list} (2 if the list doesn\'t provide that information); the default for percent formatting is the larger of minimumFractionDigits and 0.\r\n     */\r\n    maximumFractionDigits?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20;\r\n\r\n    /**\r\n     * The minimum number of significant digits to use. Possible values are from 1 to 21; the default is 1.\r\n     */\r\n    minimumSignificantDigits?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21;\r\n\r\n    /**\r\n     * The maximum number of significant digits to use. Possible values are from 1 to 21; the default is 21.\r\n     */\r\n    maximumSignificantDigits?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16 | 17 | 18 | 19 | 20 | 21;\r\n\r\n    /**\r\n     * The formatting that should be displayed for the number, the defaults is "standard"\r\n     *\r\n     *     "standard" plain number formatting\r\n     *\r\n     *     "scientific" return the order-of-magnitude for formatted number.\r\n     *\r\n     *     "engineering" return the exponent of ten when divisible by three\r\n     *\r\n     *     "compact" string representing exponent, defaults is using the "short" form\r\n     */\r\n    notation?: string;\r\n\r\n    /**\r\n     * used only when notation is "compact"\r\n     */\r\n    compactDisplay?: string;\r\n}\r\n\r\ninterface BigInt {\r\n    /**\r\n     * Returns a string representation of an object.\r\n     * @param radix Specifies a radix for converting numeric values to strings.\r\n     */\r\n    toString(radix?: number): string;\r\n\r\n    /** Returns a string representation appropriate to the host environment\'s current locale. */\r\n    toLocaleString(locales?: string, options?: BigIntToLocaleStringOptions): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): bigint;\r\n\r\n    readonly [Symbol.toStringTag]: "BigInt";\r\n}\r\n\r\ninterface BigIntConstructor {\r\n    (value: bigint | boolean | number | string): bigint;\r\n    readonly prototype: BigInt;\r\n\r\n    /**\r\n     * Interprets the low bits of a BigInt as a 2\'s-complement signed integer.\r\n     * All higher bits are discarded.\r\n     * @param bits The number of low bits to use\r\n     * @param int The BigInt whose bits to extract\r\n     */\r\n    asIntN(bits: number, int: bigint): bigint;\r\n    /**\r\n     * Interprets the low bits of a BigInt as an unsigned integer.\r\n     * All higher bits are discarded.\r\n     * @param bits The number of low bits to use\r\n     * @param int The BigInt whose bits to extract\r\n     */\r\n    asUintN(bits: number, int: bigint): bigint;\r\n}\r\n\r\ndeclare var BigInt: BigIntConstructor;\r\n\r\n/**\r\n * A typed array of 64-bit signed integer values. The contents are initialized to 0. If the\r\n * requested number of bytes could not be allocated, an exception is raised.\r\n */\r\ninterface BigInt64Array {\r\n    /** The size in bytes of each element in the array. */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /** The ArrayBuffer instance referenced by the array. */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /** The length in bytes of the array. */\r\n    readonly byteLength: number;\r\n\r\n    /** The offset in bytes of the array. */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /** Yields index, value pairs for every entry in the array. */\r\n    entries(): IterableIterator<[number, bigint]>;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param predicate A function that accepts up to three arguments. The every method calls\r\n     * the predicate function for each element in the array until the predicate returns false,\r\n     * or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(predicate: (value: bigint, index: number, array: BigInt64Array) => boolean, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: bigint, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param predicate A function that accepts up to three arguments. The filter method calls\r\n     * the predicate function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(predicate: (value: bigint, index: number, array: BigInt64Array) => any, thisArg?: any): BigInt64Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: bigint, index: number, array: BigInt64Array) => boolean, thisArg?: any): bigint | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: bigint, index: number, array: BigInt64Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: bigint, index: number, array: BigInt64Array) => void, thisArg?: any): void;\r\n\r\n    /**\r\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\r\n     * @param searchElement The element to search for.\r\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\r\n     */\r\n    includes(searchElement: bigint, fromIndex?: number): boolean;\r\n\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    indexOf(searchElement: bigint, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /** Yields each index in the array. */\r\n    keys(): IterableIterator<number>;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: bigint, fromIndex?: number): number;\r\n\r\n    /** The length of the array. */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: bigint, index: number, array: BigInt64Array) => bigint, thisArg?: any): BigInt64Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: bigint, currentValue: bigint, currentIndex: number, array: BigInt64Array) => bigint): bigint;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: bigint, currentIndex: number, array: BigInt64Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: bigint, currentValue: bigint, currentIndex: number, array: BigInt64Array) => bigint): bigint;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: bigint, currentIndex: number, array: BigInt64Array) => U, initialValue: U): U;\r\n\r\n    /** Reverses the elements in the array. */\r\n    reverse(): this;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<bigint>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array.\r\n     */\r\n    slice(start?: number, end?: number): BigInt64Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param predicate A function that accepts up to three arguments. The some method calls the\r\n     * predicate function for each element in the array until the predicate returns true, or until\r\n     * the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(predicate: (value: bigint, index: number, array: BigInt64Array) => boolean, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts the array.\r\n     * @param compareFn The function used to determine the order of the elements. If omitted, the elements are sorted in ascending order.\r\n     */\r\n    sort(compareFn?: (a: bigint, b: bigint) => number | bigint): this;\r\n\r\n    /**\r\n     * Gets a new BigInt64Array view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): BigInt64Array;\r\n\r\n    /** Converts the array to a string by using the current locale. */\r\n    toLocaleString(): string;\r\n\r\n    /** Returns a string representation of the array. */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): BigInt64Array;\r\n\r\n    /** Yields each value in the array. */\r\n    values(): IterableIterator<bigint>;\r\n\r\n    [Symbol.iterator](): IterableIterator<bigint>;\r\n\r\n    readonly [Symbol.toStringTag]: "BigInt64Array";\r\n\r\n    [index: number]: bigint;\r\n}\r\n\r\ninterface BigInt64ArrayConstructor {\r\n    readonly prototype: BigInt64Array;\r\n    new(length?: number): BigInt64Array;\r\n    new(array: Iterable<bigint>): BigInt64Array;\r\n    new(buffer: ArrayBufferLike, byteOffset?: number, length?: number): BigInt64Array;\r\n\r\n    /** The size in bytes of each element in the array. */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: bigint[]): BigInt64Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: ArrayLike<bigint>): BigInt64Array;\r\n    from<U>(arrayLike: ArrayLike<U>, mapfn: (v: U, k: number) => bigint, thisArg?: any): BigInt64Array;\r\n}\r\n\r\ndeclare var BigInt64Array: BigInt64ArrayConstructor;\r\n\r\n/**\r\n * A typed array of 64-bit unsigned integer values. The contents are initialized to 0. If the\r\n * requested number of bytes could not be allocated, an exception is raised.\r\n */\r\ninterface BigUint64Array {\r\n    /** The size in bytes of each element in the array. */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /** The ArrayBuffer instance referenced by the array. */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /** The length in bytes of the array. */\r\n    readonly byteLength: number;\r\n\r\n    /** The offset in bytes of the array. */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /** Yields index, value pairs for every entry in the array. */\r\n    entries(): IterableIterator<[number, bigint]>;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param predicate A function that accepts up to three arguments. The every method calls\r\n     * the predicate function for each element in the array until the predicate returns false,\r\n     * or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(predicate: (value: bigint, index: number, array: BigUint64Array) => boolean, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: bigint, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param predicate A function that accepts up to three arguments. The filter method calls\r\n     * the predicate function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(predicate: (value: bigint, index: number, array: BigUint64Array) => any, thisArg?: any): BigUint64Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: bigint, index: number, array: BigUint64Array) => boolean, thisArg?: any): bigint | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: bigint, index: number, array: BigUint64Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: bigint, index: number, array: BigUint64Array) => void, thisArg?: any): void;\r\n\r\n    /**\r\n     * Determines whether an array includes a certain element, returning true or false as appropriate.\r\n     * @param searchElement The element to search for.\r\n     * @param fromIndex The position in this array at which to begin searching for searchElement.\r\n     */\r\n    includes(searchElement: bigint, fromIndex?: number): boolean;\r\n\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    indexOf(searchElement: bigint, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /** Yields each index in the array. */\r\n    keys(): IterableIterator<number>;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: bigint, fromIndex?: number): number;\r\n\r\n    /** The length of the array. */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: bigint, index: number, array: BigUint64Array) => bigint, thisArg?: any): BigUint64Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: bigint, currentValue: bigint, currentIndex: number, array: BigUint64Array) => bigint): bigint;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: bigint, currentIndex: number, array: BigUint64Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: bigint, currentValue: bigint, currentIndex: number, array: BigUint64Array) => bigint): bigint;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: bigint, currentIndex: number, array: BigUint64Array) => U, initialValue: U): U;\r\n\r\n    /** Reverses the elements in the array. */\r\n    reverse(): this;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<bigint>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array.\r\n     */\r\n    slice(start?: number, end?: number): BigUint64Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param predicate A function that accepts up to three arguments. The some method calls the\r\n     * predicate function for each element in the array until the predicate returns true, or until\r\n     * the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(predicate: (value: bigint, index: number, array: BigUint64Array) => boolean, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts the array.\r\n     * @param compareFn The function used to determine the order of the elements. If omitted, the elements are sorted in ascending order.\r\n     */\r\n    sort(compareFn?: (a: bigint, b: bigint) => number | bigint): this;\r\n\r\n    /**\r\n     * Gets a new BigUint64Array view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): BigUint64Array;\r\n\r\n    /** Converts the array to a string by using the current locale. */\r\n    toLocaleString(): string;\r\n\r\n    /** Returns a string representation of the array. */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): BigUint64Array;\r\n\r\n    /** Yields each value in the array. */\r\n    values(): IterableIterator<bigint>;\r\n\r\n    [Symbol.iterator](): IterableIterator<bigint>;\r\n\r\n    readonly [Symbol.toStringTag]: "BigUint64Array";\r\n\r\n    [index: number]: bigint;\r\n}\r\n\r\ninterface BigUint64ArrayConstructor {\r\n    readonly prototype: BigUint64Array;\r\n    new(length?: number): BigUint64Array;\r\n    new(array: Iterable<bigint>): BigUint64Array;\r\n    new(buffer: ArrayBufferLike, byteOffset?: number, length?: number): BigUint64Array;\r\n\r\n    /** The size in bytes of each element in the array. */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: bigint[]): BigUint64Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of \'this\' used to invoke the mapfn.\r\n     */\r\n    from(arrayLike: ArrayLike<bigint>): BigUint64Array;\r\n    from<U>(arrayLike: ArrayLike<U>, mapfn: (v: U, k: number) => bigint, thisArg?: any): BigUint64Array;\r\n}\r\n\r\ndeclare var BigUint64Array: BigUint64ArrayConstructor;\r\n\r\ninterface DataView {\r\n    /**\r\n     * Gets the BigInt64 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getBigInt64(byteOffset: number, littleEndian?: boolean): bigint;\r\n\r\n    /**\r\n     * Gets the BigUint64 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getBigUint64(byteOffset: number, littleEndian?: boolean): bigint;\r\n\r\n    /**\r\n     * Stores a BigInt64 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     * @param littleEndian If false or undefined, a big-endian value should be written,\r\n     * otherwise a little-endian value should be written.\r\n     */\r\n    setBigInt64(byteOffset: number, value: bigint, littleEndian?: boolean): void;\r\n\r\n    /**\r\n     * Stores a BigUint64 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     * @param littleEndian If false or undefined, a big-endian value should be written,\r\n     * otherwise a little-endian value should be written.\r\n     */\r\n    setBigUint64(byteOffset: number, value: bigint, littleEndian?: boolean): void;\r\n}\r\n\r\ndeclare namespace Intl{\r\n    interface NumberFormat {\r\n        format(value: number | bigint): string;\r\n        resolvedOptions(): ResolvedNumberFormatOptions;\r\n    }\r\n}\r\n'},13078:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2019" />\r\n/// <reference lib="es2020.bigint" />\r\n/// <reference lib="es2020.promise" />\r\n/// <reference lib="es2020.sharedmemory" />\r\n/// <reference lib="es2020.string" />\r\n/// <reference lib="es2020.symbol.wellknown" />\r\n/// <reference lib="es2020.intl" />\r\n'},73437:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2020" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n/// <reference lib="dom.iterable" />\r\n'},94526:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ndeclare namespace Intl {\r\n\r\n    /**\r\n     * [Unicode BCP 47 Locale Identifiers](https://unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers) definition.\r\n     *\r\n     * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locales_argument).\r\n     */\r\n    type UnicodeBCP47LocaleIdentifier = string;\r\n\r\n    /**\r\n     * Unit to use in the relative time internationalized message.\r\n     *\r\n     * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/format#Parameters).\r\n     */\r\n    type RelativeTimeFormatUnit =\r\n        | "year"\r\n        | "years"\r\n        | "quarter"\r\n        | "quarters"\r\n        | "month"\r\n        | "months"\r\n        | "week"\r\n        | "weeks"\r\n        | "day"\r\n        | "days"\r\n        | "hour"\r\n        | "hours"\r\n        | "minute"\r\n        | "minutes"\r\n        | "second"\r\n        | "seconds";\r\n\r\n    /**\r\n     * The locale matching algorithm to use.\r\n     *\r\n     * [MDN](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_negotiation).\r\n     */\r\n    type RelativeTimeFormatLocaleMatcher = "lookup" | "best fit";\r\n\r\n    /**\r\n     * The format of output message.\r\n     *\r\n     * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat#Parameters).\r\n     */\r\n    type RelativeTimeFormatNumeric = "always" | "auto";\r\n\r\n    /**\r\n     * The length of the internationalized message.\r\n     *\r\n     * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat#Parameters).\r\n     */\r\n    type RelativeTimeFormatStyle = "long" | "short" | "narrow";\r\n\r\n    /**\r\n     * [BCP 47 language tag](http://tools.ietf.org/html/rfc5646) definition.\r\n     *\r\n     * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locales_argument).\r\n     */\r\n    type BCP47LanguageTag = string;\r\n\r\n    /**\r\n     * An object with some or all of properties of `options` parameter\r\n     * of `Intl.RelativeTimeFormat` constructor.\r\n     *\r\n     * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat#Parameters).\r\n     */\r\n    interface RelativeTimeFormatOptions {\r\n        /** The locale matching algorithm to use. For information about this option, see [Intl page](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_negotiation). */\r\n        localeMatcher?: RelativeTimeFormatLocaleMatcher;\r\n        /** The format of output message. */\r\n        numeric?: RelativeTimeFormatNumeric;\r\n        /** The length of the internationalized message. */\r\n        style?: RelativeTimeFormatStyle;\r\n    }\r\n\r\n    /**\r\n     * An object with properties reflecting the locale\r\n     * and formatting options computed during initialization\r\n     * of the `Intl.RelativeTimeFormat` object\r\n     *\r\n     * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/resolvedOptions#Description).\r\n     */\r\n    interface ResolvedRelativeTimeFormatOptions {\r\n        locale: UnicodeBCP47LocaleIdentifier;\r\n        style: RelativeTimeFormatStyle;\r\n        numeric: RelativeTimeFormatNumeric;\r\n        numberingSystem: string;\r\n    }\r\n\r\n    /**\r\n     * An object representing the relative time format in parts\r\n     * that can be used for custom locale-aware formatting.\r\n     *\r\n     * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/formatToParts#Using_formatToParts).\r\n     */\r\n    interface RelativeTimeFormatPart {\r\n        type: string;\r\n        value: string;\r\n        unit?: RelativeTimeFormatUnit;\r\n    }\r\n\r\n    interface RelativeTimeFormat {\r\n        /**\r\n         * Formats a value and a unit according to the locale\r\n         * and formatting options of the given\r\n         * [`Intl.RelativeTimeFormat`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat)\r\n         * object.\r\n         *\r\n         * While this method automatically provides the correct plural forms,\r\n         * the grammatical form is otherwise as neutral as possible.\r\n         *\r\n         * It is the caller\'s responsibility to handle cut-off logic\r\n         * such as deciding between displaying "in 7 days" or "in 1 week".\r\n         * This API does not support relative dates involving compound units.\r\n         * e.g "in 5 days and 4 hours".\r\n         *\r\n         * @param value -  Numeric value to use in the internationalized relative time message\r\n         *\r\n         * @param unit - [Unit](https://tc39.es/ecma402/#sec-singularrelativetimeunit) to use in the relative time internationalized message.\r\n         *\r\n         * @throws `RangeError` if `unit` was given something other than `unit` possible values\r\n         *\r\n         * @returns {string} Internationalized relative time message as string\r\n         *\r\n         * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/format).\r\n         */\r\n        format(value: number, unit: RelativeTimeFormatUnit): string;\r\n\r\n        /**\r\n         *  Returns an array of objects representing the relative time format in parts that can be used for custom locale-aware formatting.\r\n         *\r\n         *  @param value - Numeric value to use in the internationalized relative time message\r\n         *\r\n         *  @param unit - [Unit](https://tc39.es/ecma402/#sec-singularrelativetimeunit) to use in the relative time internationalized message.\r\n         *\r\n         *  @throws `RangeError` if `unit` was given something other than `unit` possible values\r\n         *\r\n         *  [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/formatToParts).\r\n         */\r\n        formatToParts(value: number, unit: RelativeTimeFormatUnit): RelativeTimeFormatPart[];\r\n\r\n        /**\r\n         * Provides access to the locale and options computed during initialization of this `Intl.RelativeTimeFormat` object.\r\n         *\r\n         * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/resolvedOptions).\r\n         */\r\n        resolvedOptions(): ResolvedRelativeTimeFormatOptions;\r\n    }\r\n\r\n    /**\r\n     * The [`Intl.RelativeTimeFormat`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat)\r\n     * object is a constructor for objects that enable language-sensitive relative time formatting.\r\n     *\r\n     * [Compatibility](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat#Browser_compatibility).\r\n     */\r\n    const RelativeTimeFormat: {\r\n        /**\r\n         * Creates [Intl.RelativeTimeFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat) objects\r\n         *\r\n         * @param locales - A string with a [BCP 47 language tag](http://tools.ietf.org/html/rfc5646), or an array of such strings.\r\n         *  For the general form and interpretation of the locales argument,\r\n         *  see the [`Intl` page](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation).\r\n         *\r\n         * @param options - An [object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat#Parameters)\r\n         *  with some or all of options of `RelativeTimeFormatOptions`.\r\n         *\r\n         * @returns [Intl.RelativeTimeFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat) object.\r\n         *\r\n         * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat).\r\n         */\r\n        new(\r\n            locales?: UnicodeBCP47LocaleIdentifier | UnicodeBCP47LocaleIdentifier[],\r\n            options?: RelativeTimeFormatOptions,\r\n        ): RelativeTimeFormat;\r\n\r\n        /**\r\n         * Returns an array containing those of the provided locales\r\n         * that are supported in date and time formatting\r\n         * without having to fall back to the runtime\'s default locale.\r\n         *\r\n         * @param locales - A string with a [BCP 47 language tag](http://tools.ietf.org/html/rfc5646), or an array of such strings.\r\n         *  For the general form and interpretation of the locales argument,\r\n         *  see the [`Intl` page](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation).\r\n         *\r\n         * @param options - An [object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/RelativeTimeFormat#Parameters)\r\n         *  with some or all of options of the formatting.\r\n         *\r\n         * @returns An array containing those of the provided locales\r\n         *  that are supported in date and time formatting\r\n         *  without having to fall back to the runtime\'s default locale.\r\n         *\r\n         * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat/supportedLocalesOf).\r\n         */\r\n        supportedLocalesOf(\r\n            locales?: UnicodeBCP47LocaleIdentifier | UnicodeBCP47LocaleIdentifier[],\r\n            options?: RelativeTimeFormatOptions,\r\n        ): UnicodeBCP47LocaleIdentifier[];\r\n    };\r\n\r\n    interface NumberFormatOptions {\r\n        compactDisplay?: "short" | "long" | undefined;\r\n        notation?: "standard" | "scientific" | "engineering" | "compact" | undefined;\r\n        signDisplay?: "auto" | "never" | "always" | "exceptZero" | undefined;\r\n        unit?: string | undefined;\r\n        unitDisplay?: "short" | "long" | "narrow" | undefined;\r\n        currencyDisplay?: string | undefined;\r\n        currencySign?: string | undefined;\r\n    }\r\n\r\n    interface ResolvedNumberFormatOptions {\r\n        compactDisplay?: "short" | "long";\r\n        notation?: "standard" | "scientific" | "engineering" | "compact";\r\n        signDisplay?: "auto" | "never" | "always" | "exceptZero";\r\n        unit?: string;\r\n        unitDisplay?: "short" | "long" | "narrow";\r\n        currencyDisplay?: string;\r\n        currencySign?: string;\r\n    }\r\n\r\n    interface DateTimeFormatOptions {\r\n        calendar?: string | undefined;\r\n        dayPeriod?: "narrow" | "short" | "long" | undefined;\r\n        numberingSystem?: string | undefined;\r\n\r\n        dateStyle?: "full" | "long" | "medium" | "short" | undefined;\r\n        timeStyle?: "full" | "long" | "medium" | "short" | undefined;\r\n        hourCycle?: "h11" | "h12" | "h23" | "h24" | undefined;\r\n    }\r\n\r\n    type LocaleHourCycleKey = "h12" | "h23" | "h11" | "h24";\r\n    type LocaleCollationCaseFirst = "upper" | "lower" | "false";\r\n\r\n    interface LocaleOptions {\r\n        /** A string containing the language, and the script and region if available. */\r\n        baseName?: string;\r\n        /** The part of the Locale that indicates the locale\'s calendar era. */\r\n        calendar?: string;\r\n        /** Flag that defines whether case is taken into account for the locale\'s collation rules. */\r\n        caseFirst?: LocaleCollationCaseFirst;\r\n        /** The collation type used for sorting */\r\n        collation?: string;\r\n        /** The time keeping format convention used by the locale. */\r\n        hourCycle?: LocaleHourCycleKey;\r\n        /** The primary language subtag associated with the locale. */\r\n        language?: string;\r\n        /** The numeral system used by the locale. */\r\n        numberingSystem?: string;\r\n        /** Flag that defines whether the locale has special collation handling for numeric characters. */\r\n        numeric?: boolean;\r\n        /** The region of the world (usually a country) associated with the locale. Possible values are region codes as defined by ISO 3166-1. */\r\n        region?: string;\r\n        /** The script used for writing the particular language used in the locale. Possible values are script codes as defined by ISO 15924. */\r\n        script?: string;\r\n    }\r\n\r\n    interface Locale extends LocaleOptions {\r\n        /** Gets the most likely values for the language, script, and region of the locale based on existing values. */\r\n        maximize(): Locale;\r\n        /** Attempts to remove information about the locale that would be added by calling `Locale.maximize()`. */\r\n        minimize(): Locale;\r\n        /** Returns the locale\'s full locale identifier string. */\r\n        toString(): BCP47LanguageTag;\r\n    }\r\n\r\n    /**\r\n     * Constructor creates [Intl.Locale](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale)\r\n     * objects\r\n     *\r\n     * @param tag - A string with a [BCP 47 language tag](http://tools.ietf.org/html/rfc5646).\r\n     *  For the general form and interpretation of the locales argument,\r\n     *  see the [`Intl` page](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation).\r\n     *\r\n     * @param options - An [object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale/Locale#Parameters) with some or all of options of the locale.\r\n     *\r\n     * @returns [Intl.Locale](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale) object.\r\n     *\r\n     * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale).\r\n     */\r\n    const Locale: {\r\n        new (tag?: BCP47LanguageTag, options?: LocaleOptions): Locale;\r\n    };\r\n\r\n     interface DisplayNamesOptions {\r\n        locale: UnicodeBCP47LocaleIdentifier;\r\n        localeMatcher: RelativeTimeFormatLocaleMatcher;\r\n        style: RelativeTimeFormatStyle;\r\n        type: "language" | "region" | "script" | "currency";\r\n        fallback: "code" | "none";\r\n    }\r\n\r\n    interface DisplayNames {\r\n        /**\r\n         * Receives a code and returns a string based on the locale and options provided when instantiating\r\n         * [`Intl.DisplayNames()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames)\r\n         *\r\n         * @param code The `code` to provide depends on the `type` passed to display name during creation:\r\n         *  - If the type is `"region"`, code should be either an [ISO-3166 two letters region code](https://www.iso.org/iso-3166-country-codes.html),\r\n         *    or a [three digits UN M49 Geographic Regions](https://unstats.un.org/unsd/methodology/m49/).\r\n         *  - If the type is `"script"`, code should be an [ISO-15924 four letters script code](https://unicode.org/iso15924/iso15924-codes.html).\r\n         *  - If the type is `"language"`, code should be a `languageCode` ["-" `scriptCode`] ["-" `regionCode` ] *("-" `variant` )\r\n         *    subsequence of the unicode_language_id grammar in [UTS 35\'s Unicode Language and Locale Identifiers grammar](https://unicode.org/reports/tr35/#Unicode_language_identifier).\r\n         *    `languageCode` is either a two letters ISO 639-1 language code or a three letters ISO 639-2 language code.\r\n         *  - If the type is `"currency"`, code should be a [3-letter ISO 4217 currency code](https://www.iso.org/iso-4217-currency-codes.html).\r\n         *\r\n         * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames/of).\r\n         */\r\n        of(code: string): string | undefined;\r\n        /**\r\n         * Returns a new object with properties reflecting the locale and style formatting options computed during the construction of the current\r\n         * [`Intl/DisplayNames`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames) object.\r\n         *\r\n         * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames/resolvedOptions).\r\n         */\r\n        resolvedOptions(): DisplayNamesOptions;\r\n    }\r\n\r\n    /**\r\n     * The [`Intl.DisplayNames()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames)\r\n     * object enables the consistent translation of language, region and script display names.\r\n     *\r\n     * [Compatibility](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames#browser_compatibility).\r\n     */\r\n    const DisplayNames: {\r\n        prototype: DisplayNames;\r\n\r\n        /**\r\n         * @param locales A string with a BCP 47 language tag, or an array of such strings.\r\n         *   For the general form and interpretation of the `locales` argument, see the [Intl](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locale_identification_and_negotiation)\r\n         *   page.\r\n         *\r\n         * @param options An object for setting up a display name.\r\n         *\r\n         * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames/DisplayNames).\r\n         */\r\n        new(locales?: BCP47LanguageTag | BCP47LanguageTag[], options?: Partial<DisplayNamesOptions>): DisplayNames;\r\n\r\n        /**\r\n         * Returns an array containing those of the provided locales that are supported in display names without having to fall back to the runtime\'s default locale.\r\n         *\r\n         * @param locales A string with a BCP 47 language tag, or an array of such strings.\r\n         *   For the general form and interpretation of the `locales` argument, see the [Intl](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locale_identification_and_negotiation)\r\n         *   page.\r\n         *\r\n         * @param options An object with a locale matcher.\r\n         *\r\n         * @returns An array of strings representing a subset of the given locale tags that are supported in display names without having to fall back to the runtime\'s default locale.\r\n         *\r\n         * [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DisplayNames/supportedLocalesOf).\r\n         */\r\n        supportedLocalesOf(locales: BCP47LanguageTag | BCP47LanguageTag[], options?: {localeMatcher: RelativeTimeFormatLocaleMatcher}): BCP47LanguageTag[];\r\n    };\r\n\r\n}\r\n'},41495:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ninterface PromiseFulfilledResult<T> {\r\n    status: "fulfilled";\r\n    value: T;\r\n}\r\n\r\ninterface PromiseRejectedResult {\r\n    status: "rejected";\r\n    reason: any;\r\n}\r\n\r\ntype PromiseSettledResult<T> = PromiseFulfilledResult<T> | PromiseRejectedResult;\r\n\r\ninterface PromiseConstructor {\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all\r\n     * of the provided Promises resolve or reject.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    allSettled<T extends readonly unknown[] | []>(values: T): Promise<{ -readonly [P in keyof T]: PromiseSettledResult<Awaited<T[P]>> }>;\r\n\r\n    /**\r\n     * Creates a Promise that is resolved with an array of results when all\r\n     * of the provided Promises resolve or reject.\r\n     * @param values An array of Promises.\r\n     * @returns A new Promise.\r\n     */\r\n    allSettled<T>(values: Iterable<T | PromiseLike<T>>): Promise<PromiseSettledResult<Awaited<T>>[]>;\r\n}\r\n'},80738:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2015.iterable" />\r\n\r\ninterface String {\r\n    /**\r\n     * Matches a string with a regular expression, and returns an iterable of matches\r\n     * containing the results of that search.\r\n     * @param regexp A variable name or string literal containing the regular expression pattern and flags.\r\n     */\r\n    matchAll(regexp: RegExp): IterableIterator<RegExpMatchArray>;\r\n}\r\n'},63185:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2015.iterable" />\r\n/// <reference lib="es2015.symbol" />\r\n\r\ninterface SymbolConstructor {\r\n    /**\r\n     * A regular expression method that matches the regular expression against a string. Called\r\n     * by the String.prototype.matchAll method.\r\n     */\r\n    readonly matchAll: unique symbol;\r\n}\r\n\r\ninterface RegExp {\r\n    /**\r\n     * Matches a string with this regular expression, and returns an iterable of matches\r\n     * containing the results of that search.\r\n     * @param string A string to search within.\r\n     */\r\n    [Symbol.matchAll](str: string): IterableIterator<RegExpMatchArray>;\r\n}\r\n'},82355:(e,n,t)=>{t.d(n,{Z:()=>r});const r="/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib=\"true\"/>\r\n\n\n/////////////////////////////\r\n/// ECMAScript APIs\r\n/////////////////////////////\r\n\r\ndeclare var NaN: number;\r\ndeclare var Infinity: number;\r\n\r\n/**\r\n * Evaluates JavaScript code and executes it.\r\n * @param x A String value that contains valid JavaScript code.\r\n */\r\ndeclare function eval(x: string): any;\r\n\r\n/**\r\n * Converts a string to an integer.\r\n * @param string A string to convert into a number.\r\n * @param radix A value between 2 and 36 that specifies the base of the number in `string`.\r\n * If this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\r\n * All other strings are considered decimal.\r\n */\r\ndeclare function parseInt(string: string, radix?: number): number;\r\n\r\n/**\r\n * Converts a string to a floating-point number.\r\n * @param string A string that contains a floating-point number.\r\n */\r\ndeclare function parseFloat(string: string): number;\r\n\r\n/**\r\n * Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).\r\n * @param number A numeric value.\r\n */\r\ndeclare function isNaN(number: number): boolean;\r\n\r\n/**\r\n * Determines whether a supplied number is finite.\r\n * @param number Any numeric value.\r\n */\r\ndeclare function isFinite(number: number): boolean;\r\n\r\n/**\r\n * Gets the unencoded version of an encoded Uniform Resource Identifier (URI).\r\n * @param encodedURI A value representing an encoded URI.\r\n */\r\ndeclare function decodeURI(encodedURI: string): string;\r\n\r\n/**\r\n * Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).\r\n * @param encodedURIComponent A value representing an encoded URI component.\r\n */\r\ndeclare function decodeURIComponent(encodedURIComponent: string): string;\r\n\r\n/**\r\n * Encodes a text string as a valid Uniform Resource Identifier (URI)\r\n * @param uri A value representing an encoded URI.\r\n */\r\ndeclare function encodeURI(uri: string): string;\r\n\r\n/**\r\n * Encodes a text string as a valid component of a Uniform Resource Identifier (URI).\r\n * @param uriComponent A value representing an encoded URI component.\r\n */\r\ndeclare function encodeURIComponent(uriComponent: string | number | boolean): string;\r\n\r\n/**\r\n * Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.\r\n * @deprecated A legacy feature for browser compatibility\r\n * @param string A string value\r\n */\r\ndeclare function escape(string: string): string;\r\n\r\n/**\r\n * Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.\r\n * @deprecated A legacy feature for browser compatibility\r\n * @param string A string value\r\n */\r\ndeclare function unescape(string: string): string;\r\n\r\ninterface Symbol {\r\n    /** Returns a string representation of an object. */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): symbol;\r\n}\r\n\r\ndeclare type PropertyKey = string | number | symbol;\r\n\r\ninterface PropertyDescriptor {\r\n    configurable?: boolean;\r\n    enumerable?: boolean;\r\n    value?: any;\r\n    writable?: boolean;\r\n    get?(): any;\r\n    set?(v: any): void;\r\n}\r\n\r\ninterface PropertyDescriptorMap {\r\n    [key: PropertyKey]: PropertyDescriptor;\r\n}\r\n\r\ninterface Object {\r\n    /** The initial value of Object.prototype.constructor is the standard built-in Object constructor. */\r\n    constructor: Function;\r\n\r\n    /** Returns a string representation of an object. */\r\n    toString(): string;\r\n\r\n    /** Returns a date converted to a string using the current locale. */\r\n    toLocaleString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Object;\r\n\r\n    /**\r\n     * Determines whether an object has a property with the specified name.\r\n     * @param v A property name.\r\n     */\r\n    hasOwnProperty(v: PropertyKey): boolean;\r\n\r\n    /**\r\n     * Determines whether an object exists in another object's prototype chain.\r\n     * @param v Another object whose prototype chain is to be checked.\r\n     */\r\n    isPrototypeOf(v: Object): boolean;\r\n\r\n    /**\r\n     * Determines whether a specified property is enumerable.\r\n     * @param v A property name.\r\n     */\r\n    propertyIsEnumerable(v: PropertyKey): boolean;\r\n}\r\n\r\ninterface ObjectConstructor {\r\n    new(value?: any): Object;\r\n    (): any;\r\n    (value: any): any;\r\n\r\n    /** A reference to the prototype for a class of objects. */\r\n    readonly prototype: Object;\r\n\r\n    /**\r\n     * Returns the prototype of an object.\r\n     * @param o The object that references the prototype.\r\n     */\r\n    getPrototypeOf(o: any): any;\r\n\r\n    /**\r\n     * Gets the own property descriptor of the specified object.\r\n     * An own property descriptor is one that is defined directly on the object and is not inherited from the object's prototype.\r\n     * @param o Object that contains the property.\r\n     * @param p Name of the property.\r\n     */\r\n    getOwnPropertyDescriptor(o: any, p: PropertyKey): PropertyDescriptor | undefined;\r\n\r\n    /**\r\n     * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\r\n     * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\r\n     * @param o Object that contains the own properties.\r\n     */\r\n    getOwnPropertyNames(o: any): string[];\r\n\r\n    /**\r\n     * Creates an object that has the specified prototype or that has null prototype.\r\n     * @param o Object to use as a prototype. May be null.\r\n     */\r\n    create(o: object | null): any;\r\n\r\n    /**\r\n     * Creates an object that has the specified prototype, and that optionally contains specified properties.\r\n     * @param o Object to use as a prototype. May be null\r\n     * @param properties JavaScript object that contains one or more property descriptors.\r\n     */\r\n    create(o: object | null, properties: PropertyDescriptorMap & ThisType<any>): any;\r\n\r\n    /**\r\n     * Adds a property to an object, or modifies attributes of an existing property.\r\n     * @param o Object on which to add or modify the property. This can be a native JavaScript object (that is, a user-defined object or a built in object) or a DOM object.\r\n     * @param p The property name.\r\n     * @param attributes Descriptor for the property. It can be for a data property or an accessor property.\r\n     */\r\n    defineProperty<T>(o: T, p: PropertyKey, attributes: PropertyDescriptor & ThisType<any>): T;\r\n\r\n    /**\r\n     * Adds one or more properties to an object, and/or modifies attributes of existing properties.\r\n     * @param o Object on which to add or modify the properties. This can be a native JavaScript object or a DOM object.\r\n     * @param properties JavaScript object that contains one or more descriptor objects. Each descriptor object describes a data property or an accessor property.\r\n     */\r\n    defineProperties<T>(o: T, properties: PropertyDescriptorMap & ThisType<any>): T;\r\n\r\n    /**\r\n     * Prevents the modification of attributes of existing properties, and prevents the addition of new properties.\r\n     * @param o Object on which to lock the attributes.\r\n     */\r\n    seal<T>(o: T): T;\r\n\r\n    /**\r\n     * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\r\n     * @param a Object on which to lock the attributes.\r\n     */\r\n    freeze<T>(a: T[]): readonly T[];\r\n\r\n    /**\r\n     * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\r\n     * @param f Object on which to lock the attributes.\r\n     */\r\n    freeze<T extends Function>(f: T): T;\r\n\r\n    /**\r\n     * Prevents the modification of existing property attributes and values, and prevents the addition of new properties.\r\n     * @param o Object on which to lock the attributes.\r\n     */\r\n    freeze<T>(o: T): Readonly<T>;\r\n\r\n    /**\r\n     * Prevents the addition of new properties to an object.\r\n     * @param o Object to make non-extensible.\r\n     */\r\n    preventExtensions<T>(o: T): T;\r\n\r\n    /**\r\n     * Returns true if existing property attributes cannot be modified in an object and new properties cannot be added to the object.\r\n     * @param o Object to test.\r\n     */\r\n    isSealed(o: any): boolean;\r\n\r\n    /**\r\n     * Returns true if existing property attributes and values cannot be modified in an object, and new properties cannot be added to the object.\r\n     * @param o Object to test.\r\n     */\r\n    isFrozen(o: any): boolean;\r\n\r\n    /**\r\n     * Returns a value that indicates whether new properties can be added to an object.\r\n     * @param o Object to test.\r\n     */\r\n    isExtensible(o: any): boolean;\r\n\r\n    /**\r\n     * Returns the names of the enumerable string properties and methods of an object.\r\n     * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\r\n     */\r\n    keys(o: object): string[];\r\n}\r\n\r\n/**\r\n * Provides functionality common to all JavaScript objects.\r\n */\r\ndeclare var Object: ObjectConstructor;\r\n\r\n/**\r\n * Creates a new function.\r\n */\r\ninterface Function {\r\n    /**\r\n     * Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.\r\n     * @param thisArg The object to be used as the this object.\r\n     * @param argArray A set of arguments to be passed to the function.\r\n     */\r\n    apply(this: Function, thisArg: any, argArray?: any): any;\r\n\r\n    /**\r\n     * Calls a method of an object, substituting another object for the current object.\r\n     * @param thisArg The object to be used as the current object.\r\n     * @param argArray A list of arguments to be passed to the method.\r\n     */\r\n    call(this: Function, thisArg: any, ...argArray: any[]): any;\r\n\r\n    /**\r\n     * For a given function, creates a bound function that has the same body as the original function.\r\n     * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\r\n     * @param thisArg An object to which the this keyword can refer inside the new function.\r\n     * @param argArray A list of arguments to be passed to the new function.\r\n     */\r\n    bind(this: Function, thisArg: any, ...argArray: any[]): any;\r\n\r\n    /** Returns a string representation of a function. */\r\n    toString(): string;\r\n\r\n    prototype: any;\r\n    readonly length: number;\r\n\r\n    // Non-standard extensions\r\n    arguments: any;\r\n    caller: Function;\r\n}\r\n\r\ninterface FunctionConstructor {\r\n    /**\r\n     * Creates a new function.\r\n     * @param args A list of arguments the function accepts.\r\n     */\r\n    new(...args: string[]): Function;\r\n    (...args: string[]): Function;\r\n    readonly prototype: Function;\r\n}\r\n\r\ndeclare var Function: FunctionConstructor;\r\n\r\n/**\r\n * Extracts the type of the 'this' parameter of a function type, or 'unknown' if the function type has no 'this' parameter.\r\n */\r\ntype ThisParameterType<T> = T extends (this: infer U, ...args: any[]) => any ? U : unknown;\r\n\r\n/**\r\n * Removes the 'this' parameter from a function type.\r\n */\r\ntype OmitThisParameter<T> = unknown extends ThisParameterType<T> ? T : T extends (...args: infer A) => infer R ? (...args: A) => R : T;\r\n\r\ninterface CallableFunction extends Function {\r\n    /**\r\n     * Calls the function with the specified object as the this value and the elements of specified array as the arguments.\r\n     * @param thisArg The object to be used as the this object.\r\n     * @param args An array of argument values to be passed to the function.\r\n     */\r\n    apply<T, R>(this: (this: T) => R, thisArg: T): R;\r\n    apply<T, A extends any[], R>(this: (this: T, ...args: A) => R, thisArg: T, args: A): R;\r\n\r\n    /**\r\n     * Calls the function with the specified object as the this value and the specified rest arguments as the arguments.\r\n     * @param thisArg The object to be used as the this object.\r\n     * @param args Argument values to be passed to the function.\r\n     */\r\n    call<T, A extends any[], R>(this: (this: T, ...args: A) => R, thisArg: T, ...args: A): R;\r\n\r\n    /**\r\n     * For a given function, creates a bound function that has the same body as the original function.\r\n     * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\r\n     * @param thisArg The object to be used as the this object.\r\n     * @param args Arguments to bind to the parameters of the function.\r\n     */\r\n    bind<T>(this: T, thisArg: ThisParameterType<T>): OmitThisParameter<T>;\r\n    bind<T, A0, A extends any[], R>(this: (this: T, arg0: A0, ...args: A) => R, thisArg: T, arg0: A0): (...args: A) => R;\r\n    bind<T, A0, A1, A extends any[], R>(this: (this: T, arg0: A0, arg1: A1, ...args: A) => R, thisArg: T, arg0: A0, arg1: A1): (...args: A) => R;\r\n    bind<T, A0, A1, A2, A extends any[], R>(this: (this: T, arg0: A0, arg1: A1, arg2: A2, ...args: A) => R, thisArg: T, arg0: A0, arg1: A1, arg2: A2): (...args: A) => R;\r\n    bind<T, A0, A1, A2, A3, A extends any[], R>(this: (this: T, arg0: A0, arg1: A1, arg2: A2, arg3: A3, ...args: A) => R, thisArg: T, arg0: A0, arg1: A1, arg2: A2, arg3: A3): (...args: A) => R;\r\n    bind<T, AX, R>(this: (this: T, ...args: AX[]) => R, thisArg: T, ...args: AX[]): (...args: AX[]) => R;\r\n}\r\n\r\ninterface NewableFunction extends Function {\r\n    /**\r\n     * Calls the function with the specified object as the this value and the elements of specified array as the arguments.\r\n     * @param thisArg The object to be used as the this object.\r\n     * @param args An array of argument values to be passed to the function.\r\n     */\r\n    apply<T>(this: new () => T, thisArg: T): void;\r\n    apply<T, A extends any[]>(this: new (...args: A) => T, thisArg: T, args: A): void;\r\n\r\n    /**\r\n     * Calls the function with the specified object as the this value and the specified rest arguments as the arguments.\r\n     * @param thisArg The object to be used as the this object.\r\n     * @param args Argument values to be passed to the function.\r\n     */\r\n    call<T, A extends any[]>(this: new (...args: A) => T, thisArg: T, ...args: A): void;\r\n\r\n    /**\r\n     * For a given function, creates a bound function that has the same body as the original function.\r\n     * The this object of the bound function is associated with the specified object, and has the specified initial parameters.\r\n     * @param thisArg The object to be used as the this object.\r\n     * @param args Arguments to bind to the parameters of the function.\r\n     */\r\n    bind<T>(this: T, thisArg: any): T;\r\n    bind<A0, A extends any[], R>(this: new (arg0: A0, ...args: A) => R, thisArg: any, arg0: A0): new (...args: A) => R;\r\n    bind<A0, A1, A extends any[], R>(this: new (arg0: A0, arg1: A1, ...args: A) => R, thisArg: any, arg0: A0, arg1: A1): new (...args: A) => R;\r\n    bind<A0, A1, A2, A extends any[], R>(this: new (arg0: A0, arg1: A1, arg2: A2, ...args: A) => R, thisArg: any, arg0: A0, arg1: A1, arg2: A2): new (...args: A) => R;\r\n    bind<A0, A1, A2, A3, A extends any[], R>(this: new (arg0: A0, arg1: A1, arg2: A2, arg3: A3, ...args: A) => R, thisArg: any, arg0: A0, arg1: A1, arg2: A2, arg3: A3): new (...args: A) => R;\r\n    bind<AX, R>(this: new (...args: AX[]) => R, thisArg: any, ...args: AX[]): new (...args: AX[]) => R;\r\n}\r\n\r\ninterface IArguments {\r\n    [index: number]: any;\r\n    length: number;\r\n    callee: Function;\r\n}\r\n\r\ninterface String {\r\n    /** Returns a string representation of a string. */\r\n    toString(): string;\r\n\r\n    /**\r\n     * Returns the character at the specified index.\r\n     * @param pos The zero-based index of the desired character.\r\n     */\r\n    charAt(pos: number): string;\r\n\r\n    /**\r\n     * Returns the Unicode value of the character at the specified location.\r\n     * @param index The zero-based index of the desired character. If there is no character at the specified index, NaN is returned.\r\n     */\r\n    charCodeAt(index: number): number;\r\n\r\n    /**\r\n     * Returns a string that contains the concatenation of two or more strings.\r\n     * @param strings The strings to append to the end of the string.\r\n     */\r\n    concat(...strings: string[]): string;\r\n\r\n    /**\r\n     * Returns the position of the first occurrence of a substring.\r\n     * @param searchString The substring to search for in the string\r\n     * @param position The index at which to begin searching the String object. If omitted, search starts at the beginning of the string.\r\n     */\r\n    indexOf(searchString: string, position?: number): number;\r\n\r\n    /**\r\n     * Returns the last occurrence of a substring in the string.\r\n     * @param searchString The substring to search for.\r\n     * @param position The index at which to begin searching. If omitted, the search begins at the end of the string.\r\n     */\r\n    lastIndexOf(searchString: string, position?: number): number;\r\n\r\n    /**\r\n     * Determines whether two strings are equivalent in the current locale.\r\n     * @param that String to compare to target string\r\n     */\r\n    localeCompare(that: string): number;\r\n\r\n    /**\r\n     * Matches a string with a regular expression, and returns an array containing the results of that search.\r\n     * @param regexp A variable name or string literal containing the regular expression pattern and flags.\r\n     */\r\n    match(regexp: string | RegExp): RegExpMatchArray | null;\r\n\r\n    /**\r\n     * Replaces text in a string, using a regular expression or search string.\r\n     * @param searchValue A string to search for.\r\n     * @param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\r\n     */\r\n    replace(searchValue: string | RegExp, replaceValue: string): string;\r\n\r\n    /**\r\n     * Replaces text in a string, using a regular expression or search string.\r\n     * @param searchValue A string to search for.\r\n     * @param replacer A function that returns the replacement text.\r\n     */\r\n    replace(searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string;\r\n\r\n    /**\r\n     * Finds the first substring match in a regular expression search.\r\n     * @param regexp The regular expression pattern and applicable flags.\r\n     */\r\n    search(regexp: string | RegExp): number;\r\n\r\n    /**\r\n     * Returns a section of a string.\r\n     * @param start The index to the beginning of the specified portion of stringObj.\r\n     * @param end The index to the end of the specified portion of stringObj. The substring includes the characters up to, but not including, the character indicated by end.\r\n     * If this value is not specified, the substring continues to the end of stringObj.\r\n     */\r\n    slice(start?: number, end?: number): string;\r\n\r\n    /**\r\n     * Split a string into substrings using the specified separator and return them as an array.\r\n     * @param separator A string that identifies character or characters to use in separating the string. If omitted, a single-element array containing the entire string is returned.\r\n     * @param limit A value used to limit the number of elements returned in the array.\r\n     */\r\n    split(separator: string | RegExp, limit?: number): string[];\r\n\r\n    /**\r\n     * Returns the substring at the specified location within a String object.\r\n     * @param start The zero-based index number indicating the beginning of the substring.\r\n     * @param end Zero-based index number indicating the end of the substring. The substring includes the characters up to, but not including, the character indicated by end.\r\n     * If end is omitted, the characters from start through the end of the original string are returned.\r\n     */\r\n    substring(start: number, end?: number): string;\r\n\r\n    /** Converts all the alphabetic characters in a string to lowercase. */\r\n    toLowerCase(): string;\r\n\r\n    /** Converts all alphabetic characters to lowercase, taking into account the host environment's current locale. */\r\n    toLocaleLowerCase(locales?: string | string[]): string;\r\n\r\n    /** Converts all the alphabetic characters in a string to uppercase. */\r\n    toUpperCase(): string;\r\n\r\n    /** Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale. */\r\n    toLocaleUpperCase(locales?: string | string[]): string;\r\n\r\n    /** Removes the leading and trailing white space and line terminator characters from a string. */\r\n    trim(): string;\r\n\r\n    /** Returns the length of a String object. */\r\n    readonly length: number;\r\n\r\n    // IE extensions\r\n    /**\r\n     * Gets a substring beginning at the specified location and having the specified length.\r\n     * @deprecated A legacy feature for browser compatibility\r\n     * @param from The starting position of the desired substring. The index of the first character in the string is zero.\r\n     * @param length The number of characters to include in the returned substring.\r\n     */\r\n    substr(from: number, length?: number): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): string;\r\n\r\n    readonly [index: number]: string;\r\n}\r\n\r\ninterface StringConstructor {\r\n    new(value?: any): String;\r\n    (value?: any): string;\r\n    readonly prototype: String;\r\n    fromCharCode(...codes: number[]): string;\r\n}\r\n\r\n/**\r\n * Allows manipulation and formatting of text strings and determination and location of substrings within strings.\r\n */\r\ndeclare var String: StringConstructor;\r\n\r\ninterface Boolean {\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): boolean;\r\n}\r\n\r\ninterface BooleanConstructor {\r\n    new(value?: any): Boolean;\r\n    <T>(value?: T): boolean;\r\n    readonly prototype: Boolean;\r\n}\r\n\r\ndeclare var Boolean: BooleanConstructor;\r\n\r\ninterface Number {\r\n    /**\r\n     * Returns a string representation of an object.\r\n     * @param radix Specifies a radix for converting numeric values to strings. This value is only used for numbers.\r\n     */\r\n    toString(radix?: number): string;\r\n\r\n    /**\r\n     * Returns a string representing a number in fixed-point notation.\r\n     * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\r\n     */\r\n    toFixed(fractionDigits?: number): string;\r\n\r\n    /**\r\n     * Returns a string containing a number represented in exponential notation.\r\n     * @param fractionDigits Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\r\n     */\r\n    toExponential(fractionDigits?: number): string;\r\n\r\n    /**\r\n     * Returns a string containing a number represented either in exponential or fixed-point notation with a specified number of digits.\r\n     * @param precision Number of significant digits. Must be in the range 1 - 21, inclusive.\r\n     */\r\n    toPrecision(precision?: number): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): number;\r\n}\r\n\r\ninterface NumberConstructor {\r\n    new(value?: any): Number;\r\n    (value?: any): number;\r\n    readonly prototype: Number;\r\n\r\n    /** The largest number that can be represented in JavaScript. Equal to approximately 1.79E+308. */\r\n    readonly MAX_VALUE: number;\r\n\r\n    /** The closest number to zero that can be represented in JavaScript. Equal to approximately 5.00E-324. */\r\n    readonly MIN_VALUE: number;\r\n\r\n    /**\r\n     * A value that is not a number.\r\n     * In equality comparisons, NaN does not equal any value, including itself. To test whether a value is equivalent to NaN, use the isNaN function.\r\n     */\r\n    readonly NaN: number;\r\n\r\n    /**\r\n     * A value that is less than the largest negative number that can be represented in JavaScript.\r\n     * JavaScript displays NEGATIVE_INFINITY values as -infinity.\r\n     */\r\n    readonly NEGATIVE_INFINITY: number;\r\n\r\n    /**\r\n     * A value greater than the largest number that can be represented in JavaScript.\r\n     * JavaScript displays POSITIVE_INFINITY values as infinity.\r\n     */\r\n    readonly POSITIVE_INFINITY: number;\r\n}\r\n\r\n/** An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers. */\r\ndeclare var Number: NumberConstructor;\r\n\r\ninterface TemplateStringsArray extends ReadonlyArray<string> {\r\n    readonly raw: readonly string[];\r\n}\r\n\r\n/**\r\n * The type of `import.meta`.\r\n *\r\n * If you need to declare that a given property exists on `import.meta`,\r\n * this type may be augmented via interface merging.\r\n */\r\ninterface ImportMeta {\r\n}\r\n\r\n/**\r\n * The type for the optional second argument to `import()`.\r\n *\r\n * If your host environment supports additional options, this type may be\r\n * augmented via interface merging.\r\n */\r\ninterface ImportCallOptions {\r\n    assert?: ImportAssertions;\r\n}\r\n\r\n/**\r\n * The type for the `assert` property of the optional second argument to `import()`.\r\n */\r\ninterface ImportAssertions {\r\n    [key: string]: string;\r\n}\r\n\r\ninterface Math {\r\n    /** The mathematical constant e. This is Euler's number, the base of natural logarithms. */\r\n    readonly E: number;\r\n    /** The natural logarithm of 10. */\r\n    readonly LN10: number;\r\n    /** The natural logarithm of 2. */\r\n    readonly LN2: number;\r\n    /** The base-2 logarithm of e. */\r\n    readonly LOG2E: number;\r\n    /** The base-10 logarithm of e. */\r\n    readonly LOG10E: number;\r\n    /** Pi. This is the ratio of the circumference of a circle to its diameter. */\r\n    readonly PI: number;\r\n    /** The square root of 0.5, or, equivalently, one divided by the square root of 2. */\r\n    readonly SQRT1_2: number;\r\n    /** The square root of 2. */\r\n    readonly SQRT2: number;\r\n    /**\r\n     * Returns the absolute value of a number (the value without regard to whether it is positive or negative).\r\n     * For example, the absolute value of -5 is the same as the absolute value of 5.\r\n     * @param x A numeric expression for which the absolute value is needed.\r\n     */\r\n    abs(x: number): number;\r\n    /**\r\n     * Returns the arc cosine (or inverse cosine) of a number.\r\n     * @param x A numeric expression.\r\n     */\r\n    acos(x: number): number;\r\n    /**\r\n     * Returns the arcsine of a number.\r\n     * @param x A numeric expression.\r\n     */\r\n    asin(x: number): number;\r\n    /**\r\n     * Returns the arctangent of a number.\r\n     * @param x A numeric expression for which the arctangent is needed.\r\n     */\r\n    atan(x: number): number;\r\n    /**\r\n     * Returns the angle (in radians) from the X axis to a point.\r\n     * @param y A numeric expression representing the cartesian y-coordinate.\r\n     * @param x A numeric expression representing the cartesian x-coordinate.\r\n     */\r\n    atan2(y: number, x: number): number;\r\n    /**\r\n     * Returns the smallest integer greater than or equal to its numeric argument.\r\n     * @param x A numeric expression.\r\n     */\r\n    ceil(x: number): number;\r\n    /**\r\n     * Returns the cosine of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    cos(x: number): number;\r\n    /**\r\n     * Returns e (the base of natural logarithms) raised to a power.\r\n     * @param x A numeric expression representing the power of e.\r\n     */\r\n    exp(x: number): number;\r\n    /**\r\n     * Returns the greatest integer less than or equal to its numeric argument.\r\n     * @param x A numeric expression.\r\n     */\r\n    floor(x: number): number;\r\n    /**\r\n     * Returns the natural logarithm (base e) of a number.\r\n     * @param x A numeric expression.\r\n     */\r\n    log(x: number): number;\r\n    /**\r\n     * Returns the larger of a set of supplied numeric expressions.\r\n     * @param values Numeric expressions to be evaluated.\r\n     */\r\n    max(...values: number[]): number;\r\n    /**\r\n     * Returns the smaller of a set of supplied numeric expressions.\r\n     * @param values Numeric expressions to be evaluated.\r\n     */\r\n    min(...values: number[]): number;\r\n    /**\r\n     * Returns the value of a base expression taken to a specified power.\r\n     * @param x The base value of the expression.\r\n     * @param y The exponent value of the expression.\r\n     */\r\n    pow(x: number, y: number): number;\r\n    /** Returns a pseudorandom number between 0 and 1. */\r\n    random(): number;\r\n    /**\r\n     * Returns a supplied numeric expression rounded to the nearest integer.\r\n     * @param x The value to be rounded to the nearest integer.\r\n     */\r\n    round(x: number): number;\r\n    /**\r\n     * Returns the sine of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    sin(x: number): number;\r\n    /**\r\n     * Returns the square root of a number.\r\n     * @param x A numeric expression.\r\n     */\r\n    sqrt(x: number): number;\r\n    /**\r\n     * Returns the tangent of a number.\r\n     * @param x A numeric expression that contains an angle measured in radians.\r\n     */\r\n    tan(x: number): number;\r\n}\r\n/** An intrinsic object that provides basic mathematics functionality and constants. */\r\ndeclare var Math: Math;\r\n\r\n/** Enables basic storage and retrieval of dates and times. */\r\ninterface Date {\r\n    /** Returns a string representation of a date. The format of the string depends on the locale. */\r\n    toString(): string;\r\n    /** Returns a date as a string value. */\r\n    toDateString(): string;\r\n    /** Returns a time as a string value. */\r\n    toTimeString(): string;\r\n    /** Returns a value as a string value appropriate to the host environment's current locale. */\r\n    toLocaleString(): string;\r\n    /** Returns a date as a string value appropriate to the host environment's current locale. */\r\n    toLocaleDateString(): string;\r\n    /** Returns a time as a string value appropriate to the host environment's current locale. */\r\n    toLocaleTimeString(): string;\r\n    /** Returns the stored time value in milliseconds since midnight, January 1, 1970 UTC. */\r\n    valueOf(): number;\r\n    /** Gets the time value in milliseconds. */\r\n    getTime(): number;\r\n    /** Gets the year, using local time. */\r\n    getFullYear(): number;\r\n    /** Gets the year using Universal Coordinated Time (UTC). */\r\n    getUTCFullYear(): number;\r\n    /** Gets the month, using local time. */\r\n    getMonth(): number;\r\n    /** Gets the month of a Date object using Universal Coordinated Time (UTC). */\r\n    getUTCMonth(): number;\r\n    /** Gets the day-of-the-month, using local time. */\r\n    getDate(): number;\r\n    /** Gets the day-of-the-month, using Universal Coordinated Time (UTC). */\r\n    getUTCDate(): number;\r\n    /** Gets the day of the week, using local time. */\r\n    getDay(): number;\r\n    /** Gets the day of the week using Universal Coordinated Time (UTC). */\r\n    getUTCDay(): number;\r\n    /** Gets the hours in a date, using local time. */\r\n    getHours(): number;\r\n    /** Gets the hours value in a Date object using Universal Coordinated Time (UTC). */\r\n    getUTCHours(): number;\r\n    /** Gets the minutes of a Date object, using local time. */\r\n    getMinutes(): number;\r\n    /** Gets the minutes of a Date object using Universal Coordinated Time (UTC). */\r\n    getUTCMinutes(): number;\r\n    /** Gets the seconds of a Date object, using local time. */\r\n    getSeconds(): number;\r\n    /** Gets the seconds of a Date object using Universal Coordinated Time (UTC). */\r\n    getUTCSeconds(): number;\r\n    /** Gets the milliseconds of a Date, using local time. */\r\n    getMilliseconds(): number;\r\n    /** Gets the milliseconds of a Date object using Universal Coordinated Time (UTC). */\r\n    getUTCMilliseconds(): number;\r\n    /** Gets the difference in minutes between the time on the local computer and Universal Coordinated Time (UTC). */\r\n    getTimezoneOffset(): number;\r\n    /**\r\n     * Sets the date and time value in the Date object.\r\n     * @param time A numeric value representing the number of elapsed milliseconds since midnight, January 1, 1970 GMT.\r\n     */\r\n    setTime(time: number): number;\r\n    /**\r\n     * Sets the milliseconds value in the Date object using local time.\r\n     * @param ms A numeric value equal to the millisecond value.\r\n     */\r\n    setMilliseconds(ms: number): number;\r\n    /**\r\n     * Sets the milliseconds value in the Date object using Universal Coordinated Time (UTC).\r\n     * @param ms A numeric value equal to the millisecond value.\r\n     */\r\n    setUTCMilliseconds(ms: number): number;\r\n\r\n    /**\r\n     * Sets the seconds value in the Date object using local time.\r\n     * @param sec A numeric value equal to the seconds value.\r\n     * @param ms A numeric value equal to the milliseconds value.\r\n     */\r\n    setSeconds(sec: number, ms?: number): number;\r\n    /**\r\n     * Sets the seconds value in the Date object using Universal Coordinated Time (UTC).\r\n     * @param sec A numeric value equal to the seconds value.\r\n     * @param ms A numeric value equal to the milliseconds value.\r\n     */\r\n    setUTCSeconds(sec: number, ms?: number): number;\r\n    /**\r\n     * Sets the minutes value in the Date object using local time.\r\n     * @param min A numeric value equal to the minutes value.\r\n     * @param sec A numeric value equal to the seconds value.\r\n     * @param ms A numeric value equal to the milliseconds value.\r\n     */\r\n    setMinutes(min: number, sec?: number, ms?: number): number;\r\n    /**\r\n     * Sets the minutes value in the Date object using Universal Coordinated Time (UTC).\r\n     * @param min A numeric value equal to the minutes value.\r\n     * @param sec A numeric value equal to the seconds value.\r\n     * @param ms A numeric value equal to the milliseconds value.\r\n     */\r\n    setUTCMinutes(min: number, sec?: number, ms?: number): number;\r\n    /**\r\n     * Sets the hour value in the Date object using local time.\r\n     * @param hours A numeric value equal to the hours value.\r\n     * @param min A numeric value equal to the minutes value.\r\n     * @param sec A numeric value equal to the seconds value.\r\n     * @param ms A numeric value equal to the milliseconds value.\r\n     */\r\n    setHours(hours: number, min?: number, sec?: number, ms?: number): number;\r\n    /**\r\n     * Sets the hours value in the Date object using Universal Coordinated Time (UTC).\r\n     * @param hours A numeric value equal to the hours value.\r\n     * @param min A numeric value equal to the minutes value.\r\n     * @param sec A numeric value equal to the seconds value.\r\n     * @param ms A numeric value equal to the milliseconds value.\r\n     */\r\n    setUTCHours(hours: number, min?: number, sec?: number, ms?: number): number;\r\n    /**\r\n     * Sets the numeric day-of-the-month value of the Date object using local time.\r\n     * @param date A numeric value equal to the day of the month.\r\n     */\r\n    setDate(date: number): number;\r\n    /**\r\n     * Sets the numeric day of the month in the Date object using Universal Coordinated Time (UTC).\r\n     * @param date A numeric value equal to the day of the month.\r\n     */\r\n    setUTCDate(date: number): number;\r\n    /**\r\n     * Sets the month value in the Date object using local time.\r\n     * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\r\n     * @param date A numeric value representing the day of the month. If this value is not supplied, the value from a call to the getDate method is used.\r\n     */\r\n    setMonth(month: number, date?: number): number;\r\n    /**\r\n     * Sets the month value in the Date object using Universal Coordinated Time (UTC).\r\n     * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively.\r\n     * @param date A numeric value representing the day of the month. If it is not supplied, the value from a call to the getUTCDate method is used.\r\n     */\r\n    setUTCMonth(month: number, date?: number): number;\r\n    /**\r\n     * Sets the year of the Date object using local time.\r\n     * @param year A numeric value for the year.\r\n     * @param month A zero-based numeric value for the month (0 for January, 11 for December). Must be specified if numDate is specified.\r\n     * @param date A numeric value equal for the day of the month.\r\n     */\r\n    setFullYear(year: number, month?: number, date?: number): number;\r\n    /**\r\n     * Sets the year value in the Date object using Universal Coordinated Time (UTC).\r\n     * @param year A numeric value equal to the year.\r\n     * @param month A numeric value equal to the month. The value for January is 0, and other month values follow consecutively. Must be supplied if numDate is supplied.\r\n     * @param date A numeric value equal to the day of the month.\r\n     */\r\n    setUTCFullYear(year: number, month?: number, date?: number): number;\r\n    /** Returns a date converted to a string using Universal Coordinated Time (UTC). */\r\n    toUTCString(): string;\r\n    /** Returns a date as a string value in ISO format. */\r\n    toISOString(): string;\r\n    /** Used by the JSON.stringify method to enable the transformation of an object's data for JavaScript Object Notation (JSON) serialization. */\r\n    toJSON(key?: any): string;\r\n}\r\n\r\ninterface DateConstructor {\r\n    new(): Date;\r\n    new(value: number | string): Date;\r\n    new(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): Date;\r\n    (): string;\r\n    readonly prototype: Date;\r\n    /**\r\n     * Parses a string containing a date, and returns the number of milliseconds between that date and midnight, January 1, 1970.\r\n     * @param s A date string\r\n     */\r\n    parse(s: string): number;\r\n    /**\r\n     * Returns the number of milliseconds between midnight, January 1, 1970 Universal Coordinated Time (UTC) (or GMT) and the specified date.\r\n     * @param year The full year designation is required for cross-century date accuracy. If year is between 0 and 99 is used, then year is assumed to be 1900 + year.\r\n     * @param month The month as a number between 0 and 11 (January to December).\r\n     * @param date The date as a number between 1 and 31.\r\n     * @param hours Must be supplied if minutes is supplied. A number from 0 to 23 (midnight to 11pm) that specifies the hour.\r\n     * @param minutes Must be supplied if seconds is supplied. A number from 0 to 59 that specifies the minutes.\r\n     * @param seconds Must be supplied if milliseconds is supplied. A number from 0 to 59 that specifies the seconds.\r\n     * @param ms A number from 0 to 999 that specifies the milliseconds.\r\n     */\r\n    UTC(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number): number;\r\n    now(): number;\r\n}\r\n\r\ndeclare var Date: DateConstructor;\r\n\r\ninterface RegExpMatchArray extends Array<string> {\r\n    index?: number;\r\n    input?: string;\r\n}\r\n\r\ninterface RegExpExecArray extends Array<string> {\r\n    index: number;\r\n    input: string;\r\n}\r\n\r\ninterface RegExp {\r\n    /**\r\n     * Executes a search on a string using a regular expression pattern, and returns an array containing the results of that search.\r\n     * @param string The String object or string literal on which to perform the search.\r\n     */\r\n    exec(string: string): RegExpExecArray | null;\r\n\r\n    /**\r\n     * Returns a Boolean value that indicates whether or not a pattern exists in a searched string.\r\n     * @param string String on which to perform the search.\r\n     */\r\n    test(string: string): boolean;\r\n\r\n    /** Returns a copy of the text of the regular expression pattern. Read-only. The regExp argument is a Regular expression object. It can be a variable name or a literal. */\r\n    readonly source: string;\r\n\r\n    /** Returns a Boolean value indicating the state of the global flag (g) used with a regular expression. Default is false. Read-only. */\r\n    readonly global: boolean;\r\n\r\n    /** Returns a Boolean value indicating the state of the ignoreCase flag (i) used with a regular expression. Default is false. Read-only. */\r\n    readonly ignoreCase: boolean;\r\n\r\n    /** Returns a Boolean value indicating the state of the multiline flag (m) used with a regular expression. Default is false. Read-only. */\r\n    readonly multiline: boolean;\r\n\r\n    lastIndex: number;\r\n\r\n    // Non-standard extensions\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    compile(pattern: string, flags?: string): this;\r\n}\r\n\r\ninterface RegExpConstructor {\r\n    new(pattern: RegExp | string): RegExp;\r\n    new(pattern: string, flags?: string): RegExp;\r\n    (pattern: RegExp | string): RegExp;\r\n    (pattern: string, flags?: string): RegExp;\r\n    readonly prototype: RegExp;\r\n\r\n    // Non-standard extensions\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    $1: string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    $2: string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    $3: string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    $4: string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    $5: string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    $6: string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    $7: string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    $8: string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    $9: string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    input: string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    $_: string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    lastMatch: string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    \"$&\": string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    lastParen: string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    \"$+\": string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    leftContext: string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    \"$`\": string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    rightContext: string;\r\n    /** @deprecated A legacy feature for browser compatibility */\r\n    \"$'\": string;\r\n}\r\n\r\ndeclare var RegExp: RegExpConstructor;\r\n\r\ninterface Error {\r\n    name: string;\r\n    message: string;\r\n    stack?: string;\r\n}\r\n\r\ninterface ErrorConstructor {\r\n    new(message?: string): Error;\r\n    (message?: string): Error;\r\n    readonly prototype: Error;\r\n}\r\n\r\ndeclare var Error: ErrorConstructor;\r\n\r\ninterface EvalError extends Error {\r\n}\r\n\r\ninterface EvalErrorConstructor extends ErrorConstructor {\r\n    new(message?: string): EvalError;\r\n    (message?: string): EvalError;\r\n    readonly prototype: EvalError;\r\n}\r\n\r\ndeclare var EvalError: EvalErrorConstructor;\r\n\r\ninterface RangeError extends Error {\r\n}\r\n\r\ninterface RangeErrorConstructor extends ErrorConstructor {\r\n    new(message?: string): RangeError;\r\n    (message?: string): RangeError;\r\n    readonly prototype: RangeError;\r\n}\r\n\r\ndeclare var RangeError: RangeErrorConstructor;\r\n\r\ninterface ReferenceError extends Error {\r\n}\r\n\r\ninterface ReferenceErrorConstructor extends ErrorConstructor {\r\n    new(message?: string): ReferenceError;\r\n    (message?: string): ReferenceError;\r\n    readonly prototype: ReferenceError;\r\n}\r\n\r\ndeclare var ReferenceError: ReferenceErrorConstructor;\r\n\r\ninterface SyntaxError extends Error {\r\n}\r\n\r\ninterface SyntaxErrorConstructor extends ErrorConstructor {\r\n    new(message?: string): SyntaxError;\r\n    (message?: string): SyntaxError;\r\n    readonly prototype: SyntaxError;\r\n}\r\n\r\ndeclare var SyntaxError: SyntaxErrorConstructor;\r\n\r\ninterface TypeError extends Error {\r\n}\r\n\r\ninterface TypeErrorConstructor extends ErrorConstructor {\r\n    new(message?: string): TypeError;\r\n    (message?: string): TypeError;\r\n    readonly prototype: TypeError;\r\n}\r\n\r\ndeclare var TypeError: TypeErrorConstructor;\r\n\r\ninterface URIError extends Error {\r\n}\r\n\r\ninterface URIErrorConstructor extends ErrorConstructor {\r\n    new(message?: string): URIError;\r\n    (message?: string): URIError;\r\n    readonly prototype: URIError;\r\n}\r\n\r\ndeclare var URIError: URIErrorConstructor;\r\n\r\ninterface JSON {\r\n    /**\r\n     * Converts a JavaScript Object Notation (JSON) string into an object.\r\n     * @param text A valid JSON string.\r\n     * @param reviver A function that transforms the results. This function is called for each member of the object.\r\n     * If a member contains nested objects, the nested objects are transformed before the parent object is.\r\n     */\r\n    parse(text: string, reviver?: (this: any, key: string, value: any) => any): any;\r\n    /**\r\n     * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\r\n     * @param value A JavaScript value, usually an object or array, to be converted.\r\n     * @param replacer A function that transforms the results.\r\n     * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.\r\n     */\r\n    stringify(value: any, replacer?: (this: any, key: string, value: any) => any, space?: string | number): string;\r\n    /**\r\n     * Converts a JavaScript value to a JavaScript Object Notation (JSON) string.\r\n     * @param value A JavaScript value, usually an object or array, to be converted.\r\n     * @param replacer An array of strings and numbers that acts as an approved list for selecting the object properties that will be stringified.\r\n     * @param space Adds indentation, white space, and line break characters to the return-value JSON text to make it easier to read.\r\n     */\r\n    stringify(value: any, replacer?: (number | string)[] | null, space?: string | number): string;\r\n}\r\n\r\n/**\r\n * An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.\r\n */\r\ndeclare var JSON: JSON;\r\n\r\n\r\n/////////////////////////////\r\n/// ECMAScript Array API (specially handled by compiler)\r\n/////////////////////////////\r\n\r\ninterface ReadonlyArray<T> {\r\n    /**\r\n     * Gets the length of the array. This is a number one higher than the highest element defined in an array.\r\n     */\r\n    readonly length: number;\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n    /**\r\n     * Returns a string representation of an array. The elements are converted to string using their toLocaleString methods.\r\n     */\r\n    toLocaleString(): string;\r\n    /**\r\n     * Combines two or more arrays.\r\n     * @param items Additional items to add to the end of array1.\r\n     */\r\n    concat(...items: ConcatArray<T>[]): T[];\r\n    /**\r\n     * Combines two or more arrays.\r\n     * @param items Additional items to add to the end of array1.\r\n     */\r\n    concat(...items: (T | ConcatArray<T>)[]): T[];\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): T[];\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n     */\r\n    indexOf(searchElement: T, fromIndex?: number): number;\r\n    /**\r\n     * Returns the index of the last occurrence of a specified value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\r\n     */\r\n    lastIndexOf(searchElement: T, fromIndex?: number): number;\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param predicate A function that accepts up to three arguments. The every method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every<S extends T>(predicate: (value: T, index: number, array: readonly T[]) => value is S, thisArg?: any): this is readonly S[];\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param predicate A function that accepts up to three arguments. The every method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): boolean;\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param predicate A function that accepts up to three arguments. The some method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): boolean;\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: T, index: number, array: readonly T[]) => void, thisArg?: any): void;\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map<U>(callbackfn: (value: T, index: number, array: readonly T[]) => U, thisArg?: any): U[];\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter<S extends T>(predicate: (value: T, index: number, array: readonly T[]) => value is S, thisArg?: any): S[];\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(predicate: (value: T, index: number, array: readonly T[]) => unknown, thisArg?: any): T[];\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly T[]) => T): T;\r\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly T[]) => T, initialValue: T): T;\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: readonly T[]) => U, initialValue: U): U;\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly T[]) => T): T;\r\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: readonly T[]) => T, initialValue: T): T;\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: readonly T[]) => U, initialValue: U): U;\r\n\r\n    readonly [n: number]: T;\r\n}\r\n\r\ninterface ConcatArray<T> {\r\n    readonly length: number;\r\n    readonly [n: number]: T;\r\n    join(separator?: string): string;\r\n    slice(start?: number, end?: number): T[];\r\n}\r\n\r\ninterface Array<T> {\r\n    /**\r\n     * Gets or sets the length of the array. This is a number one higher than the highest index in the array.\r\n     */\r\n    length: number;\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n    /**\r\n     * Returns a string representation of an array. The elements are converted to string using their toLocaleString methods.\r\n     */\r\n    toLocaleString(): string;\r\n    /**\r\n     * Removes the last element from an array and returns it.\r\n     * If the array is empty, undefined is returned and the array is not modified.\r\n     */\r\n    pop(): T | undefined;\r\n    /**\r\n     * Appends new elements to the end of an array, and returns the new length of the array.\r\n     * @param items New elements to add to the array.\r\n     */\r\n    push(...items: T[]): number;\r\n    /**\r\n     * Combines two or more arrays.\r\n     * This method returns a new array without modifying any existing arrays.\r\n     * @param items Additional arrays and/or items to add to the end of the array.\r\n     */\r\n    concat(...items: ConcatArray<T>[]): T[];\r\n    /**\r\n     * Combines two or more arrays.\r\n     * This method returns a new array without modifying any existing arrays.\r\n     * @param items Additional arrays and/or items to add to the end of the array.\r\n     */\r\n    concat(...items: (T | ConcatArray<T>)[]): T[];\r\n    /**\r\n     * Adds all the elements of an array into a string, separated by the specified separator string.\r\n     * @param separator A string used to separate one element of the array from the next in the resulting string. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n    /**\r\n     * Reverses the elements in an array in place.\r\n     * This method mutates the array and returns a reference to the same array.\r\n     */\r\n    reverse(): T[];\r\n    /**\r\n     * Removes the first element from an array and returns it.\r\n     * If the array is empty, undefined is returned and the array is not modified.\r\n     */\r\n    shift(): T | undefined;\r\n    /**\r\n     * Returns a copy of a section of an array.\r\n     * For both start and end, a negative index can be used to indicate an offset from the end of the array.\r\n     * For example, -2 refers to the second to last element of the array.\r\n     * @param start The beginning index of the specified portion of the array.\r\n     * If start is undefined, then the slice begins at index 0.\r\n     * @param end The end index of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     * If end is undefined, then the slice extends to the end of the array.\r\n     */\r\n    slice(start?: number, end?: number): T[];\r\n    /**\r\n     * Sorts an array in place.\r\n     * This method mutates the array and returns a reference to the same array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if the first argument is less than the second argument, zero if they're equal, and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: T, b: T) => number): this;\r\n    /**\r\n     * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\r\n     * @param start The zero-based location in the array from which to start removing elements.\r\n     * @param deleteCount The number of elements to remove.\r\n     * @returns An array containing the elements that were deleted.\r\n     */\r\n    splice(start: number, deleteCount?: number): T[];\r\n    /**\r\n     * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\r\n     * @param start The zero-based location in the array from which to start removing elements.\r\n     * @param deleteCount The number of elements to remove.\r\n     * @param items Elements to insert into the array in place of the deleted elements.\r\n     * @returns An array containing the elements that were deleted.\r\n     */\r\n    splice(start: number, deleteCount: number, ...items: T[]): T[];\r\n    /**\r\n     * Inserts new elements at the start of an array, and returns the new length of the array.\r\n     * @param items Elements to insert at the start of the array.\r\n     */\r\n    unshift(...items: T[]): number;\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array, or -1 if it is not present.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\r\n     */\r\n    indexOf(searchElement: T, fromIndex?: number): number;\r\n    /**\r\n     * Returns the index of the last occurrence of a specified value in an array, or -1 if it is not present.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin searching backward. If fromIndex is omitted, the search starts at the last index in the array.\r\n     */\r\n    lastIndexOf(searchElement: T, fromIndex?: number): number;\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param predicate A function that accepts up to three arguments. The every method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): this is S[];\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param predicate A function that accepts up to three arguments. The every method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean;\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param predicate A function that accepts up to three arguments. The some method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): boolean;\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: T, index: number, array: T[]) => void, thisArg?: any): void;\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map<U>(callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): U[];\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter<S extends T>(predicate: (value: T, index: number, array: T[]) => value is S, thisArg?: any): S[];\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param predicate A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(predicate: (value: T, index: number, array: T[]) => unknown, thisArg?: any): T[];\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\r\n    reduce(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T): T;\r\n    reduceRight(callbackfn: (previousValue: T, currentValue: T, currentIndex: number, array: T[]) => T, initialValue: T): T;\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: T, currentIndex: number, array: T[]) => U, initialValue: U): U;\r\n\r\n    [n: number]: T;\r\n}\r\n\r\ninterface ArrayConstructor {\r\n    new(arrayLength?: number): any[];\r\n    new <T>(arrayLength: number): T[];\r\n    new <T>(...items: T[]): T[];\r\n    (arrayLength?: number): any[];\r\n    <T>(arrayLength: number): T[];\r\n    <T>(...items: T[]): T[];\r\n    isArray(arg: any): arg is any[];\r\n    readonly prototype: any[];\r\n}\r\n\r\ndeclare var Array: ArrayConstructor;\r\n\r\ninterface TypedPropertyDescriptor<T> {\r\n    enumerable?: boolean;\r\n    configurable?: boolean;\r\n    writable?: boolean;\r\n    value?: T;\r\n    get?: () => T;\r\n    set?: (value: T) => void;\r\n}\r\n\r\ndeclare type ClassDecorator = <TFunction extends Function>(target: TFunction) => TFunction | void;\r\ndeclare type PropertyDecorator = (target: Object, propertyKey: string | symbol) => void;\r\ndeclare type MethodDecorator = <T>(target: Object, propertyKey: string | symbol, descriptor: TypedPropertyDescriptor<T>) => TypedPropertyDescriptor<T> | void;\r\ndeclare type ParameterDecorator = (target: Object, propertyKey: string | symbol, parameterIndex: number) => void;\r\n\r\ndeclare type PromiseConstructorLike = new <T>(executor: (resolve: (value: T | PromiseLike<T>) => void, reject: (reason?: any) => void) => void) => PromiseLike<T>;\r\n\r\ninterface PromiseLike<T> {\r\n    /**\r\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\r\n     * @param onfulfilled The callback to execute when the Promise is resolved.\r\n     * @param onrejected The callback to execute when the Promise is rejected.\r\n     * @returns A Promise for the completion of which ever callback is executed.\r\n     */\r\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): PromiseLike<TResult1 | TResult2>;\r\n}\r\n\r\n/**\r\n * Represents the completion of an asynchronous operation\r\n */\r\ninterface Promise<T> {\r\n    /**\r\n     * Attaches callbacks for the resolution and/or rejection of the Promise.\r\n     * @param onfulfilled The callback to execute when the Promise is resolved.\r\n     * @param onrejected The callback to execute when the Promise is rejected.\r\n     * @returns A Promise for the completion of which ever callback is executed.\r\n     */\r\n    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): Promise<TResult1 | TResult2>;\r\n\r\n    /**\r\n     * Attaches a callback for only the rejection of the Promise.\r\n     * @param onrejected The callback to execute when the Promise is rejected.\r\n     * @returns A Promise for the completion of the callback.\r\n     */\r\n    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): Promise<T | TResult>;\r\n}\r\n\r\n/**\r\n * Recursively unwraps the \"awaited type\" of a type. Non-promise \"thenables\" should resolve to `never`. This emulates the behavior of `await`.\r\n */\r\ntype Awaited<T> =\r\n    T extends null | undefined ? T : // special case for `null | undefined` when not in `--strictNullChecks` mode\r\n        T extends object & { then(onfulfilled: infer F): any } ? // `await` only unwraps object types with a callable `then`. Non-object types are not unwrapped\r\n            F extends ((value: infer V, ...args: any) => any) ? // if the argument to `then` is callable, extracts the first argument\r\n                Awaited<V> : // recursively unwrap the value\r\n                never : // the argument to `then` was not callable\r\n        T; // non-object or non-thenable\r\n\r\ninterface ArrayLike<T> {\r\n    readonly length: number;\r\n    readonly [n: number]: T;\r\n}\r\n\r\n/**\r\n * Make all properties in T optional\r\n */\r\ntype Partial<T> = {\r\n    [P in keyof T]?: T[P];\r\n};\r\n\r\n/**\r\n * Make all properties in T required\r\n */\r\ntype Required<T> = {\r\n    [P in keyof T]-?: T[P];\r\n};\r\n\r\n/**\r\n * Make all properties in T readonly\r\n */\r\ntype Readonly<T> = {\r\n    readonly [P in keyof T]: T[P];\r\n};\r\n\r\n/**\r\n * From T, pick a set of properties whose keys are in the union K\r\n */\r\ntype Pick<T, K extends keyof T> = {\r\n    [P in K]: T[P];\r\n};\r\n\r\n/**\r\n * Construct a type with a set of properties K of type T\r\n */\r\ntype Record<K extends keyof any, T> = {\r\n    [P in K]: T;\r\n};\r\n\r\n/**\r\n * Exclude from T those types that are assignable to U\r\n */\r\ntype Exclude<T, U> = T extends U ? never : T;\r\n\r\n/**\r\n * Extract from T those types that are assignable to U\r\n */\r\ntype Extract<T, U> = T extends U ? T : never;\r\n\r\n/**\r\n * Construct a type with the properties of T except for those in type K.\r\n */\r\ntype Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>;\r\n\r\n/**\r\n * Exclude null and undefined from T\r\n */\r\ntype NonNullable<T> = T extends null | undefined ? never : T;\r\n\r\n/**\r\n * Obtain the parameters of a function type in a tuple\r\n */\r\ntype Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : never;\r\n\r\n/**\r\n * Obtain the parameters of a constructor function type in a tuple\r\n */\r\ntype ConstructorParameters<T extends abstract new (...args: any) => any> = T extends abstract new (...args: infer P) => any ? P : never;\r\n\r\n/**\r\n * Obtain the return type of a function type\r\n */\r\ntype ReturnType<T extends (...args: any) => any> = T extends (...args: any) => infer R ? R : any;\r\n\r\n/**\r\n * Obtain the return type of a constructor function type\r\n */\r\ntype InstanceType<T extends abstract new (...args: any) => any> = T extends abstract new (...args: any) => infer R ? R : any;\r\n\r\n/**\r\n * Convert string literal type to uppercase\r\n */\r\ntype Uppercase<S extends string> = intrinsic;\r\n\r\n/**\r\n * Convert string literal type to lowercase\r\n */\r\ntype Lowercase<S extends string> = intrinsic;\r\n\r\n/**\r\n * Convert first character of string literal type to uppercase\r\n */\r\ntype Capitalize<S extends string> = intrinsic;\r\n\r\n/**\r\n * Convert first character of string literal type to lowercase\r\n */\r\ntype Uncapitalize<S extends string> = intrinsic;\r\n\r\n/**\r\n * Marker for contextual 'this' type\r\n */\r\ninterface ThisType<T> { }\r\n\r\n/**\r\n * Represents a raw buffer of binary data, which is used to store data for the\r\n * different typed arrays. ArrayBuffers cannot be read from or written to directly,\r\n * but can be passed to a typed array or DataView Object to interpret the raw\r\n * buffer as needed.\r\n */\r\ninterface ArrayBuffer {\r\n    /**\r\n     * Read-only. The length of the ArrayBuffer (in bytes).\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * Returns a section of an ArrayBuffer.\r\n     */\r\n    slice(begin: number, end?: number): ArrayBuffer;\r\n}\r\n\r\n/**\r\n * Allowed ArrayBuffer types for the buffer of an ArrayBufferView and related Typed Arrays.\r\n */\r\ninterface ArrayBufferTypes {\r\n    ArrayBuffer: ArrayBuffer;\r\n}\r\ntype ArrayBufferLike = ArrayBufferTypes[keyof ArrayBufferTypes];\r\n\r\ninterface ArrayBufferConstructor {\r\n    readonly prototype: ArrayBuffer;\r\n    new(byteLength: number): ArrayBuffer;\r\n    isView(arg: any): arg is ArrayBufferView;\r\n}\r\ndeclare var ArrayBuffer: ArrayBufferConstructor;\r\n\r\ninterface ArrayBufferView {\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    byteOffset: number;\r\n}\r\n\r\ninterface DataView {\r\n    readonly buffer: ArrayBuffer;\r\n    readonly byteLength: number;\r\n    readonly byteOffset: number;\r\n    /**\r\n     * Gets the Float32 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getFloat32(byteOffset: number, littleEndian?: boolean): number;\r\n\r\n    /**\r\n     * Gets the Float64 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getFloat64(byteOffset: number, littleEndian?: boolean): number;\r\n\r\n    /**\r\n     * Gets the Int8 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getInt8(byteOffset: number): number;\r\n\r\n    /**\r\n     * Gets the Int16 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getInt16(byteOffset: number, littleEndian?: boolean): number;\r\n    /**\r\n     * Gets the Int32 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getInt32(byteOffset: number, littleEndian?: boolean): number;\r\n\r\n    /**\r\n     * Gets the Uint8 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getUint8(byteOffset: number): number;\r\n\r\n    /**\r\n     * Gets the Uint16 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getUint16(byteOffset: number, littleEndian?: boolean): number;\r\n\r\n    /**\r\n     * Gets the Uint32 value at the specified byte offset from the start of the view. There is\r\n     * no alignment constraint; multi-byte values may be fetched from any offset.\r\n     * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n     */\r\n    getUint32(byteOffset: number, littleEndian?: boolean): number;\r\n\r\n    /**\r\n     * Stores an Float32 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     * @param littleEndian If false or undefined, a big-endian value should be written,\r\n     * otherwise a little-endian value should be written.\r\n     */\r\n    setFloat32(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n\r\n    /**\r\n     * Stores an Float64 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     * @param littleEndian If false or undefined, a big-endian value should be written,\r\n     * otherwise a little-endian value should be written.\r\n     */\r\n    setFloat64(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n\r\n    /**\r\n     * Stores an Int8 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     */\r\n    setInt8(byteOffset: number, value: number): void;\r\n\r\n    /**\r\n     * Stores an Int16 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     * @param littleEndian If false or undefined, a big-endian value should be written,\r\n     * otherwise a little-endian value should be written.\r\n     */\r\n    setInt16(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n\r\n    /**\r\n     * Stores an Int32 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     * @param littleEndian If false or undefined, a big-endian value should be written,\r\n     * otherwise a little-endian value should be written.\r\n     */\r\n    setInt32(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n\r\n    /**\r\n     * Stores an Uint8 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     */\r\n    setUint8(byteOffset: number, value: number): void;\r\n\r\n    /**\r\n     * Stores an Uint16 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     * @param littleEndian If false or undefined, a big-endian value should be written,\r\n     * otherwise a little-endian value should be written.\r\n     */\r\n    setUint16(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n\r\n    /**\r\n     * Stores an Uint32 value at the specified byte offset from the start of the view.\r\n     * @param byteOffset The place in the buffer at which the value should be set.\r\n     * @param value The value to set.\r\n     * @param littleEndian If false or undefined, a big-endian value should be written,\r\n     * otherwise a little-endian value should be written.\r\n     */\r\n    setUint32(byteOffset: number, value: number, littleEndian?: boolean): void;\r\n}\r\n\r\ninterface DataViewConstructor {\r\n    readonly prototype: DataView;\r\n    new(buffer: ArrayBufferLike, byteOffset?: number, byteLength?: number): DataView;\r\n}\r\ndeclare var DataView: DataViewConstructor;\r\n\r\n/**\r\n * A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\r\n * number of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Int8Array {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param predicate A function that accepts up to three arguments. The every method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(predicate: (value: number, index: number, array: Int8Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param predicate A function that accepts up to three arguments. The filter method calls\r\n     * the predicate function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(predicate: (value: number, index: number, array: Int8Array) => any, thisArg?: any): Int8Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Int8Array) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Int8Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Int8Array) => void, thisArg?: any): void;\r\n\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Int8Array) => number, thisArg?: any): Int8Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int8Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int8Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int8Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Int8Array;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Int8Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param predicate A function that accepts up to three arguments. The some method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(predicate: (value: number, index: number, array: Int8Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * Gets a new Int8Array view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Int8Array;\r\n\r\n    /**\r\n     * Converts a number to a string by using the current locale.\r\n     */\r\n    toLocaleString(): string;\r\n\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Int8Array;\r\n\r\n    [index: number]: number;\r\n}\r\ninterface Int8ArrayConstructor {\r\n    readonly prototype: Int8Array;\r\n    new(length: number): Int8Array;\r\n    new(array: ArrayLike<number> | ArrayBufferLike): Int8Array;\r\n    new(buffer: ArrayBufferLike, byteOffset?: number, length?: number): Int8Array;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Int8Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Int8Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int8Array;\r\n\r\n\r\n}\r\ndeclare var Int8Array: Int8ArrayConstructor;\r\n\r\n/**\r\n * A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\r\n * requested number of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Uint8Array {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param predicate A function that accepts up to three arguments. The every method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(predicate: (value: number, index: number, array: Uint8Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param predicate A function that accepts up to three arguments. The filter method calls\r\n     * the predicate function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(predicate: (value: number, index: number, array: Uint8Array) => any, thisArg?: any): Uint8Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Uint8Array) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Uint8Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Uint8Array) => void, thisArg?: any): void;\r\n\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Uint8Array) => number, thisArg?: any): Uint8Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Uint8Array;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Uint8Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param predicate A function that accepts up to three arguments. The some method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(predicate: (value: number, index: number, array: Uint8Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * Gets a new Uint8Array view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Uint8Array;\r\n\r\n    /**\r\n     * Converts a number to a string by using the current locale.\r\n     */\r\n    toLocaleString(): string;\r\n\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Uint8Array;\r\n\r\n    [index: number]: number;\r\n}\r\n\r\ninterface Uint8ArrayConstructor {\r\n    readonly prototype: Uint8Array;\r\n    new(length: number): Uint8Array;\r\n    new(array: ArrayLike<number> | ArrayBufferLike): Uint8Array;\r\n    new(buffer: ArrayBufferLike, byteOffset?: number, length?: number): Uint8Array;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Uint8Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Uint8Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint8Array;\r\n\r\n}\r\ndeclare var Uint8Array: Uint8ArrayConstructor;\r\n\r\n/**\r\n * A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\r\n * If the requested number of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Uint8ClampedArray {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param predicate A function that accepts up to three arguments. The every method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(predicate: (value: number, index: number, array: Uint8ClampedArray) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param predicate A function that accepts up to three arguments. The filter method calls\r\n     * the predicate function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(predicate: (value: number, index: number, array: Uint8ClampedArray) => any, thisArg?: any): Uint8ClampedArray;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Uint8ClampedArray) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Uint8ClampedArray) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => void, thisArg?: any): void;\r\n\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Uint8ClampedArray) => number, thisArg?: any): Uint8ClampedArray;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint8ClampedArray) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Uint8ClampedArray;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Uint8ClampedArray;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param predicate A function that accepts up to three arguments. The some method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(predicate: (value: number, index: number, array: Uint8ClampedArray) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * Gets a new Uint8ClampedArray view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Uint8ClampedArray;\r\n\r\n    /**\r\n     * Converts a number to a string by using the current locale.\r\n     */\r\n    toLocaleString(): string;\r\n\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Uint8ClampedArray;\r\n\r\n    [index: number]: number;\r\n}\r\n\r\ninterface Uint8ClampedArrayConstructor {\r\n    readonly prototype: Uint8ClampedArray;\r\n    new(length: number): Uint8ClampedArray;\r\n    new(array: ArrayLike<number> | ArrayBufferLike): Uint8ClampedArray;\r\n    new(buffer: ArrayBufferLike, byteOffset?: number, length?: number): Uint8ClampedArray;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Uint8ClampedArray;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Uint8ClampedArray;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint8ClampedArray;\r\n}\r\ndeclare var Uint8ClampedArray: Uint8ClampedArrayConstructor;\r\n\r\n/**\r\n * A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\r\n * requested number of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Int16Array {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param predicate A function that accepts up to three arguments. The every method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(predicate: (value: number, index: number, array: Int16Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param predicate A function that accepts up to three arguments. The filter method calls\r\n     * the predicate function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(predicate: (value: number, index: number, array: Int16Array) => any, thisArg?: any): Int16Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Int16Array) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Int16Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Int16Array) => void, thisArg?: any): void;\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Int16Array) => number, thisArg?: any): Int16Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int16Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int16Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int16Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Int16Array;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Int16Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param predicate A function that accepts up to three arguments. The some method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(predicate: (value: number, index: number, array: Int16Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * Gets a new Int16Array view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Int16Array;\r\n\r\n    /**\r\n     * Converts a number to a string by using the current locale.\r\n     */\r\n    toLocaleString(): string;\r\n\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Int16Array;\r\n\r\n    [index: number]: number;\r\n}\r\n\r\ninterface Int16ArrayConstructor {\r\n    readonly prototype: Int16Array;\r\n    new(length: number): Int16Array;\r\n    new(array: ArrayLike<number> | ArrayBufferLike): Int16Array;\r\n    new(buffer: ArrayBufferLike, byteOffset?: number, length?: number): Int16Array;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Int16Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Int16Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int16Array;\r\n\r\n\r\n}\r\ndeclare var Int16Array: Int16ArrayConstructor;\r\n\r\n/**\r\n * A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\r\n * requested number of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Uint16Array {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param predicate A function that accepts up to three arguments. The every method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(predicate: (value: number, index: number, array: Uint16Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param predicate A function that accepts up to three arguments. The filter method calls\r\n     * the predicate function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(predicate: (value: number, index: number, array: Uint16Array) => any, thisArg?: any): Uint16Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Uint16Array) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Uint16Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Uint16Array) => void, thisArg?: any): void;\r\n\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Uint16Array) => number, thisArg?: any): Uint16Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint16Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint16Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint16Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Uint16Array;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Uint16Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param predicate A function that accepts up to three arguments. The some method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(predicate: (value: number, index: number, array: Uint16Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * Gets a new Uint16Array view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Uint16Array;\r\n\r\n    /**\r\n     * Converts a number to a string by using the current locale.\r\n     */\r\n    toLocaleString(): string;\r\n\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Uint16Array;\r\n\r\n    [index: number]: number;\r\n}\r\n\r\ninterface Uint16ArrayConstructor {\r\n    readonly prototype: Uint16Array;\r\n    new(length: number): Uint16Array;\r\n    new(array: ArrayLike<number> | ArrayBufferLike): Uint16Array;\r\n    new(buffer: ArrayBufferLike, byteOffset?: number, length?: number): Uint16Array;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Uint16Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Uint16Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint16Array;\r\n\r\n\r\n}\r\ndeclare var Uint16Array: Uint16ArrayConstructor;\r\n/**\r\n * A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\r\n * requested number of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Int32Array {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param predicate A function that accepts up to three arguments. The every method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(predicate: (value: number, index: number, array: Int32Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param predicate A function that accepts up to three arguments. The filter method calls\r\n     * the predicate function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(predicate: (value: number, index: number, array: Int32Array) => any, thisArg?: any): Int32Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Int32Array) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Int32Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Int32Array) => void, thisArg?: any): void;\r\n\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Int32Array) => number, thisArg?: any): Int32Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int32Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Int32Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Int32Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Int32Array;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Int32Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param predicate A function that accepts up to three arguments. The some method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(predicate: (value: number, index: number, array: Int32Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * Gets a new Int32Array view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Int32Array;\r\n\r\n    /**\r\n     * Converts a number to a string by using the current locale.\r\n     */\r\n    toLocaleString(): string;\r\n\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Int32Array;\r\n\r\n    [index: number]: number;\r\n}\r\n\r\ninterface Int32ArrayConstructor {\r\n    readonly prototype: Int32Array;\r\n    new(length: number): Int32Array;\r\n    new(array: ArrayLike<number> | ArrayBufferLike): Int32Array;\r\n    new(buffer: ArrayBufferLike, byteOffset?: number, length?: number): Int32Array;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Int32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Int32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Int32Array;\r\n\r\n}\r\ndeclare var Int32Array: Int32ArrayConstructor;\r\n\r\n/**\r\n * A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\r\n * requested number of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Uint32Array {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param predicate A function that accepts up to three arguments. The every method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(predicate: (value: number, index: number, array: Uint32Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param predicate A function that accepts up to three arguments. The filter method calls\r\n     * the predicate function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(predicate: (value: number, index: number, array: Uint32Array) => any, thisArg?: any): Uint32Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Uint32Array) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Uint32Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Uint32Array) => void, thisArg?: any): void;\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Uint32Array) => number, thisArg?: any): Uint32Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint32Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Uint32Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Uint32Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Uint32Array;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Uint32Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param predicate A function that accepts up to three arguments. The some method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(predicate: (value: number, index: number, array: Uint32Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * Gets a new Uint32Array view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Uint32Array;\r\n\r\n    /**\r\n     * Converts a number to a string by using the current locale.\r\n     */\r\n    toLocaleString(): string;\r\n\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Uint32Array;\r\n\r\n    [index: number]: number;\r\n}\r\n\r\ninterface Uint32ArrayConstructor {\r\n    readonly prototype: Uint32Array;\r\n    new(length: number): Uint32Array;\r\n    new(array: ArrayLike<number> | ArrayBufferLike): Uint32Array;\r\n    new(buffer: ArrayBufferLike, byteOffset?: number, length?: number): Uint32Array;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Uint32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Uint32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Uint32Array;\r\n\r\n}\r\ndeclare var Uint32Array: Uint32ArrayConstructor;\r\n\r\n/**\r\n * A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\r\n * of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Float32Array {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param predicate A function that accepts up to three arguments. The every method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(predicate: (value: number, index: number, array: Float32Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param predicate A function that accepts up to three arguments. The filter method calls\r\n     * the predicate function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(predicate: (value: number, index: number, array: Float32Array) => any, thisArg?: any): Float32Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Float32Array) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Float32Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Float32Array) => void, thisArg?: any): void;\r\n\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Float32Array) => number, thisArg?: any): Float32Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float32Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float32Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float32Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Float32Array;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Float32Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param predicate A function that accepts up to three arguments. The some method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(predicate: (value: number, index: number, array: Float32Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * Gets a new Float32Array view of the ArrayBuffer store for this array, referencing the elements\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Float32Array;\r\n\r\n    /**\r\n     * Converts a number to a string by using the current locale.\r\n     */\r\n    toLocaleString(): string;\r\n\r\n    /**\r\n     * Returns a string representation of an array.\r\n     */\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Float32Array;\r\n\r\n    [index: number]: number;\r\n}\r\n\r\ninterface Float32ArrayConstructor {\r\n    readonly prototype: Float32Array;\r\n    new(length: number): Float32Array;\r\n    new(array: ArrayLike<number> | ArrayBufferLike): Float32Array;\r\n    new(buffer: ArrayBufferLike, byteOffset?: number, length?: number): Float32Array;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Float32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Float32Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Float32Array;\r\n\r\n\r\n}\r\ndeclare var Float32Array: Float32ArrayConstructor;\r\n\r\n/**\r\n * A typed array of 64-bit float values. The contents are initialized to 0. If the requested\r\n * number of bytes could not be allocated an exception is raised.\r\n */\r\ninterface Float64Array {\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * The ArrayBuffer instance referenced by the array.\r\n     */\r\n    readonly buffer: ArrayBufferLike;\r\n\r\n    /**\r\n     * The length in bytes of the array.\r\n     */\r\n    readonly byteLength: number;\r\n\r\n    /**\r\n     * The offset in bytes of the array.\r\n     */\r\n    readonly byteOffset: number;\r\n\r\n    /**\r\n     * Returns the this object after copying a section of the array identified by start and end\r\n     * to the same array starting at position target\r\n     * @param target If target is negative, it is treated as length+target where length is the\r\n     * length of the array.\r\n     * @param start If start is negative, it is treated as length+start. If end is negative, it\r\n     * is treated as length+end.\r\n     * @param end If not specified, length of the this object is used as its default value.\r\n     */\r\n    copyWithin(target: number, start: number, end?: number): this;\r\n\r\n    /**\r\n     * Determines whether all the members of an array satisfy the specified test.\r\n     * @param predicate A function that accepts up to three arguments. The every method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value false, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    every(predicate: (value: number, index: number, array: Float64Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Changes all array elements from `start` to `end` index to a static `value` and returns the modified array\r\n     * @param value value to fill array section with\r\n     * @param start index to start filling the array at. If start is negative, it is treated as\r\n     * length+start where length is the length of the array.\r\n     * @param end index to stop filling the array at. If end is negative, it is treated as\r\n     * length+end.\r\n     */\r\n    fill(value: number, start?: number, end?: number): this;\r\n\r\n    /**\r\n     * Returns the elements of an array that meet the condition specified in a callback function.\r\n     * @param predicate A function that accepts up to three arguments. The filter method calls\r\n     * the predicate function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    filter(predicate: (value: number, index: number, array: Float64Array) => any, thisArg?: any): Float64Array;\r\n\r\n    /**\r\n     * Returns the value of the first element in the array where predicate is true, and undefined\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found, find\r\n     * immediately returns that element value. Otherwise, find returns undefined.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    find(predicate: (value: number, index: number, obj: Float64Array) => boolean, thisArg?: any): number | undefined;\r\n\r\n    /**\r\n     * Returns the index of the first element in the array where predicate is true, and -1\r\n     * otherwise.\r\n     * @param predicate find calls predicate once for each element of the array, in ascending\r\n     * order, until it finds one where predicate returns true. If such an element is found,\r\n     * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\r\n     * @param thisArg If provided, it will be used as the this value for each invocation of\r\n     * predicate. If it is not provided, undefined is used instead.\r\n     */\r\n    findIndex(predicate: (value: number, index: number, obj: Float64Array) => boolean, thisArg?: any): number;\r\n\r\n    /**\r\n     * Performs the specified action for each element in an array.\r\n     * @param callbackfn  A function that accepts up to three arguments. forEach calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg  An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    forEach(callbackfn: (value: number, index: number, array: Float64Array) => void, thisArg?: any): void;\r\n\r\n    /**\r\n     * Returns the index of the first occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     *  search starts at index 0.\r\n     */\r\n    indexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * Adds all the elements of an array separated by the specified separator string.\r\n     * @param separator A string used to separate one element of an array from the next in the\r\n     * resulting String. If omitted, the array elements are separated with a comma.\r\n     */\r\n    join(separator?: string): string;\r\n\r\n    /**\r\n     * Returns the index of the last occurrence of a value in an array.\r\n     * @param searchElement The value to locate in the array.\r\n     * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the\r\n     * search starts at index 0.\r\n     */\r\n    lastIndexOf(searchElement: number, fromIndex?: number): number;\r\n\r\n    /**\r\n     * The length of the array.\r\n     */\r\n    readonly length: number;\r\n\r\n    /**\r\n     * Calls a defined callback function on each element of an array, and returns an array that\r\n     * contains the results.\r\n     * @param callbackfn A function that accepts up to three arguments. The map method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param thisArg An object to which the this keyword can refer in the callbackfn function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    map(callbackfn: (value: number, index: number, array: Float64Array) => number, thisArg?: any): Float64Array;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number): number;\r\n    reduce(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array. The return value of\r\n     * the callback function is the accumulated result, and is provided as an argument in the next\r\n     * call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduce method calls the\r\n     * callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduce<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float64Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an\r\n     * argument instead of an array value.\r\n     */\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number): number;\r\n    reduceRight(callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: Float64Array) => number, initialValue: number): number;\r\n\r\n    /**\r\n     * Calls the specified callback function for all the elements in an array, in descending order.\r\n     * The return value of the callback function is the accumulated result, and is provided as an\r\n     * argument in the next call to the callback function.\r\n     * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls\r\n     * the callbackfn function one time for each element in the array.\r\n     * @param initialValue If initialValue is specified, it is used as the initial value to start\r\n     * the accumulation. The first call to the callbackfn function provides this value as an argument\r\n     * instead of an array value.\r\n     */\r\n    reduceRight<U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: Float64Array) => U, initialValue: U): U;\r\n\r\n    /**\r\n     * Reverses the elements in an Array.\r\n     */\r\n    reverse(): Float64Array;\r\n\r\n    /**\r\n     * Sets a value or an array of values.\r\n     * @param array A typed or untyped array of values to set.\r\n     * @param offset The index in the current array at which the values are to be written.\r\n     */\r\n    set(array: ArrayLike<number>, offset?: number): void;\r\n\r\n    /**\r\n     * Returns a section of an array.\r\n     * @param start The beginning of the specified portion of the array.\r\n     * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\r\n     */\r\n    slice(start?: number, end?: number): Float64Array;\r\n\r\n    /**\r\n     * Determines whether the specified callback function returns true for any element of an array.\r\n     * @param predicate A function that accepts up to three arguments. The some method calls\r\n     * the predicate function for each element in the array until the predicate returns a value\r\n     * which is coercible to the Boolean value true, or until the end of the array.\r\n     * @param thisArg An object to which the this keyword can refer in the predicate function.\r\n     * If thisArg is omitted, undefined is used as the this value.\r\n     */\r\n    some(predicate: (value: number, index: number, array: Float64Array) => unknown, thisArg?: any): boolean;\r\n\r\n    /**\r\n     * Sorts an array.\r\n     * @param compareFn Function used to determine the order of the elements. It is expected to return\r\n     * a negative value if first argument is less than second argument, zero if they're equal and a positive\r\n     * value otherwise. If omitted, the elements are sorted in ascending order.\r\n     * ```ts\r\n     * [11,2,22,1].sort((a, b) => a - b)\r\n     * ```\r\n     */\r\n    sort(compareFn?: (a: number, b: number) => number): this;\r\n\r\n    /**\r\n     * at begin, inclusive, up to end, exclusive.\r\n     * @param begin The index of the beginning of the array.\r\n     * @param end The index of the end of the array.\r\n     */\r\n    subarray(begin?: number, end?: number): Float64Array;\r\n\r\n    toString(): string;\r\n\r\n    /** Returns the primitive value of the specified object. */\r\n    valueOf(): Float64Array;\r\n\r\n    [index: number]: number;\r\n}\r\n\r\ninterface Float64ArrayConstructor {\r\n    readonly prototype: Float64Array;\r\n    new(length: number): Float64Array;\r\n    new(array: ArrayLike<number> | ArrayBufferLike): Float64Array;\r\n    new(buffer: ArrayBufferLike, byteOffset?: number, length?: number): Float64Array;\r\n\r\n    /**\r\n     * The size in bytes of each element in the array.\r\n     */\r\n    readonly BYTES_PER_ELEMENT: number;\r\n\r\n    /**\r\n     * Returns a new array from a set of elements.\r\n     * @param items A set of elements to include in the new array object.\r\n     */\r\n    of(...items: number[]): Float64Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     */\r\n    from(arrayLike: ArrayLike<number>): Float64Array;\r\n\r\n    /**\r\n     * Creates an array from an array-like or iterable object.\r\n     * @param arrayLike An array-like or iterable object to convert to an array.\r\n     * @param mapfn A mapping function to call on every element of the array.\r\n     * @param thisArg Value of 'this' used to invoke the mapfn.\r\n     */\r\n    from<T>(arrayLike: ArrayLike<T>, mapfn: (v: T, k: number) => number, thisArg?: any): Float64Array;\r\n\r\n}\r\ndeclare var Float64Array: Float64ArrayConstructor;\r\n\r\n/////////////////////////////\r\n/// ECMAScript Internationalization API\r\n/////////////////////////////\r\n\r\ndeclare namespace Intl {\r\n    interface CollatorOptions {\r\n        usage?: string | undefined;\r\n        localeMatcher?: string | undefined;\r\n        numeric?: boolean | undefined;\r\n        caseFirst?: string | undefined;\r\n        sensitivity?: string | undefined;\r\n        ignorePunctuation?: boolean | undefined;\r\n    }\r\n\r\n    interface ResolvedCollatorOptions {\r\n        locale: string;\r\n        usage: string;\r\n        sensitivity: string;\r\n        ignorePunctuation: boolean;\r\n        collation: string;\r\n        caseFirst: string;\r\n        numeric: boolean;\r\n    }\r\n\r\n    interface Collator {\r\n        compare(x: string, y: string): number;\r\n        resolvedOptions(): ResolvedCollatorOptions;\r\n    }\r\n    var Collator: {\r\n        new(locales?: string | string[], options?: CollatorOptions): Collator;\r\n        (locales?: string | string[], options?: CollatorOptions): Collator;\r\n        supportedLocalesOf(locales: string | string[], options?: CollatorOptions): string[];\r\n    };\r\n\r\n    interface NumberFormatOptions {\r\n        localeMatcher?: string | undefined;\r\n        style?: string | undefined;\r\n        currency?: string | undefined;\r\n        currencySign?: string | undefined;\r\n        useGrouping?: boolean | undefined;\r\n        minimumIntegerDigits?: number | undefined;\r\n        minimumFractionDigits?: number | undefined;\r\n        maximumFractionDigits?: number | undefined;\r\n        minimumSignificantDigits?: number | undefined;\r\n        maximumSignificantDigits?: number | undefined;\r\n    }\r\n\r\n    interface ResolvedNumberFormatOptions {\r\n        locale: string;\r\n        numberingSystem: string;\r\n        style: string;\r\n        currency?: string;\r\n        minimumIntegerDigits: number;\r\n        minimumFractionDigits: number;\r\n        maximumFractionDigits: number;\r\n        minimumSignificantDigits?: number;\r\n        maximumSignificantDigits?: number;\r\n        useGrouping: boolean;\r\n    }\r\n\r\n    interface NumberFormat {\r\n        format(value: number): string;\r\n        resolvedOptions(): ResolvedNumberFormatOptions;\r\n    }\r\n    var NumberFormat: {\r\n        new(locales?: string | string[], options?: NumberFormatOptions): NumberFormat;\r\n        (locales?: string | string[], options?: NumberFormatOptions): NumberFormat;\r\n        supportedLocalesOf(locales: string | string[], options?: NumberFormatOptions): string[];\r\n    };\r\n\r\n    interface DateTimeFormatOptions {\r\n        localeMatcher?: \"best fit\" | \"lookup\" | undefined;\r\n        weekday?: \"long\" | \"short\" | \"narrow\" | undefined;\r\n        era?: \"long\" | \"short\" | \"narrow\" | undefined;\r\n        year?: \"numeric\" | \"2-digit\" | undefined;\r\n        month?: \"numeric\" | \"2-digit\" | \"long\" | \"short\" | \"narrow\" | undefined;\r\n        day?: \"numeric\" | \"2-digit\" | undefined;\r\n        hour?: \"numeric\" | \"2-digit\" | undefined;\r\n        minute?: \"numeric\" | \"2-digit\" | undefined;\r\n        second?: \"numeric\" | \"2-digit\" | undefined;\r\n        timeZoneName?: \"long\" | \"short\" | undefined;\r\n        formatMatcher?: \"best fit\" | \"basic\" | undefined;\r\n        hour12?: boolean | undefined;\r\n        timeZone?: string | undefined;\r\n    }\r\n\r\n    interface ResolvedDateTimeFormatOptions {\r\n        locale: string;\r\n        calendar: string;\r\n        numberingSystem: string;\r\n        timeZone: string;\r\n        hour12?: boolean;\r\n        weekday?: string;\r\n        era?: string;\r\n        year?: string;\r\n        month?: string;\r\n        day?: string;\r\n        hour?: string;\r\n        minute?: string;\r\n        second?: string;\r\n        timeZoneName?: string;\r\n    }\r\n\r\n    interface DateTimeFormat {\r\n        format(date?: Date | number): string;\r\n        resolvedOptions(): ResolvedDateTimeFormatOptions;\r\n    }\r\n    var DateTimeFormat: {\r\n        new(locales?: string | string[], options?: DateTimeFormatOptions): DateTimeFormat;\r\n        (locales?: string | string[], options?: DateTimeFormatOptions): DateTimeFormat;\r\n        supportedLocalesOf(locales: string | string[], options?: DateTimeFormatOptions): string[];\r\n    };\r\n}\r\n\r\ninterface String {\r\n    /**\r\n     * Determines whether two strings are equivalent in the current or specified locale.\r\n     * @param that String to compare to target string\r\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used. This parameter must conform to BCP 47 standards; see the Intl.Collator object for details.\r\n     * @param options An object that contains one or more properties that specify comparison options. see the Intl.Collator object for details.\r\n     */\r\n    localeCompare(that: string, locales?: string | string[], options?: Intl.CollatorOptions): number;\r\n}\r\n\r\ninterface Number {\r\n    /**\r\n     * Converts a number to a string by using the current or specified locale.\r\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\r\n     * @param options An object that contains one or more properties that specify comparison options.\r\n     */\r\n    toLocaleString(locales?: string | string[], options?: Intl.NumberFormatOptions): string;\r\n}\r\n\r\ninterface Date {\r\n    /**\r\n     * Converts a date and time to a string by using the current or specified locale.\r\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\r\n     * @param options An object that contains one or more properties that specify comparison options.\r\n     */\r\n    toLocaleString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;\r\n    /**\r\n     * Converts a date to a string by using the current or specified locale.\r\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\r\n     * @param options An object that contains one or more properties that specify comparison options.\r\n     */\r\n    toLocaleDateString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;\r\n\r\n    /**\r\n     * Converts a time to a string by using the current or specified locale.\r\n     * @param locales A locale string or array of locale strings that contain one or more language or locale tags. If you include more than one locale string, list them in descending order of priority so that the first entry is the preferred locale. If you omit this parameter, the default locale of the JavaScript runtime is used.\r\n     * @param options An object that contains one or more properties that specify comparison options.\r\n     */\r\n    toLocaleTimeString(locales?: string | string[], options?: Intl.DateTimeFormatOptions): string;\r\n}\r\n"},74815:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2015" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="dom.iterable" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n'},48089:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="es2022" />\r\n/// <reference lib="esnext.intl" />\r\n'},8110:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/// <reference lib="esnext" />\r\n/// <reference lib="dom" />\r\n/// <reference lib="webworker.importscripts" />\r\n/// <reference lib="scripthost" />\r\n/// <reference lib="dom.iterable" />'},81452:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\ndeclare namespace Intl {\r\n   // Empty for now\r\n}\r\n'},12459:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\n\n\ninterface AggregateError extends Error {\n    errors: any[]\n}\n\ninterface AggregateErrorConstructor {\n    new(errors: Iterable<any>, message?: string): AggregateError;\n    (errors: Iterable<any>, message?: string): AggregateError;\n    readonly prototype: AggregateError;\n}\n\ndeclare var AggregateError: AggregateErrorConstructor;\n\n/**\n * Represents the completion of an asynchronous operation\n */\ninterface PromiseConstructor {\n    /**\n     * The any function returns a promise that is fulfilled by the first given promise to be fulfilled, or rejected with an AggregateError containing an array of rejection reasons if all of the given promises are rejected. It resolves all elements of the passed iterable to promises as it runs this algorithm.\n     * @param values An array or iterable of Promises.\n     * @returns A new Promise.\n     */\n    any<T>(values: (T | PromiseLike<T>)[] | Iterable<T | PromiseLike<T>>): Promise<T>\n}\n'},9631:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\n\n\ninterface String {\n    /**\n     * Replace all instances of a substring in a string, using a regular expression or search string.\n     * @param searchValue A string to search for.\n     * @param replaceValue A string containing the text to replace for every successful match of searchValue in this string.\n     */\n    replaceAll(searchValue: string | RegExp, replaceValue: string): string;\n\n    /**\n     * Replace all instances of a substring in a string, using a regular expression or search string.\n     * @param searchValue A string to search for.\n     * @param replacer A function that returns the replacement text.\n     */\n    replaceAll(searchValue: string | RegExp, replacer: (substring: string, ...args: any[]) => string): string;\n}\n'},18931:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n\r\n\r\n/////////////////////////////\r\n/// Windows Script Host APIS\r\n/////////////////////////////\r\n\r\n\r\ninterface ActiveXObject {\r\n    new (s: string): any;\r\n}\r\ndeclare var ActiveXObject: ActiveXObject;\r\n\r\ninterface ITextWriter {\r\n    Write(s: string): void;\r\n    WriteLine(s: string): void;\r\n    Close(): void;\r\n}\r\n\r\ninterface TextStreamBase {\r\n    /**\r\n     * The column number of the current character position in an input stream.\r\n     */\r\n    Column: number;\r\n\r\n    /**\r\n     * The current line number in an input stream.\r\n     */\r\n    Line: number;\r\n\r\n    /**\r\n     * Closes a text stream.\r\n     * It is not necessary to close standard streams; they close automatically when the process ends. If\r\n     * you close a standard stream, be aware that any other pointers to that standard stream become invalid.\r\n     */\r\n    Close(): void;\r\n}\r\n\r\ninterface TextStreamWriter extends TextStreamBase {\r\n    /**\r\n     * Sends a string to an output stream.\r\n     */\r\n    Write(s: string): void;\r\n\r\n    /**\r\n     * Sends a specified number of blank lines (newline characters) to an output stream.\r\n     */\r\n    WriteBlankLines(intLines: number): void;\r\n\r\n    /**\r\n     * Sends a string followed by a newline character to an output stream.\r\n     */\r\n    WriteLine(s: string): void;\r\n}\r\n\r\ninterface TextStreamReader extends TextStreamBase {\r\n    /**\r\n     * Returns a specified number of characters from an input stream, starting at the current pointer position.\r\n     * Does not return until the ENTER key is pressed.\r\n     * Can only be used on a stream in reading mode; causes an error in writing or appending mode.\r\n     */\r\n    Read(characters: number): string;\r\n\r\n    /**\r\n     * Returns all characters from an input stream.\r\n     * Can only be used on a stream in reading mode; causes an error in writing or appending mode.\r\n     */\r\n    ReadAll(): string;\r\n\r\n    /**\r\n     * Returns an entire line from an input stream.\r\n     * Although this method extracts the newline character, it does not add it to the returned string.\r\n     * Can only be used on a stream in reading mode; causes an error in writing or appending mode.\r\n     */\r\n    ReadLine(): string;\r\n\r\n    /**\r\n     * Skips a specified number of characters when reading from an input text stream.\r\n     * Can only be used on a stream in reading mode; causes an error in writing or appending mode.\r\n     * @param characters Positive number of characters to skip forward. (Backward skipping is not supported.)\r\n     */\r\n    Skip(characters: number): void;\r\n\r\n    /**\r\n     * Skips the next line when reading from an input text stream.\r\n     * Can only be used on a stream in reading mode, not writing or appending mode.\r\n     */\r\n    SkipLine(): void;\r\n\r\n    /**\r\n     * Indicates whether the stream pointer position is at the end of a line.\r\n     */\r\n    AtEndOfLine: boolean;\r\n\r\n    /**\r\n     * Indicates whether the stream pointer position is at the end of a stream.\r\n     */\r\n    AtEndOfStream: boolean;\r\n}\r\n\r\ndeclare var WScript: {\r\n    /**\r\n     * Outputs text to either a message box (under WScript.exe) or the command console window followed by\r\n     * a newline (under CScript.exe).\r\n     */\r\n    Echo(s: any): void;\r\n\r\n    /**\r\n     * Exposes the write-only error output stream for the current script.\r\n     * Can be accessed only while using CScript.exe.\r\n     */\r\n    StdErr: TextStreamWriter;\r\n\r\n    /**\r\n     * Exposes the write-only output stream for the current script.\r\n     * Can be accessed only while using CScript.exe.\r\n     */\r\n    StdOut: TextStreamWriter;\r\n    Arguments: { length: number; Item(n: number): string; };\r\n\r\n    /**\r\n     *  The full path of the currently running script.\r\n     */\r\n    ScriptFullName: string;\r\n\r\n    /**\r\n     * Forces the script to stop immediately, with an optional exit code.\r\n     */\r\n    Quit(exitCode?: number): number;\r\n\r\n    /**\r\n     * The Windows Script Host build version number.\r\n     */\r\n    BuildVersion: number;\r\n\r\n    /**\r\n     * Fully qualified path of the host executable.\r\n     */\r\n    FullName: string;\r\n\r\n    /**\r\n     * Gets/sets the script mode - interactive(true) or batch(false).\r\n     */\r\n    Interactive: boolean;\r\n\r\n    /**\r\n     * The name of the host executable (WScript.exe or CScript.exe).\r\n     */\r\n    Name: string;\r\n\r\n    /**\r\n     * Path of the directory containing the host executable.\r\n     */\r\n    Path: string;\r\n\r\n    /**\r\n     * The filename of the currently running script.\r\n     */\r\n    ScriptName: string;\r\n\r\n    /**\r\n     * Exposes the read-only input stream for the current script.\r\n     * Can be accessed only while using CScript.exe.\r\n     */\r\n    StdIn: TextStreamReader;\r\n\r\n    /**\r\n     * Windows Script Host version\r\n     */\r\n    Version: string;\r\n\r\n    /**\r\n     * Connects a COM object\'s event sources to functions named with a given prefix, in the form prefix_event.\r\n     */\r\n    ConnectObject(objEventSource: any, strPrefix: string): void;\r\n\r\n    /**\r\n     * Creates a COM object.\r\n     * @param strProgiID\r\n     * @param strPrefix Function names in the form prefix_event will be bound to this object\'s COM events.\r\n     */\r\n    CreateObject(strProgID: string, strPrefix?: string): any;\r\n\r\n    /**\r\n     * Disconnects a COM object from its event sources.\r\n     */\r\n    DisconnectObject(obj: any): void;\r\n\r\n    /**\r\n     * Retrieves an existing object with the specified ProgID from memory, or creates a new one from a file.\r\n     * @param strPathname Fully qualified path to the file containing the object persisted to disk.\r\n     *                       For objects in memory, pass a zero-length string.\r\n     * @param strProgID\r\n     * @param strPrefix Function names in the form prefix_event will be bound to this object\'s COM events.\r\n     */\r\n    GetObject(strPathname: string, strProgID?: string, strPrefix?: string): any;\r\n\r\n    /**\r\n     * Suspends script execution for a specified length of time, then continues execution.\r\n     * @param intTime Interval (in milliseconds) to suspend script execution.\r\n     */\r\n    Sleep(intTime: number): void;\r\n};\r\n\r\n/**\r\n * WSH is an alias for WScript under Windows Script Host\r\n */\r\ndeclare var WSH: typeof WScript;\r\n\r\n/**\r\n * Represents an Automation SAFEARRAY\r\n */\r\ndeclare class SafeArray<T = any> {\r\n    private constructor();\r\n    private SafeArray_typekey: SafeArray<T>;\r\n}\r\n\r\n/**\r\n * Allows enumerating over a COM collection, which may not have indexed item access.\r\n */\r\ninterface Enumerator<T = any> {\r\n    /**\r\n     * Returns true if the current item is the last one in the collection, or the collection is empty,\r\n     * or the current item is undefined.\r\n     */\r\n    atEnd(): boolean;\r\n\r\n    /**\r\n     * Returns the current item in the collection\r\n     */\r\n    item(): T;\r\n\r\n    /**\r\n     * Resets the current item in the collection to the first item. If there are no items in the collection,\r\n     * the current item is set to undefined.\r\n     */\r\n    moveFirst(): void;\r\n\r\n    /**\r\n     * Moves the current item to the next item in the collection. If the enumerator is at the end of\r\n     * the collection or the collection is empty, the current item is set to undefined.\r\n     */\r\n    moveNext(): void;\r\n}\r\n\r\ninterface EnumeratorConstructor {\r\n    new <T = any>(safearray: SafeArray<T>): Enumerator<T>;\r\n    new <T = any>(collection: { Item(index: any): T }): Enumerator<T>;\r\n    new <T = any>(collection: any): Enumerator<T>;\r\n}\r\n\r\ndeclare var Enumerator: EnumeratorConstructor;\r\n\r\n/**\r\n * Enables reading from a COM safe array, which might have an alternate lower bound, or multiple dimensions.\r\n */\r\ninterface VBArray<T = any> {\r\n    /**\r\n     * Returns the number of dimensions (1-based).\r\n     */\r\n    dimensions(): number;\r\n\r\n    /**\r\n     * Takes an index for each dimension in the array, and returns the item at the corresponding location.\r\n     */\r\n    getItem(dimension1Index: number, ...dimensionNIndexes: number[]): T;\r\n\r\n    /**\r\n     * Returns the smallest available index for a given dimension.\r\n     * @param dimension 1-based dimension (defaults to 1)\r\n     */\r\n    lbound(dimension?: number): number;\r\n\r\n    /**\r\n     * Returns the largest available index for a given dimension.\r\n     * @param dimension 1-based dimension (defaults to 1)\r\n     */\r\n    ubound(dimension?: number): number;\r\n\r\n    /**\r\n     * Returns a Javascript array with all the elements in the VBArray. If there are multiple dimensions,\r\n     * each successive dimension is appended to the end of the array.\r\n     * Example: [[1,2,3],[4,5,6]] becomes [1,2,3,4,5,6]\r\n     */\r\n    toArray(): T[];\r\n}\r\n\r\ninterface VBArrayConstructor {\r\n    new <T = any>(safeArray: SafeArray<T>): VBArray<T>;\r\n}\r\n\r\ndeclare var VBArray: VBArrayConstructor;\r\n\r\n/**\r\n * Automation date (VT_DATE)\r\n */\r\ndeclare class VarDate {\r\n    private constructor();\r\n    private VarDate_typekey: VarDate;\r\n}\r\n\r\ninterface DateConstructor {\r\n    new (vd: VarDate): Date;\r\n}\r\n\r\ninterface Date {\r\n    getVarDate: () => VarDate;\r\n}\r\n'},40699:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n/////////////////////////////\n/// Worker APIs\n/////////////////////////////\n\ninterface AddEventListenerOptions extends EventListenerOptions {\n    once?: boolean;\n    passive?: boolean;\n    signal?: AbortSignal;\n}\n\ninterface AesCbcParams extends Algorithm {\n    iv: BufferSource;\n}\n\ninterface AesCtrParams extends Algorithm {\n    counter: BufferSource;\n    length: number;\n}\n\ninterface AesDerivedKeyParams extends Algorithm {\n    length: number;\n}\n\ninterface AesGcmParams extends Algorithm {\n    additionalData?: BufferSource;\n    iv: BufferSource;\n    tagLength?: number;\n}\n\ninterface AesKeyAlgorithm extends KeyAlgorithm {\n    length: number;\n}\n\ninterface AesKeyGenParams extends Algorithm {\n    length: number;\n}\n\ninterface Algorithm {\n    name: string;\n}\n\ninterface AudioConfiguration {\n    bitrate?: number;\n    channels?: string;\n    contentType: string;\n    samplerate?: number;\n    spatialRendering?: boolean;\n}\n\ninterface BlobPropertyBag {\n    endings?: EndingType;\n    type?: string;\n}\n\ninterface CacheQueryOptions {\n    ignoreMethod?: boolean;\n    ignoreSearch?: boolean;\n    ignoreVary?: boolean;\n}\n\ninterface ClientQueryOptions {\n    includeUncontrolled?: boolean;\n    type?: ClientTypes;\n}\n\ninterface CloseEventInit extends EventInit {\n    code?: number;\n    reason?: string;\n    wasClean?: boolean;\n}\n\ninterface CryptoKeyPair {\n    privateKey: CryptoKey;\n    publicKey: CryptoKey;\n}\n\ninterface CustomEventInit<T = any> extends EventInit {\n    detail?: T;\n}\n\ninterface DOMMatrix2DInit {\n    a?: number;\n    b?: number;\n    c?: number;\n    d?: number;\n    e?: number;\n    f?: number;\n    m11?: number;\n    m12?: number;\n    m21?: number;\n    m22?: number;\n    m41?: number;\n    m42?: number;\n}\n\ninterface DOMMatrixInit extends DOMMatrix2DInit {\n    is2D?: boolean;\n    m13?: number;\n    m14?: number;\n    m23?: number;\n    m24?: number;\n    m31?: number;\n    m32?: number;\n    m33?: number;\n    m34?: number;\n    m43?: number;\n    m44?: number;\n}\n\ninterface DOMPointInit {\n    w?: number;\n    x?: number;\n    y?: number;\n    z?: number;\n}\n\ninterface DOMQuadInit {\n    p1?: DOMPointInit;\n    p2?: DOMPointInit;\n    p3?: DOMPointInit;\n    p4?: DOMPointInit;\n}\n\ninterface DOMRectInit {\n    height?: number;\n    width?: number;\n    x?: number;\n    y?: number;\n}\n\ninterface EcKeyGenParams extends Algorithm {\n    namedCurve: NamedCurve;\n}\n\ninterface EcKeyImportParams extends Algorithm {\n    namedCurve: NamedCurve;\n}\n\ninterface EcdhKeyDeriveParams extends Algorithm {\n    public: CryptoKey;\n}\n\ninterface EcdsaParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n}\n\ninterface ErrorEventInit extends EventInit {\n    colno?: number;\n    error?: any;\n    filename?: string;\n    lineno?: number;\n    message?: string;\n}\n\ninterface EventInit {\n    bubbles?: boolean;\n    cancelable?: boolean;\n    composed?: boolean;\n}\n\ninterface EventListenerOptions {\n    capture?: boolean;\n}\n\ninterface EventSourceInit {\n    withCredentials?: boolean;\n}\n\ninterface ExtendableEventInit extends EventInit {\n}\n\ninterface ExtendableMessageEventInit extends ExtendableEventInit {\n    data?: any;\n    lastEventId?: string;\n    origin?: string;\n    ports?: MessagePort[];\n    source?: Client | ServiceWorker | MessagePort | null;\n}\n\ninterface FetchEventInit extends ExtendableEventInit {\n    clientId?: string;\n    handled?: Promise<undefined>;\n    preloadResponse?: Promise<any>;\n    replacesClientId?: string;\n    request: Request;\n    resultingClientId?: string;\n}\n\ninterface FilePropertyBag extends BlobPropertyBag {\n    lastModified?: number;\n}\n\ninterface FileSystemGetDirectoryOptions {\n    create?: boolean;\n}\n\ninterface FileSystemGetFileOptions {\n    create?: boolean;\n}\n\ninterface FileSystemRemoveOptions {\n    recursive?: boolean;\n}\n\ninterface FontFaceDescriptors {\n    display?: string;\n    featureSettings?: string;\n    stretch?: string;\n    style?: string;\n    unicodeRange?: string;\n    variant?: string;\n    weight?: string;\n}\n\ninterface FontFaceSetLoadEventInit extends EventInit {\n    fontfaces?: FontFace[];\n}\n\ninterface GetNotificationOptions {\n    tag?: string;\n}\n\ninterface HkdfParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    info: BufferSource;\n    salt: BufferSource;\n}\n\ninterface HmacImportParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    length?: number;\n}\n\ninterface HmacKeyGenParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    length?: number;\n}\n\ninterface IDBDatabaseInfo {\n    name?: string;\n    version?: number;\n}\n\ninterface IDBIndexParameters {\n    multiEntry?: boolean;\n    unique?: boolean;\n}\n\ninterface IDBObjectStoreParameters {\n    autoIncrement?: boolean;\n    keyPath?: string | string[] | null;\n}\n\ninterface IDBVersionChangeEventInit extends EventInit {\n    newVersion?: number | null;\n    oldVersion?: number;\n}\n\ninterface ImageBitmapOptions {\n    colorSpaceConversion?: ColorSpaceConversion;\n    imageOrientation?: ImageOrientation;\n    premultiplyAlpha?: PremultiplyAlpha;\n    resizeHeight?: number;\n    resizeQuality?: ResizeQuality;\n    resizeWidth?: number;\n}\n\ninterface ImageBitmapRenderingContextSettings {\n    alpha?: boolean;\n}\n\ninterface ImageDataSettings {\n    colorSpace?: PredefinedColorSpace;\n}\n\ninterface ImportMeta {\n    url: string;\n}\n\ninterface JsonWebKey {\n    alg?: string;\n    crv?: string;\n    d?: string;\n    dp?: string;\n    dq?: string;\n    e?: string;\n    ext?: boolean;\n    k?: string;\n    key_ops?: string[];\n    kty?: string;\n    n?: string;\n    oth?: RsaOtherPrimesInfo[];\n    p?: string;\n    q?: string;\n    qi?: string;\n    use?: string;\n    x?: string;\n    y?: string;\n}\n\ninterface KeyAlgorithm {\n    name: string;\n}\n\ninterface LockInfo {\n    clientId?: string;\n    mode?: LockMode;\n    name?: string;\n}\n\ninterface LockManagerSnapshot {\n    held?: LockInfo[];\n    pending?: LockInfo[];\n}\n\ninterface LockOptions {\n    ifAvailable?: boolean;\n    mode?: LockMode;\n    signal?: AbortSignal;\n    steal?: boolean;\n}\n\ninterface MediaCapabilitiesDecodingInfo extends MediaCapabilitiesInfo {\n    configuration?: MediaDecodingConfiguration;\n}\n\ninterface MediaCapabilitiesEncodingInfo extends MediaCapabilitiesInfo {\n    configuration?: MediaEncodingConfiguration;\n}\n\ninterface MediaCapabilitiesInfo {\n    powerEfficient: boolean;\n    smooth: boolean;\n    supported: boolean;\n}\n\ninterface MediaConfiguration {\n    audio?: AudioConfiguration;\n    video?: VideoConfiguration;\n}\n\ninterface MediaDecodingConfiguration extends MediaConfiguration {\n    type: MediaDecodingType;\n}\n\ninterface MediaEncodingConfiguration extends MediaConfiguration {\n    type: MediaEncodingType;\n}\n\ninterface MessageEventInit<T = any> extends EventInit {\n    data?: T;\n    lastEventId?: string;\n    origin?: string;\n    ports?: MessagePort[];\n    source?: MessageEventSource | null;\n}\n\ninterface MultiCacheQueryOptions extends CacheQueryOptions {\n    cacheName?: string;\n}\n\ninterface NotificationAction {\n    action: string;\n    icon?: string;\n    title: string;\n}\n\ninterface NotificationEventInit extends ExtendableEventInit {\n    action?: string;\n    notification: Notification;\n}\n\ninterface NotificationOptions {\n    actions?: NotificationAction[];\n    badge?: string;\n    body?: string;\n    data?: any;\n    dir?: NotificationDirection;\n    icon?: string;\n    image?: string;\n    lang?: string;\n    renotify?: boolean;\n    requireInteraction?: boolean;\n    silent?: boolean;\n    tag?: string;\n    timestamp?: EpochTimeStamp;\n    vibrate?: VibratePattern;\n}\n\ninterface Pbkdf2Params extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n    iterations: number;\n    salt: BufferSource;\n}\n\ninterface PerformanceMarkOptions {\n    detail?: any;\n    startTime?: DOMHighResTimeStamp;\n}\n\ninterface PerformanceMeasureOptions {\n    detail?: any;\n    duration?: DOMHighResTimeStamp;\n    end?: string | DOMHighResTimeStamp;\n    start?: string | DOMHighResTimeStamp;\n}\n\ninterface PerformanceObserverInit {\n    buffered?: boolean;\n    entryTypes?: string[];\n    type?: string;\n}\n\ninterface PermissionDescriptor {\n    name: PermissionName;\n}\n\ninterface ProgressEventInit extends EventInit {\n    lengthComputable?: boolean;\n    loaded?: number;\n    total?: number;\n}\n\ninterface PromiseRejectionEventInit extends EventInit {\n    promise: Promise<any>;\n    reason?: any;\n}\n\ninterface PushEventInit extends ExtendableEventInit {\n    data?: PushMessageDataInit;\n}\n\ninterface PushSubscriptionJSON {\n    endpoint?: string;\n    expirationTime?: EpochTimeStamp | null;\n    keys?: Record<string, string>;\n}\n\ninterface PushSubscriptionOptionsInit {\n    applicationServerKey?: BufferSource | string | null;\n    userVisibleOnly?: boolean;\n}\n\ninterface QueuingStrategy<T = any> {\n    highWaterMark?: number;\n    size?: QueuingStrategySize<T>;\n}\n\ninterface QueuingStrategyInit {\n    /**\n     * Creates a new ByteLengthQueuingStrategy with the provided high water mark.\n     *\n     * Note that the provided high water mark will not be validated ahead of time. Instead, if it is negative, NaN, or not a number, the resulting ByteLengthQueuingStrategy will cause the corresponding stream constructor to throw.\n     */\n    highWaterMark: number;\n}\n\ninterface ReadableStreamDefaultReadDoneResult {\n    done: true;\n    value?: undefined;\n}\n\ninterface ReadableStreamDefaultReadValueResult<T> {\n    done: false;\n    value: T;\n}\n\ninterface ReadableWritablePair<R = any, W = any> {\n    readable: ReadableStream<R>;\n    /**\n     * Provides a convenient, chainable way of piping this readable stream through a transform stream (or any other { writable, readable } pair). It simply pipes the stream into the writable side of the supplied pair, and returns the readable side for further use.\n     *\n     * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n     */\n    writable: WritableStream<W>;\n}\n\ninterface RegistrationOptions {\n    scope?: string;\n    type?: WorkerType;\n    updateViaCache?: ServiceWorkerUpdateViaCache;\n}\n\ninterface RequestInit {\n    /** A BodyInit object or null to set request\'s body. */\n    body?: BodyInit | null;\n    /** A string indicating how the request will interact with the browser\'s cache to set request\'s cache. */\n    cache?: RequestCache;\n    /** A string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. Sets request\'s credentials. */\n    credentials?: RequestCredentials;\n    /** A Headers object, an object literal, or an array of two-item arrays to set request\'s headers. */\n    headers?: HeadersInit;\n    /** A cryptographic hash of the resource to be fetched by request. Sets request\'s integrity. */\n    integrity?: string;\n    /** A boolean to set request\'s keepalive. */\n    keepalive?: boolean;\n    /** A string to set request\'s method. */\n    method?: string;\n    /** A string to indicate whether the request will use CORS, or will be restricted to same-origin URLs. Sets request\'s mode. */\n    mode?: RequestMode;\n    /** A string indicating whether request follows redirects, results in an error upon encountering a redirect, or returns the redirect (in an opaque fashion). Sets request\'s redirect. */\n    redirect?: RequestRedirect;\n    /** A string whose value is a same-origin URL, "about:client", or the empty string, to set request\'s referrer. */\n    referrer?: string;\n    /** A referrer policy to set request\'s referrerPolicy. */\n    referrerPolicy?: ReferrerPolicy;\n    /** An AbortSignal to set request\'s signal. */\n    signal?: AbortSignal | null;\n    /** Can only be null. Used to disassociate request from any Window. */\n    window?: null;\n}\n\ninterface ResponseInit {\n    headers?: HeadersInit;\n    status?: number;\n    statusText?: string;\n}\n\ninterface RsaHashedImportParams extends Algorithm {\n    hash: HashAlgorithmIdentifier;\n}\n\ninterface RsaHashedKeyGenParams extends RsaKeyGenParams {\n    hash: HashAlgorithmIdentifier;\n}\n\ninterface RsaKeyGenParams extends Algorithm {\n    modulusLength: number;\n    publicExponent: BigInteger;\n}\n\ninterface RsaOaepParams extends Algorithm {\n    label?: BufferSource;\n}\n\ninterface RsaOtherPrimesInfo {\n    d?: string;\n    r?: string;\n    t?: string;\n}\n\ninterface RsaPssParams extends Algorithm {\n    saltLength: number;\n}\n\ninterface SecurityPolicyViolationEventInit extends EventInit {\n    blockedURI?: string;\n    columnNumber?: number;\n    disposition: SecurityPolicyViolationEventDisposition;\n    documentURI: string;\n    effectiveDirective: string;\n    lineNumber?: number;\n    originalPolicy: string;\n    referrer?: string;\n    sample?: string;\n    sourceFile?: string;\n    statusCode: number;\n    violatedDirective: string;\n}\n\ninterface StorageEstimate {\n    quota?: number;\n    usage?: number;\n}\n\ninterface StreamPipeOptions {\n    preventAbort?: boolean;\n    preventCancel?: boolean;\n    /**\n     * Pipes this readable stream to a given writable stream destination. The way in which the piping process behaves under various error conditions can be customized with a number of passed options. It returns a promise that fulfills when the piping process completes successfully, or rejects if any errors were encountered.\n     *\n     * Piping a stream will lock it for the duration of the pipe, preventing any other consumer from acquiring a reader.\n     *\n     * Errors and closures of the source and destination streams propagate as follows:\n     *\n     * An error in this source readable stream will abort destination, unless preventAbort is truthy. The returned promise will be rejected with the source\'s error, or with any error that occurs during aborting the destination.\n     *\n     * An error in destination will cancel this source readable stream, unless preventCancel is truthy. The returned promise will be rejected with the destination\'s error, or with any error that occurs during canceling the source.\n     *\n     * When this source readable stream closes, destination will be closed, unless preventClose is truthy. The returned promise will be fulfilled once this process completes, unless an error is encountered while closing the destination, in which case it will be rejected with that error.\n     *\n     * If destination starts out closed or closing, this source readable stream will be canceled, unless preventCancel is true. The returned promise will be rejected with an error indicating piping to a closed stream failed, or with any error that occurs during canceling the source.\n     *\n     * The signal option can be set to an AbortSignal to allow aborting an ongoing pipe operation via the corresponding AbortController. In this case, this source readable stream will be canceled, and destination aborted, unless the respective options preventCancel or preventAbort are set.\n     */\n    preventClose?: boolean;\n    signal?: AbortSignal;\n}\n\ninterface StructuredSerializeOptions {\n    transfer?: Transferable[];\n}\n\ninterface TextDecodeOptions {\n    stream?: boolean;\n}\n\ninterface TextDecoderOptions {\n    fatal?: boolean;\n    ignoreBOM?: boolean;\n}\n\ninterface TextEncoderEncodeIntoResult {\n    read?: number;\n    written?: number;\n}\n\ninterface Transformer<I = any, O = any> {\n    flush?: TransformerFlushCallback<O>;\n    readableType?: undefined;\n    start?: TransformerStartCallback<O>;\n    transform?: TransformerTransformCallback<I, O>;\n    writableType?: undefined;\n}\n\ninterface UnderlyingSink<W = any> {\n    abort?: UnderlyingSinkAbortCallback;\n    close?: UnderlyingSinkCloseCallback;\n    start?: UnderlyingSinkStartCallback;\n    type?: undefined;\n    write?: UnderlyingSinkWriteCallback<W>;\n}\n\ninterface UnderlyingSource<R = any> {\n    cancel?: UnderlyingSourceCancelCallback;\n    pull?: UnderlyingSourcePullCallback<R>;\n    start?: UnderlyingSourceStartCallback<R>;\n    type?: undefined;\n}\n\ninterface VideoConfiguration {\n    bitrate: number;\n    colorGamut?: ColorGamut;\n    contentType: string;\n    framerate: number;\n    hdrMetadataType?: HdrMetadataType;\n    height: number;\n    scalabilityMode?: string;\n    transferFunction?: TransferFunction;\n    width: number;\n}\n\ninterface WebGLContextAttributes {\n    alpha?: boolean;\n    antialias?: boolean;\n    depth?: boolean;\n    desynchronized?: boolean;\n    failIfMajorPerformanceCaveat?: boolean;\n    powerPreference?: WebGLPowerPreference;\n    premultipliedAlpha?: boolean;\n    preserveDrawingBuffer?: boolean;\n    stencil?: boolean;\n}\n\ninterface WebGLContextEventInit extends EventInit {\n    statusMessage?: string;\n}\n\ninterface WorkerOptions {\n    credentials?: RequestCredentials;\n    name?: string;\n    type?: WorkerType;\n}\n\n/** The ANGLE_instanced_arrays extension is part of the WebGL API and allows to draw the same object, or groups of similar objects multiple times, if they share the same vertex data, primitive count and type. */\ninterface ANGLE_instanced_arrays {\n    drawArraysInstancedANGLE(mode: GLenum, first: GLint, count: GLsizei, primcount: GLsizei): void;\n    drawElementsInstancedANGLE(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr, primcount: GLsizei): void;\n    vertexAttribDivisorANGLE(index: GLuint, divisor: GLuint): void;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: GLenum;\n}\n\n/** A controller object that allows you to abort one or more DOM requests as and when desired. */\ninterface AbortController {\n    /** Returns the AbortSignal object associated with this object. */\n    readonly signal: AbortSignal;\n    /** Invoking this method will set this object\'s AbortSignal\'s aborted flag and signal to any observers that the associated activity is to be aborted. */\n    abort(reason?: any): void;\n}\n\ndeclare var AbortController: {\n    prototype: AbortController;\n    new(): AbortController;\n};\n\ninterface AbortSignalEventMap {\n    "abort": Event;\n}\n\n/** A signal object that allows you to communicate with a DOM request (such as a Fetch) and abort it if required via an AbortController object. */\ninterface AbortSignal extends EventTarget {\n    /** Returns true if this AbortSignal\'s AbortController has signaled to abort, and false otherwise. */\n    readonly aborted: boolean;\n    onabort: ((this: AbortSignal, ev: Event) => any) | null;\n    addEventListener<K extends keyof AbortSignalEventMap>(type: K, listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AbortSignalEventMap>(type: K, listener: (this: AbortSignal, ev: AbortSignalEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var AbortSignal: {\n    prototype: AbortSignal;\n    new(): AbortSignal;\n    // abort(): AbortSignal; - To be re-added in the future\n};\n\ninterface AbstractWorkerEventMap {\n    "error": ErrorEvent;\n}\n\ninterface AbstractWorker {\n    onerror: ((this: AbstractWorker, ev: ErrorEvent) => any) | null;\n    addEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof AbstractWorkerEventMap>(type: K, listener: (this: AbstractWorker, ev: AbstractWorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ninterface AnimationFrameProvider {\n    cancelAnimationFrame(handle: number): void;\n    requestAnimationFrame(callback: FrameRequestCallback): number;\n}\n\n/** A file-like object of immutable, raw data. Blobs represent data that isn\'t necessarily in a JavaScript-native format. The File interface is based on Blob, inheriting blob functionality and expanding it to support files on the user\'s system. */\ninterface Blob {\n    readonly size: number;\n    readonly type: string;\n    arrayBuffer(): Promise<ArrayBuffer>;\n    slice(start?: number, end?: number, contentType?: string): Blob;\n    stream(): ReadableStream;\n    text(): Promise<string>;\n}\n\ndeclare var Blob: {\n    prototype: Blob;\n    new(blobParts?: BlobPart[], options?: BlobPropertyBag): Blob;\n};\n\ninterface Body {\n    readonly body: ReadableStream<Uint8Array> | null;\n    readonly bodyUsed: boolean;\n    arrayBuffer(): Promise<ArrayBuffer>;\n    blob(): Promise<Blob>;\n    formData(): Promise<FormData>;\n    json(): Promise<any>;\n    text(): Promise<string>;\n}\n\ninterface BroadcastChannelEventMap {\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\ninterface BroadcastChannel extends EventTarget {\n    /** Returns the channel name (as passed to the constructor). */\n    readonly name: string;\n    onmessage: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;\n    onmessageerror: ((this: BroadcastChannel, ev: MessageEvent) => any) | null;\n    /** Closes the BroadcastChannel object, opening it up to garbage collection. */\n    close(): void;\n    /** Sends the given message to other BroadcastChannel objects set up for this channel. Messages can be structured objects, e.g. nested objects and arrays. */\n    postMessage(message: any): void;\n    addEventListener<K extends keyof BroadcastChannelEventMap>(type: K, listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof BroadcastChannelEventMap>(type: K, listener: (this: BroadcastChannel, ev: BroadcastChannelEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var BroadcastChannel: {\n    prototype: BroadcastChannel;\n    new(name: string): BroadcastChannel;\n};\n\n/** This Streams API interface provides a built-in byte length queuing strategy that can be used when constructing streams. */\ninterface ByteLengthQueuingStrategy extends QueuingStrategy<ArrayBufferView> {\n    readonly highWaterMark: number;\n    readonly size: QueuingStrategySize<ArrayBufferView>;\n}\n\ndeclare var ByteLengthQueuingStrategy: {\n    prototype: ByteLengthQueuingStrategy;\n    new(init: QueuingStrategyInit): ByteLengthQueuingStrategy;\n};\n\n/**\n * Provides a storage mechanism for Request / Response object pairs that are cached, for example as part of the ServiceWorker life cycle. Note that the Cache interface is exposed to windowed scopes as well as workers. You don\'t have to use it in conjunction with service workers, even though it is defined in the service worker spec.\n * Available only in secure contexts.\n */\ninterface Cache {\n    add(request: RequestInfo): Promise<void>;\n    addAll(requests: RequestInfo[]): Promise<void>;\n    delete(request: RequestInfo, options?: CacheQueryOptions): Promise<boolean>;\n    keys(request?: RequestInfo, options?: CacheQueryOptions): Promise<ReadonlyArray<Request>>;\n    match(request: RequestInfo, options?: CacheQueryOptions): Promise<Response | undefined>;\n    matchAll(request?: RequestInfo, options?: CacheQueryOptions): Promise<ReadonlyArray<Response>>;\n    put(request: RequestInfo, response: Response): Promise<void>;\n}\n\ndeclare var Cache: {\n    prototype: Cache;\n    new(): Cache;\n};\n\n/**\n * The storage for Cache objects.\n * Available only in secure contexts.\n */\ninterface CacheStorage {\n    delete(cacheName: string): Promise<boolean>;\n    has(cacheName: string): Promise<boolean>;\n    keys(): Promise<string[]>;\n    match(request: RequestInfo, options?: MultiCacheQueryOptions): Promise<Response | undefined>;\n    open(cacheName: string): Promise<Cache>;\n}\n\ndeclare var CacheStorage: {\n    prototype: CacheStorage;\n    new(): CacheStorage;\n};\n\n/** An opaque object describing a gradient. It is returned by the methods CanvasRenderingContext2D.createLinearGradient() or CanvasRenderingContext2D.createRadialGradient(). */\ninterface CanvasGradient {\n    /**\n     * Adds a color stop with the given color to the gradient at the given offset. 0.0 is the offset at one end of the gradient, 1.0 is the offset at the other end.\n     *\n     * Throws an "IndexSizeError" DOMException if the offset is out of range. Throws a "SyntaxError" DOMException if the color cannot be parsed.\n     */\n    addColorStop(offset: number, color: string): void;\n}\n\ndeclare var CanvasGradient: {\n    prototype: CanvasGradient;\n    new(): CanvasGradient;\n};\n\ninterface CanvasPath {\n    arc(x: number, y: number, radius: number, startAngle: number, endAngle: number, counterclockwise?: boolean): void;\n    arcTo(x1: number, y1: number, x2: number, y2: number, radius: number): void;\n    bezierCurveTo(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void;\n    closePath(): void;\n    ellipse(x: number, y: number, radiusX: number, radiusY: number, rotation: number, startAngle: number, endAngle: number, counterclockwise?: boolean): void;\n    lineTo(x: number, y: number): void;\n    moveTo(x: number, y: number): void;\n    quadraticCurveTo(cpx: number, cpy: number, x: number, y: number): void;\n    rect(x: number, y: number, w: number, h: number): void;\n}\n\n/** An opaque object describing a pattern, based on an image, a canvas, or a video, created by the CanvasRenderingContext2D.createPattern() method. */\ninterface CanvasPattern {\n    /** Sets the transformation matrix that will be used when rendering the pattern during a fill or stroke painting operation. */\n    setTransform(transform?: DOMMatrix2DInit): void;\n}\n\ndeclare var CanvasPattern: {\n    prototype: CanvasPattern;\n    new(): CanvasPattern;\n};\n\n/** The Client interface represents an executable context such as a Worker, or a SharedWorker. Window clients are represented by the more-specific WindowClient. You can get Client/WindowClient objects from methods such as Clients.matchAll() and Clients.get(). */\ninterface Client {\n    readonly frameType: FrameType;\n    readonly id: string;\n    readonly type: ClientTypes;\n    readonly url: string;\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: StructuredSerializeOptions): void;\n}\n\ndeclare var Client: {\n    prototype: Client;\n    new(): Client;\n};\n\n/** Provides access to Client objects. Access it via self.clients within a service worker. */\ninterface Clients {\n    claim(): Promise<void>;\n    get(id: string): Promise<Client | undefined>;\n    matchAll<T extends ClientQueryOptions>(options?: T): Promise<ReadonlyArray<T["type"] extends "window" ? WindowClient : Client>>;\n    openWindow(url: string | URL): Promise<WindowClient | null>;\n}\n\ndeclare var Clients: {\n    prototype: Clients;\n    new(): Clients;\n};\n\n/** A CloseEvent is sent to clients using WebSockets when the connection is closed. This is delivered to the listener indicated by the WebSocket object\'s onclose attribute. */\ninterface CloseEvent extends Event {\n    /** Returns the WebSocket connection close code provided by the server. */\n    readonly code: number;\n    /** Returns the WebSocket connection close reason provided by the server. */\n    readonly reason: string;\n    /** Returns true if the connection closed cleanly; false otherwise. */\n    readonly wasClean: boolean;\n}\n\ndeclare var CloseEvent: {\n    prototype: CloseEvent;\n    new(type: string, eventInitDict?: CloseEventInit): CloseEvent;\n};\n\n/** This Streams API interface provides a built-in byte length queuing strategy that can be used when constructing streams. */\ninterface CountQueuingStrategy extends QueuingStrategy {\n    readonly highWaterMark: number;\n    readonly size: QueuingStrategySize;\n}\n\ndeclare var CountQueuingStrategy: {\n    prototype: CountQueuingStrategy;\n    new(init: QueuingStrategyInit): CountQueuingStrategy;\n};\n\n/** Basic cryptography features available in the current context. It allows access to a cryptographically strong random number generator and to cryptographic primitives. */\ninterface Crypto {\n    /** Available only in secure contexts. */\n    readonly subtle: SubtleCrypto;\n    getRandomValues<T extends ArrayBufferView | null>(array: T): T;\n    /** Available only in secure contexts. */\n    randomUUID(): string;\n}\n\ndeclare var Crypto: {\n    prototype: Crypto;\n    new(): Crypto;\n};\n\n/**\n * The CryptoKey dictionary of the Web Crypto API represents a cryptographic key.\n * Available only in secure contexts.\n */\ninterface CryptoKey {\n    readonly algorithm: KeyAlgorithm;\n    readonly extractable: boolean;\n    readonly type: KeyType;\n    readonly usages: KeyUsage[];\n}\n\ndeclare var CryptoKey: {\n    prototype: CryptoKey;\n    new(): CryptoKey;\n};\n\ninterface CustomEvent<T = any> extends Event {\n    /** Returns any custom data event was created with. Typically used for synthetic events. */\n    readonly detail: T;\n    /** @deprecated */\n    initCustomEvent(type: string, bubbles?: boolean, cancelable?: boolean, detail?: T): void;\n}\n\ndeclare var CustomEvent: {\n    prototype: CustomEvent;\n    new<T>(type: string, eventInitDict?: CustomEventInit<T>): CustomEvent<T>;\n};\n\n/** An abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API. */\ninterface DOMException extends Error {\n    readonly code: number;\n    readonly message: string;\n    readonly name: string;\n    readonly ABORT_ERR: number;\n    readonly DATA_CLONE_ERR: number;\n    readonly DOMSTRING_SIZE_ERR: number;\n    readonly HIERARCHY_REQUEST_ERR: number;\n    readonly INDEX_SIZE_ERR: number;\n    readonly INUSE_ATTRIBUTE_ERR: number;\n    readonly INVALID_ACCESS_ERR: number;\n    readonly INVALID_CHARACTER_ERR: number;\n    readonly INVALID_MODIFICATION_ERR: number;\n    readonly INVALID_NODE_TYPE_ERR: number;\n    readonly INVALID_STATE_ERR: number;\n    readonly NAMESPACE_ERR: number;\n    readonly NETWORK_ERR: number;\n    readonly NOT_FOUND_ERR: number;\n    readonly NOT_SUPPORTED_ERR: number;\n    readonly NO_DATA_ALLOWED_ERR: number;\n    readonly NO_MODIFICATION_ALLOWED_ERR: number;\n    readonly QUOTA_EXCEEDED_ERR: number;\n    readonly SECURITY_ERR: number;\n    readonly SYNTAX_ERR: number;\n    readonly TIMEOUT_ERR: number;\n    readonly TYPE_MISMATCH_ERR: number;\n    readonly URL_MISMATCH_ERR: number;\n    readonly VALIDATION_ERR: number;\n    readonly WRONG_DOCUMENT_ERR: number;\n}\n\ndeclare var DOMException: {\n    prototype: DOMException;\n    new(message?: string, name?: string): DOMException;\n    readonly ABORT_ERR: number;\n    readonly DATA_CLONE_ERR: number;\n    readonly DOMSTRING_SIZE_ERR: number;\n    readonly HIERARCHY_REQUEST_ERR: number;\n    readonly INDEX_SIZE_ERR: number;\n    readonly INUSE_ATTRIBUTE_ERR: number;\n    readonly INVALID_ACCESS_ERR: number;\n    readonly INVALID_CHARACTER_ERR: number;\n    readonly INVALID_MODIFICATION_ERR: number;\n    readonly INVALID_NODE_TYPE_ERR: number;\n    readonly INVALID_STATE_ERR: number;\n    readonly NAMESPACE_ERR: number;\n    readonly NETWORK_ERR: number;\n    readonly NOT_FOUND_ERR: number;\n    readonly NOT_SUPPORTED_ERR: number;\n    readonly NO_DATA_ALLOWED_ERR: number;\n    readonly NO_MODIFICATION_ALLOWED_ERR: number;\n    readonly QUOTA_EXCEEDED_ERR: number;\n    readonly SECURITY_ERR: number;\n    readonly SYNTAX_ERR: number;\n    readonly TIMEOUT_ERR: number;\n    readonly TYPE_MISMATCH_ERR: number;\n    readonly URL_MISMATCH_ERR: number;\n    readonly VALIDATION_ERR: number;\n    readonly WRONG_DOCUMENT_ERR: number;\n};\n\ninterface DOMMatrix extends DOMMatrixReadOnly {\n    a: number;\n    b: number;\n    c: number;\n    d: number;\n    e: number;\n    f: number;\n    m11: number;\n    m12: number;\n    m13: number;\n    m14: number;\n    m21: number;\n    m22: number;\n    m23: number;\n    m24: number;\n    m31: number;\n    m32: number;\n    m33: number;\n    m34: number;\n    m41: number;\n    m42: number;\n    m43: number;\n    m44: number;\n    invertSelf(): DOMMatrix;\n    multiplySelf(other?: DOMMatrixInit): DOMMatrix;\n    preMultiplySelf(other?: DOMMatrixInit): DOMMatrix;\n    rotateAxisAngleSelf(x?: number, y?: number, z?: number, angle?: number): DOMMatrix;\n    rotateFromVectorSelf(x?: number, y?: number): DOMMatrix;\n    rotateSelf(rotX?: number, rotY?: number, rotZ?: number): DOMMatrix;\n    scale3dSelf(scale?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;\n    scaleSelf(scaleX?: number, scaleY?: number, scaleZ?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;\n    skewXSelf(sx?: number): DOMMatrix;\n    skewYSelf(sy?: number): DOMMatrix;\n    translateSelf(tx?: number, ty?: number, tz?: number): DOMMatrix;\n}\n\ndeclare var DOMMatrix: {\n    prototype: DOMMatrix;\n    new(init?: string | number[]): DOMMatrix;\n    fromFloat32Array(array32: Float32Array): DOMMatrix;\n    fromFloat64Array(array64: Float64Array): DOMMatrix;\n    fromMatrix(other?: DOMMatrixInit): DOMMatrix;\n};\n\ninterface DOMMatrixReadOnly {\n    readonly a: number;\n    readonly b: number;\n    readonly c: number;\n    readonly d: number;\n    readonly e: number;\n    readonly f: number;\n    readonly is2D: boolean;\n    readonly isIdentity: boolean;\n    readonly m11: number;\n    readonly m12: number;\n    readonly m13: number;\n    readonly m14: number;\n    readonly m21: number;\n    readonly m22: number;\n    readonly m23: number;\n    readonly m24: number;\n    readonly m31: number;\n    readonly m32: number;\n    readonly m33: number;\n    readonly m34: number;\n    readonly m41: number;\n    readonly m42: number;\n    readonly m43: number;\n    readonly m44: number;\n    flipX(): DOMMatrix;\n    flipY(): DOMMatrix;\n    inverse(): DOMMatrix;\n    multiply(other?: DOMMatrixInit): DOMMatrix;\n    rotate(rotX?: number, rotY?: number, rotZ?: number): DOMMatrix;\n    rotateAxisAngle(x?: number, y?: number, z?: number, angle?: number): DOMMatrix;\n    rotateFromVector(x?: number, y?: number): DOMMatrix;\n    scale(scaleX?: number, scaleY?: number, scaleZ?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;\n    scale3d(scale?: number, originX?: number, originY?: number, originZ?: number): DOMMatrix;\n    /** @deprecated */\n    scaleNonUniform(scaleX?: number, scaleY?: number): DOMMatrix;\n    skewX(sx?: number): DOMMatrix;\n    skewY(sy?: number): DOMMatrix;\n    toFloat32Array(): Float32Array;\n    toFloat64Array(): Float64Array;\n    toJSON(): any;\n    transformPoint(point?: DOMPointInit): DOMPoint;\n    translate(tx?: number, ty?: number, tz?: number): DOMMatrix;\n}\n\ndeclare var DOMMatrixReadOnly: {\n    prototype: DOMMatrixReadOnly;\n    new(init?: string | number[]): DOMMatrixReadOnly;\n    fromFloat32Array(array32: Float32Array): DOMMatrixReadOnly;\n    fromFloat64Array(array64: Float64Array): DOMMatrixReadOnly;\n    fromMatrix(other?: DOMMatrixInit): DOMMatrixReadOnly;\n};\n\ninterface DOMPoint extends DOMPointReadOnly {\n    w: number;\n    x: number;\n    y: number;\n    z: number;\n}\n\ndeclare var DOMPoint: {\n    prototype: DOMPoint;\n    new(x?: number, y?: number, z?: number, w?: number): DOMPoint;\n    fromPoint(other?: DOMPointInit): DOMPoint;\n};\n\ninterface DOMPointReadOnly {\n    readonly w: number;\n    readonly x: number;\n    readonly y: number;\n    readonly z: number;\n    matrixTransform(matrix?: DOMMatrixInit): DOMPoint;\n    toJSON(): any;\n}\n\ndeclare var DOMPointReadOnly: {\n    prototype: DOMPointReadOnly;\n    new(x?: number, y?: number, z?: number, w?: number): DOMPointReadOnly;\n    fromPoint(other?: DOMPointInit): DOMPointReadOnly;\n};\n\ninterface DOMQuad {\n    readonly p1: DOMPoint;\n    readonly p2: DOMPoint;\n    readonly p3: DOMPoint;\n    readonly p4: DOMPoint;\n    getBounds(): DOMRect;\n    toJSON(): any;\n}\n\ndeclare var DOMQuad: {\n    prototype: DOMQuad;\n    new(p1?: DOMPointInit, p2?: DOMPointInit, p3?: DOMPointInit, p4?: DOMPointInit): DOMQuad;\n    fromQuad(other?: DOMQuadInit): DOMQuad;\n    fromRect(other?: DOMRectInit): DOMQuad;\n};\n\ninterface DOMRect extends DOMRectReadOnly {\n    height: number;\n    width: number;\n    x: number;\n    y: number;\n}\n\ndeclare var DOMRect: {\n    prototype: DOMRect;\n    new(x?: number, y?: number, width?: number, height?: number): DOMRect;\n    fromRect(other?: DOMRectInit): DOMRect;\n};\n\ninterface DOMRectReadOnly {\n    readonly bottom: number;\n    readonly height: number;\n    readonly left: number;\n    readonly right: number;\n    readonly top: number;\n    readonly width: number;\n    readonly x: number;\n    readonly y: number;\n    toJSON(): any;\n}\n\ndeclare var DOMRectReadOnly: {\n    prototype: DOMRectReadOnly;\n    new(x?: number, y?: number, width?: number, height?: number): DOMRectReadOnly;\n    fromRect(other?: DOMRectInit): DOMRectReadOnly;\n};\n\n/** A type returned by some APIs which contains a list of DOMString (strings). */\ninterface DOMStringList {\n    /** Returns the number of strings in strings. */\n    readonly length: number;\n    /** Returns true if strings contains string, and false otherwise. */\n    contains(string: string): boolean;\n    /** Returns the string with index index from strings. */\n    item(index: number): string | null;\n    [index: number]: string;\n}\n\ndeclare var DOMStringList: {\n    prototype: DOMStringList;\n    new(): DOMStringList;\n};\n\ninterface DedicatedWorkerGlobalScopeEventMap extends WorkerGlobalScopeEventMap {\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\n/** (the Worker global scope) is accessible through the self keyword. Some additional global functions, namespaces objects, and constructors, not typically associated with the worker global scope, but available on it, are listed in the JavaScript Reference. See also: Functions available to workers. */\ninterface DedicatedWorkerGlobalScope extends WorkerGlobalScope, AnimationFrameProvider {\n    /** Returns dedicatedWorkerGlobal\'s name, i.e. the value given to the Worker constructor. Primarily useful for debugging. */\n    readonly name: string;\n    onmessage: ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any) | null;\n    onmessageerror: ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any) | null;\n    /** Aborts dedicatedWorkerGlobal. */\n    close(): void;\n    /** Clones message and transmits it to the Worker object associated with dedicatedWorkerGlobal. transfer can be passed as a list of objects that are to be transferred rather than cloned. */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: StructuredSerializeOptions): void;\n    addEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type: K, listener: (this: DedicatedWorkerGlobalScope, ev: DedicatedWorkerGlobalScopeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type: K, listener: (this: DedicatedWorkerGlobalScope, ev: DedicatedWorkerGlobalScopeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var DedicatedWorkerGlobalScope: {\n    prototype: DedicatedWorkerGlobalScope;\n    new(): DedicatedWorkerGlobalScope;\n};\n\ninterface EXT_blend_minmax {\n    readonly MAX_EXT: GLenum;\n    readonly MIN_EXT: GLenum;\n}\n\ninterface EXT_color_buffer_float {\n}\n\ninterface EXT_color_buffer_half_float {\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: GLenum;\n    readonly RGB16F_EXT: GLenum;\n    readonly RGBA16F_EXT: GLenum;\n    readonly UNSIGNED_NORMALIZED_EXT: GLenum;\n}\n\ninterface EXT_float_blend {\n}\n\n/** The EXT_frag_depth extension is part of the WebGL API and enables to set a depth value of a fragment from within the fragment shader. */\ninterface EXT_frag_depth {\n}\n\ninterface EXT_sRGB {\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT: GLenum;\n    readonly SRGB8_ALPHA8_EXT: GLenum;\n    readonly SRGB_ALPHA_EXT: GLenum;\n    readonly SRGB_EXT: GLenum;\n}\n\ninterface EXT_shader_texture_lod {\n}\n\ninterface EXT_texture_compression_rgtc {\n    readonly COMPRESSED_RED_GREEN_RGTC2_EXT: GLenum;\n    readonly COMPRESSED_RED_RGTC1_EXT: GLenum;\n    readonly COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT: GLenum;\n    readonly COMPRESSED_SIGNED_RED_RGTC1_EXT: GLenum;\n}\n\n/** The EXT_texture_filter_anisotropic extension is part of the WebGL API and exposes two constants for anisotropic filtering (AF). */\ninterface EXT_texture_filter_anisotropic {\n    readonly MAX_TEXTURE_MAX_ANISOTROPY_EXT: GLenum;\n    readonly TEXTURE_MAX_ANISOTROPY_EXT: GLenum;\n}\n\n/** Events providing information related to errors in scripts or in files. */\ninterface ErrorEvent extends Event {\n    readonly colno: number;\n    readonly error: any;\n    readonly filename: string;\n    readonly lineno: number;\n    readonly message: string;\n}\n\ndeclare var ErrorEvent: {\n    prototype: ErrorEvent;\n    new(type: string, eventInitDict?: ErrorEventInit): ErrorEvent;\n};\n\n/** An event which takes place in the DOM. */\ninterface Event {\n    /** Returns true or false depending on how event was initialized. True if event goes through its target\'s ancestors in reverse tree order, and false otherwise. */\n    readonly bubbles: boolean;\n    cancelBubble: boolean;\n    /** Returns true or false depending on how event was initialized. Its return value does not always carry meaning, but true can indicate that part of the operation during which event was dispatched, can be canceled by invoking the preventDefault() method. */\n    readonly cancelable: boolean;\n    /** Returns true or false depending on how event was initialized. True if event invokes listeners past a ShadowRoot node that is the root of its target, and false otherwise. */\n    readonly composed: boolean;\n    /** Returns the object whose event listener\'s callback is currently being invoked. */\n    readonly currentTarget: EventTarget | null;\n    /** Returns true if preventDefault() was invoked successfully to indicate cancelation, and false otherwise. */\n    readonly defaultPrevented: boolean;\n    /** Returns the event\'s phase, which is one of NONE, CAPTURING_PHASE, AT_TARGET, and BUBBLING_PHASE. */\n    readonly eventPhase: number;\n    /** Returns true if event was dispatched by the user agent, and false otherwise. */\n    readonly isTrusted: boolean;\n    /** @deprecated */\n    returnValue: boolean;\n    /** @deprecated */\n    readonly srcElement: EventTarget | null;\n    /** Returns the object to which event is dispatched (its target). */\n    readonly target: EventTarget | null;\n    /** Returns the event\'s timestamp as the number of milliseconds measured relative to the time origin. */\n    readonly timeStamp: DOMHighResTimeStamp;\n    /** Returns the type of event, e.g. "click", "hashchange", or "submit". */\n    readonly type: string;\n    /** Returns the invocation target objects of event\'s path (objects on which listeners will be invoked), except for any nodes in shadow trees of which the shadow root\'s mode is "closed" that are not reachable from event\'s currentTarget. */\n    composedPath(): EventTarget[];\n    /** @deprecated */\n    initEvent(type: string, bubbles?: boolean, cancelable?: boolean): void;\n    /** If invoked when the cancelable attribute value is true, and while executing a listener for the event with passive set to false, signals to the operation that caused event to be dispatched that it needs to be canceled. */\n    preventDefault(): void;\n    /** Invoking this method prevents event from reaching any registered event listeners after the current one finishes running and, when dispatched in a tree, also prevents event from reaching any other objects. */\n    stopImmediatePropagation(): void;\n    /** When dispatched in a tree, invoking this method prevents event from reaching any objects other than the current object. */\n    stopPropagation(): void;\n    readonly AT_TARGET: number;\n    readonly BUBBLING_PHASE: number;\n    readonly CAPTURING_PHASE: number;\n    readonly NONE: number;\n}\n\ndeclare var Event: {\n    prototype: Event;\n    new(type: string, eventInitDict?: EventInit): Event;\n    readonly AT_TARGET: number;\n    readonly BUBBLING_PHASE: number;\n    readonly CAPTURING_PHASE: number;\n    readonly NONE: number;\n};\n\ninterface EventListener {\n    (evt: Event): void;\n}\n\ninterface EventListenerObject {\n    handleEvent(object: Event): void;\n}\n\ninterface EventSourceEventMap {\n    "error": Event;\n    "message": MessageEvent;\n    "open": Event;\n}\n\ninterface EventSource extends EventTarget {\n    onerror: ((this: EventSource, ev: Event) => any) | null;\n    onmessage: ((this: EventSource, ev: MessageEvent) => any) | null;\n    onopen: ((this: EventSource, ev: Event) => any) | null;\n    /** Returns the state of this EventSource object\'s connection. It can have the values described below. */\n    readonly readyState: number;\n    /** Returns the URL providing the event stream. */\n    readonly url: string;\n    /** Returns true if the credentials mode for connection requests to the URL providing the event stream is set to "include", and false otherwise. */\n    readonly withCredentials: boolean;\n    /** Aborts any instances of the fetch algorithm started for this EventSource object, and sets the readyState attribute to CLOSED. */\n    close(): void;\n    readonly CLOSED: number;\n    readonly CONNECTING: number;\n    readonly OPEN: number;\n    addEventListener<K extends keyof EventSourceEventMap>(type: K, listener: (this: EventSource, ev: EventSourceEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: (this: EventSource, event: MessageEvent) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof EventSourceEventMap>(type: K, listener: (this: EventSource, ev: EventSourceEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: (this: EventSource, event: MessageEvent) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var EventSource: {\n    prototype: EventSource;\n    new(url: string | URL, eventSourceInitDict?: EventSourceInit): EventSource;\n    readonly CLOSED: number;\n    readonly CONNECTING: number;\n    readonly OPEN: number;\n};\n\n/** EventTarget is a DOM interface implemented by objects that can receive events and may have listeners for them. */\ninterface EventTarget {\n    /**\n     * Appends an event listener for events whose type attribute value is type. The callback argument sets the callback that will be invoked when the event is dispatched.\n     *\n     * The options argument sets listener-specific options. For compatibility this can be a boolean, in which case the method behaves exactly as if the value was specified as options\'s capture.\n     *\n     * When set to true, options\'s capture prevents callback from being invoked when the event\'s eventPhase attribute value is BUBBLING_PHASE. When false (or not present), callback will not be invoked when event\'s eventPhase attribute value is CAPTURING_PHASE. Either way, callback will be invoked if event\'s eventPhase attribute value is AT_TARGET.\n     *\n     * When set to true, options\'s passive indicates that the callback will not cancel the event by invoking preventDefault(). This is used to enable performance optimizations described in § 2.8 Observing event listeners.\n     *\n     * When set to true, options\'s once indicates that the callback will only be invoked once after which the event listener will be removed.\n     *\n     * If an AbortSignal is passed for options\'s signal, then the event listener will be removed when signal is aborted.\n     *\n     * The event listener is appended to target\'s event listener list and is not appended if it has the same type, callback, and capture.\n     */\n    addEventListener(type: string, callback: EventListenerOrEventListenerObject | null, options?: AddEventListenerOptions | boolean): void;\n    /** Dispatches a synthetic event event to target and returns true if either event\'s cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise. */\n    dispatchEvent(event: Event): boolean;\n    /** Removes the event listener in target\'s event listener list with the same type, callback, and options. */\n    removeEventListener(type: string, callback: EventListenerOrEventListenerObject | null, options?: EventListenerOptions | boolean): void;\n}\n\ndeclare var EventTarget: {\n    prototype: EventTarget;\n    new(): EventTarget;\n};\n\n/** Extends the lifetime of the install and activate events dispatched on the global scope as part of the service worker lifecycle. This ensures that any functional events (like FetchEvent) are not dispatched until it upgrades database schemas and deletes the outdated cache entries. */\ninterface ExtendableEvent extends Event {\n    waitUntil(f: any): void;\n}\n\ndeclare var ExtendableEvent: {\n    prototype: ExtendableEvent;\n    new(type: string, eventInitDict?: ExtendableEventInit): ExtendableEvent;\n};\n\n/** This ServiceWorker API interface represents the event object of a message event fired on a service worker (when a channel message is received on the ServiceWorkerGlobalScope from another context) — extends the lifetime of such events. */\ninterface ExtendableMessageEvent extends ExtendableEvent {\n    readonly data: any;\n    readonly lastEventId: string;\n    readonly origin: string;\n    readonly ports: ReadonlyArray<MessagePort>;\n    readonly source: Client | ServiceWorker | MessagePort | null;\n}\n\ndeclare var ExtendableMessageEvent: {\n    prototype: ExtendableMessageEvent;\n    new(type: string, eventInitDict?: ExtendableMessageEventInit): ExtendableMessageEvent;\n};\n\n/** This is the event type for fetch events dispatched on the service worker global scope. It contains information about the fetch, including the request and how the receiver will treat the response. It provides the event.respondWith() method, which allows us to provide a response to this fetch. */\ninterface FetchEvent extends ExtendableEvent {\n    readonly clientId: string;\n    readonly handled: Promise<undefined>;\n    readonly request: Request;\n    readonly resultingClientId: string;\n    respondWith(r: Response | PromiseLike<Response>): void;\n}\n\ndeclare var FetchEvent: {\n    prototype: FetchEvent;\n    new(type: string, eventInitDict: FetchEventInit): FetchEvent;\n};\n\n/** Provides information about files and allows JavaScript in a web page to access their content. */\ninterface File extends Blob {\n    readonly lastModified: number;\n    readonly name: string;\n    readonly webkitRelativePath: string;\n}\n\ndeclare var File: {\n    prototype: File;\n    new(fileBits: BlobPart[], fileName: string, options?: FilePropertyBag): File;\n};\n\n/** An object of this type is returned by the files property of the HTML <input> element; this lets you access the list of files selected with the <input type="file"> element. It\'s also used for a list of files dropped into web content when using the drag and drop API; see the DataTransfer object for details on this usage. */\ninterface FileList {\n    readonly length: number;\n    item(index: number): File | null;\n    [index: number]: File;\n}\n\ndeclare var FileList: {\n    prototype: FileList;\n    new(): FileList;\n};\n\ninterface FileReaderEventMap {\n    "abort": ProgressEvent<FileReader>;\n    "error": ProgressEvent<FileReader>;\n    "load": ProgressEvent<FileReader>;\n    "loadend": ProgressEvent<FileReader>;\n    "loadstart": ProgressEvent<FileReader>;\n    "progress": ProgressEvent<FileReader>;\n}\n\n/** Lets web applications asynchronously read the contents of files (or raw data buffers) stored on the user\'s computer, using File or Blob objects to specify the file or data to read. */\ninterface FileReader extends EventTarget {\n    readonly error: DOMException | null;\n    onabort: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    onerror: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    onload: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    onloadend: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    onloadstart: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    onprogress: ((this: FileReader, ev: ProgressEvent<FileReader>) => any) | null;\n    readonly readyState: number;\n    readonly result: string | ArrayBuffer | null;\n    abort(): void;\n    readAsArrayBuffer(blob: Blob): void;\n    readAsBinaryString(blob: Blob): void;\n    readAsDataURL(blob: Blob): void;\n    readAsText(blob: Blob, encoding?: string): void;\n    readonly DONE: number;\n    readonly EMPTY: number;\n    readonly LOADING: number;\n    addEventListener<K extends keyof FileReaderEventMap>(type: K, listener: (this: FileReader, ev: FileReaderEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof FileReaderEventMap>(type: K, listener: (this: FileReader, ev: FileReaderEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var FileReader: {\n    prototype: FileReader;\n    new(): FileReader;\n    readonly DONE: number;\n    readonly EMPTY: number;\n    readonly LOADING: number;\n};\n\n/** Allows to read File or Blob objects in a synchronous way. */\ninterface FileReaderSync {\n    readAsArrayBuffer(blob: Blob): ArrayBuffer;\n    /** @deprecated */\n    readAsBinaryString(blob: Blob): string;\n    readAsDataURL(blob: Blob): string;\n    readAsText(blob: Blob, encoding?: string): string;\n}\n\ndeclare var FileReaderSync: {\n    prototype: FileReaderSync;\n    new(): FileReaderSync;\n};\n\n/** Available only in secure contexts. */\ninterface FileSystemDirectoryHandle extends FileSystemHandle {\n    readonly kind: "directory";\n    getDirectoryHandle(name: string, options?: FileSystemGetDirectoryOptions): Promise<FileSystemDirectoryHandle>;\n    getFileHandle(name: string, options?: FileSystemGetFileOptions): Promise<FileSystemFileHandle>;\n    removeEntry(name: string, options?: FileSystemRemoveOptions): Promise<void>;\n    resolve(possibleDescendant: FileSystemHandle): Promise<string[] | null>;\n}\n\ndeclare var FileSystemDirectoryHandle: {\n    prototype: FileSystemDirectoryHandle;\n    new(): FileSystemDirectoryHandle;\n};\n\n/** Available only in secure contexts. */\ninterface FileSystemFileHandle extends FileSystemHandle {\n    readonly kind: "file";\n    getFile(): Promise<File>;\n}\n\ndeclare var FileSystemFileHandle: {\n    prototype: FileSystemFileHandle;\n    new(): FileSystemFileHandle;\n};\n\n/** Available only in secure contexts. */\ninterface FileSystemHandle {\n    readonly kind: FileSystemHandleKind;\n    readonly name: string;\n    isSameEntry(other: FileSystemHandle): Promise<boolean>;\n}\n\ndeclare var FileSystemHandle: {\n    prototype: FileSystemHandle;\n    new(): FileSystemHandle;\n};\n\ninterface FontFace {\n    ascentOverride: string;\n    descentOverride: string;\n    display: string;\n    family: string;\n    featureSettings: string;\n    lineGapOverride: string;\n    readonly loaded: Promise<FontFace>;\n    readonly status: FontFaceLoadStatus;\n    stretch: string;\n    style: string;\n    unicodeRange: string;\n    variant: string;\n    variationSettings: string;\n    weight: string;\n    load(): Promise<FontFace>;\n}\n\ndeclare var FontFace: {\n    prototype: FontFace;\n    new(family: string, source: string | BinaryData, descriptors?: FontFaceDescriptors): FontFace;\n};\n\ninterface FontFaceSetEventMap {\n    "loading": Event;\n    "loadingdone": Event;\n    "loadingerror": Event;\n}\n\ninterface FontFaceSet extends EventTarget {\n    onloading: ((this: FontFaceSet, ev: Event) => any) | null;\n    onloadingdone: ((this: FontFaceSet, ev: Event) => any) | null;\n    onloadingerror: ((this: FontFaceSet, ev: Event) => any) | null;\n    readonly ready: Promise<FontFaceSet>;\n    readonly status: FontFaceSetLoadStatus;\n    check(font: string, text?: string): boolean;\n    load(font: string, text?: string): Promise<FontFace[]>;\n    forEach(callbackfn: (value: FontFace, key: FontFace, parent: FontFaceSet) => void, thisArg?: any): void;\n    addEventListener<K extends keyof FontFaceSetEventMap>(type: K, listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof FontFaceSetEventMap>(type: K, listener: (this: FontFaceSet, ev: FontFaceSetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var FontFaceSet: {\n    prototype: FontFaceSet;\n    new(initialFaces: FontFace[]): FontFaceSet;\n};\n\ninterface FontFaceSetLoadEvent extends Event {\n    readonly fontfaces: ReadonlyArray<FontFace>;\n}\n\ndeclare var FontFaceSetLoadEvent: {\n    prototype: FontFaceSetLoadEvent;\n    new(type: string, eventInitDict?: FontFaceSetLoadEventInit): FontFaceSetLoadEvent;\n};\n\ninterface FontFaceSource {\n    readonly fonts: FontFaceSet;\n}\n\n/** Provides a way to easily construct a set of key/value pairs representing form fields and their values, which can then be easily sent using the XMLHttpRequest.send() method. It uses the same format a form would use if the encoding type were set to "multipart/form-data". */\ninterface FormData {\n    append(name: string, value: string | Blob, fileName?: string): void;\n    delete(name: string): void;\n    get(name: string): FormDataEntryValue | null;\n    getAll(name: string): FormDataEntryValue[];\n    has(name: string): boolean;\n    set(name: string, value: string | Blob, fileName?: string): void;\n    forEach(callbackfn: (value: FormDataEntryValue, key: string, parent: FormData) => void, thisArg?: any): void;\n}\n\ndeclare var FormData: {\n    prototype: FormData;\n    new(): FormData;\n};\n\ninterface GenericTransformStream {\n    readonly readable: ReadableStream;\n    readonly writable: WritableStream;\n}\n\n/** This Fetch API interface allows you to perform various actions on HTTP request and response headers. These actions include retrieving, setting, adding to, and removing. A Headers object has an associated header list, which is initially empty and consists of zero or more name and value pairs.  You can add to this using methods like append() (see Examples.) In all methods of this interface, header names are matched by case-insensitive byte sequence. */\ninterface Headers {\n    append(name: string, value: string): void;\n    delete(name: string): void;\n    get(name: string): string | null;\n    has(name: string): boolean;\n    set(name: string, value: string): void;\n    forEach(callbackfn: (value: string, key: string, parent: Headers) => void, thisArg?: any): void;\n}\n\ndeclare var Headers: {\n    prototype: Headers;\n    new(init?: HeadersInit): Headers;\n};\n\n/** This IndexedDB API interface represents a cursor for traversing or iterating over multiple records in a database. */\ninterface IDBCursor {\n    /** Returns the direction ("next", "nextunique", "prev" or "prevunique") of the cursor. */\n    readonly direction: IDBCursorDirection;\n    /** Returns the key of the cursor. Throws a "InvalidStateError" DOMException if the cursor is advancing or is finished. */\n    readonly key: IDBValidKey;\n    /** Returns the effective key of the cursor. Throws a "InvalidStateError" DOMException if the cursor is advancing or is finished. */\n    readonly primaryKey: IDBValidKey;\n    readonly request: IDBRequest;\n    /** Returns the IDBObjectStore or IDBIndex the cursor was opened from. */\n    readonly source: IDBObjectStore | IDBIndex;\n    /** Advances the cursor through the next count records in range. */\n    advance(count: number): void;\n    /** Advances the cursor to the next record in range. */\n    continue(key?: IDBValidKey): void;\n    /** Advances the cursor to the next record in range matching or after key and primaryKey. Throws an "InvalidAccessError" DOMException if the source is not an index. */\n    continuePrimaryKey(key: IDBValidKey, primaryKey: IDBValidKey): void;\n    /**\n     * Delete the record pointed at by the cursor with a new value.\n     *\n     * If successful, request\'s result will be undefined.\n     */\n    delete(): IDBRequest<undefined>;\n    /**\n     * Updated the record pointed at by the cursor with a new value.\n     *\n     * Throws a "DataError" DOMException if the effective object store uses in-line keys and the key would have changed.\n     *\n     * If successful, request\'s result will be the record\'s key.\n     */\n    update(value: any): IDBRequest<IDBValidKey>;\n}\n\ndeclare var IDBCursor: {\n    prototype: IDBCursor;\n    new(): IDBCursor;\n};\n\n/** This IndexedDB API interface represents a cursor for traversing or iterating over multiple records in a database. It is the same as the IDBCursor, except that it includes the value property. */\ninterface IDBCursorWithValue extends IDBCursor {\n    /** Returns the cursor\'s current value. */\n    readonly value: any;\n}\n\ndeclare var IDBCursorWithValue: {\n    prototype: IDBCursorWithValue;\n    new(): IDBCursorWithValue;\n};\n\ninterface IDBDatabaseEventMap {\n    "abort": Event;\n    "close": Event;\n    "error": Event;\n    "versionchange": IDBVersionChangeEvent;\n}\n\n/** This IndexedDB API interface provides a connection to a database; you can use an IDBDatabase object to open a transaction on your database then create, manipulate, and delete objects (data) in that database. The interface provides the only way to get and manage versions of the database. */\ninterface IDBDatabase extends EventTarget {\n    /** Returns the name of the database. */\n    readonly name: string;\n    /** Returns a list of the names of object stores in the database. */\n    readonly objectStoreNames: DOMStringList;\n    onabort: ((this: IDBDatabase, ev: Event) => any) | null;\n    onclose: ((this: IDBDatabase, ev: Event) => any) | null;\n    onerror: ((this: IDBDatabase, ev: Event) => any) | null;\n    onversionchange: ((this: IDBDatabase, ev: IDBVersionChangeEvent) => any) | null;\n    /** Returns the version of the database. */\n    readonly version: number;\n    /** Closes the connection once all running transactions have finished. */\n    close(): void;\n    /**\n     * Creates a new object store with the given name and options and returns a new IDBObjectStore.\n     *\n     * Throws a "InvalidStateError" DOMException if not called within an upgrade transaction.\n     */\n    createObjectStore(name: string, options?: IDBObjectStoreParameters): IDBObjectStore;\n    /**\n     * Deletes the object store with the given name.\n     *\n     * Throws a "InvalidStateError" DOMException if not called within an upgrade transaction.\n     */\n    deleteObjectStore(name: string): void;\n    /** Returns a new transaction with the given mode ("readonly" or "readwrite") and scope which can be a single object store name or an array of names. */\n    transaction(storeNames: string | string[], mode?: IDBTransactionMode): IDBTransaction;\n    addEventListener<K extends keyof IDBDatabaseEventMap>(type: K, listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof IDBDatabaseEventMap>(type: K, listener: (this: IDBDatabase, ev: IDBDatabaseEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var IDBDatabase: {\n    prototype: IDBDatabase;\n    new(): IDBDatabase;\n};\n\n/** In the following code snippet, we make a request to open a database, and include handlers for the success and error cases. For a full working example, see our To-do Notifications app (view example live.) */\ninterface IDBFactory {\n    /**\n     * Compares two values as keys. Returns -1 if key1 precedes key2, 1 if key2 precedes key1, and 0 if the keys are equal.\n     *\n     * Throws a "DataError" DOMException if either input is not a valid key.\n     */\n    cmp(first: any, second: any): number;\n    databases(): Promise<IDBDatabaseInfo[]>;\n    /** Attempts to delete the named database. If the database already exists and there are open connections that don\'t close in response to a versionchange event, the request will be blocked until all they close. If the request is successful request\'s result will be null. */\n    deleteDatabase(name: string): IDBOpenDBRequest;\n    /** Attempts to open a connection to the named database with the current version, or 1 if it does not already exist. If the request is successful request\'s result will be the connection. */\n    open(name: string, version?: number): IDBOpenDBRequest;\n}\n\ndeclare var IDBFactory: {\n    prototype: IDBFactory;\n    new(): IDBFactory;\n};\n\n/** IDBIndex interface of the IndexedDB API provides asynchronous access to an index in a database. An index is a kind of object store for looking up records in another object store, called the referenced object store. You use this interface to retrieve data. */\ninterface IDBIndex {\n    readonly keyPath: string | string[];\n    readonly multiEntry: boolean;\n    /** Returns the name of the index. */\n    name: string;\n    /** Returns the IDBObjectStore the index belongs to. */\n    readonly objectStore: IDBObjectStore;\n    readonly unique: boolean;\n    /**\n     * Retrieves the number of records matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the count.\n     */\n    count(query?: IDBValidKey | IDBKeyRange): IDBRequest<number>;\n    /**\n     * Retrieves the value of the first record matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the value, or undefined if there was no matching record.\n     */\n    get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;\n    /**\n     * Retrieves the values of the records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request\'s result will be an Array of the values.\n     */\n    getAll(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<any[]>;\n    /**\n     * Retrieves the keys of records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request\'s result will be an Array of the keys.\n     */\n    getAllKeys(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<IDBValidKey[]>;\n    /**\n     * Retrieves the key of the first record matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the key, or undefined if there was no matching record.\n     */\n    getKey(query: IDBValidKey | IDBKeyRange): IDBRequest<IDBValidKey | undefined>;\n    /**\n     * Opens a cursor over the records matching query, ordered by direction. If query is null, all records in index are matched.\n     *\n     * If successful, request\'s result will be an IDBCursorWithValue, or null if there were no matching records.\n     */\n    openCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursorWithValue | null>;\n    /**\n     * Opens a cursor with key only flag set over the records matching query, ordered by direction. If query is null, all records in index are matched.\n     *\n     * If successful, request\'s result will be an IDBCursor, or null if there were no matching records.\n     */\n    openKeyCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursor | null>;\n}\n\ndeclare var IDBIndex: {\n    prototype: IDBIndex;\n    new(): IDBIndex;\n};\n\n/** A key range can be a single value or a range with upper and lower bounds or endpoints. If the key range has both upper and lower bounds, then it is bounded; if it has no bounds, it is unbounded. A bounded key range can either be open (the endpoints are excluded) or closed (the endpoints are included). To retrieve all keys within a certain range, you can use the following code constructs: */\ninterface IDBKeyRange {\n    /** Returns lower bound, or undefined if none. */\n    readonly lower: any;\n    /** Returns true if the lower open flag is set, and false otherwise. */\n    readonly lowerOpen: boolean;\n    /** Returns upper bound, or undefined if none. */\n    readonly upper: any;\n    /** Returns true if the upper open flag is set, and false otherwise. */\n    readonly upperOpen: boolean;\n    /** Returns true if key is included in the range, and false otherwise. */\n    includes(key: any): boolean;\n}\n\ndeclare var IDBKeyRange: {\n    prototype: IDBKeyRange;\n    new(): IDBKeyRange;\n    /** Returns a new IDBKeyRange spanning from lower to upper. If lowerOpen is true, lower is not included in the range. If upperOpen is true, upper is not included in the range. */\n    bound(lower: any, upper: any, lowerOpen?: boolean, upperOpen?: boolean): IDBKeyRange;\n    /** Returns a new IDBKeyRange starting at key with no upper bound. If open is true, key is not included in the range. */\n    lowerBound(lower: any, open?: boolean): IDBKeyRange;\n    /** Returns a new IDBKeyRange spanning only key. */\n    only(value: any): IDBKeyRange;\n    /** Returns a new IDBKeyRange with no lower bound and ending at key. If open is true, key is not included in the range. */\n    upperBound(upper: any, open?: boolean): IDBKeyRange;\n};\n\n/** This example shows a variety of different uses of object stores, from updating the data structure with IDBObjectStore.createIndex inside an onupgradeneeded function, to adding a new item to our object store with IDBObjectStore.add. For a full working example, see our To-do Notifications app (view example live.) */\ninterface IDBObjectStore {\n    /** Returns true if the store has a key generator, and false otherwise. */\n    readonly autoIncrement: boolean;\n    /** Returns a list of the names of indexes in the store. */\n    readonly indexNames: DOMStringList;\n    /** Returns the key path of the store, or null if none. */\n    readonly keyPath: string | string[];\n    /** Returns the name of the store. */\n    name: string;\n    /** Returns the associated transaction. */\n    readonly transaction: IDBTransaction;\n    /**\n     * Adds or updates a record in store with the given value and key.\n     *\n     * If the store uses in-line keys and key is specified a "DataError" DOMException will be thrown.\n     *\n     * If put() is used, any existing record with the key will be replaced. If add() is used, and if a record with the key already exists the request will fail, with request\'s error set to a "ConstraintError" DOMException.\n     *\n     * If successful, request\'s result will be the record\'s key.\n     */\n    add(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;\n    /**\n     * Deletes all records in store.\n     *\n     * If successful, request\'s result will be undefined.\n     */\n    clear(): IDBRequest<undefined>;\n    /**\n     * Retrieves the number of records matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the count.\n     */\n    count(query?: IDBValidKey | IDBKeyRange): IDBRequest<number>;\n    /**\n     * Creates a new index in store with the given name, keyPath and options and returns a new IDBIndex. If the keyPath and options define constraints that cannot be satisfied with the data already in store the upgrade transaction will abort with a "ConstraintError" DOMException.\n     *\n     * Throws an "InvalidStateError" DOMException if not called within an upgrade transaction.\n     */\n    createIndex(name: string, keyPath: string | string[], options?: IDBIndexParameters): IDBIndex;\n    /**\n     * Deletes records in store with the given key or in the given key range in query.\n     *\n     * If successful, request\'s result will be undefined.\n     */\n    delete(query: IDBValidKey | IDBKeyRange): IDBRequest<undefined>;\n    /**\n     * Deletes the index in store with the given name.\n     *\n     * Throws an "InvalidStateError" DOMException if not called within an upgrade transaction.\n     */\n    deleteIndex(name: string): void;\n    /**\n     * Retrieves the value of the first record matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the value, or undefined if there was no matching record.\n     */\n    get(query: IDBValidKey | IDBKeyRange): IDBRequest<any>;\n    /**\n     * Retrieves the values of the records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request\'s result will be an Array of the values.\n     */\n    getAll(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<any[]>;\n    /**\n     * Retrieves the keys of records matching the given key or key range in query (up to count if given).\n     *\n     * If successful, request\'s result will be an Array of the keys.\n     */\n    getAllKeys(query?: IDBValidKey | IDBKeyRange | null, count?: number): IDBRequest<IDBValidKey[]>;\n    /**\n     * Retrieves the key of the first record matching the given key or key range in query.\n     *\n     * If successful, request\'s result will be the key, or undefined if there was no matching record.\n     */\n    getKey(query: IDBValidKey | IDBKeyRange): IDBRequest<IDBValidKey | undefined>;\n    index(name: string): IDBIndex;\n    /**\n     * Opens a cursor over the records matching query, ordered by direction. If query is null, all records in store are matched.\n     *\n     * If successful, request\'s result will be an IDBCursorWithValue pointing at the first matching record, or null if there were no matching records.\n     */\n    openCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursorWithValue | null>;\n    /**\n     * Opens a cursor with key only flag set over the records matching query, ordered by direction. If query is null, all records in store are matched.\n     *\n     * If successful, request\'s result will be an IDBCursor pointing at the first matching record, or null if there were no matching records.\n     */\n    openKeyCursor(query?: IDBValidKey | IDBKeyRange | null, direction?: IDBCursorDirection): IDBRequest<IDBCursor | null>;\n    /**\n     * Adds or updates a record in store with the given value and key.\n     *\n     * If the store uses in-line keys and key is specified a "DataError" DOMException will be thrown.\n     *\n     * If put() is used, any existing record with the key will be replaced. If add() is used, and if a record with the key already exists the request will fail, with request\'s error set to a "ConstraintError" DOMException.\n     *\n     * If successful, request\'s result will be the record\'s key.\n     */\n    put(value: any, key?: IDBValidKey): IDBRequest<IDBValidKey>;\n}\n\ndeclare var IDBObjectStore: {\n    prototype: IDBObjectStore;\n    new(): IDBObjectStore;\n};\n\ninterface IDBOpenDBRequestEventMap extends IDBRequestEventMap {\n    "blocked": Event;\n    "upgradeneeded": IDBVersionChangeEvent;\n}\n\n/** Also inherits methods from its parents IDBRequest and EventTarget. */\ninterface IDBOpenDBRequest extends IDBRequest<IDBDatabase> {\n    onblocked: ((this: IDBOpenDBRequest, ev: Event) => any) | null;\n    onupgradeneeded: ((this: IDBOpenDBRequest, ev: IDBVersionChangeEvent) => any) | null;\n    addEventListener<K extends keyof IDBOpenDBRequestEventMap>(type: K, listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof IDBOpenDBRequestEventMap>(type: K, listener: (this: IDBOpenDBRequest, ev: IDBOpenDBRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var IDBOpenDBRequest: {\n    prototype: IDBOpenDBRequest;\n    new(): IDBOpenDBRequest;\n};\n\ninterface IDBRequestEventMap {\n    "error": Event;\n    "success": Event;\n}\n\n/** The request object does not initially contain any information about the result of the operation, but once information becomes available, an event is fired on the request, and the information becomes available through the properties of the IDBRequest instance. */\ninterface IDBRequest<T = any> extends EventTarget {\n    /** When a request is completed, returns the error (a DOMException), or null if the request succeeded. Throws a "InvalidStateError" DOMException if the request is still pending. */\n    readonly error: DOMException | null;\n    onerror: ((this: IDBRequest<T>, ev: Event) => any) | null;\n    onsuccess: ((this: IDBRequest<T>, ev: Event) => any) | null;\n    /** Returns "pending" until a request is complete, then returns "done". */\n    readonly readyState: IDBRequestReadyState;\n    /** When a request is completed, returns the result, or undefined if the request failed. Throws a "InvalidStateError" DOMException if the request is still pending. */\n    readonly result: T;\n    /** Returns the IDBObjectStore, IDBIndex, or IDBCursor the request was made against, or null if is was an open request. */\n    readonly source: IDBObjectStore | IDBIndex | IDBCursor;\n    /** Returns the IDBTransaction the request was made within. If this as an open request, then it returns an upgrade transaction while it is running, or null otherwise. */\n    readonly transaction: IDBTransaction | null;\n    addEventListener<K extends keyof IDBRequestEventMap>(type: K, listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof IDBRequestEventMap>(type: K, listener: (this: IDBRequest<T>, ev: IDBRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var IDBRequest: {\n    prototype: IDBRequest;\n    new(): IDBRequest;\n};\n\ninterface IDBTransactionEventMap {\n    "abort": Event;\n    "complete": Event;\n    "error": Event;\n}\n\ninterface IDBTransaction extends EventTarget {\n    /** Returns the transaction\'s connection. */\n    readonly db: IDBDatabase;\n    readonly durability: IDBTransactionDurability;\n    /** If the transaction was aborted, returns the error (a DOMException) providing the reason. */\n    readonly error: DOMException | null;\n    /** Returns the mode the transaction was created with ("readonly" or "readwrite"), or "versionchange" for an upgrade transaction. */\n    readonly mode: IDBTransactionMode;\n    /** Returns a list of the names of object stores in the transaction\'s scope. For an upgrade transaction this is all object stores in the database. */\n    readonly objectStoreNames: DOMStringList;\n    onabort: ((this: IDBTransaction, ev: Event) => any) | null;\n    oncomplete: ((this: IDBTransaction, ev: Event) => any) | null;\n    onerror: ((this: IDBTransaction, ev: Event) => any) | null;\n    /** Aborts the transaction. All pending requests will fail with a "AbortError" DOMException and all changes made to the database will be reverted. */\n    abort(): void;\n    commit(): void;\n    /** Returns an IDBObjectStore in the transaction\'s scope. */\n    objectStore(name: string): IDBObjectStore;\n    addEventListener<K extends keyof IDBTransactionEventMap>(type: K, listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof IDBTransactionEventMap>(type: K, listener: (this: IDBTransaction, ev: IDBTransactionEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var IDBTransaction: {\n    prototype: IDBTransaction;\n    new(): IDBTransaction;\n};\n\n/** This IndexedDB API interface indicates that the version of the database has changed, as the result of an IDBOpenDBRequest.onupgradeneeded event handler function. */\ninterface IDBVersionChangeEvent extends Event {\n    readonly newVersion: number | null;\n    readonly oldVersion: number;\n}\n\ndeclare var IDBVersionChangeEvent: {\n    prototype: IDBVersionChangeEvent;\n    new(type: string, eventInitDict?: IDBVersionChangeEventInit): IDBVersionChangeEvent;\n};\n\ninterface ImageBitmap {\n    /** Returns the intrinsic height of the image, in CSS pixels. */\n    readonly height: number;\n    /** Returns the intrinsic width of the image, in CSS pixels. */\n    readonly width: number;\n    /** Releases imageBitmap\'s underlying bitmap data. */\n    close(): void;\n}\n\ndeclare var ImageBitmap: {\n    prototype: ImageBitmap;\n    new(): ImageBitmap;\n};\n\ninterface ImageBitmapRenderingContext {\n    /** Transfers the underlying bitmap data from imageBitmap to context, and the bitmap becomes the contents of the canvas element to which context is bound. */\n    transferFromImageBitmap(bitmap: ImageBitmap | null): void;\n}\n\ndeclare var ImageBitmapRenderingContext: {\n    prototype: ImageBitmapRenderingContext;\n    new(): ImageBitmapRenderingContext;\n};\n\n/** The underlying pixel data of an area of a <canvas> element. It is created using the ImageData() constructor or creator methods on the CanvasRenderingContext2D object associated with a canvas: createImageData() and getImageData(). It can also be used to set a part of the canvas by using putImageData(). */\ninterface ImageData {\n    /** Returns the one-dimensional array containing the data in RGBA order, as integers in the range 0 to 255. */\n    readonly data: Uint8ClampedArray;\n    /** Returns the actual dimensions of the data in the ImageData object, in pixels. */\n    readonly height: number;\n    /** Returns the actual dimensions of the data in the ImageData object, in pixels. */\n    readonly width: number;\n}\n\ndeclare var ImageData: {\n    prototype: ImageData;\n    new(sw: number, sh: number, settings?: ImageDataSettings): ImageData;\n    new(data: Uint8ClampedArray, sw: number, sh?: number, settings?: ImageDataSettings): ImageData;\n};\n\ninterface KHR_parallel_shader_compile {\n    readonly COMPLETION_STATUS_KHR: GLenum;\n}\n\n/** Available only in secure contexts. */\ninterface Lock {\n    readonly mode: LockMode;\n    readonly name: string;\n}\n\ndeclare var Lock: {\n    prototype: Lock;\n    new(): Lock;\n};\n\n/** Available only in secure contexts. */\ninterface LockManager {\n    query(): Promise<LockManagerSnapshot>;\n    request(name: string, callback: LockGrantedCallback): Promise<any>;\n    request(name: string, options: LockOptions, callback: LockGrantedCallback): Promise<any>;\n}\n\ndeclare var LockManager: {\n    prototype: LockManager;\n    new(): LockManager;\n};\n\ninterface MediaCapabilities {\n    decodingInfo(configuration: MediaDecodingConfiguration): Promise<MediaCapabilitiesDecodingInfo>;\n    encodingInfo(configuration: MediaEncodingConfiguration): Promise<MediaCapabilitiesEncodingInfo>;\n}\n\ndeclare var MediaCapabilities: {\n    prototype: MediaCapabilities;\n    new(): MediaCapabilities;\n};\n\n/** This Channel Messaging API interface allows us to create a new message channel and send data through it via its two MessagePort properties. */\ninterface MessageChannel {\n    /** Returns the first MessagePort object. */\n    readonly port1: MessagePort;\n    /** Returns the second MessagePort object. */\n    readonly port2: MessagePort;\n}\n\ndeclare var MessageChannel: {\n    prototype: MessageChannel;\n    new(): MessageChannel;\n};\n\n/** A message received by a target object. */\ninterface MessageEvent<T = any> extends Event {\n    /** Returns the data of the message. */\n    readonly data: T;\n    /** Returns the last event ID string, for server-sent events. */\n    readonly lastEventId: string;\n    /** Returns the origin of the message, for server-sent events and cross-document messaging. */\n    readonly origin: string;\n    /** Returns the MessagePort array sent with the message, for cross-document messaging and channel messaging. */\n    readonly ports: ReadonlyArray<MessagePort>;\n    /** Returns the WindowProxy of the source window, for cross-document messaging, and the MessagePort being attached, in the connect event fired at SharedWorkerGlobalScope objects. */\n    readonly source: MessageEventSource | null;\n    /** @deprecated */\n    initMessageEvent(type: string, bubbles?: boolean, cancelable?: boolean, data?: any, origin?: string, lastEventId?: string, source?: MessageEventSource | null, ports?: MessagePort[]): void;\n}\n\ndeclare var MessageEvent: {\n    prototype: MessageEvent;\n    new<T>(type: string, eventInitDict?: MessageEventInit<T>): MessageEvent<T>;\n};\n\ninterface MessagePortEventMap {\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\n/** This Channel Messaging API interface represents one of the two ports of a MessageChannel, allowing messages to be sent from one port and listening out for them arriving at the other. */\ninterface MessagePort extends EventTarget {\n    onmessage: ((this: MessagePort, ev: MessageEvent) => any) | null;\n    onmessageerror: ((this: MessagePort, ev: MessageEvent) => any) | null;\n    /** Disconnects the port, so that it is no longer active. */\n    close(): void;\n    /**\n     * Posts a message through the channel. Objects listed in transfer are transferred, not just cloned, meaning that they are no longer usable on the sending side.\n     *\n     * Throws a "DataCloneError" DOMException if transfer contains duplicate objects or port, or if message could not be cloned.\n     */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: StructuredSerializeOptions): void;\n    /** Begins dispatching messages received on the port. */\n    start(): void;\n    addEventListener<K extends keyof MessagePortEventMap>(type: K, listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof MessagePortEventMap>(type: K, listener: (this: MessagePort, ev: MessagePortEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var MessagePort: {\n    prototype: MessagePort;\n    new(): MessagePort;\n};\n\ninterface NavigatorConcurrentHardware {\n    readonly hardwareConcurrency: number;\n}\n\ninterface NavigatorID {\n    /** @deprecated */\n    readonly appCodeName: string;\n    /** @deprecated */\n    readonly appName: string;\n    /** @deprecated */\n    readonly appVersion: string;\n    /** @deprecated */\n    readonly platform: string;\n    /** @deprecated */\n    readonly product: string;\n    readonly userAgent: string;\n}\n\ninterface NavigatorLanguage {\n    readonly language: string;\n    readonly languages: ReadonlyArray<string>;\n}\n\ninterface NavigatorNetworkInformation {\n    readonly connection: NetworkInformation;\n}\n\ninterface NavigatorOnLine {\n    readonly onLine: boolean;\n}\n\n/** Available only in secure contexts. */\ninterface NavigatorStorage {\n    readonly storage: StorageManager;\n}\n\ninterface NetworkInformation extends EventTarget {\n    readonly type: ConnectionType;\n}\n\ndeclare var NetworkInformation: {\n    prototype: NetworkInformation;\n    new(): NetworkInformation;\n};\n\ninterface NotificationEventMap {\n    "click": Event;\n    "close": Event;\n    "error": Event;\n    "show": Event;\n}\n\n/** This Notifications API interface is used to configure and display desktop notifications to the user. */\ninterface Notification extends EventTarget {\n    readonly body: string;\n    readonly data: any;\n    readonly dir: NotificationDirection;\n    readonly icon: string;\n    readonly lang: string;\n    onclick: ((this: Notification, ev: Event) => any) | null;\n    onclose: ((this: Notification, ev: Event) => any) | null;\n    onerror: ((this: Notification, ev: Event) => any) | null;\n    onshow: ((this: Notification, ev: Event) => any) | null;\n    readonly tag: string;\n    readonly title: string;\n    close(): void;\n    addEventListener<K extends keyof NotificationEventMap>(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof NotificationEventMap>(type: K, listener: (this: Notification, ev: NotificationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Notification: {\n    prototype: Notification;\n    new(title: string, options?: NotificationOptions): Notification;\n    readonly permission: NotificationPermission;\n};\n\n/** The parameter passed into the onnotificationclick handler, the NotificationEvent interface represents a notification click event that is dispatched on the ServiceWorkerGlobalScope of a ServiceWorker. */\ninterface NotificationEvent extends ExtendableEvent {\n    readonly action: string;\n    readonly notification: Notification;\n}\n\ndeclare var NotificationEvent: {\n    prototype: NotificationEvent;\n    new(type: string, eventInitDict: NotificationEventInit): NotificationEvent;\n};\n\n/** The OES_element_index_uint extension is part of the WebGL API and adds support for gl.UNSIGNED_INT types to WebGLRenderingContext.drawElements(). */\ninterface OES_element_index_uint {\n}\n\ninterface OES_fbo_render_mipmap {\n}\n\n/** The OES_standard_derivatives extension is part of the WebGL API and adds the GLSL derivative functions dFdx, dFdy, and fwidth. */\ninterface OES_standard_derivatives {\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT_OES: GLenum;\n}\n\n/** The OES_texture_float extension is part of the WebGL API and exposes floating-point pixel types for textures. */\ninterface OES_texture_float {\n}\n\n/** The OES_texture_float_linear extension is part of the WebGL API and allows linear filtering with floating-point pixel types for textures. */\ninterface OES_texture_float_linear {\n}\n\n/** The OES_texture_half_float extension is part of the WebGL API and adds texture formats with 16- (aka half float) and 32-bit floating-point components. */\ninterface OES_texture_half_float {\n    readonly HALF_FLOAT_OES: GLenum;\n}\n\n/** The OES_texture_half_float_linear extension is part of the WebGL API and allows linear filtering with half floating-point pixel types for textures. */\ninterface OES_texture_half_float_linear {\n}\n\ninterface OES_vertex_array_object {\n    bindVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): void;\n    createVertexArrayOES(): WebGLVertexArrayObjectOES | null;\n    deleteVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): void;\n    isVertexArrayOES(arrayObject: WebGLVertexArrayObjectOES | null): GLboolean;\n    readonly VERTEX_ARRAY_BINDING_OES: GLenum;\n}\n\ninterface OVR_multiview2 {\n    framebufferTextureMultiviewOVR(target: GLenum, attachment: GLenum, texture: WebGLTexture | null, level: GLint, baseViewIndex: GLint, numViews: GLsizei): void;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR: GLenum;\n    readonly MAX_VIEWS_OVR: GLenum;\n}\n\n/** @deprecated this is not available in most browsers */\ninterface OffscreenCanvas extends EventTarget {\n}\n\n/** This Canvas 2D API interface is used to declare a path that can then be used on a CanvasRenderingContext2D object. The path methods of the CanvasRenderingContext2D interface are also present on this interface, which gives you the convenience of being able to retain and replay your path whenever desired. */\ninterface Path2D extends CanvasPath {\n    /** Adds to the path the path given by the argument. */\n    addPath(path: Path2D, transform?: DOMMatrix2DInit): void;\n}\n\ndeclare var Path2D: {\n    prototype: Path2D;\n    new(path?: Path2D | string): Path2D;\n};\n\ninterface PerformanceEventMap {\n    "resourcetimingbufferfull": Event;\n}\n\n/** Provides access to performance-related information for the current page. It\'s part of the High Resolution Time API, but is enhanced by the Performance Timeline API, the Navigation Timing API, the User Timing API, and the Resource Timing API. */\ninterface Performance extends EventTarget {\n    onresourcetimingbufferfull: ((this: Performance, ev: Event) => any) | null;\n    readonly timeOrigin: DOMHighResTimeStamp;\n    clearMarks(markName?: string): void;\n    clearMeasures(measureName?: string): void;\n    clearResourceTimings(): void;\n    getEntries(): PerformanceEntryList;\n    getEntriesByName(name: string, type?: string): PerformanceEntryList;\n    getEntriesByType(type: string): PerformanceEntryList;\n    mark(markName: string, markOptions?: PerformanceMarkOptions): PerformanceMark;\n    measure(measureName: string, startOrMeasureOptions?: string | PerformanceMeasureOptions, endMark?: string): PerformanceMeasure;\n    now(): DOMHighResTimeStamp;\n    setResourceTimingBufferSize(maxSize: number): void;\n    toJSON(): any;\n    addEventListener<K extends keyof PerformanceEventMap>(type: K, listener: (this: Performance, ev: PerformanceEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof PerformanceEventMap>(type: K, listener: (this: Performance, ev: PerformanceEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Performance: {\n    prototype: Performance;\n    new(): Performance;\n};\n\n/** Encapsulates a single performance metric that is part of the performance timeline. A performance entry can be directly created by making a performance mark or measure (for example by calling the mark() method) at an explicit point in an application. Performance entries are also created in indirect ways such as loading a resource (such as an image). */\ninterface PerformanceEntry {\n    readonly duration: DOMHighResTimeStamp;\n    readonly entryType: string;\n    readonly name: string;\n    readonly startTime: DOMHighResTimeStamp;\n    toJSON(): any;\n}\n\ndeclare var PerformanceEntry: {\n    prototype: PerformanceEntry;\n    new(): PerformanceEntry;\n};\n\n/** PerformanceMark is an abstract interface for PerformanceEntry objects with an entryType of "mark". Entries of this type are created by calling performance.mark() to add a named DOMHighResTimeStamp (the mark) to the browser\'s performance timeline. */\ninterface PerformanceMark extends PerformanceEntry {\n    readonly detail: any;\n}\n\ndeclare var PerformanceMark: {\n    prototype: PerformanceMark;\n    new(markName: string, markOptions?: PerformanceMarkOptions): PerformanceMark;\n};\n\n/** PerformanceMeasure is an abstract interface for PerformanceEntry objects with an entryType of "measure". Entries of this type are created by calling performance.measure() to add a named DOMHighResTimeStamp (the measure) between two marks to the browser\'s performance timeline. */\ninterface PerformanceMeasure extends PerformanceEntry {\n    readonly detail: any;\n}\n\ndeclare var PerformanceMeasure: {\n    prototype: PerformanceMeasure;\n    new(): PerformanceMeasure;\n};\n\ninterface PerformanceObserver {\n    disconnect(): void;\n    observe(options?: PerformanceObserverInit): void;\n    takeRecords(): PerformanceEntryList;\n}\n\ndeclare var PerformanceObserver: {\n    prototype: PerformanceObserver;\n    new(callback: PerformanceObserverCallback): PerformanceObserver;\n    readonly supportedEntryTypes: ReadonlyArray<string>;\n};\n\ninterface PerformanceObserverEntryList {\n    getEntries(): PerformanceEntryList;\n    getEntriesByName(name: string, type?: string): PerformanceEntryList;\n    getEntriesByType(type: string): PerformanceEntryList;\n}\n\ndeclare var PerformanceObserverEntryList: {\n    prototype: PerformanceObserverEntryList;\n    new(): PerformanceObserverEntryList;\n};\n\n/** Enables retrieval and analysis of detailed network timing data regarding the loading of an application\'s resources. An application can use the timing metrics to determine, for example, the length of time it takes to fetch a specific resource, such as an XMLHttpRequest, <SVG>, image, or script. */\ninterface PerformanceResourceTiming extends PerformanceEntry {\n    readonly connectEnd: DOMHighResTimeStamp;\n    readonly connectStart: DOMHighResTimeStamp;\n    readonly decodedBodySize: number;\n    readonly domainLookupEnd: DOMHighResTimeStamp;\n    readonly domainLookupStart: DOMHighResTimeStamp;\n    readonly encodedBodySize: number;\n    readonly fetchStart: DOMHighResTimeStamp;\n    readonly initiatorType: string;\n    readonly nextHopProtocol: string;\n    readonly redirectEnd: DOMHighResTimeStamp;\n    readonly redirectStart: DOMHighResTimeStamp;\n    readonly requestStart: DOMHighResTimeStamp;\n    readonly responseEnd: DOMHighResTimeStamp;\n    readonly responseStart: DOMHighResTimeStamp;\n    readonly secureConnectionStart: DOMHighResTimeStamp;\n    readonly serverTiming: ReadonlyArray<PerformanceServerTiming>;\n    readonly transferSize: number;\n    readonly workerStart: DOMHighResTimeStamp;\n    toJSON(): any;\n}\n\ndeclare var PerformanceResourceTiming: {\n    prototype: PerformanceResourceTiming;\n    new(): PerformanceResourceTiming;\n};\n\ninterface PerformanceServerTiming {\n    readonly description: string;\n    readonly duration: DOMHighResTimeStamp;\n    readonly name: string;\n    toJSON(): any;\n}\n\ndeclare var PerformanceServerTiming: {\n    prototype: PerformanceServerTiming;\n    new(): PerformanceServerTiming;\n};\n\ninterface PermissionStatusEventMap {\n    "change": Event;\n}\n\ninterface PermissionStatus extends EventTarget {\n    onchange: ((this: PermissionStatus, ev: Event) => any) | null;\n    readonly state: PermissionState;\n    addEventListener<K extends keyof PermissionStatusEventMap>(type: K, listener: (this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof PermissionStatusEventMap>(type: K, listener: (this: PermissionStatus, ev: PermissionStatusEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var PermissionStatus: {\n    prototype: PermissionStatus;\n    new(): PermissionStatus;\n};\n\ninterface Permissions {\n    query(permissionDesc: PermissionDescriptor): Promise<PermissionStatus>;\n}\n\ndeclare var Permissions: {\n    prototype: Permissions;\n    new(): Permissions;\n};\n\n/** Events measuring progress of an underlying process, like an HTTP request (for an XMLHttpRequest, or the loading of the underlying resource of an <img>, <audio>, <video>, <style> or <link>). */\ninterface ProgressEvent<T extends EventTarget = EventTarget> extends Event {\n    readonly lengthComputable: boolean;\n    readonly loaded: number;\n    readonly target: T | null;\n    readonly total: number;\n}\n\ndeclare var ProgressEvent: {\n    prototype: ProgressEvent;\n    new(type: string, eventInitDict?: ProgressEventInit): ProgressEvent;\n};\n\ninterface PromiseRejectionEvent extends Event {\n    readonly promise: Promise<any>;\n    readonly reason: any;\n}\n\ndeclare var PromiseRejectionEvent: {\n    prototype: PromiseRejectionEvent;\n    new(type: string, eventInitDict: PromiseRejectionEventInit): PromiseRejectionEvent;\n};\n\n/**\n * This Push API interface represents a push message that has been received. This event is sent to the global scope of a ServiceWorker. It contains the information sent from an application server to a PushSubscription.\n * Available only in secure contexts.\n */\ninterface PushEvent extends ExtendableEvent {\n    readonly data: PushMessageData | null;\n}\n\ndeclare var PushEvent: {\n    prototype: PushEvent;\n    new(type: string, eventInitDict?: PushEventInit): PushEvent;\n};\n\n/**\n * This Push API interface provides a way to receive notifications from third-party servers as well as request URLs for push notifications.\n * Available only in secure contexts.\n */\ninterface PushManager {\n    getSubscription(): Promise<PushSubscription | null>;\n    permissionState(options?: PushSubscriptionOptionsInit): Promise<PermissionState>;\n    subscribe(options?: PushSubscriptionOptionsInit): Promise<PushSubscription>;\n}\n\ndeclare var PushManager: {\n    prototype: PushManager;\n    new(): PushManager;\n    readonly supportedContentEncodings: ReadonlyArray<string>;\n};\n\n/**\n * This Push API interface provides methods which let you retrieve the push data sent by a server in various formats.\n * Available only in secure contexts.\n */\ninterface PushMessageData {\n    arrayBuffer(): ArrayBuffer;\n    blob(): Blob;\n    json(): any;\n    text(): string;\n}\n\ndeclare var PushMessageData: {\n    prototype: PushMessageData;\n    new(): PushMessageData;\n};\n\n/**\n * This Push API interface provides a subcription\'s URL endpoint and allows unsubscription from a push service.\n * Available only in secure contexts.\n */\ninterface PushSubscription {\n    readonly endpoint: string;\n    readonly options: PushSubscriptionOptions;\n    getKey(name: PushEncryptionKeyName): ArrayBuffer | null;\n    toJSON(): PushSubscriptionJSON;\n    unsubscribe(): Promise<boolean>;\n}\n\ndeclare var PushSubscription: {\n    prototype: PushSubscription;\n    new(): PushSubscription;\n};\n\n/** Available only in secure contexts. */\ninterface PushSubscriptionOptions {\n    readonly applicationServerKey: ArrayBuffer | null;\n}\n\ndeclare var PushSubscriptionOptions: {\n    prototype: PushSubscriptionOptions;\n    new(): PushSubscriptionOptions;\n};\n\n/** This Streams API interface represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object. */\ninterface ReadableStream<R = any> {\n    readonly locked: boolean;\n    cancel(reason?: any): Promise<void>;\n    getReader(): ReadableStreamDefaultReader<R>;\n    pipeThrough<T>(transform: ReadableWritablePair<T, R>, options?: StreamPipeOptions): ReadableStream<T>;\n    pipeTo(destination: WritableStream<R>, options?: StreamPipeOptions): Promise<void>;\n    tee(): [ReadableStream<R>, ReadableStream<R>];\n}\n\ndeclare var ReadableStream: {\n    prototype: ReadableStream;\n    new<R = any>(underlyingSource?: UnderlyingSource<R>, strategy?: QueuingStrategy<R>): ReadableStream<R>;\n};\n\ninterface ReadableStreamDefaultController<R = any> {\n    readonly desiredSize: number | null;\n    close(): void;\n    enqueue(chunk?: R): void;\n    error(e?: any): void;\n}\n\ndeclare var ReadableStreamDefaultController: {\n    prototype: ReadableStreamDefaultController;\n    new(): ReadableStreamDefaultController;\n};\n\ninterface ReadableStreamDefaultReader<R = any> extends ReadableStreamGenericReader {\n    read(): Promise<ReadableStreamDefaultReadResult<R>>;\n    releaseLock(): void;\n}\n\ndeclare var ReadableStreamDefaultReader: {\n    prototype: ReadableStreamDefaultReader;\n    new<R = any>(stream: ReadableStream<R>): ReadableStreamDefaultReader<R>;\n};\n\ninterface ReadableStreamGenericReader {\n    readonly closed: Promise<undefined>;\n    cancel(reason?: any): Promise<void>;\n}\n\n/** This Fetch API interface represents a resource request. */\ninterface Request extends Body {\n    /** Returns the cache mode associated with request, which is a string indicating how the request will interact with the browser\'s cache when fetching. */\n    readonly cache: RequestCache;\n    /** Returns the credentials mode associated with request, which is a string indicating whether credentials will be sent with the request always, never, or only when sent to a same-origin URL. */\n    readonly credentials: RequestCredentials;\n    /** Returns the kind of resource requested by request, e.g., "document" or "script". */\n    readonly destination: RequestDestination;\n    /** Returns a Headers object consisting of the headers associated with request. Note that headers added in the network layer by the user agent will not be accounted for in this object, e.g., the "Host" header. */\n    readonly headers: Headers;\n    /** Returns request\'s subresource integrity metadata, which is a cryptographic hash of the resource being fetched. Its value consists of multiple hashes separated by whitespace. [SRI] */\n    readonly integrity: string;\n    /** Returns a boolean indicating whether or not request can outlive the global in which it was created. */\n    readonly keepalive: boolean;\n    /** Returns request\'s HTTP method, which is "GET" by default. */\n    readonly method: string;\n    /** Returns the mode associated with request, which is a string indicating whether the request will use CORS, or will be restricted to same-origin URLs. */\n    readonly mode: RequestMode;\n    /** Returns the redirect mode associated with request, which is a string indicating how redirects for the request will be handled during fetching. A request will follow redirects by default. */\n    readonly redirect: RequestRedirect;\n    /** Returns the referrer of request. Its value can be a same-origin URL if explicitly set in init, the empty string to indicate no referrer, and "about:client" when defaulting to the global\'s default. This is used during fetching to determine the value of the `Referer` header of the request being made. */\n    readonly referrer: string;\n    /** Returns the referrer policy associated with request. This is used during fetching to compute the value of the request\'s referrer. */\n    readonly referrerPolicy: ReferrerPolicy;\n    /** Returns the signal associated with request, which is an AbortSignal object indicating whether or not request has been aborted, and its abort event handler. */\n    readonly signal: AbortSignal;\n    /** Returns the URL of request as a string. */\n    readonly url: string;\n    clone(): Request;\n}\n\ndeclare var Request: {\n    prototype: Request;\n    new(input: RequestInfo, init?: RequestInit): Request;\n};\n\n/** This Fetch API interface represents the response to a request. */\ninterface Response extends Body {\n    readonly headers: Headers;\n    readonly ok: boolean;\n    readonly redirected: boolean;\n    readonly status: number;\n    readonly statusText: string;\n    readonly type: ResponseType;\n    readonly url: string;\n    clone(): Response;\n}\n\ndeclare var Response: {\n    prototype: Response;\n    new(body?: BodyInit | null, init?: ResponseInit): Response;\n    error(): Response;\n    redirect(url: string | URL, status?: number): Response;\n};\n\n/** Inherits from Event, and represents the event object of an event sent on a document or worker when its content security policy is violated. */\ninterface SecurityPolicyViolationEvent extends Event {\n    readonly blockedURI: string;\n    readonly columnNumber: number;\n    readonly disposition: SecurityPolicyViolationEventDisposition;\n    readonly documentURI: string;\n    readonly effectiveDirective: string;\n    readonly lineNumber: number;\n    readonly originalPolicy: string;\n    readonly referrer: string;\n    readonly sample: string;\n    readonly sourceFile: string;\n    readonly statusCode: number;\n    readonly violatedDirective: string;\n}\n\ndeclare var SecurityPolicyViolationEvent: {\n    prototype: SecurityPolicyViolationEvent;\n    new(type: string, eventInitDict?: SecurityPolicyViolationEventInit): SecurityPolicyViolationEvent;\n};\n\ninterface ServiceWorkerEventMap extends AbstractWorkerEventMap {\n    "statechange": Event;\n}\n\n/**\n * This ServiceWorker API interface provides a reference to a service worker. Multiple browsing contexts (e.g. pages, workers, etc.) can be associated with the same service worker, each through a unique ServiceWorker object.\n * Available only in secure contexts.\n */\ninterface ServiceWorker extends EventTarget, AbstractWorker {\n    onstatechange: ((this: ServiceWorker, ev: Event) => any) | null;\n    readonly scriptURL: string;\n    readonly state: ServiceWorkerState;\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: StructuredSerializeOptions): void;\n    addEventListener<K extends keyof ServiceWorkerEventMap>(type: K, listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ServiceWorkerEventMap>(type: K, listener: (this: ServiceWorker, ev: ServiceWorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ServiceWorker: {\n    prototype: ServiceWorker;\n    new(): ServiceWorker;\n};\n\ninterface ServiceWorkerContainerEventMap {\n    "controllerchange": Event;\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\n/**\n * The ServiceWorkerContainer interface of the ServiceWorker API provides an object representing the service worker as an overall unit in the network ecosystem, including facilities to register, unregister and update service workers, and access the state of service workers and their registrations.\n * Available only in secure contexts.\n */\ninterface ServiceWorkerContainer extends EventTarget {\n    readonly controller: ServiceWorker | null;\n    oncontrollerchange: ((this: ServiceWorkerContainer, ev: Event) => any) | null;\n    onmessage: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;\n    onmessageerror: ((this: ServiceWorkerContainer, ev: MessageEvent) => any) | null;\n    readonly ready: Promise<ServiceWorkerRegistration>;\n    getRegistration(clientURL?: string | URL): Promise<ServiceWorkerRegistration | undefined>;\n    getRegistrations(): Promise<ReadonlyArray<ServiceWorkerRegistration>>;\n    register(scriptURL: string | URL, options?: RegistrationOptions): Promise<ServiceWorkerRegistration>;\n    startMessages(): void;\n    addEventListener<K extends keyof ServiceWorkerContainerEventMap>(type: K, listener: (this: ServiceWorkerContainer, ev: ServiceWorkerContainerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ServiceWorkerContainerEventMap>(type: K, listener: (this: ServiceWorkerContainer, ev: ServiceWorkerContainerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ServiceWorkerContainer: {\n    prototype: ServiceWorkerContainer;\n    new(): ServiceWorkerContainer;\n};\n\ninterface ServiceWorkerGlobalScopeEventMap extends WorkerGlobalScopeEventMap {\n    "activate": ExtendableEvent;\n    "fetch": FetchEvent;\n    "install": ExtendableEvent;\n    "message": ExtendableMessageEvent;\n    "messageerror": MessageEvent;\n    "notificationclick": NotificationEvent;\n    "notificationclose": NotificationEvent;\n    "push": PushEvent;\n}\n\n/** This ServiceWorker API interface represents the global execution context of a service worker. */\ninterface ServiceWorkerGlobalScope extends WorkerGlobalScope {\n    readonly clients: Clients;\n    onactivate: ((this: ServiceWorkerGlobalScope, ev: ExtendableEvent) => any) | null;\n    onfetch: ((this: ServiceWorkerGlobalScope, ev: FetchEvent) => any) | null;\n    oninstall: ((this: ServiceWorkerGlobalScope, ev: ExtendableEvent) => any) | null;\n    onmessage: ((this: ServiceWorkerGlobalScope, ev: ExtendableMessageEvent) => any) | null;\n    onmessageerror: ((this: ServiceWorkerGlobalScope, ev: MessageEvent) => any) | null;\n    onnotificationclick: ((this: ServiceWorkerGlobalScope, ev: NotificationEvent) => any) | null;\n    onnotificationclose: ((this: ServiceWorkerGlobalScope, ev: NotificationEvent) => any) | null;\n    onpush: ((this: ServiceWorkerGlobalScope, ev: PushEvent) => any) | null;\n    readonly registration: ServiceWorkerRegistration;\n    skipWaiting(): Promise<void>;\n    addEventListener<K extends keyof ServiceWorkerGlobalScopeEventMap>(type: K, listener: (this: ServiceWorkerGlobalScope, ev: ServiceWorkerGlobalScopeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ServiceWorkerGlobalScopeEventMap>(type: K, listener: (this: ServiceWorkerGlobalScope, ev: ServiceWorkerGlobalScopeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ServiceWorkerGlobalScope: {\n    prototype: ServiceWorkerGlobalScope;\n    new(): ServiceWorkerGlobalScope;\n};\n\ninterface ServiceWorkerRegistrationEventMap {\n    "updatefound": Event;\n}\n\n/**\n * This ServiceWorker API interface represents the service worker registration. You register a service worker to control one or more pages that share the same origin.\n * Available only in secure contexts.\n */\ninterface ServiceWorkerRegistration extends EventTarget {\n    readonly active: ServiceWorker | null;\n    readonly installing: ServiceWorker | null;\n    onupdatefound: ((this: ServiceWorkerRegistration, ev: Event) => any) | null;\n    readonly pushManager: PushManager;\n    readonly scope: string;\n    readonly updateViaCache: ServiceWorkerUpdateViaCache;\n    readonly waiting: ServiceWorker | null;\n    getNotifications(filter?: GetNotificationOptions): Promise<Notification[]>;\n    showNotification(title: string, options?: NotificationOptions): Promise<void>;\n    unregister(): Promise<boolean>;\n    update(): Promise<void>;\n    addEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type: K, listener: (this: ServiceWorkerRegistration, ev: ServiceWorkerRegistrationEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof ServiceWorkerRegistrationEventMap>(type: K, listener: (this: ServiceWorkerRegistration, ev: ServiceWorkerRegistrationEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var ServiceWorkerRegistration: {\n    prototype: ServiceWorkerRegistration;\n    new(): ServiceWorkerRegistration;\n};\n\ninterface SharedWorkerGlobalScopeEventMap extends WorkerGlobalScopeEventMap {\n    "connect": MessageEvent;\n}\n\ninterface SharedWorkerGlobalScope extends WorkerGlobalScope {\n    /** Returns sharedWorkerGlobal\'s name, i.e. the value given to the SharedWorker constructor. Multiple SharedWorker objects can correspond to the same shared worker (and SharedWorkerGlobalScope), by reusing the same name. */\n    readonly name: string;\n    onconnect: ((this: SharedWorkerGlobalScope, ev: MessageEvent) => any) | null;\n    /** Aborts sharedWorkerGlobal. */\n    close(): void;\n    addEventListener<K extends keyof SharedWorkerGlobalScopeEventMap>(type: K, listener: (this: SharedWorkerGlobalScope, ev: SharedWorkerGlobalScopeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof SharedWorkerGlobalScopeEventMap>(type: K, listener: (this: SharedWorkerGlobalScope, ev: SharedWorkerGlobalScopeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var SharedWorkerGlobalScope: {\n    prototype: SharedWorkerGlobalScope;\n    new(): SharedWorkerGlobalScope;\n};\n\n/** Available only in secure contexts. */\ninterface StorageManager {\n    estimate(): Promise<StorageEstimate>;\n    getDirectory(): Promise<FileSystemDirectoryHandle>;\n    persisted(): Promise<boolean>;\n}\n\ndeclare var StorageManager: {\n    prototype: StorageManager;\n    new(): StorageManager;\n};\n\n/**\n * This Web Crypto API interface provides a number of low-level cryptographic functions. It is accessed via the Crypto.subtle properties available in a window context (via Window.crypto).\n * Available only in secure contexts.\n */\ninterface SubtleCrypto {\n    decrypt(algorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams, key: CryptoKey, data: BufferSource): Promise<any>;\n    deriveBits(algorithm: AlgorithmIdentifier | EcdhKeyDeriveParams | HkdfParams | Pbkdf2Params, baseKey: CryptoKey, length: number): Promise<ArrayBuffer>;\n    deriveKey(algorithm: AlgorithmIdentifier | EcdhKeyDeriveParams | HkdfParams | Pbkdf2Params, baseKey: CryptoKey, derivedKeyType: AlgorithmIdentifier | AesDerivedKeyParams | HmacImportParams | HkdfParams | Pbkdf2Params, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    digest(algorithm: AlgorithmIdentifier, data: BufferSource): Promise<ArrayBuffer>;\n    encrypt(algorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams, key: CryptoKey, data: BufferSource): Promise<any>;\n    exportKey(format: "jwk", key: CryptoKey): Promise<JsonWebKey>;\n    exportKey(format: Exclude<KeyFormat, "jwk">, key: CryptoKey): Promise<ArrayBuffer>;\n    generateKey(algorithm: RsaHashedKeyGenParams | EcKeyGenParams, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKeyPair>;\n    generateKey(algorithm: AesKeyGenParams | HmacKeyGenParams | Pbkdf2Params, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    generateKey(algorithm: AlgorithmIdentifier, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKeyPair | CryptoKey>;\n    importKey(format: "jwk", keyData: JsonWebKey, algorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    importKey(format: Exclude<KeyFormat, "jwk">, keyData: BufferSource, algorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    sign(algorithm: AlgorithmIdentifier | RsaPssParams | EcdsaParams, key: CryptoKey, data: BufferSource): Promise<ArrayBuffer>;\n    unwrapKey(format: KeyFormat, wrappedKey: BufferSource, unwrappingKey: CryptoKey, unwrapAlgorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams, unwrappedKeyAlgorithm: AlgorithmIdentifier | RsaHashedImportParams | EcKeyImportParams | HmacImportParams | AesKeyAlgorithm, extractable: boolean, keyUsages: KeyUsage[]): Promise<CryptoKey>;\n    verify(algorithm: AlgorithmIdentifier | RsaPssParams | EcdsaParams, key: CryptoKey, signature: BufferSource, data: BufferSource): Promise<boolean>;\n    wrapKey(format: KeyFormat, key: CryptoKey, wrappingKey: CryptoKey, wrapAlgorithm: AlgorithmIdentifier | RsaOaepParams | AesCtrParams | AesCbcParams | AesGcmParams): Promise<ArrayBuffer>;\n}\n\ndeclare var SubtleCrypto: {\n    prototype: SubtleCrypto;\n    new(): SubtleCrypto;\n};\n\n/** A decoder for a specific method, that is a specific character encoding, like utf-8, iso-8859-2, koi8, cp1261, gbk, etc. A decoder takes a stream of bytes as input and emits a stream of code points. For a more scalable, non-native library, see StringView – a C-like representation of strings based on typed arrays. */\ninterface TextDecoder extends TextDecoderCommon {\n    /**\n     * Returns the result of running encoding\'s decoder. The method can be invoked zero or more times with options\'s stream set to true, and then once without options\'s stream (or set to false), to process a fragmented input. If the invocation without options\'s stream (or set to false) has no input, it\'s clearest to omit both arguments.\n     *\n     * ```\n     * var string = "", decoder = new TextDecoder(encoding), buffer;\n     * while(buffer = next_chunk()) {\n     *   string += decoder.decode(buffer, {stream:true});\n     * }\n     * string += decoder.decode(); // end-of-queue\n     * ```\n     *\n     * If the error mode is "fatal" and encoding\'s decoder returns error, throws a TypeError.\n     */\n    decode(input?: BufferSource, options?: TextDecodeOptions): string;\n}\n\ndeclare var TextDecoder: {\n    prototype: TextDecoder;\n    new(label?: string, options?: TextDecoderOptions): TextDecoder;\n};\n\ninterface TextDecoderCommon {\n    /** Returns encoding\'s name, lowercased. */\n    readonly encoding: string;\n    /** Returns true if error mode is "fatal", otherwise false. */\n    readonly fatal: boolean;\n    /** Returns the value of ignore BOM. */\n    readonly ignoreBOM: boolean;\n}\n\ninterface TextDecoderStream extends GenericTransformStream, TextDecoderCommon {\n    readonly readable: ReadableStream<string>;\n    readonly writable: WritableStream<BufferSource>;\n}\n\ndeclare var TextDecoderStream: {\n    prototype: TextDecoderStream;\n    new(label?: string, options?: TextDecoderOptions): TextDecoderStream;\n};\n\n/** TextEncoder takes a stream of code points as input and emits a stream of bytes. For a more scalable, non-native library, see StringView – a C-like representation of strings based on typed arrays. */\ninterface TextEncoder extends TextEncoderCommon {\n    /** Returns the result of running UTF-8\'s encoder. */\n    encode(input?: string): Uint8Array;\n    /** Runs the UTF-8 encoder on source, stores the result of that operation into destination, and returns the progress made as an object wherein read is the number of converted code units of source and written is the number of bytes modified in destination. */\n    encodeInto(source: string, destination: Uint8Array): TextEncoderEncodeIntoResult;\n}\n\ndeclare var TextEncoder: {\n    prototype: TextEncoder;\n    new(): TextEncoder;\n};\n\ninterface TextEncoderCommon {\n    /** Returns "utf-8". */\n    readonly encoding: string;\n}\n\ninterface TextEncoderStream extends GenericTransformStream, TextEncoderCommon {\n    readonly readable: ReadableStream<Uint8Array>;\n    readonly writable: WritableStream<string>;\n}\n\ndeclare var TextEncoderStream: {\n    prototype: TextEncoderStream;\n    new(): TextEncoderStream;\n};\n\n/** The dimensions of a piece of text in the canvas, as created by the CanvasRenderingContext2D.measureText() method. */\ninterface TextMetrics {\n    /** Returns the measurement described below. */\n    readonly actualBoundingBoxAscent: number;\n    /** Returns the measurement described below. */\n    readonly actualBoundingBoxDescent: number;\n    /** Returns the measurement described below. */\n    readonly actualBoundingBoxLeft: number;\n    /** Returns the measurement described below. */\n    readonly actualBoundingBoxRight: number;\n    /** Returns the measurement described below. */\n    readonly fontBoundingBoxAscent: number;\n    /** Returns the measurement described below. */\n    readonly fontBoundingBoxDescent: number;\n    /** Returns the measurement described below. */\n    readonly width: number;\n}\n\ndeclare var TextMetrics: {\n    prototype: TextMetrics;\n    new(): TextMetrics;\n};\n\ninterface TransformStream<I = any, O = any> {\n    readonly readable: ReadableStream<O>;\n    readonly writable: WritableStream<I>;\n}\n\ndeclare var TransformStream: {\n    prototype: TransformStream;\n    new<I = any, O = any>(transformer?: Transformer<I, O>, writableStrategy?: QueuingStrategy<I>, readableStrategy?: QueuingStrategy<O>): TransformStream<I, O>;\n};\n\ninterface TransformStreamDefaultController<O = any> {\n    readonly desiredSize: number | null;\n    enqueue(chunk?: O): void;\n    error(reason?: any): void;\n    terminate(): void;\n}\n\ndeclare var TransformStreamDefaultController: {\n    prototype: TransformStreamDefaultController;\n    new(): TransformStreamDefaultController;\n};\n\n/** The URL interface represents an object providing static methods used for creating object URLs. */\ninterface URL {\n    hash: string;\n    host: string;\n    hostname: string;\n    href: string;\n    toString(): string;\n    readonly origin: string;\n    password: string;\n    pathname: string;\n    port: string;\n    protocol: string;\n    search: string;\n    readonly searchParams: URLSearchParams;\n    username: string;\n    toJSON(): string;\n}\n\ndeclare var URL: {\n    prototype: URL;\n    new(url: string | URL, base?: string | URL): URL;\n    createObjectURL(obj: Blob): string;\n    revokeObjectURL(url: string): void;\n};\n\ninterface URLSearchParams {\n    /** Appends a specified key/value pair as a new search parameter. */\n    append(name: string, value: string): void;\n    /** Deletes the given search parameter, and its associated value, from the list of all search parameters. */\n    delete(name: string): void;\n    /** Returns the first value associated to the given search parameter. */\n    get(name: string): string | null;\n    /** Returns all the values association with a given search parameter. */\n    getAll(name: string): string[];\n    /** Returns a Boolean indicating if such a search parameter exists. */\n    has(name: string): boolean;\n    /** Sets the value associated to a given search parameter to the given value. If there were several values, delete the others. */\n    set(name: string, value: string): void;\n    sort(): void;\n    /** Returns a string containing a query string suitable for use in a URL. Does not include the question mark. */\n    toString(): string;\n    forEach(callbackfn: (value: string, key: string, parent: URLSearchParams) => void, thisArg?: any): void;\n}\n\ndeclare var URLSearchParams: {\n    prototype: URLSearchParams;\n    new(init?: string[][] | Record<string, string> | string | URLSearchParams): URLSearchParams;\n    toString(): string;\n};\n\ninterface WEBGL_color_buffer_float {\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT: GLenum;\n    readonly RGBA32F_EXT: GLenum;\n    readonly UNSIGNED_NORMALIZED_EXT: GLenum;\n}\n\ninterface WEBGL_compressed_texture_astc {\n    getSupportedProfiles(): string[];\n    readonly COMPRESSED_RGBA_ASTC_10x10_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_10x5_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_10x6_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_10x8_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_12x10_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_12x12_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_4x4_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_5x4_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_5x5_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_6x5_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_6x6_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_8x5_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_8x6_KHR: GLenum;\n    readonly COMPRESSED_RGBA_ASTC_8x8_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: GLenum;\n}\n\ninterface WEBGL_compressed_texture_etc {\n    readonly COMPRESSED_R11_EAC: GLenum;\n    readonly COMPRESSED_RG11_EAC: GLenum;\n    readonly COMPRESSED_RGB8_ETC2: GLenum;\n    readonly COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: GLenum;\n    readonly COMPRESSED_RGBA8_ETC2_EAC: GLenum;\n    readonly COMPRESSED_SIGNED_R11_EAC: GLenum;\n    readonly COMPRESSED_SIGNED_RG11_EAC: GLenum;\n    readonly COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: GLenum;\n    readonly COMPRESSED_SRGB8_ETC2: GLenum;\n    readonly COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: GLenum;\n}\n\ninterface WEBGL_compressed_texture_etc1 {\n    readonly COMPRESSED_RGB_ETC1_WEBGL: GLenum;\n}\n\ninterface WEBGL_compressed_texture_pvrtc {\n    readonly COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: GLenum;\n    readonly COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: GLenum;\n    readonly COMPRESSED_RGB_PVRTC_2BPPV1_IMG: GLenum;\n    readonly COMPRESSED_RGB_PVRTC_4BPPV1_IMG: GLenum;\n}\n\n/** The WEBGL_compressed_texture_s3tc extension is part of the WebGL API and exposes four S3TC compressed texture formats. */\ninterface WEBGL_compressed_texture_s3tc {\n    readonly COMPRESSED_RGBA_S3TC_DXT1_EXT: GLenum;\n    readonly COMPRESSED_RGBA_S3TC_DXT3_EXT: GLenum;\n    readonly COMPRESSED_RGBA_S3TC_DXT5_EXT: GLenum;\n    readonly COMPRESSED_RGB_S3TC_DXT1_EXT: GLenum;\n}\n\ninterface WEBGL_compressed_texture_s3tc_srgb {\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: GLenum;\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: GLenum;\n    readonly COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: GLenum;\n    readonly COMPRESSED_SRGB_S3TC_DXT1_EXT: GLenum;\n}\n\n/** The WEBGL_debug_renderer_info extension is part of the WebGL API and exposes two constants with information about the graphics driver for debugging purposes. */\ninterface WEBGL_debug_renderer_info {\n    readonly UNMASKED_RENDERER_WEBGL: GLenum;\n    readonly UNMASKED_VENDOR_WEBGL: GLenum;\n}\n\ninterface WEBGL_debug_shaders {\n    getTranslatedShaderSource(shader: WebGLShader): string;\n}\n\n/** The WEBGL_depth_texture extension is part of the WebGL API and defines 2D depth and depth-stencil textures. */\ninterface WEBGL_depth_texture {\n    readonly UNSIGNED_INT_24_8_WEBGL: GLenum;\n}\n\ninterface WEBGL_draw_buffers {\n    drawBuffersWEBGL(buffers: GLenum[]): void;\n    readonly COLOR_ATTACHMENT0_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT10_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT11_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT12_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT13_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT14_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT15_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT1_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT2_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT3_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT4_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT5_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT6_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT7_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT8_WEBGL: GLenum;\n    readonly COLOR_ATTACHMENT9_WEBGL: GLenum;\n    readonly DRAW_BUFFER0_WEBGL: GLenum;\n    readonly DRAW_BUFFER10_WEBGL: GLenum;\n    readonly DRAW_BUFFER11_WEBGL: GLenum;\n    readonly DRAW_BUFFER12_WEBGL: GLenum;\n    readonly DRAW_BUFFER13_WEBGL: GLenum;\n    readonly DRAW_BUFFER14_WEBGL: GLenum;\n    readonly DRAW_BUFFER15_WEBGL: GLenum;\n    readonly DRAW_BUFFER1_WEBGL: GLenum;\n    readonly DRAW_BUFFER2_WEBGL: GLenum;\n    readonly DRAW_BUFFER3_WEBGL: GLenum;\n    readonly DRAW_BUFFER4_WEBGL: GLenum;\n    readonly DRAW_BUFFER5_WEBGL: GLenum;\n    readonly DRAW_BUFFER6_WEBGL: GLenum;\n    readonly DRAW_BUFFER7_WEBGL: GLenum;\n    readonly DRAW_BUFFER8_WEBGL: GLenum;\n    readonly DRAW_BUFFER9_WEBGL: GLenum;\n    readonly MAX_COLOR_ATTACHMENTS_WEBGL: GLenum;\n    readonly MAX_DRAW_BUFFERS_WEBGL: GLenum;\n}\n\ninterface WEBGL_lose_context {\n    loseContext(): void;\n    restoreContext(): void;\n}\n\ninterface WEBGL_multi_draw {\n    multiDrawArraysInstancedWEBGL(mode: GLenum, firstsList: Int32Array | GLint[], firstsOffset: GLuint, countsList: Int32Array | GLsizei[], countsOffset: GLuint, instanceCountsList: Int32Array | GLsizei[], instanceCountsOffset: GLuint, drawcount: GLsizei): void;\n    multiDrawArraysWEBGL(mode: GLenum, firstsList: Int32Array | GLint[], firstsOffset: GLuint, countsList: Int32Array | GLsizei[], countsOffset: GLuint, drawcount: GLsizei): void;\n    multiDrawElementsInstancedWEBGL(mode: GLenum, countsList: Int32Array | GLint[], countsOffset: GLuint, type: GLenum, offsetsList: Int32Array | GLsizei[], offsetsOffset: GLuint, instanceCountsList: Int32Array | GLsizei[], instanceCountsOffset: GLuint, drawcount: GLsizei): void;\n    multiDrawElementsWEBGL(mode: GLenum, countsList: Int32Array | GLint[], countsOffset: GLuint, type: GLenum, offsetsList: Int32Array | GLsizei[], offsetsOffset: GLuint, drawcount: GLsizei): void;\n}\n\ninterface WebGL2RenderingContext extends WebGL2RenderingContextBase, WebGL2RenderingContextOverloads, WebGLRenderingContextBase {\n}\n\ndeclare var WebGL2RenderingContext: {\n    prototype: WebGL2RenderingContext;\n    new(): WebGL2RenderingContext;\n    readonly ACTIVE_UNIFORM_BLOCKS: GLenum;\n    readonly ALREADY_SIGNALED: GLenum;\n    readonly ANY_SAMPLES_PASSED: GLenum;\n    readonly ANY_SAMPLES_PASSED_CONSERVATIVE: GLenum;\n    readonly COLOR: GLenum;\n    readonly COLOR_ATTACHMENT1: GLenum;\n    readonly COLOR_ATTACHMENT10: GLenum;\n    readonly COLOR_ATTACHMENT11: GLenum;\n    readonly COLOR_ATTACHMENT12: GLenum;\n    readonly COLOR_ATTACHMENT13: GLenum;\n    readonly COLOR_ATTACHMENT14: GLenum;\n    readonly COLOR_ATTACHMENT15: GLenum;\n    readonly COLOR_ATTACHMENT2: GLenum;\n    readonly COLOR_ATTACHMENT3: GLenum;\n    readonly COLOR_ATTACHMENT4: GLenum;\n    readonly COLOR_ATTACHMENT5: GLenum;\n    readonly COLOR_ATTACHMENT6: GLenum;\n    readonly COLOR_ATTACHMENT7: GLenum;\n    readonly COLOR_ATTACHMENT8: GLenum;\n    readonly COLOR_ATTACHMENT9: GLenum;\n    readonly COMPARE_REF_TO_TEXTURE: GLenum;\n    readonly CONDITION_SATISFIED: GLenum;\n    readonly COPY_READ_BUFFER: GLenum;\n    readonly COPY_READ_BUFFER_BINDING: GLenum;\n    readonly COPY_WRITE_BUFFER: GLenum;\n    readonly COPY_WRITE_BUFFER_BINDING: GLenum;\n    readonly CURRENT_QUERY: GLenum;\n    readonly DEPTH: GLenum;\n    readonly DEPTH24_STENCIL8: GLenum;\n    readonly DEPTH32F_STENCIL8: GLenum;\n    readonly DEPTH_COMPONENT24: GLenum;\n    readonly DEPTH_COMPONENT32F: GLenum;\n    readonly DRAW_BUFFER0: GLenum;\n    readonly DRAW_BUFFER1: GLenum;\n    readonly DRAW_BUFFER10: GLenum;\n    readonly DRAW_BUFFER11: GLenum;\n    readonly DRAW_BUFFER12: GLenum;\n    readonly DRAW_BUFFER13: GLenum;\n    readonly DRAW_BUFFER14: GLenum;\n    readonly DRAW_BUFFER15: GLenum;\n    readonly DRAW_BUFFER2: GLenum;\n    readonly DRAW_BUFFER3: GLenum;\n    readonly DRAW_BUFFER4: GLenum;\n    readonly DRAW_BUFFER5: GLenum;\n    readonly DRAW_BUFFER6: GLenum;\n    readonly DRAW_BUFFER7: GLenum;\n    readonly DRAW_BUFFER8: GLenum;\n    readonly DRAW_BUFFER9: GLenum;\n    readonly DRAW_FRAMEBUFFER: GLenum;\n    readonly DRAW_FRAMEBUFFER_BINDING: GLenum;\n    readonly DYNAMIC_COPY: GLenum;\n    readonly DYNAMIC_READ: GLenum;\n    readonly FLOAT_32_UNSIGNED_INT_24_8_REV: GLenum;\n    readonly FLOAT_MAT2x3: GLenum;\n    readonly FLOAT_MAT2x4: GLenum;\n    readonly FLOAT_MAT3x2: GLenum;\n    readonly FLOAT_MAT3x4: GLenum;\n    readonly FLOAT_MAT4x2: GLenum;\n    readonly FLOAT_MAT4x3: GLenum;\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: GLenum;\n    readonly FRAMEBUFFER_DEFAULT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: GLenum;\n    readonly HALF_FLOAT: GLenum;\n    readonly INTERLEAVED_ATTRIBS: GLenum;\n    readonly INT_2_10_10_10_REV: GLenum;\n    readonly INT_SAMPLER_2D: GLenum;\n    readonly INT_SAMPLER_2D_ARRAY: GLenum;\n    readonly INT_SAMPLER_3D: GLenum;\n    readonly INT_SAMPLER_CUBE: GLenum;\n    readonly INVALID_INDEX: GLenum;\n    readonly MAX: GLenum;\n    readonly MAX_3D_TEXTURE_SIZE: GLenum;\n    readonly MAX_ARRAY_TEXTURE_LAYERS: GLenum;\n    readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: GLenum;\n    readonly MAX_COLOR_ATTACHMENTS: GLenum;\n    readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_COMBINED_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_DRAW_BUFFERS: GLenum;\n    readonly MAX_ELEMENTS_INDICES: GLenum;\n    readonly MAX_ELEMENTS_VERTICES: GLenum;\n    readonly MAX_ELEMENT_INDEX: GLenum;\n    readonly MAX_FRAGMENT_INPUT_COMPONENTS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_PROGRAM_TEXEL_OFFSET: GLenum;\n    readonly MAX_SAMPLES: GLenum;\n    readonly MAX_SERVER_WAIT_TIMEOUT: GLenum;\n    readonly MAX_TEXTURE_LOD_BIAS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: GLenum;\n    readonly MAX_UNIFORM_BLOCK_SIZE: GLenum;\n    readonly MAX_UNIFORM_BUFFER_BINDINGS: GLenum;\n    readonly MAX_VARYING_COMPONENTS: GLenum;\n    readonly MAX_VERTEX_OUTPUT_COMPONENTS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_COMPONENTS: GLenum;\n    readonly MIN: GLenum;\n    readonly MIN_PROGRAM_TEXEL_OFFSET: GLenum;\n    readonly OBJECT_TYPE: GLenum;\n    readonly PACK_ROW_LENGTH: GLenum;\n    readonly PACK_SKIP_PIXELS: GLenum;\n    readonly PACK_SKIP_ROWS: GLenum;\n    readonly PIXEL_PACK_BUFFER: GLenum;\n    readonly PIXEL_PACK_BUFFER_BINDING: GLenum;\n    readonly PIXEL_UNPACK_BUFFER: GLenum;\n    readonly PIXEL_UNPACK_BUFFER_BINDING: GLenum;\n    readonly QUERY_RESULT: GLenum;\n    readonly QUERY_RESULT_AVAILABLE: GLenum;\n    readonly R11F_G11F_B10F: GLenum;\n    readonly R16F: GLenum;\n    readonly R16I: GLenum;\n    readonly R16UI: GLenum;\n    readonly R32F: GLenum;\n    readonly R32I: GLenum;\n    readonly R32UI: GLenum;\n    readonly R8: GLenum;\n    readonly R8I: GLenum;\n    readonly R8UI: GLenum;\n    readonly R8_SNORM: GLenum;\n    readonly RASTERIZER_DISCARD: GLenum;\n    readonly READ_BUFFER: GLenum;\n    readonly READ_FRAMEBUFFER: GLenum;\n    readonly READ_FRAMEBUFFER_BINDING: GLenum;\n    readonly RED: GLenum;\n    readonly RED_INTEGER: GLenum;\n    readonly RENDERBUFFER_SAMPLES: GLenum;\n    readonly RG: GLenum;\n    readonly RG16F: GLenum;\n    readonly RG16I: GLenum;\n    readonly RG16UI: GLenum;\n    readonly RG32F: GLenum;\n    readonly RG32I: GLenum;\n    readonly RG32UI: GLenum;\n    readonly RG8: GLenum;\n    readonly RG8I: GLenum;\n    readonly RG8UI: GLenum;\n    readonly RG8_SNORM: GLenum;\n    readonly RGB10_A2: GLenum;\n    readonly RGB10_A2UI: GLenum;\n    readonly RGB16F: GLenum;\n    readonly RGB16I: GLenum;\n    readonly RGB16UI: GLenum;\n    readonly RGB32F: GLenum;\n    readonly RGB32I: GLenum;\n    readonly RGB32UI: GLenum;\n    readonly RGB8: GLenum;\n    readonly RGB8I: GLenum;\n    readonly RGB8UI: GLenum;\n    readonly RGB8_SNORM: GLenum;\n    readonly RGB9_E5: GLenum;\n    readonly RGBA16F: GLenum;\n    readonly RGBA16I: GLenum;\n    readonly RGBA16UI: GLenum;\n    readonly RGBA32F: GLenum;\n    readonly RGBA32I: GLenum;\n    readonly RGBA32UI: GLenum;\n    readonly RGBA8: GLenum;\n    readonly RGBA8I: GLenum;\n    readonly RGBA8UI: GLenum;\n    readonly RGBA8_SNORM: GLenum;\n    readonly RGBA_INTEGER: GLenum;\n    readonly RGB_INTEGER: GLenum;\n    readonly RG_INTEGER: GLenum;\n    readonly SAMPLER_2D_ARRAY: GLenum;\n    readonly SAMPLER_2D_ARRAY_SHADOW: GLenum;\n    readonly SAMPLER_2D_SHADOW: GLenum;\n    readonly SAMPLER_3D: GLenum;\n    readonly SAMPLER_BINDING: GLenum;\n    readonly SAMPLER_CUBE_SHADOW: GLenum;\n    readonly SEPARATE_ATTRIBS: GLenum;\n    readonly SIGNALED: GLenum;\n    readonly SIGNED_NORMALIZED: GLenum;\n    readonly SRGB: GLenum;\n    readonly SRGB8: GLenum;\n    readonly SRGB8_ALPHA8: GLenum;\n    readonly STATIC_COPY: GLenum;\n    readonly STATIC_READ: GLenum;\n    readonly STENCIL: GLenum;\n    readonly STREAM_COPY: GLenum;\n    readonly STREAM_READ: GLenum;\n    readonly SYNC_CONDITION: GLenum;\n    readonly SYNC_FENCE: GLenum;\n    readonly SYNC_FLAGS: GLenum;\n    readonly SYNC_FLUSH_COMMANDS_BIT: GLenum;\n    readonly SYNC_GPU_COMMANDS_COMPLETE: GLenum;\n    readonly SYNC_STATUS: GLenum;\n    readonly TEXTURE_2D_ARRAY: GLenum;\n    readonly TEXTURE_3D: GLenum;\n    readonly TEXTURE_BASE_LEVEL: GLenum;\n    readonly TEXTURE_BINDING_2D_ARRAY: GLenum;\n    readonly TEXTURE_BINDING_3D: GLenum;\n    readonly TEXTURE_COMPARE_FUNC: GLenum;\n    readonly TEXTURE_COMPARE_MODE: GLenum;\n    readonly TEXTURE_IMMUTABLE_FORMAT: GLenum;\n    readonly TEXTURE_IMMUTABLE_LEVELS: GLenum;\n    readonly TEXTURE_MAX_LEVEL: GLenum;\n    readonly TEXTURE_MAX_LOD: GLenum;\n    readonly TEXTURE_MIN_LOD: GLenum;\n    readonly TEXTURE_WRAP_R: GLenum;\n    readonly TIMEOUT_EXPIRED: GLenum;\n    readonly TIMEOUT_IGNORED: GLint64;\n    readonly TRANSFORM_FEEDBACK: GLenum;\n    readonly TRANSFORM_FEEDBACK_ACTIVE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BINDING: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_MODE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_START: GLenum;\n    readonly TRANSFORM_FEEDBACK_PAUSED: GLenum;\n    readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: GLenum;\n    readonly TRANSFORM_FEEDBACK_VARYINGS: GLenum;\n    readonly UNIFORM_ARRAY_STRIDE: GLenum;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: GLenum;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: GLenum;\n    readonly UNIFORM_BLOCK_BINDING: GLenum;\n    readonly UNIFORM_BLOCK_DATA_SIZE: GLenum;\n    readonly UNIFORM_BLOCK_INDEX: GLenum;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: GLenum;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: GLenum;\n    readonly UNIFORM_BUFFER: GLenum;\n    readonly UNIFORM_BUFFER_BINDING: GLenum;\n    readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: GLenum;\n    readonly UNIFORM_BUFFER_SIZE: GLenum;\n    readonly UNIFORM_BUFFER_START: GLenum;\n    readonly UNIFORM_IS_ROW_MAJOR: GLenum;\n    readonly UNIFORM_MATRIX_STRIDE: GLenum;\n    readonly UNIFORM_OFFSET: GLenum;\n    readonly UNIFORM_SIZE: GLenum;\n    readonly UNIFORM_TYPE: GLenum;\n    readonly UNPACK_IMAGE_HEIGHT: GLenum;\n    readonly UNPACK_ROW_LENGTH: GLenum;\n    readonly UNPACK_SKIP_IMAGES: GLenum;\n    readonly UNPACK_SKIP_PIXELS: GLenum;\n    readonly UNPACK_SKIP_ROWS: GLenum;\n    readonly UNSIGNALED: GLenum;\n    readonly UNSIGNED_INT_10F_11F_11F_REV: GLenum;\n    readonly UNSIGNED_INT_24_8: GLenum;\n    readonly UNSIGNED_INT_2_10_10_10_REV: GLenum;\n    readonly UNSIGNED_INT_5_9_9_9_REV: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_2D: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_3D: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_CUBE: GLenum;\n    readonly UNSIGNED_INT_VEC2: GLenum;\n    readonly UNSIGNED_INT_VEC3: GLenum;\n    readonly UNSIGNED_INT_VEC4: GLenum;\n    readonly UNSIGNED_NORMALIZED: GLenum;\n    readonly VERTEX_ARRAY_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_INTEGER: GLenum;\n    readonly WAIT_FAILED: GLenum;\n    readonly ACTIVE_ATTRIBUTES: GLenum;\n    readonly ACTIVE_TEXTURE: GLenum;\n    readonly ACTIVE_UNIFORMS: GLenum;\n    readonly ALIASED_LINE_WIDTH_RANGE: GLenum;\n    readonly ALIASED_POINT_SIZE_RANGE: GLenum;\n    readonly ALPHA: GLenum;\n    readonly ALPHA_BITS: GLenum;\n    readonly ALWAYS: GLenum;\n    readonly ARRAY_BUFFER: GLenum;\n    readonly ARRAY_BUFFER_BINDING: GLenum;\n    readonly ATTACHED_SHADERS: GLenum;\n    readonly BACK: GLenum;\n    readonly BLEND: GLenum;\n    readonly BLEND_COLOR: GLenum;\n    readonly BLEND_DST_ALPHA: GLenum;\n    readonly BLEND_DST_RGB: GLenum;\n    readonly BLEND_EQUATION: GLenum;\n    readonly BLEND_EQUATION_ALPHA: GLenum;\n    readonly BLEND_EQUATION_RGB: GLenum;\n    readonly BLEND_SRC_ALPHA: GLenum;\n    readonly BLEND_SRC_RGB: GLenum;\n    readonly BLUE_BITS: GLenum;\n    readonly BOOL: GLenum;\n    readonly BOOL_VEC2: GLenum;\n    readonly BOOL_VEC3: GLenum;\n    readonly BOOL_VEC4: GLenum;\n    readonly BROWSER_DEFAULT_WEBGL: GLenum;\n    readonly BUFFER_SIZE: GLenum;\n    readonly BUFFER_USAGE: GLenum;\n    readonly BYTE: GLenum;\n    readonly CCW: GLenum;\n    readonly CLAMP_TO_EDGE: GLenum;\n    readonly COLOR_ATTACHMENT0: GLenum;\n    readonly COLOR_BUFFER_BIT: GLenum;\n    readonly COLOR_CLEAR_VALUE: GLenum;\n    readonly COLOR_WRITEMASK: GLenum;\n    readonly COMPILE_STATUS: GLenum;\n    readonly COMPRESSED_TEXTURE_FORMATS: GLenum;\n    readonly CONSTANT_ALPHA: GLenum;\n    readonly CONSTANT_COLOR: GLenum;\n    readonly CONTEXT_LOST_WEBGL: GLenum;\n    readonly CULL_FACE: GLenum;\n    readonly CULL_FACE_MODE: GLenum;\n    readonly CURRENT_PROGRAM: GLenum;\n    readonly CURRENT_VERTEX_ATTRIB: GLenum;\n    readonly CW: GLenum;\n    readonly DECR: GLenum;\n    readonly DECR_WRAP: GLenum;\n    readonly DELETE_STATUS: GLenum;\n    readonly DEPTH_ATTACHMENT: GLenum;\n    readonly DEPTH_BITS: GLenum;\n    readonly DEPTH_BUFFER_BIT: GLenum;\n    readonly DEPTH_CLEAR_VALUE: GLenum;\n    readonly DEPTH_COMPONENT: GLenum;\n    readonly DEPTH_COMPONENT16: GLenum;\n    readonly DEPTH_FUNC: GLenum;\n    readonly DEPTH_RANGE: GLenum;\n    readonly DEPTH_STENCIL: GLenum;\n    readonly DEPTH_STENCIL_ATTACHMENT: GLenum;\n    readonly DEPTH_TEST: GLenum;\n    readonly DEPTH_WRITEMASK: GLenum;\n    readonly DITHER: GLenum;\n    readonly DONT_CARE: GLenum;\n    readonly DST_ALPHA: GLenum;\n    readonly DST_COLOR: GLenum;\n    readonly DYNAMIC_DRAW: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: GLenum;\n    readonly EQUAL: GLenum;\n    readonly FASTEST: GLenum;\n    readonly FLOAT: GLenum;\n    readonly FLOAT_MAT2: GLenum;\n    readonly FLOAT_MAT3: GLenum;\n    readonly FLOAT_MAT4: GLenum;\n    readonly FLOAT_VEC2: GLenum;\n    readonly FLOAT_VEC3: GLenum;\n    readonly FLOAT_VEC4: GLenum;\n    readonly FRAGMENT_SHADER: GLenum;\n    readonly FRAMEBUFFER: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: GLenum;\n    readonly FRAMEBUFFER_BINDING: GLenum;\n    readonly FRAMEBUFFER_COMPLETE: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_UNSUPPORTED: GLenum;\n    readonly FRONT: GLenum;\n    readonly FRONT_AND_BACK: GLenum;\n    readonly FRONT_FACE: GLenum;\n    readonly FUNC_ADD: GLenum;\n    readonly FUNC_REVERSE_SUBTRACT: GLenum;\n    readonly FUNC_SUBTRACT: GLenum;\n    readonly GENERATE_MIPMAP_HINT: GLenum;\n    readonly GEQUAL: GLenum;\n    readonly GREATER: GLenum;\n    readonly GREEN_BITS: GLenum;\n    readonly HIGH_FLOAT: GLenum;\n    readonly HIGH_INT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: GLenum;\n    readonly INCR: GLenum;\n    readonly INCR_WRAP: GLenum;\n    readonly INT: GLenum;\n    readonly INT_VEC2: GLenum;\n    readonly INT_VEC3: GLenum;\n    readonly INT_VEC4: GLenum;\n    readonly INVALID_ENUM: GLenum;\n    readonly INVALID_FRAMEBUFFER_OPERATION: GLenum;\n    readonly INVALID_OPERATION: GLenum;\n    readonly INVALID_VALUE: GLenum;\n    readonly INVERT: GLenum;\n    readonly KEEP: GLenum;\n    readonly LEQUAL: GLenum;\n    readonly LESS: GLenum;\n    readonly LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_NEAREST: GLenum;\n    readonly LINES: GLenum;\n    readonly LINE_LOOP: GLenum;\n    readonly LINE_STRIP: GLenum;\n    readonly LINE_WIDTH: GLenum;\n    readonly LINK_STATUS: GLenum;\n    readonly LOW_FLOAT: GLenum;\n    readonly LOW_INT: GLenum;\n    readonly LUMINANCE: GLenum;\n    readonly LUMINANCE_ALPHA: GLenum;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: GLenum;\n    readonly MAX_RENDERBUFFER_SIZE: GLenum;\n    readonly MAX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_TEXTURE_SIZE: GLenum;\n    readonly MAX_VARYING_VECTORS: GLenum;\n    readonly MAX_VERTEX_ATTRIBS: GLenum;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: GLenum;\n    readonly MAX_VIEWPORT_DIMS: GLenum;\n    readonly MEDIUM_FLOAT: GLenum;\n    readonly MEDIUM_INT: GLenum;\n    readonly MIRRORED_REPEAT: GLenum;\n    readonly NEAREST: GLenum;\n    readonly NEAREST_MIPMAP_LINEAR: GLenum;\n    readonly NEAREST_MIPMAP_NEAREST: GLenum;\n    readonly NEVER: GLenum;\n    readonly NICEST: GLenum;\n    readonly NONE: GLenum;\n    readonly NOTEQUAL: GLenum;\n    readonly NO_ERROR: GLenum;\n    readonly ONE: GLenum;\n    readonly ONE_MINUS_CONSTANT_ALPHA: GLenum;\n    readonly ONE_MINUS_CONSTANT_COLOR: GLenum;\n    readonly ONE_MINUS_DST_ALPHA: GLenum;\n    readonly ONE_MINUS_DST_COLOR: GLenum;\n    readonly ONE_MINUS_SRC_ALPHA: GLenum;\n    readonly ONE_MINUS_SRC_COLOR: GLenum;\n    readonly OUT_OF_MEMORY: GLenum;\n    readonly PACK_ALIGNMENT: GLenum;\n    readonly POINTS: GLenum;\n    readonly POLYGON_OFFSET_FACTOR: GLenum;\n    readonly POLYGON_OFFSET_FILL: GLenum;\n    readonly POLYGON_OFFSET_UNITS: GLenum;\n    readonly RED_BITS: GLenum;\n    readonly RENDERBUFFER: GLenum;\n    readonly RENDERBUFFER_ALPHA_SIZE: GLenum;\n    readonly RENDERBUFFER_BINDING: GLenum;\n    readonly RENDERBUFFER_BLUE_SIZE: GLenum;\n    readonly RENDERBUFFER_DEPTH_SIZE: GLenum;\n    readonly RENDERBUFFER_GREEN_SIZE: GLenum;\n    readonly RENDERBUFFER_HEIGHT: GLenum;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: GLenum;\n    readonly RENDERBUFFER_RED_SIZE: GLenum;\n    readonly RENDERBUFFER_STENCIL_SIZE: GLenum;\n    readonly RENDERBUFFER_WIDTH: GLenum;\n    readonly RENDERER: GLenum;\n    readonly REPEAT: GLenum;\n    readonly REPLACE: GLenum;\n    readonly RGB: GLenum;\n    readonly RGB565: GLenum;\n    readonly RGB5_A1: GLenum;\n    readonly RGBA: GLenum;\n    readonly RGBA4: GLenum;\n    readonly SAMPLER_2D: GLenum;\n    readonly SAMPLER_CUBE: GLenum;\n    readonly SAMPLES: GLenum;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: GLenum;\n    readonly SAMPLE_BUFFERS: GLenum;\n    readonly SAMPLE_COVERAGE: GLenum;\n    readonly SAMPLE_COVERAGE_INVERT: GLenum;\n    readonly SAMPLE_COVERAGE_VALUE: GLenum;\n    readonly SCISSOR_BOX: GLenum;\n    readonly SCISSOR_TEST: GLenum;\n    readonly SHADER_TYPE: GLenum;\n    readonly SHADING_LANGUAGE_VERSION: GLenum;\n    readonly SHORT: GLenum;\n    readonly SRC_ALPHA: GLenum;\n    readonly SRC_ALPHA_SATURATE: GLenum;\n    readonly SRC_COLOR: GLenum;\n    readonly STATIC_DRAW: GLenum;\n    readonly STENCIL_ATTACHMENT: GLenum;\n    readonly STENCIL_BACK_FAIL: GLenum;\n    readonly STENCIL_BACK_FUNC: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_BACK_REF: GLenum;\n    readonly STENCIL_BACK_VALUE_MASK: GLenum;\n    readonly STENCIL_BACK_WRITEMASK: GLenum;\n    readonly STENCIL_BITS: GLenum;\n    readonly STENCIL_BUFFER_BIT: GLenum;\n    readonly STENCIL_CLEAR_VALUE: GLenum;\n    readonly STENCIL_FAIL: GLenum;\n    readonly STENCIL_FUNC: GLenum;\n    readonly STENCIL_INDEX8: GLenum;\n    readonly STENCIL_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_REF: GLenum;\n    readonly STENCIL_TEST: GLenum;\n    readonly STENCIL_VALUE_MASK: GLenum;\n    readonly STENCIL_WRITEMASK: GLenum;\n    readonly STREAM_DRAW: GLenum;\n    readonly SUBPIXEL_BITS: GLenum;\n    readonly TEXTURE: GLenum;\n    readonly TEXTURE0: GLenum;\n    readonly TEXTURE1: GLenum;\n    readonly TEXTURE10: GLenum;\n    readonly TEXTURE11: GLenum;\n    readonly TEXTURE12: GLenum;\n    readonly TEXTURE13: GLenum;\n    readonly TEXTURE14: GLenum;\n    readonly TEXTURE15: GLenum;\n    readonly TEXTURE16: GLenum;\n    readonly TEXTURE17: GLenum;\n    readonly TEXTURE18: GLenum;\n    readonly TEXTURE19: GLenum;\n    readonly TEXTURE2: GLenum;\n    readonly TEXTURE20: GLenum;\n    readonly TEXTURE21: GLenum;\n    readonly TEXTURE22: GLenum;\n    readonly TEXTURE23: GLenum;\n    readonly TEXTURE24: GLenum;\n    readonly TEXTURE25: GLenum;\n    readonly TEXTURE26: GLenum;\n    readonly TEXTURE27: GLenum;\n    readonly TEXTURE28: GLenum;\n    readonly TEXTURE29: GLenum;\n    readonly TEXTURE3: GLenum;\n    readonly TEXTURE30: GLenum;\n    readonly TEXTURE31: GLenum;\n    readonly TEXTURE4: GLenum;\n    readonly TEXTURE5: GLenum;\n    readonly TEXTURE6: GLenum;\n    readonly TEXTURE7: GLenum;\n    readonly TEXTURE8: GLenum;\n    readonly TEXTURE9: GLenum;\n    readonly TEXTURE_2D: GLenum;\n    readonly TEXTURE_BINDING_2D: GLenum;\n    readonly TEXTURE_BINDING_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: GLenum;\n    readonly TEXTURE_MAG_FILTER: GLenum;\n    readonly TEXTURE_MIN_FILTER: GLenum;\n    readonly TEXTURE_WRAP_S: GLenum;\n    readonly TEXTURE_WRAP_T: GLenum;\n    readonly TRIANGLES: GLenum;\n    readonly TRIANGLE_FAN: GLenum;\n    readonly TRIANGLE_STRIP: GLenum;\n    readonly UNPACK_ALIGNMENT: GLenum;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: GLenum;\n    readonly UNPACK_FLIP_Y_WEBGL: GLenum;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: GLenum;\n    readonly UNSIGNED_BYTE: GLenum;\n    readonly UNSIGNED_INT: GLenum;\n    readonly UNSIGNED_SHORT: GLenum;\n    readonly UNSIGNED_SHORT_4_4_4_4: GLenum;\n    readonly UNSIGNED_SHORT_5_5_5_1: GLenum;\n    readonly UNSIGNED_SHORT_5_6_5: GLenum;\n    readonly VALIDATE_STATUS: GLenum;\n    readonly VENDOR: GLenum;\n    readonly VERSION: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: GLenum;\n    readonly VERTEX_SHADER: GLenum;\n    readonly VIEWPORT: GLenum;\n    readonly ZERO: GLenum;\n};\n\ninterface WebGL2RenderingContextBase {\n    beginQuery(target: GLenum, query: WebGLQuery): void;\n    beginTransformFeedback(primitiveMode: GLenum): void;\n    bindBufferBase(target: GLenum, index: GLuint, buffer: WebGLBuffer | null): void;\n    bindBufferRange(target: GLenum, index: GLuint, buffer: WebGLBuffer | null, offset: GLintptr, size: GLsizeiptr): void;\n    bindSampler(unit: GLuint, sampler: WebGLSampler | null): void;\n    bindTransformFeedback(target: GLenum, tf: WebGLTransformFeedback | null): void;\n    bindVertexArray(array: WebGLVertexArrayObject | null): void;\n    blitFramebuffer(srcX0: GLint, srcY0: GLint, srcX1: GLint, srcY1: GLint, dstX0: GLint, dstY0: GLint, dstX1: GLint, dstY1: GLint, mask: GLbitfield, filter: GLenum): void;\n    clearBufferfi(buffer: GLenum, drawbuffer: GLint, depth: GLfloat, stencil: GLint): void;\n    clearBufferfv(buffer: GLenum, drawbuffer: GLint, values: Float32List, srcOffset?: GLuint): void;\n    clearBufferiv(buffer: GLenum, drawbuffer: GLint, values: Int32List, srcOffset?: GLuint): void;\n    clearBufferuiv(buffer: GLenum, drawbuffer: GLint, values: Uint32List, srcOffset?: GLuint): void;\n    clientWaitSync(sync: WebGLSync, flags: GLbitfield, timeout: GLuint64): GLenum;\n    compressedTexImage3D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, imageSize: GLsizei, offset: GLintptr): void;\n    compressedTexImage3D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, srcData: ArrayBufferView, srcOffset?: GLuint, srcLengthOverride?: GLuint): void;\n    compressedTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, imageSize: GLsizei, offset: GLintptr): void;\n    compressedTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, srcData: ArrayBufferView, srcOffset?: GLuint, srcLengthOverride?: GLuint): void;\n    copyBufferSubData(readTarget: GLenum, writeTarget: GLenum, readOffset: GLintptr, writeOffset: GLintptr, size: GLsizeiptr): void;\n    copyTexSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    createQuery(): WebGLQuery | null;\n    createSampler(): WebGLSampler | null;\n    createTransformFeedback(): WebGLTransformFeedback | null;\n    createVertexArray(): WebGLVertexArrayObject | null;\n    deleteQuery(query: WebGLQuery | null): void;\n    deleteSampler(sampler: WebGLSampler | null): void;\n    deleteSync(sync: WebGLSync | null): void;\n    deleteTransformFeedback(tf: WebGLTransformFeedback | null): void;\n    deleteVertexArray(vertexArray: WebGLVertexArrayObject | null): void;\n    drawArraysInstanced(mode: GLenum, first: GLint, count: GLsizei, instanceCount: GLsizei): void;\n    drawBuffers(buffers: GLenum[]): void;\n    drawElementsInstanced(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr, instanceCount: GLsizei): void;\n    drawRangeElements(mode: GLenum, start: GLuint, end: GLuint, count: GLsizei, type: GLenum, offset: GLintptr): void;\n    endQuery(target: GLenum): void;\n    endTransformFeedback(): void;\n    fenceSync(condition: GLenum, flags: GLbitfield): WebGLSync | null;\n    framebufferTextureLayer(target: GLenum, attachment: GLenum, texture: WebGLTexture | null, level: GLint, layer: GLint): void;\n    getActiveUniformBlockName(program: WebGLProgram, uniformBlockIndex: GLuint): string | null;\n    getActiveUniformBlockParameter(program: WebGLProgram, uniformBlockIndex: GLuint, pname: GLenum): any;\n    getActiveUniforms(program: WebGLProgram, uniformIndices: GLuint[], pname: GLenum): any;\n    getBufferSubData(target: GLenum, srcByteOffset: GLintptr, dstBuffer: ArrayBufferView, dstOffset?: GLuint, length?: GLuint): void;\n    getFragDataLocation(program: WebGLProgram, name: string): GLint;\n    getIndexedParameter(target: GLenum, index: GLuint): any;\n    getInternalformatParameter(target: GLenum, internalformat: GLenum, pname: GLenum): any;\n    getQuery(target: GLenum, pname: GLenum): WebGLQuery | null;\n    getQueryParameter(query: WebGLQuery, pname: GLenum): any;\n    getSamplerParameter(sampler: WebGLSampler, pname: GLenum): any;\n    getSyncParameter(sync: WebGLSync, pname: GLenum): any;\n    getTransformFeedbackVarying(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;\n    getUniformBlockIndex(program: WebGLProgram, uniformBlockName: string): GLuint;\n    getUniformIndices(program: WebGLProgram, uniformNames: string[]): GLuint[] | null;\n    invalidateFramebuffer(target: GLenum, attachments: GLenum[]): void;\n    invalidateSubFramebuffer(target: GLenum, attachments: GLenum[], x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    isQuery(query: WebGLQuery | null): GLboolean;\n    isSampler(sampler: WebGLSampler | null): GLboolean;\n    isSync(sync: WebGLSync | null): GLboolean;\n    isTransformFeedback(tf: WebGLTransformFeedback | null): GLboolean;\n    isVertexArray(vertexArray: WebGLVertexArrayObject | null): GLboolean;\n    pauseTransformFeedback(): void;\n    readBuffer(src: GLenum): void;\n    renderbufferStorageMultisample(target: GLenum, samples: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei): void;\n    resumeTransformFeedback(): void;\n    samplerParameterf(sampler: WebGLSampler, pname: GLenum, param: GLfloat): void;\n    samplerParameteri(sampler: WebGLSampler, pname: GLenum, param: GLint): void;\n    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, pboOffset: GLintptr): void;\n    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, srcData: ArrayBufferView | null): void;\n    texImage3D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, border: GLint, format: GLenum, type: GLenum, srcData: ArrayBufferView, srcOffset: GLuint): void;\n    texStorage2D(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei): void;\n    texStorage3D(target: GLenum, levels: GLsizei, internalformat: GLenum, width: GLsizei, height: GLsizei, depth: GLsizei): void;\n    texSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, pboOffset: GLintptr): void;\n    texSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texSubImage3D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, zoffset: GLint, width: GLsizei, height: GLsizei, depth: GLsizei, format: GLenum, type: GLenum, srcData: ArrayBufferView | null, srcOffset?: GLuint): void;\n    transformFeedbackVaryings(program: WebGLProgram, varyings: string[], bufferMode: GLenum): void;\n    uniform1ui(location: WebGLUniformLocation | null, v0: GLuint): void;\n    uniform1uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform2ui(location: WebGLUniformLocation | null, v0: GLuint, v1: GLuint): void;\n    uniform2uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform3ui(location: WebGLUniformLocation | null, v0: GLuint, v1: GLuint, v2: GLuint): void;\n    uniform3uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform4ui(location: WebGLUniformLocation | null, v0: GLuint, v1: GLuint, v2: GLuint, v3: GLuint): void;\n    uniform4uiv(location: WebGLUniformLocation | null, data: Uint32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformBlockBinding(program: WebGLProgram, uniformBlockIndex: GLuint, uniformBlockBinding: GLuint): void;\n    uniformMatrix2x3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix2x4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix3x2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix3x4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix4x2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix4x3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    vertexAttribDivisor(index: GLuint, divisor: GLuint): void;\n    vertexAttribI4i(index: GLuint, x: GLint, y: GLint, z: GLint, w: GLint): void;\n    vertexAttribI4iv(index: GLuint, values: Int32List): void;\n    vertexAttribI4ui(index: GLuint, x: GLuint, y: GLuint, z: GLuint, w: GLuint): void;\n    vertexAttribI4uiv(index: GLuint, values: Uint32List): void;\n    vertexAttribIPointer(index: GLuint, size: GLint, type: GLenum, stride: GLsizei, offset: GLintptr): void;\n    waitSync(sync: WebGLSync, flags: GLbitfield, timeout: GLint64): void;\n    readonly ACTIVE_UNIFORM_BLOCKS: GLenum;\n    readonly ALREADY_SIGNALED: GLenum;\n    readonly ANY_SAMPLES_PASSED: GLenum;\n    readonly ANY_SAMPLES_PASSED_CONSERVATIVE: GLenum;\n    readonly COLOR: GLenum;\n    readonly COLOR_ATTACHMENT1: GLenum;\n    readonly COLOR_ATTACHMENT10: GLenum;\n    readonly COLOR_ATTACHMENT11: GLenum;\n    readonly COLOR_ATTACHMENT12: GLenum;\n    readonly COLOR_ATTACHMENT13: GLenum;\n    readonly COLOR_ATTACHMENT14: GLenum;\n    readonly COLOR_ATTACHMENT15: GLenum;\n    readonly COLOR_ATTACHMENT2: GLenum;\n    readonly COLOR_ATTACHMENT3: GLenum;\n    readonly COLOR_ATTACHMENT4: GLenum;\n    readonly COLOR_ATTACHMENT5: GLenum;\n    readonly COLOR_ATTACHMENT6: GLenum;\n    readonly COLOR_ATTACHMENT7: GLenum;\n    readonly COLOR_ATTACHMENT8: GLenum;\n    readonly COLOR_ATTACHMENT9: GLenum;\n    readonly COMPARE_REF_TO_TEXTURE: GLenum;\n    readonly CONDITION_SATISFIED: GLenum;\n    readonly COPY_READ_BUFFER: GLenum;\n    readonly COPY_READ_BUFFER_BINDING: GLenum;\n    readonly COPY_WRITE_BUFFER: GLenum;\n    readonly COPY_WRITE_BUFFER_BINDING: GLenum;\n    readonly CURRENT_QUERY: GLenum;\n    readonly DEPTH: GLenum;\n    readonly DEPTH24_STENCIL8: GLenum;\n    readonly DEPTH32F_STENCIL8: GLenum;\n    readonly DEPTH_COMPONENT24: GLenum;\n    readonly DEPTH_COMPONENT32F: GLenum;\n    readonly DRAW_BUFFER0: GLenum;\n    readonly DRAW_BUFFER1: GLenum;\n    readonly DRAW_BUFFER10: GLenum;\n    readonly DRAW_BUFFER11: GLenum;\n    readonly DRAW_BUFFER12: GLenum;\n    readonly DRAW_BUFFER13: GLenum;\n    readonly DRAW_BUFFER14: GLenum;\n    readonly DRAW_BUFFER15: GLenum;\n    readonly DRAW_BUFFER2: GLenum;\n    readonly DRAW_BUFFER3: GLenum;\n    readonly DRAW_BUFFER4: GLenum;\n    readonly DRAW_BUFFER5: GLenum;\n    readonly DRAW_BUFFER6: GLenum;\n    readonly DRAW_BUFFER7: GLenum;\n    readonly DRAW_BUFFER8: GLenum;\n    readonly DRAW_BUFFER9: GLenum;\n    readonly DRAW_FRAMEBUFFER: GLenum;\n    readonly DRAW_FRAMEBUFFER_BINDING: GLenum;\n    readonly DYNAMIC_COPY: GLenum;\n    readonly DYNAMIC_READ: GLenum;\n    readonly FLOAT_32_UNSIGNED_INT_24_8_REV: GLenum;\n    readonly FLOAT_MAT2x3: GLenum;\n    readonly FLOAT_MAT2x4: GLenum;\n    readonly FLOAT_MAT3x2: GLenum;\n    readonly FLOAT_MAT3x4: GLenum;\n    readonly FLOAT_MAT4x2: GLenum;\n    readonly FLOAT_MAT4x3: GLenum;\n    readonly FRAGMENT_SHADER_DERIVATIVE_HINT: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_RED_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: GLenum;\n    readonly FRAMEBUFFER_DEFAULT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: GLenum;\n    readonly HALF_FLOAT: GLenum;\n    readonly INTERLEAVED_ATTRIBS: GLenum;\n    readonly INT_2_10_10_10_REV: GLenum;\n    readonly INT_SAMPLER_2D: GLenum;\n    readonly INT_SAMPLER_2D_ARRAY: GLenum;\n    readonly INT_SAMPLER_3D: GLenum;\n    readonly INT_SAMPLER_CUBE: GLenum;\n    readonly INVALID_INDEX: GLenum;\n    readonly MAX: GLenum;\n    readonly MAX_3D_TEXTURE_SIZE: GLenum;\n    readonly MAX_ARRAY_TEXTURE_LAYERS: GLenum;\n    readonly MAX_CLIENT_WAIT_TIMEOUT_WEBGL: GLenum;\n    readonly MAX_COLOR_ATTACHMENTS: GLenum;\n    readonly MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_COMBINED_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_DRAW_BUFFERS: GLenum;\n    readonly MAX_ELEMENTS_INDICES: GLenum;\n    readonly MAX_ELEMENTS_VERTICES: GLenum;\n    readonly MAX_ELEMENT_INDEX: GLenum;\n    readonly MAX_FRAGMENT_INPUT_COMPONENTS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_COMPONENTS: GLenum;\n    readonly MAX_PROGRAM_TEXEL_OFFSET: GLenum;\n    readonly MAX_SAMPLES: GLenum;\n    readonly MAX_SERVER_WAIT_TIMEOUT: GLenum;\n    readonly MAX_TEXTURE_LOD_BIAS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: GLenum;\n    readonly MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: GLenum;\n    readonly MAX_UNIFORM_BLOCK_SIZE: GLenum;\n    readonly MAX_UNIFORM_BUFFER_BINDINGS: GLenum;\n    readonly MAX_VARYING_COMPONENTS: GLenum;\n    readonly MAX_VERTEX_OUTPUT_COMPONENTS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_BLOCKS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_COMPONENTS: GLenum;\n    readonly MIN: GLenum;\n    readonly MIN_PROGRAM_TEXEL_OFFSET: GLenum;\n    readonly OBJECT_TYPE: GLenum;\n    readonly PACK_ROW_LENGTH: GLenum;\n    readonly PACK_SKIP_PIXELS: GLenum;\n    readonly PACK_SKIP_ROWS: GLenum;\n    readonly PIXEL_PACK_BUFFER: GLenum;\n    readonly PIXEL_PACK_BUFFER_BINDING: GLenum;\n    readonly PIXEL_UNPACK_BUFFER: GLenum;\n    readonly PIXEL_UNPACK_BUFFER_BINDING: GLenum;\n    readonly QUERY_RESULT: GLenum;\n    readonly QUERY_RESULT_AVAILABLE: GLenum;\n    readonly R11F_G11F_B10F: GLenum;\n    readonly R16F: GLenum;\n    readonly R16I: GLenum;\n    readonly R16UI: GLenum;\n    readonly R32F: GLenum;\n    readonly R32I: GLenum;\n    readonly R32UI: GLenum;\n    readonly R8: GLenum;\n    readonly R8I: GLenum;\n    readonly R8UI: GLenum;\n    readonly R8_SNORM: GLenum;\n    readonly RASTERIZER_DISCARD: GLenum;\n    readonly READ_BUFFER: GLenum;\n    readonly READ_FRAMEBUFFER: GLenum;\n    readonly READ_FRAMEBUFFER_BINDING: GLenum;\n    readonly RED: GLenum;\n    readonly RED_INTEGER: GLenum;\n    readonly RENDERBUFFER_SAMPLES: GLenum;\n    readonly RG: GLenum;\n    readonly RG16F: GLenum;\n    readonly RG16I: GLenum;\n    readonly RG16UI: GLenum;\n    readonly RG32F: GLenum;\n    readonly RG32I: GLenum;\n    readonly RG32UI: GLenum;\n    readonly RG8: GLenum;\n    readonly RG8I: GLenum;\n    readonly RG8UI: GLenum;\n    readonly RG8_SNORM: GLenum;\n    readonly RGB10_A2: GLenum;\n    readonly RGB10_A2UI: GLenum;\n    readonly RGB16F: GLenum;\n    readonly RGB16I: GLenum;\n    readonly RGB16UI: GLenum;\n    readonly RGB32F: GLenum;\n    readonly RGB32I: GLenum;\n    readonly RGB32UI: GLenum;\n    readonly RGB8: GLenum;\n    readonly RGB8I: GLenum;\n    readonly RGB8UI: GLenum;\n    readonly RGB8_SNORM: GLenum;\n    readonly RGB9_E5: GLenum;\n    readonly RGBA16F: GLenum;\n    readonly RGBA16I: GLenum;\n    readonly RGBA16UI: GLenum;\n    readonly RGBA32F: GLenum;\n    readonly RGBA32I: GLenum;\n    readonly RGBA32UI: GLenum;\n    readonly RGBA8: GLenum;\n    readonly RGBA8I: GLenum;\n    readonly RGBA8UI: GLenum;\n    readonly RGBA8_SNORM: GLenum;\n    readonly RGBA_INTEGER: GLenum;\n    readonly RGB_INTEGER: GLenum;\n    readonly RG_INTEGER: GLenum;\n    readonly SAMPLER_2D_ARRAY: GLenum;\n    readonly SAMPLER_2D_ARRAY_SHADOW: GLenum;\n    readonly SAMPLER_2D_SHADOW: GLenum;\n    readonly SAMPLER_3D: GLenum;\n    readonly SAMPLER_BINDING: GLenum;\n    readonly SAMPLER_CUBE_SHADOW: GLenum;\n    readonly SEPARATE_ATTRIBS: GLenum;\n    readonly SIGNALED: GLenum;\n    readonly SIGNED_NORMALIZED: GLenum;\n    readonly SRGB: GLenum;\n    readonly SRGB8: GLenum;\n    readonly SRGB8_ALPHA8: GLenum;\n    readonly STATIC_COPY: GLenum;\n    readonly STATIC_READ: GLenum;\n    readonly STENCIL: GLenum;\n    readonly STREAM_COPY: GLenum;\n    readonly STREAM_READ: GLenum;\n    readonly SYNC_CONDITION: GLenum;\n    readonly SYNC_FENCE: GLenum;\n    readonly SYNC_FLAGS: GLenum;\n    readonly SYNC_FLUSH_COMMANDS_BIT: GLenum;\n    readonly SYNC_GPU_COMMANDS_COMPLETE: GLenum;\n    readonly SYNC_STATUS: GLenum;\n    readonly TEXTURE_2D_ARRAY: GLenum;\n    readonly TEXTURE_3D: GLenum;\n    readonly TEXTURE_BASE_LEVEL: GLenum;\n    readonly TEXTURE_BINDING_2D_ARRAY: GLenum;\n    readonly TEXTURE_BINDING_3D: GLenum;\n    readonly TEXTURE_COMPARE_FUNC: GLenum;\n    readonly TEXTURE_COMPARE_MODE: GLenum;\n    readonly TEXTURE_IMMUTABLE_FORMAT: GLenum;\n    readonly TEXTURE_IMMUTABLE_LEVELS: GLenum;\n    readonly TEXTURE_MAX_LEVEL: GLenum;\n    readonly TEXTURE_MAX_LOD: GLenum;\n    readonly TEXTURE_MIN_LOD: GLenum;\n    readonly TEXTURE_WRAP_R: GLenum;\n    readonly TIMEOUT_EXPIRED: GLenum;\n    readonly TIMEOUT_IGNORED: GLint64;\n    readonly TRANSFORM_FEEDBACK: GLenum;\n    readonly TRANSFORM_FEEDBACK_ACTIVE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BINDING: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_BINDING: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_MODE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_SIZE: GLenum;\n    readonly TRANSFORM_FEEDBACK_BUFFER_START: GLenum;\n    readonly TRANSFORM_FEEDBACK_PAUSED: GLenum;\n    readonly TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: GLenum;\n    readonly TRANSFORM_FEEDBACK_VARYINGS: GLenum;\n    readonly UNIFORM_ARRAY_STRIDE: GLenum;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORMS: GLenum;\n    readonly UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: GLenum;\n    readonly UNIFORM_BLOCK_BINDING: GLenum;\n    readonly UNIFORM_BLOCK_DATA_SIZE: GLenum;\n    readonly UNIFORM_BLOCK_INDEX: GLenum;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: GLenum;\n    readonly UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: GLenum;\n    readonly UNIFORM_BUFFER: GLenum;\n    readonly UNIFORM_BUFFER_BINDING: GLenum;\n    readonly UNIFORM_BUFFER_OFFSET_ALIGNMENT: GLenum;\n    readonly UNIFORM_BUFFER_SIZE: GLenum;\n    readonly UNIFORM_BUFFER_START: GLenum;\n    readonly UNIFORM_IS_ROW_MAJOR: GLenum;\n    readonly UNIFORM_MATRIX_STRIDE: GLenum;\n    readonly UNIFORM_OFFSET: GLenum;\n    readonly UNIFORM_SIZE: GLenum;\n    readonly UNIFORM_TYPE: GLenum;\n    readonly UNPACK_IMAGE_HEIGHT: GLenum;\n    readonly UNPACK_ROW_LENGTH: GLenum;\n    readonly UNPACK_SKIP_IMAGES: GLenum;\n    readonly UNPACK_SKIP_PIXELS: GLenum;\n    readonly UNPACK_SKIP_ROWS: GLenum;\n    readonly UNSIGNALED: GLenum;\n    readonly UNSIGNED_INT_10F_11F_11F_REV: GLenum;\n    readonly UNSIGNED_INT_24_8: GLenum;\n    readonly UNSIGNED_INT_2_10_10_10_REV: GLenum;\n    readonly UNSIGNED_INT_5_9_9_9_REV: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_2D: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_2D_ARRAY: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_3D: GLenum;\n    readonly UNSIGNED_INT_SAMPLER_CUBE: GLenum;\n    readonly UNSIGNED_INT_VEC2: GLenum;\n    readonly UNSIGNED_INT_VEC3: GLenum;\n    readonly UNSIGNED_INT_VEC4: GLenum;\n    readonly UNSIGNED_NORMALIZED: GLenum;\n    readonly VERTEX_ARRAY_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_DIVISOR: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_INTEGER: GLenum;\n    readonly WAIT_FAILED: GLenum;\n}\n\ninterface WebGL2RenderingContextOverloads {\n    bufferData(target: GLenum, size: GLsizeiptr, usage: GLenum): void;\n    bufferData(target: GLenum, srcData: BufferSource | null, usage: GLenum): void;\n    bufferData(target: GLenum, srcData: ArrayBufferView, usage: GLenum, srcOffset: GLuint, length?: GLuint): void;\n    bufferSubData(target: GLenum, dstByteOffset: GLintptr, srcData: BufferSource): void;\n    bufferSubData(target: GLenum, dstByteOffset: GLintptr, srcData: ArrayBufferView, srcOffset: GLuint, length?: GLuint): void;\n    compressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, imageSize: GLsizei, offset: GLintptr): void;\n    compressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, srcData: ArrayBufferView, srcOffset?: GLuint, srcLengthOverride?: GLuint): void;\n    compressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, imageSize: GLsizei, offset: GLintptr): void;\n    compressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, srcData: ArrayBufferView, srcOffset?: GLuint, srcLengthOverride?: GLuint): void;\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, dstData: ArrayBufferView | null): void;\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, offset: GLintptr): void;\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, dstData: ArrayBufferView, dstOffset: GLuint): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pboOffset: GLintptr): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, srcData: ArrayBufferView, srcOffset: GLuint): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pboOffset: GLintptr): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, srcData: ArrayBufferView, srcOffset: GLuint): void;\n    uniform1fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform1iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform2fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform2iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform3fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform3iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform4fv(location: WebGLUniformLocation | null, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniform4iv(location: WebGLUniformLocation | null, data: Int32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, data: Float32List, srcOffset?: GLuint, srcLength?: GLuint): void;\n}\n\n/** Part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getActiveAttrib() and WebGLRenderingContext.getActiveUniform() methods. */\ninterface WebGLActiveInfo {\n    readonly name: string;\n    readonly size: GLint;\n    readonly type: GLenum;\n}\n\ndeclare var WebGLActiveInfo: {\n    prototype: WebGLActiveInfo;\n    new(): WebGLActiveInfo;\n};\n\n/** Part of the WebGL API and represents an opaque buffer object storing data such as vertices or colors. */\ninterface WebGLBuffer {\n}\n\ndeclare var WebGLBuffer: {\n    prototype: WebGLBuffer;\n    new(): WebGLBuffer;\n};\n\n/** The WebContextEvent interface is part of the WebGL API and is an interface for an event that is generated in response to a status change to the WebGL rendering context. */\ninterface WebGLContextEvent extends Event {\n    readonly statusMessage: string;\n}\n\ndeclare var WebGLContextEvent: {\n    prototype: WebGLContextEvent;\n    new(type: string, eventInit?: WebGLContextEventInit): WebGLContextEvent;\n};\n\n/** Part of the WebGL API and represents a collection of buffers that serve as a rendering destination. */\ninterface WebGLFramebuffer {\n}\n\ndeclare var WebGLFramebuffer: {\n    prototype: WebGLFramebuffer;\n    new(): WebGLFramebuffer;\n};\n\n/** The WebGLProgram is part of the WebGL API and is a combination of two compiled WebGLShaders consisting of a vertex shader and a fragment shader (both written in GLSL). */\ninterface WebGLProgram {\n}\n\ndeclare var WebGLProgram: {\n    prototype: WebGLProgram;\n    new(): WebGLProgram;\n};\n\ninterface WebGLQuery {\n}\n\ndeclare var WebGLQuery: {\n    prototype: WebGLQuery;\n    new(): WebGLQuery;\n};\n\n/** Part of the WebGL API and represents a buffer that can contain an image, or can be source or target of an rendering operation. */\ninterface WebGLRenderbuffer {\n}\n\ndeclare var WebGLRenderbuffer: {\n    prototype: WebGLRenderbuffer;\n    new(): WebGLRenderbuffer;\n};\n\n/** Provides an interface to the OpenGL ES 2.0 graphics rendering context for the drawing surface of an HTML <canvas> element. */\ninterface WebGLRenderingContext extends WebGLRenderingContextBase, WebGLRenderingContextOverloads {\n}\n\ndeclare var WebGLRenderingContext: {\n    prototype: WebGLRenderingContext;\n    new(): WebGLRenderingContext;\n    readonly ACTIVE_ATTRIBUTES: GLenum;\n    readonly ACTIVE_TEXTURE: GLenum;\n    readonly ACTIVE_UNIFORMS: GLenum;\n    readonly ALIASED_LINE_WIDTH_RANGE: GLenum;\n    readonly ALIASED_POINT_SIZE_RANGE: GLenum;\n    readonly ALPHA: GLenum;\n    readonly ALPHA_BITS: GLenum;\n    readonly ALWAYS: GLenum;\n    readonly ARRAY_BUFFER: GLenum;\n    readonly ARRAY_BUFFER_BINDING: GLenum;\n    readonly ATTACHED_SHADERS: GLenum;\n    readonly BACK: GLenum;\n    readonly BLEND: GLenum;\n    readonly BLEND_COLOR: GLenum;\n    readonly BLEND_DST_ALPHA: GLenum;\n    readonly BLEND_DST_RGB: GLenum;\n    readonly BLEND_EQUATION: GLenum;\n    readonly BLEND_EQUATION_ALPHA: GLenum;\n    readonly BLEND_EQUATION_RGB: GLenum;\n    readonly BLEND_SRC_ALPHA: GLenum;\n    readonly BLEND_SRC_RGB: GLenum;\n    readonly BLUE_BITS: GLenum;\n    readonly BOOL: GLenum;\n    readonly BOOL_VEC2: GLenum;\n    readonly BOOL_VEC3: GLenum;\n    readonly BOOL_VEC4: GLenum;\n    readonly BROWSER_DEFAULT_WEBGL: GLenum;\n    readonly BUFFER_SIZE: GLenum;\n    readonly BUFFER_USAGE: GLenum;\n    readonly BYTE: GLenum;\n    readonly CCW: GLenum;\n    readonly CLAMP_TO_EDGE: GLenum;\n    readonly COLOR_ATTACHMENT0: GLenum;\n    readonly COLOR_BUFFER_BIT: GLenum;\n    readonly COLOR_CLEAR_VALUE: GLenum;\n    readonly COLOR_WRITEMASK: GLenum;\n    readonly COMPILE_STATUS: GLenum;\n    readonly COMPRESSED_TEXTURE_FORMATS: GLenum;\n    readonly CONSTANT_ALPHA: GLenum;\n    readonly CONSTANT_COLOR: GLenum;\n    readonly CONTEXT_LOST_WEBGL: GLenum;\n    readonly CULL_FACE: GLenum;\n    readonly CULL_FACE_MODE: GLenum;\n    readonly CURRENT_PROGRAM: GLenum;\n    readonly CURRENT_VERTEX_ATTRIB: GLenum;\n    readonly CW: GLenum;\n    readonly DECR: GLenum;\n    readonly DECR_WRAP: GLenum;\n    readonly DELETE_STATUS: GLenum;\n    readonly DEPTH_ATTACHMENT: GLenum;\n    readonly DEPTH_BITS: GLenum;\n    readonly DEPTH_BUFFER_BIT: GLenum;\n    readonly DEPTH_CLEAR_VALUE: GLenum;\n    readonly DEPTH_COMPONENT: GLenum;\n    readonly DEPTH_COMPONENT16: GLenum;\n    readonly DEPTH_FUNC: GLenum;\n    readonly DEPTH_RANGE: GLenum;\n    readonly DEPTH_STENCIL: GLenum;\n    readonly DEPTH_STENCIL_ATTACHMENT: GLenum;\n    readonly DEPTH_TEST: GLenum;\n    readonly DEPTH_WRITEMASK: GLenum;\n    readonly DITHER: GLenum;\n    readonly DONT_CARE: GLenum;\n    readonly DST_ALPHA: GLenum;\n    readonly DST_COLOR: GLenum;\n    readonly DYNAMIC_DRAW: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: GLenum;\n    readonly EQUAL: GLenum;\n    readonly FASTEST: GLenum;\n    readonly FLOAT: GLenum;\n    readonly FLOAT_MAT2: GLenum;\n    readonly FLOAT_MAT3: GLenum;\n    readonly FLOAT_MAT4: GLenum;\n    readonly FLOAT_VEC2: GLenum;\n    readonly FLOAT_VEC3: GLenum;\n    readonly FLOAT_VEC4: GLenum;\n    readonly FRAGMENT_SHADER: GLenum;\n    readonly FRAMEBUFFER: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: GLenum;\n    readonly FRAMEBUFFER_BINDING: GLenum;\n    readonly FRAMEBUFFER_COMPLETE: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_UNSUPPORTED: GLenum;\n    readonly FRONT: GLenum;\n    readonly FRONT_AND_BACK: GLenum;\n    readonly FRONT_FACE: GLenum;\n    readonly FUNC_ADD: GLenum;\n    readonly FUNC_REVERSE_SUBTRACT: GLenum;\n    readonly FUNC_SUBTRACT: GLenum;\n    readonly GENERATE_MIPMAP_HINT: GLenum;\n    readonly GEQUAL: GLenum;\n    readonly GREATER: GLenum;\n    readonly GREEN_BITS: GLenum;\n    readonly HIGH_FLOAT: GLenum;\n    readonly HIGH_INT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: GLenum;\n    readonly INCR: GLenum;\n    readonly INCR_WRAP: GLenum;\n    readonly INT: GLenum;\n    readonly INT_VEC2: GLenum;\n    readonly INT_VEC3: GLenum;\n    readonly INT_VEC4: GLenum;\n    readonly INVALID_ENUM: GLenum;\n    readonly INVALID_FRAMEBUFFER_OPERATION: GLenum;\n    readonly INVALID_OPERATION: GLenum;\n    readonly INVALID_VALUE: GLenum;\n    readonly INVERT: GLenum;\n    readonly KEEP: GLenum;\n    readonly LEQUAL: GLenum;\n    readonly LESS: GLenum;\n    readonly LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_NEAREST: GLenum;\n    readonly LINES: GLenum;\n    readonly LINE_LOOP: GLenum;\n    readonly LINE_STRIP: GLenum;\n    readonly LINE_WIDTH: GLenum;\n    readonly LINK_STATUS: GLenum;\n    readonly LOW_FLOAT: GLenum;\n    readonly LOW_INT: GLenum;\n    readonly LUMINANCE: GLenum;\n    readonly LUMINANCE_ALPHA: GLenum;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: GLenum;\n    readonly MAX_RENDERBUFFER_SIZE: GLenum;\n    readonly MAX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_TEXTURE_SIZE: GLenum;\n    readonly MAX_VARYING_VECTORS: GLenum;\n    readonly MAX_VERTEX_ATTRIBS: GLenum;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: GLenum;\n    readonly MAX_VIEWPORT_DIMS: GLenum;\n    readonly MEDIUM_FLOAT: GLenum;\n    readonly MEDIUM_INT: GLenum;\n    readonly MIRRORED_REPEAT: GLenum;\n    readonly NEAREST: GLenum;\n    readonly NEAREST_MIPMAP_LINEAR: GLenum;\n    readonly NEAREST_MIPMAP_NEAREST: GLenum;\n    readonly NEVER: GLenum;\n    readonly NICEST: GLenum;\n    readonly NONE: GLenum;\n    readonly NOTEQUAL: GLenum;\n    readonly NO_ERROR: GLenum;\n    readonly ONE: GLenum;\n    readonly ONE_MINUS_CONSTANT_ALPHA: GLenum;\n    readonly ONE_MINUS_CONSTANT_COLOR: GLenum;\n    readonly ONE_MINUS_DST_ALPHA: GLenum;\n    readonly ONE_MINUS_DST_COLOR: GLenum;\n    readonly ONE_MINUS_SRC_ALPHA: GLenum;\n    readonly ONE_MINUS_SRC_COLOR: GLenum;\n    readonly OUT_OF_MEMORY: GLenum;\n    readonly PACK_ALIGNMENT: GLenum;\n    readonly POINTS: GLenum;\n    readonly POLYGON_OFFSET_FACTOR: GLenum;\n    readonly POLYGON_OFFSET_FILL: GLenum;\n    readonly POLYGON_OFFSET_UNITS: GLenum;\n    readonly RED_BITS: GLenum;\n    readonly RENDERBUFFER: GLenum;\n    readonly RENDERBUFFER_ALPHA_SIZE: GLenum;\n    readonly RENDERBUFFER_BINDING: GLenum;\n    readonly RENDERBUFFER_BLUE_SIZE: GLenum;\n    readonly RENDERBUFFER_DEPTH_SIZE: GLenum;\n    readonly RENDERBUFFER_GREEN_SIZE: GLenum;\n    readonly RENDERBUFFER_HEIGHT: GLenum;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: GLenum;\n    readonly RENDERBUFFER_RED_SIZE: GLenum;\n    readonly RENDERBUFFER_STENCIL_SIZE: GLenum;\n    readonly RENDERBUFFER_WIDTH: GLenum;\n    readonly RENDERER: GLenum;\n    readonly REPEAT: GLenum;\n    readonly REPLACE: GLenum;\n    readonly RGB: GLenum;\n    readonly RGB565: GLenum;\n    readonly RGB5_A1: GLenum;\n    readonly RGBA: GLenum;\n    readonly RGBA4: GLenum;\n    readonly SAMPLER_2D: GLenum;\n    readonly SAMPLER_CUBE: GLenum;\n    readonly SAMPLES: GLenum;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: GLenum;\n    readonly SAMPLE_BUFFERS: GLenum;\n    readonly SAMPLE_COVERAGE: GLenum;\n    readonly SAMPLE_COVERAGE_INVERT: GLenum;\n    readonly SAMPLE_COVERAGE_VALUE: GLenum;\n    readonly SCISSOR_BOX: GLenum;\n    readonly SCISSOR_TEST: GLenum;\n    readonly SHADER_TYPE: GLenum;\n    readonly SHADING_LANGUAGE_VERSION: GLenum;\n    readonly SHORT: GLenum;\n    readonly SRC_ALPHA: GLenum;\n    readonly SRC_ALPHA_SATURATE: GLenum;\n    readonly SRC_COLOR: GLenum;\n    readonly STATIC_DRAW: GLenum;\n    readonly STENCIL_ATTACHMENT: GLenum;\n    readonly STENCIL_BACK_FAIL: GLenum;\n    readonly STENCIL_BACK_FUNC: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_BACK_REF: GLenum;\n    readonly STENCIL_BACK_VALUE_MASK: GLenum;\n    readonly STENCIL_BACK_WRITEMASK: GLenum;\n    readonly STENCIL_BITS: GLenum;\n    readonly STENCIL_BUFFER_BIT: GLenum;\n    readonly STENCIL_CLEAR_VALUE: GLenum;\n    readonly STENCIL_FAIL: GLenum;\n    readonly STENCIL_FUNC: GLenum;\n    readonly STENCIL_INDEX8: GLenum;\n    readonly STENCIL_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_REF: GLenum;\n    readonly STENCIL_TEST: GLenum;\n    readonly STENCIL_VALUE_MASK: GLenum;\n    readonly STENCIL_WRITEMASK: GLenum;\n    readonly STREAM_DRAW: GLenum;\n    readonly SUBPIXEL_BITS: GLenum;\n    readonly TEXTURE: GLenum;\n    readonly TEXTURE0: GLenum;\n    readonly TEXTURE1: GLenum;\n    readonly TEXTURE10: GLenum;\n    readonly TEXTURE11: GLenum;\n    readonly TEXTURE12: GLenum;\n    readonly TEXTURE13: GLenum;\n    readonly TEXTURE14: GLenum;\n    readonly TEXTURE15: GLenum;\n    readonly TEXTURE16: GLenum;\n    readonly TEXTURE17: GLenum;\n    readonly TEXTURE18: GLenum;\n    readonly TEXTURE19: GLenum;\n    readonly TEXTURE2: GLenum;\n    readonly TEXTURE20: GLenum;\n    readonly TEXTURE21: GLenum;\n    readonly TEXTURE22: GLenum;\n    readonly TEXTURE23: GLenum;\n    readonly TEXTURE24: GLenum;\n    readonly TEXTURE25: GLenum;\n    readonly TEXTURE26: GLenum;\n    readonly TEXTURE27: GLenum;\n    readonly TEXTURE28: GLenum;\n    readonly TEXTURE29: GLenum;\n    readonly TEXTURE3: GLenum;\n    readonly TEXTURE30: GLenum;\n    readonly TEXTURE31: GLenum;\n    readonly TEXTURE4: GLenum;\n    readonly TEXTURE5: GLenum;\n    readonly TEXTURE6: GLenum;\n    readonly TEXTURE7: GLenum;\n    readonly TEXTURE8: GLenum;\n    readonly TEXTURE9: GLenum;\n    readonly TEXTURE_2D: GLenum;\n    readonly TEXTURE_BINDING_2D: GLenum;\n    readonly TEXTURE_BINDING_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: GLenum;\n    readonly TEXTURE_MAG_FILTER: GLenum;\n    readonly TEXTURE_MIN_FILTER: GLenum;\n    readonly TEXTURE_WRAP_S: GLenum;\n    readonly TEXTURE_WRAP_T: GLenum;\n    readonly TRIANGLES: GLenum;\n    readonly TRIANGLE_FAN: GLenum;\n    readonly TRIANGLE_STRIP: GLenum;\n    readonly UNPACK_ALIGNMENT: GLenum;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: GLenum;\n    readonly UNPACK_FLIP_Y_WEBGL: GLenum;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: GLenum;\n    readonly UNSIGNED_BYTE: GLenum;\n    readonly UNSIGNED_INT: GLenum;\n    readonly UNSIGNED_SHORT: GLenum;\n    readonly UNSIGNED_SHORT_4_4_4_4: GLenum;\n    readonly UNSIGNED_SHORT_5_5_5_1: GLenum;\n    readonly UNSIGNED_SHORT_5_6_5: GLenum;\n    readonly VALIDATE_STATUS: GLenum;\n    readonly VENDOR: GLenum;\n    readonly VERSION: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: GLenum;\n    readonly VERTEX_SHADER: GLenum;\n    readonly VIEWPORT: GLenum;\n    readonly ZERO: GLenum;\n};\n\ninterface WebGLRenderingContextBase {\n    readonly drawingBufferHeight: GLsizei;\n    readonly drawingBufferWidth: GLsizei;\n    activeTexture(texture: GLenum): void;\n    attachShader(program: WebGLProgram, shader: WebGLShader): void;\n    bindAttribLocation(program: WebGLProgram, index: GLuint, name: string): void;\n    bindBuffer(target: GLenum, buffer: WebGLBuffer | null): void;\n    bindFramebuffer(target: GLenum, framebuffer: WebGLFramebuffer | null): void;\n    bindRenderbuffer(target: GLenum, renderbuffer: WebGLRenderbuffer | null): void;\n    bindTexture(target: GLenum, texture: WebGLTexture | null): void;\n    blendColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf): void;\n    blendEquation(mode: GLenum): void;\n    blendEquationSeparate(modeRGB: GLenum, modeAlpha: GLenum): void;\n    blendFunc(sfactor: GLenum, dfactor: GLenum): void;\n    blendFuncSeparate(srcRGB: GLenum, dstRGB: GLenum, srcAlpha: GLenum, dstAlpha: GLenum): void;\n    checkFramebufferStatus(target: GLenum): GLenum;\n    clear(mask: GLbitfield): void;\n    clearColor(red: GLclampf, green: GLclampf, blue: GLclampf, alpha: GLclampf): void;\n    clearDepth(depth: GLclampf): void;\n    clearStencil(s: GLint): void;\n    colorMask(red: GLboolean, green: GLboolean, blue: GLboolean, alpha: GLboolean): void;\n    compileShader(shader: WebGLShader): void;\n    copyTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, x: GLint, y: GLint, width: GLsizei, height: GLsizei, border: GLint): void;\n    copyTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    createBuffer(): WebGLBuffer | null;\n    createFramebuffer(): WebGLFramebuffer | null;\n    createProgram(): WebGLProgram | null;\n    createRenderbuffer(): WebGLRenderbuffer | null;\n    createShader(type: GLenum): WebGLShader | null;\n    createTexture(): WebGLTexture | null;\n    cullFace(mode: GLenum): void;\n    deleteBuffer(buffer: WebGLBuffer | null): void;\n    deleteFramebuffer(framebuffer: WebGLFramebuffer | null): void;\n    deleteProgram(program: WebGLProgram | null): void;\n    deleteRenderbuffer(renderbuffer: WebGLRenderbuffer | null): void;\n    deleteShader(shader: WebGLShader | null): void;\n    deleteTexture(texture: WebGLTexture | null): void;\n    depthFunc(func: GLenum): void;\n    depthMask(flag: GLboolean): void;\n    depthRange(zNear: GLclampf, zFar: GLclampf): void;\n    detachShader(program: WebGLProgram, shader: WebGLShader): void;\n    disable(cap: GLenum): void;\n    disableVertexAttribArray(index: GLuint): void;\n    drawArrays(mode: GLenum, first: GLint, count: GLsizei): void;\n    drawElements(mode: GLenum, count: GLsizei, type: GLenum, offset: GLintptr): void;\n    enable(cap: GLenum): void;\n    enableVertexAttribArray(index: GLuint): void;\n    finish(): void;\n    flush(): void;\n    framebufferRenderbuffer(target: GLenum, attachment: GLenum, renderbuffertarget: GLenum, renderbuffer: WebGLRenderbuffer | null): void;\n    framebufferTexture2D(target: GLenum, attachment: GLenum, textarget: GLenum, texture: WebGLTexture | null, level: GLint): void;\n    frontFace(mode: GLenum): void;\n    generateMipmap(target: GLenum): void;\n    getActiveAttrib(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;\n    getActiveUniform(program: WebGLProgram, index: GLuint): WebGLActiveInfo | null;\n    getAttachedShaders(program: WebGLProgram): WebGLShader[] | null;\n    getAttribLocation(program: WebGLProgram, name: string): GLint;\n    getBufferParameter(target: GLenum, pname: GLenum): any;\n    getContextAttributes(): WebGLContextAttributes | null;\n    getError(): GLenum;\n    getExtension(extensionName: "EXT_blend_minmax"): EXT_blend_minmax | null;\n    getExtension(extensionName: "EXT_color_buffer_float"): EXT_color_buffer_float | null;\n    getExtension(extensionName: "EXT_color_buffer_half_float"): EXT_color_buffer_half_float | null;\n    getExtension(extensionName: "EXT_float_blend"): EXT_float_blend | null;\n    getExtension(extensionName: "EXT_texture_filter_anisotropic"): EXT_texture_filter_anisotropic | null;\n    getExtension(extensionName: "EXT_frag_depth"): EXT_frag_depth | null;\n    getExtension(extensionName: "EXT_shader_texture_lod"): EXT_shader_texture_lod | null;\n    getExtension(extensionName: "EXT_sRGB"): EXT_sRGB | null;\n    getExtension(extensionName: "KHR_parallel_shader_compile"): KHR_parallel_shader_compile | null;\n    getExtension(extensionName: "OES_vertex_array_object"): OES_vertex_array_object | null;\n    getExtension(extensionName: "OVR_multiview2"): OVR_multiview2 | null;\n    getExtension(extensionName: "WEBGL_color_buffer_float"): WEBGL_color_buffer_float | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_astc"): WEBGL_compressed_texture_astc | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_etc"): WEBGL_compressed_texture_etc | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_etc1"): WEBGL_compressed_texture_etc1 | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_pvrtc"): WEBGL_compressed_texture_pvrtc | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_s3tc_srgb"): WEBGL_compressed_texture_s3tc_srgb | null;\n    getExtension(extensionName: "WEBGL_debug_shaders"): WEBGL_debug_shaders | null;\n    getExtension(extensionName: "WEBGL_draw_buffers"): WEBGL_draw_buffers | null;\n    getExtension(extensionName: "WEBGL_lose_context"): WEBGL_lose_context | null;\n    getExtension(extensionName: "WEBGL_depth_texture"): WEBGL_depth_texture | null;\n    getExtension(extensionName: "WEBGL_debug_renderer_info"): WEBGL_debug_renderer_info | null;\n    getExtension(extensionName: "WEBGL_compressed_texture_s3tc"): WEBGL_compressed_texture_s3tc | null;\n    getExtension(extensionName: "OES_texture_half_float_linear"): OES_texture_half_float_linear | null;\n    getExtension(extensionName: "OES_texture_half_float"): OES_texture_half_float | null;\n    getExtension(extensionName: "OES_texture_float_linear"): OES_texture_float_linear | null;\n    getExtension(extensionName: "OES_texture_float"): OES_texture_float | null;\n    getExtension(extensionName: "OES_standard_derivatives"): OES_standard_derivatives | null;\n    getExtension(extensionName: "OES_element_index_uint"): OES_element_index_uint | null;\n    getExtension(extensionName: "ANGLE_instanced_arrays"): ANGLE_instanced_arrays | null;\n    getExtension(name: string): any;\n    getFramebufferAttachmentParameter(target: GLenum, attachment: GLenum, pname: GLenum): any;\n    getParameter(pname: GLenum): any;\n    getProgramInfoLog(program: WebGLProgram): string | null;\n    getProgramParameter(program: WebGLProgram, pname: GLenum): any;\n    getRenderbufferParameter(target: GLenum, pname: GLenum): any;\n    getShaderInfoLog(shader: WebGLShader): string | null;\n    getShaderParameter(shader: WebGLShader, pname: GLenum): any;\n    getShaderPrecisionFormat(shadertype: GLenum, precisiontype: GLenum): WebGLShaderPrecisionFormat | null;\n    getShaderSource(shader: WebGLShader): string | null;\n    getSupportedExtensions(): string[] | null;\n    getTexParameter(target: GLenum, pname: GLenum): any;\n    getUniform(program: WebGLProgram, location: WebGLUniformLocation): any;\n    getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation | null;\n    getVertexAttrib(index: GLuint, pname: GLenum): any;\n    getVertexAttribOffset(index: GLuint, pname: GLenum): GLintptr;\n    hint(target: GLenum, mode: GLenum): void;\n    isBuffer(buffer: WebGLBuffer | null): GLboolean;\n    isContextLost(): boolean;\n    isEnabled(cap: GLenum): GLboolean;\n    isFramebuffer(framebuffer: WebGLFramebuffer | null): GLboolean;\n    isProgram(program: WebGLProgram | null): GLboolean;\n    isRenderbuffer(renderbuffer: WebGLRenderbuffer | null): GLboolean;\n    isShader(shader: WebGLShader | null): GLboolean;\n    isTexture(texture: WebGLTexture | null): GLboolean;\n    lineWidth(width: GLfloat): void;\n    linkProgram(program: WebGLProgram): void;\n    pixelStorei(pname: GLenum, param: GLint | GLboolean): void;\n    polygonOffset(factor: GLfloat, units: GLfloat): void;\n    renderbufferStorage(target: GLenum, internalformat: GLenum, width: GLsizei, height: GLsizei): void;\n    sampleCoverage(value: GLclampf, invert: GLboolean): void;\n    scissor(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    shaderSource(shader: WebGLShader, source: string): void;\n    stencilFunc(func: GLenum, ref: GLint, mask: GLuint): void;\n    stencilFuncSeparate(face: GLenum, func: GLenum, ref: GLint, mask: GLuint): void;\n    stencilMask(mask: GLuint): void;\n    stencilMaskSeparate(face: GLenum, mask: GLuint): void;\n    stencilOp(fail: GLenum, zfail: GLenum, zpass: GLenum): void;\n    stencilOpSeparate(face: GLenum, fail: GLenum, zfail: GLenum, zpass: GLenum): void;\n    texParameterf(target: GLenum, pname: GLenum, param: GLfloat): void;\n    texParameteri(target: GLenum, pname: GLenum, param: GLint): void;\n    uniform1f(location: WebGLUniformLocation | null, x: GLfloat): void;\n    uniform1i(location: WebGLUniformLocation | null, x: GLint): void;\n    uniform2f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat): void;\n    uniform2i(location: WebGLUniformLocation | null, x: GLint, y: GLint): void;\n    uniform3f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat, z: GLfloat): void;\n    uniform3i(location: WebGLUniformLocation | null, x: GLint, y: GLint, z: GLint): void;\n    uniform4f(location: WebGLUniformLocation | null, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat): void;\n    uniform4i(location: WebGLUniformLocation | null, x: GLint, y: GLint, z: GLint, w: GLint): void;\n    useProgram(program: WebGLProgram | null): void;\n    validateProgram(program: WebGLProgram): void;\n    vertexAttrib1f(index: GLuint, x: GLfloat): void;\n    vertexAttrib1fv(index: GLuint, values: Float32List): void;\n    vertexAttrib2f(index: GLuint, x: GLfloat, y: GLfloat): void;\n    vertexAttrib2fv(index: GLuint, values: Float32List): void;\n    vertexAttrib3f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat): void;\n    vertexAttrib3fv(index: GLuint, values: Float32List): void;\n    vertexAttrib4f(index: GLuint, x: GLfloat, y: GLfloat, z: GLfloat, w: GLfloat): void;\n    vertexAttrib4fv(index: GLuint, values: Float32List): void;\n    vertexAttribPointer(index: GLuint, size: GLint, type: GLenum, normalized: GLboolean, stride: GLsizei, offset: GLintptr): void;\n    viewport(x: GLint, y: GLint, width: GLsizei, height: GLsizei): void;\n    readonly ACTIVE_ATTRIBUTES: GLenum;\n    readonly ACTIVE_TEXTURE: GLenum;\n    readonly ACTIVE_UNIFORMS: GLenum;\n    readonly ALIASED_LINE_WIDTH_RANGE: GLenum;\n    readonly ALIASED_POINT_SIZE_RANGE: GLenum;\n    readonly ALPHA: GLenum;\n    readonly ALPHA_BITS: GLenum;\n    readonly ALWAYS: GLenum;\n    readonly ARRAY_BUFFER: GLenum;\n    readonly ARRAY_BUFFER_BINDING: GLenum;\n    readonly ATTACHED_SHADERS: GLenum;\n    readonly BACK: GLenum;\n    readonly BLEND: GLenum;\n    readonly BLEND_COLOR: GLenum;\n    readonly BLEND_DST_ALPHA: GLenum;\n    readonly BLEND_DST_RGB: GLenum;\n    readonly BLEND_EQUATION: GLenum;\n    readonly BLEND_EQUATION_ALPHA: GLenum;\n    readonly BLEND_EQUATION_RGB: GLenum;\n    readonly BLEND_SRC_ALPHA: GLenum;\n    readonly BLEND_SRC_RGB: GLenum;\n    readonly BLUE_BITS: GLenum;\n    readonly BOOL: GLenum;\n    readonly BOOL_VEC2: GLenum;\n    readonly BOOL_VEC3: GLenum;\n    readonly BOOL_VEC4: GLenum;\n    readonly BROWSER_DEFAULT_WEBGL: GLenum;\n    readonly BUFFER_SIZE: GLenum;\n    readonly BUFFER_USAGE: GLenum;\n    readonly BYTE: GLenum;\n    readonly CCW: GLenum;\n    readonly CLAMP_TO_EDGE: GLenum;\n    readonly COLOR_ATTACHMENT0: GLenum;\n    readonly COLOR_BUFFER_BIT: GLenum;\n    readonly COLOR_CLEAR_VALUE: GLenum;\n    readonly COLOR_WRITEMASK: GLenum;\n    readonly COMPILE_STATUS: GLenum;\n    readonly COMPRESSED_TEXTURE_FORMATS: GLenum;\n    readonly CONSTANT_ALPHA: GLenum;\n    readonly CONSTANT_COLOR: GLenum;\n    readonly CONTEXT_LOST_WEBGL: GLenum;\n    readonly CULL_FACE: GLenum;\n    readonly CULL_FACE_MODE: GLenum;\n    readonly CURRENT_PROGRAM: GLenum;\n    readonly CURRENT_VERTEX_ATTRIB: GLenum;\n    readonly CW: GLenum;\n    readonly DECR: GLenum;\n    readonly DECR_WRAP: GLenum;\n    readonly DELETE_STATUS: GLenum;\n    readonly DEPTH_ATTACHMENT: GLenum;\n    readonly DEPTH_BITS: GLenum;\n    readonly DEPTH_BUFFER_BIT: GLenum;\n    readonly DEPTH_CLEAR_VALUE: GLenum;\n    readonly DEPTH_COMPONENT: GLenum;\n    readonly DEPTH_COMPONENT16: GLenum;\n    readonly DEPTH_FUNC: GLenum;\n    readonly DEPTH_RANGE: GLenum;\n    readonly DEPTH_STENCIL: GLenum;\n    readonly DEPTH_STENCIL_ATTACHMENT: GLenum;\n    readonly DEPTH_TEST: GLenum;\n    readonly DEPTH_WRITEMASK: GLenum;\n    readonly DITHER: GLenum;\n    readonly DONT_CARE: GLenum;\n    readonly DST_ALPHA: GLenum;\n    readonly DST_COLOR: GLenum;\n    readonly DYNAMIC_DRAW: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER: GLenum;\n    readonly ELEMENT_ARRAY_BUFFER_BINDING: GLenum;\n    readonly EQUAL: GLenum;\n    readonly FASTEST: GLenum;\n    readonly FLOAT: GLenum;\n    readonly FLOAT_MAT2: GLenum;\n    readonly FLOAT_MAT3: GLenum;\n    readonly FLOAT_MAT4: GLenum;\n    readonly FLOAT_VEC2: GLenum;\n    readonly FLOAT_VEC3: GLenum;\n    readonly FLOAT_VEC4: GLenum;\n    readonly FRAGMENT_SHADER: GLenum;\n    readonly FRAMEBUFFER: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: GLenum;\n    readonly FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: GLenum;\n    readonly FRAMEBUFFER_BINDING: GLenum;\n    readonly FRAMEBUFFER_COMPLETE: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_DIMENSIONS: GLenum;\n    readonly FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: GLenum;\n    readonly FRAMEBUFFER_UNSUPPORTED: GLenum;\n    readonly FRONT: GLenum;\n    readonly FRONT_AND_BACK: GLenum;\n    readonly FRONT_FACE: GLenum;\n    readonly FUNC_ADD: GLenum;\n    readonly FUNC_REVERSE_SUBTRACT: GLenum;\n    readonly FUNC_SUBTRACT: GLenum;\n    readonly GENERATE_MIPMAP_HINT: GLenum;\n    readonly GEQUAL: GLenum;\n    readonly GREATER: GLenum;\n    readonly GREEN_BITS: GLenum;\n    readonly HIGH_FLOAT: GLenum;\n    readonly HIGH_INT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_FORMAT: GLenum;\n    readonly IMPLEMENTATION_COLOR_READ_TYPE: GLenum;\n    readonly INCR: GLenum;\n    readonly INCR_WRAP: GLenum;\n    readonly INT: GLenum;\n    readonly INT_VEC2: GLenum;\n    readonly INT_VEC3: GLenum;\n    readonly INT_VEC4: GLenum;\n    readonly INVALID_ENUM: GLenum;\n    readonly INVALID_FRAMEBUFFER_OPERATION: GLenum;\n    readonly INVALID_OPERATION: GLenum;\n    readonly INVALID_VALUE: GLenum;\n    readonly INVERT: GLenum;\n    readonly KEEP: GLenum;\n    readonly LEQUAL: GLenum;\n    readonly LESS: GLenum;\n    readonly LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_LINEAR: GLenum;\n    readonly LINEAR_MIPMAP_NEAREST: GLenum;\n    readonly LINES: GLenum;\n    readonly LINE_LOOP: GLenum;\n    readonly LINE_STRIP: GLenum;\n    readonly LINE_WIDTH: GLenum;\n    readonly LINK_STATUS: GLenum;\n    readonly LOW_FLOAT: GLenum;\n    readonly LOW_INT: GLenum;\n    readonly LUMINANCE: GLenum;\n    readonly LUMINANCE_ALPHA: GLenum;\n    readonly MAX_COMBINED_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_CUBE_MAP_TEXTURE_SIZE: GLenum;\n    readonly MAX_FRAGMENT_UNIFORM_VECTORS: GLenum;\n    readonly MAX_RENDERBUFFER_SIZE: GLenum;\n    readonly MAX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_TEXTURE_SIZE: GLenum;\n    readonly MAX_VARYING_VECTORS: GLenum;\n    readonly MAX_VERTEX_ATTRIBS: GLenum;\n    readonly MAX_VERTEX_TEXTURE_IMAGE_UNITS: GLenum;\n    readonly MAX_VERTEX_UNIFORM_VECTORS: GLenum;\n    readonly MAX_VIEWPORT_DIMS: GLenum;\n    readonly MEDIUM_FLOAT: GLenum;\n    readonly MEDIUM_INT: GLenum;\n    readonly MIRRORED_REPEAT: GLenum;\n    readonly NEAREST: GLenum;\n    readonly NEAREST_MIPMAP_LINEAR: GLenum;\n    readonly NEAREST_MIPMAP_NEAREST: GLenum;\n    readonly NEVER: GLenum;\n    readonly NICEST: GLenum;\n    readonly NONE: GLenum;\n    readonly NOTEQUAL: GLenum;\n    readonly NO_ERROR: GLenum;\n    readonly ONE: GLenum;\n    readonly ONE_MINUS_CONSTANT_ALPHA: GLenum;\n    readonly ONE_MINUS_CONSTANT_COLOR: GLenum;\n    readonly ONE_MINUS_DST_ALPHA: GLenum;\n    readonly ONE_MINUS_DST_COLOR: GLenum;\n    readonly ONE_MINUS_SRC_ALPHA: GLenum;\n    readonly ONE_MINUS_SRC_COLOR: GLenum;\n    readonly OUT_OF_MEMORY: GLenum;\n    readonly PACK_ALIGNMENT: GLenum;\n    readonly POINTS: GLenum;\n    readonly POLYGON_OFFSET_FACTOR: GLenum;\n    readonly POLYGON_OFFSET_FILL: GLenum;\n    readonly POLYGON_OFFSET_UNITS: GLenum;\n    readonly RED_BITS: GLenum;\n    readonly RENDERBUFFER: GLenum;\n    readonly RENDERBUFFER_ALPHA_SIZE: GLenum;\n    readonly RENDERBUFFER_BINDING: GLenum;\n    readonly RENDERBUFFER_BLUE_SIZE: GLenum;\n    readonly RENDERBUFFER_DEPTH_SIZE: GLenum;\n    readonly RENDERBUFFER_GREEN_SIZE: GLenum;\n    readonly RENDERBUFFER_HEIGHT: GLenum;\n    readonly RENDERBUFFER_INTERNAL_FORMAT: GLenum;\n    readonly RENDERBUFFER_RED_SIZE: GLenum;\n    readonly RENDERBUFFER_STENCIL_SIZE: GLenum;\n    readonly RENDERBUFFER_WIDTH: GLenum;\n    readonly RENDERER: GLenum;\n    readonly REPEAT: GLenum;\n    readonly REPLACE: GLenum;\n    readonly RGB: GLenum;\n    readonly RGB565: GLenum;\n    readonly RGB5_A1: GLenum;\n    readonly RGBA: GLenum;\n    readonly RGBA4: GLenum;\n    readonly SAMPLER_2D: GLenum;\n    readonly SAMPLER_CUBE: GLenum;\n    readonly SAMPLES: GLenum;\n    readonly SAMPLE_ALPHA_TO_COVERAGE: GLenum;\n    readonly SAMPLE_BUFFERS: GLenum;\n    readonly SAMPLE_COVERAGE: GLenum;\n    readonly SAMPLE_COVERAGE_INVERT: GLenum;\n    readonly SAMPLE_COVERAGE_VALUE: GLenum;\n    readonly SCISSOR_BOX: GLenum;\n    readonly SCISSOR_TEST: GLenum;\n    readonly SHADER_TYPE: GLenum;\n    readonly SHADING_LANGUAGE_VERSION: GLenum;\n    readonly SHORT: GLenum;\n    readonly SRC_ALPHA: GLenum;\n    readonly SRC_ALPHA_SATURATE: GLenum;\n    readonly SRC_COLOR: GLenum;\n    readonly STATIC_DRAW: GLenum;\n    readonly STENCIL_ATTACHMENT: GLenum;\n    readonly STENCIL_BACK_FAIL: GLenum;\n    readonly STENCIL_BACK_FUNC: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_BACK_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_BACK_REF: GLenum;\n    readonly STENCIL_BACK_VALUE_MASK: GLenum;\n    readonly STENCIL_BACK_WRITEMASK: GLenum;\n    readonly STENCIL_BITS: GLenum;\n    readonly STENCIL_BUFFER_BIT: GLenum;\n    readonly STENCIL_CLEAR_VALUE: GLenum;\n    readonly STENCIL_FAIL: GLenum;\n    readonly STENCIL_FUNC: GLenum;\n    readonly STENCIL_INDEX8: GLenum;\n    readonly STENCIL_PASS_DEPTH_FAIL: GLenum;\n    readonly STENCIL_PASS_DEPTH_PASS: GLenum;\n    readonly STENCIL_REF: GLenum;\n    readonly STENCIL_TEST: GLenum;\n    readonly STENCIL_VALUE_MASK: GLenum;\n    readonly STENCIL_WRITEMASK: GLenum;\n    readonly STREAM_DRAW: GLenum;\n    readonly SUBPIXEL_BITS: GLenum;\n    readonly TEXTURE: GLenum;\n    readonly TEXTURE0: GLenum;\n    readonly TEXTURE1: GLenum;\n    readonly TEXTURE10: GLenum;\n    readonly TEXTURE11: GLenum;\n    readonly TEXTURE12: GLenum;\n    readonly TEXTURE13: GLenum;\n    readonly TEXTURE14: GLenum;\n    readonly TEXTURE15: GLenum;\n    readonly TEXTURE16: GLenum;\n    readonly TEXTURE17: GLenum;\n    readonly TEXTURE18: GLenum;\n    readonly TEXTURE19: GLenum;\n    readonly TEXTURE2: GLenum;\n    readonly TEXTURE20: GLenum;\n    readonly TEXTURE21: GLenum;\n    readonly TEXTURE22: GLenum;\n    readonly TEXTURE23: GLenum;\n    readonly TEXTURE24: GLenum;\n    readonly TEXTURE25: GLenum;\n    readonly TEXTURE26: GLenum;\n    readonly TEXTURE27: GLenum;\n    readonly TEXTURE28: GLenum;\n    readonly TEXTURE29: GLenum;\n    readonly TEXTURE3: GLenum;\n    readonly TEXTURE30: GLenum;\n    readonly TEXTURE31: GLenum;\n    readonly TEXTURE4: GLenum;\n    readonly TEXTURE5: GLenum;\n    readonly TEXTURE6: GLenum;\n    readonly TEXTURE7: GLenum;\n    readonly TEXTURE8: GLenum;\n    readonly TEXTURE9: GLenum;\n    readonly TEXTURE_2D: GLenum;\n    readonly TEXTURE_BINDING_2D: GLenum;\n    readonly TEXTURE_BINDING_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_NEGATIVE_Z: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_X: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Y: GLenum;\n    readonly TEXTURE_CUBE_MAP_POSITIVE_Z: GLenum;\n    readonly TEXTURE_MAG_FILTER: GLenum;\n    readonly TEXTURE_MIN_FILTER: GLenum;\n    readonly TEXTURE_WRAP_S: GLenum;\n    readonly TEXTURE_WRAP_T: GLenum;\n    readonly TRIANGLES: GLenum;\n    readonly TRIANGLE_FAN: GLenum;\n    readonly TRIANGLE_STRIP: GLenum;\n    readonly UNPACK_ALIGNMENT: GLenum;\n    readonly UNPACK_COLORSPACE_CONVERSION_WEBGL: GLenum;\n    readonly UNPACK_FLIP_Y_WEBGL: GLenum;\n    readonly UNPACK_PREMULTIPLY_ALPHA_WEBGL: GLenum;\n    readonly UNSIGNED_BYTE: GLenum;\n    readonly UNSIGNED_INT: GLenum;\n    readonly UNSIGNED_SHORT: GLenum;\n    readonly UNSIGNED_SHORT_4_4_4_4: GLenum;\n    readonly UNSIGNED_SHORT_5_5_5_1: GLenum;\n    readonly UNSIGNED_SHORT_5_6_5: GLenum;\n    readonly VALIDATE_STATUS: GLenum;\n    readonly VENDOR: GLenum;\n    readonly VERSION: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_ENABLED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_NORMALIZED: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_POINTER: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_SIZE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_STRIDE: GLenum;\n    readonly VERTEX_ATTRIB_ARRAY_TYPE: GLenum;\n    readonly VERTEX_SHADER: GLenum;\n    readonly VIEWPORT: GLenum;\n    readonly ZERO: GLenum;\n}\n\ninterface WebGLRenderingContextOverloads {\n    bufferData(target: GLenum, size: GLsizeiptr, usage: GLenum): void;\n    bufferData(target: GLenum, data: BufferSource | null, usage: GLenum): void;\n    bufferSubData(target: GLenum, offset: GLintptr, data: BufferSource): void;\n    compressedTexImage2D(target: GLenum, level: GLint, internalformat: GLenum, width: GLsizei, height: GLsizei, border: GLint, data: ArrayBufferView): void;\n    compressedTexSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, data: ArrayBufferView): void;\n    readPixels(x: GLint, y: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, width: GLsizei, height: GLsizei, border: GLint, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texImage2D(target: GLenum, level: GLint, internalformat: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, width: GLsizei, height: GLsizei, format: GLenum, type: GLenum, pixels: ArrayBufferView | null): void;\n    texSubImage2D(target: GLenum, level: GLint, xoffset: GLint, yoffset: GLint, format: GLenum, type: GLenum, source: TexImageSource): void;\n    uniform1fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform1iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniform2fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform2iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniform3fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform3iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniform4fv(location: WebGLUniformLocation | null, v: Float32List): void;\n    uniform4iv(location: WebGLUniformLocation | null, v: Int32List): void;\n    uniformMatrix2fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;\n    uniformMatrix3fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;\n    uniformMatrix4fv(location: WebGLUniformLocation | null, transpose: GLboolean, value: Float32List): void;\n}\n\ninterface WebGLSampler {\n}\n\ndeclare var WebGLSampler: {\n    prototype: WebGLSampler;\n    new(): WebGLSampler;\n};\n\n/** The WebGLShader is part of the WebGL API and can either be a vertex or a fragment shader. A WebGLProgram requires both types of shaders. */\ninterface WebGLShader {\n}\n\ndeclare var WebGLShader: {\n    prototype: WebGLShader;\n    new(): WebGLShader;\n};\n\n/** Part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getShaderPrecisionFormat() method. */\ninterface WebGLShaderPrecisionFormat {\n    readonly precision: GLint;\n    readonly rangeMax: GLint;\n    readonly rangeMin: GLint;\n}\n\ndeclare var WebGLShaderPrecisionFormat: {\n    prototype: WebGLShaderPrecisionFormat;\n    new(): WebGLShaderPrecisionFormat;\n};\n\ninterface WebGLSync {\n}\n\ndeclare var WebGLSync: {\n    prototype: WebGLSync;\n    new(): WebGLSync;\n};\n\n/** Part of the WebGL API and represents an opaque texture object providing storage and state for texturing operations. */\ninterface WebGLTexture {\n}\n\ndeclare var WebGLTexture: {\n    prototype: WebGLTexture;\n    new(): WebGLTexture;\n};\n\ninterface WebGLTransformFeedback {\n}\n\ndeclare var WebGLTransformFeedback: {\n    prototype: WebGLTransformFeedback;\n    new(): WebGLTransformFeedback;\n};\n\n/** Part of the WebGL API and represents the location of a uniform variable in a shader program. */\ninterface WebGLUniformLocation {\n}\n\ndeclare var WebGLUniformLocation: {\n    prototype: WebGLUniformLocation;\n    new(): WebGLUniformLocation;\n};\n\ninterface WebGLVertexArrayObject {\n}\n\ndeclare var WebGLVertexArrayObject: {\n    prototype: WebGLVertexArrayObject;\n    new(): WebGLVertexArrayObject;\n};\n\ninterface WebGLVertexArrayObjectOES {\n}\n\ninterface WebSocketEventMap {\n    "close": CloseEvent;\n    "error": Event;\n    "message": MessageEvent;\n    "open": Event;\n}\n\n/** Provides the API for creating and managing a WebSocket connection to a server, as well as for sending and receiving data on the connection. */\ninterface WebSocket extends EventTarget {\n    /**\n     * Returns a string that indicates how binary data from the WebSocket object is exposed to scripts:\n     *\n     * Can be set, to change how binary data is returned. The default is "blob".\n     */\n    binaryType: BinaryType;\n    /**\n     * Returns the number of bytes of application data (UTF-8 text and binary data) that have been queued using send() but not yet been transmitted to the network.\n     *\n     * If the WebSocket connection is closed, this attribute\'s value will only increase with each call to the send() method. (The number does not reset to zero once the connection closes.)\n     */\n    readonly bufferedAmount: number;\n    /** Returns the extensions selected by the server, if any. */\n    readonly extensions: string;\n    onclose: ((this: WebSocket, ev: CloseEvent) => any) | null;\n    onerror: ((this: WebSocket, ev: Event) => any) | null;\n    onmessage: ((this: WebSocket, ev: MessageEvent) => any) | null;\n    onopen: ((this: WebSocket, ev: Event) => any) | null;\n    /** Returns the subprotocol selected by the server, if any. It can be used in conjunction with the array form of the constructor\'s second argument to perform subprotocol negotiation. */\n    readonly protocol: string;\n    /** Returns the state of the WebSocket object\'s connection. It can have the values described below. */\n    readonly readyState: number;\n    /** Returns the URL that was used to establish the WebSocket connection. */\n    readonly url: string;\n    /** Closes the WebSocket connection, optionally using code as the the WebSocket connection close code and reason as the the WebSocket connection close reason. */\n    close(code?: number, reason?: string): void;\n    /** Transmits data using the WebSocket connection. data can be a string, a Blob, an ArrayBuffer, or an ArrayBufferView. */\n    send(data: string | ArrayBufferLike | Blob | ArrayBufferView): void;\n    readonly CLOSED: number;\n    readonly CLOSING: number;\n    readonly CONNECTING: number;\n    readonly OPEN: number;\n    addEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof WebSocketEventMap>(type: K, listener: (this: WebSocket, ev: WebSocketEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var WebSocket: {\n    prototype: WebSocket;\n    new(url: string | URL, protocols?: string | string[]): WebSocket;\n    readonly CLOSED: number;\n    readonly CLOSING: number;\n    readonly CONNECTING: number;\n    readonly OPEN: number;\n};\n\n/** This ServiceWorker API interface represents the scope of a service worker client that is a document in a browser context, controlled by an active worker. The service worker client independently selects and uses a service worker for its own loading and sub-resources. */\ninterface WindowClient extends Client {\n    readonly focused: boolean;\n    readonly visibilityState: DocumentVisibilityState;\n    focus(): Promise<WindowClient>;\n    navigate(url: string | URL): Promise<WindowClient | null>;\n}\n\ndeclare var WindowClient: {\n    prototype: WindowClient;\n    new(): WindowClient;\n};\n\ninterface WindowOrWorkerGlobalScope {\n    /** Available only in secure contexts. */\n    readonly caches: CacheStorage;\n    readonly crossOriginIsolated: boolean;\n    readonly crypto: Crypto;\n    readonly indexedDB: IDBFactory;\n    readonly isSecureContext: boolean;\n    readonly origin: string;\n    readonly performance: Performance;\n    atob(data: string): string;\n    btoa(data: string): string;\n    clearInterval(id?: number): void;\n    clearTimeout(id?: number): void;\n    createImageBitmap(image: ImageBitmapSource, options?: ImageBitmapOptions): Promise<ImageBitmap>;\n    createImageBitmap(image: ImageBitmapSource, sx: number, sy: number, sw: number, sh: number, options?: ImageBitmapOptions): Promise<ImageBitmap>;\n    fetch(input: RequestInfo, init?: RequestInit): Promise<Response>;\n    queueMicrotask(callback: VoidFunction): void;\n    reportError(e: any): void;\n    setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;\n    setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;\n}\n\ninterface WorkerEventMap extends AbstractWorkerEventMap {\n    "message": MessageEvent;\n    "messageerror": MessageEvent;\n}\n\n/** This Web Workers API interface represents a background task that can be easily created and can send messages back to its creator. Creating a worker is as simple as calling the Worker() constructor and specifying a script to be run in the worker thread. */\ninterface Worker extends EventTarget, AbstractWorker {\n    onmessage: ((this: Worker, ev: MessageEvent) => any) | null;\n    onmessageerror: ((this: Worker, ev: MessageEvent) => any) | null;\n    /** Clones message and transmits it to worker\'s global environment. transfer can be passed as a list of objects that are to be transferred rather than cloned. */\n    postMessage(message: any, transfer: Transferable[]): void;\n    postMessage(message: any, options?: StructuredSerializeOptions): void;\n    /** Aborts worker\'s associated global environment. */\n    terminate(): void;\n    addEventListener<K extends keyof WorkerEventMap>(type: K, listener: (this: Worker, ev: WorkerEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof WorkerEventMap>(type: K, listener: (this: Worker, ev: WorkerEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var Worker: {\n    prototype: Worker;\n    new(scriptURL: string | URL, options?: WorkerOptions): Worker;\n};\n\ninterface WorkerGlobalScopeEventMap {\n    "error": ErrorEvent;\n    "languagechange": Event;\n    "offline": Event;\n    "online": Event;\n    "rejectionhandled": PromiseRejectionEvent;\n    "unhandledrejection": PromiseRejectionEvent;\n}\n\n/** This Web Workers API interface is an interface representing the scope of any worker. Workers have no browsing context; this scope contains the information usually conveyed by Window objects — in this case event handlers, the console or the associated WorkerNavigator object. Each WorkerGlobalScope has its own event loop. */\ninterface WorkerGlobalScope extends EventTarget, FontFaceSource, WindowOrWorkerGlobalScope {\n    /** Returns workerGlobal\'s WorkerLocation object. */\n    readonly location: WorkerLocation;\n    /** Returns workerGlobal\'s WorkerNavigator object. */\n    readonly navigator: WorkerNavigator;\n    onerror: ((this: WorkerGlobalScope, ev: ErrorEvent) => any) | null;\n    onlanguagechange: ((this: WorkerGlobalScope, ev: Event) => any) | null;\n    onoffline: ((this: WorkerGlobalScope, ev: Event) => any) | null;\n    ononline: ((this: WorkerGlobalScope, ev: Event) => any) | null;\n    onrejectionhandled: ((this: WorkerGlobalScope, ev: PromiseRejectionEvent) => any) | null;\n    onunhandledrejection: ((this: WorkerGlobalScope, ev: PromiseRejectionEvent) => any) | null;\n    /** Returns workerGlobal. */\n    readonly self: WorkerGlobalScope & typeof globalThis;\n    /** Fetches each URL in urls, executes them one-by-one in the order they are passed, and then returns (or throws if something went amiss). */\n    importScripts(...urls: (string | URL)[]): void;\n    addEventListener<K extends keyof WorkerGlobalScopeEventMap>(type: K, listener: (this: WorkerGlobalScope, ev: WorkerGlobalScopeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof WorkerGlobalScopeEventMap>(type: K, listener: (this: WorkerGlobalScope, ev: WorkerGlobalScopeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var WorkerGlobalScope: {\n    prototype: WorkerGlobalScope;\n    new(): WorkerGlobalScope;\n};\n\n/** The absolute location of the script executed by the Worker. Such an object is initialized for each worker and is available via the WorkerGlobalScope.location property obtained by calling self.location. */\ninterface WorkerLocation {\n    readonly hash: string;\n    readonly host: string;\n    readonly hostname: string;\n    readonly href: string;\n    toString(): string;\n    readonly origin: string;\n    readonly pathname: string;\n    readonly port: string;\n    readonly protocol: string;\n    readonly search: string;\n}\n\ndeclare var WorkerLocation: {\n    prototype: WorkerLocation;\n    new(): WorkerLocation;\n};\n\n/** A subset of the Navigator interface allowed to be accessed from a Worker. Such an object is initialized for each worker and is available via the WorkerGlobalScope.navigator property obtained by calling window.self.navigator. */\ninterface WorkerNavigator extends NavigatorConcurrentHardware, NavigatorID, NavigatorLanguage, NavigatorNetworkInformation, NavigatorOnLine, NavigatorStorage {\n    readonly mediaCapabilities: MediaCapabilities;\n}\n\ndeclare var WorkerNavigator: {\n    prototype: WorkerNavigator;\n    new(): WorkerNavigator;\n};\n\n/** This Streams API interface provides a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing. */\ninterface WritableStream<W = any> {\n    readonly locked: boolean;\n    abort(reason?: any): Promise<void>;\n    close(): Promise<void>;\n    getWriter(): WritableStreamDefaultWriter<W>;\n}\n\ndeclare var WritableStream: {\n    prototype: WritableStream;\n    new<W = any>(underlyingSink?: UnderlyingSink<W>, strategy?: QueuingStrategy<W>): WritableStream<W>;\n};\n\n/** This Streams API interface represents a controller allowing control of a WritableStream\'s state. When constructing a WritableStream, the underlying sink is given a corresponding WritableStreamDefaultController instance to manipulate. */\ninterface WritableStreamDefaultController {\n    error(e?: any): void;\n}\n\ndeclare var WritableStreamDefaultController: {\n    prototype: WritableStreamDefaultController;\n    new(): WritableStreamDefaultController;\n};\n\n/** This Streams API interface is the object returned by WritableStream.getWriter() and once created locks the < writer to the WritableStream ensuring that no other streams can write to the underlying sink. */\ninterface WritableStreamDefaultWriter<W = any> {\n    readonly closed: Promise<undefined>;\n    readonly desiredSize: number | null;\n    readonly ready: Promise<undefined>;\n    abort(reason?: any): Promise<void>;\n    close(): Promise<void>;\n    releaseLock(): void;\n    write(chunk?: W): Promise<void>;\n}\n\ndeclare var WritableStreamDefaultWriter: {\n    prototype: WritableStreamDefaultWriter;\n    new<W = any>(stream: WritableStream<W>): WritableStreamDefaultWriter<W>;\n};\n\ninterface XMLHttpRequestEventMap extends XMLHttpRequestEventTargetEventMap {\n    "readystatechange": Event;\n}\n\n/** Use XMLHttpRequest (XHR) objects to interact with servers. You can retrieve data from a URL without having to do a full page refresh. This enables a Web page to update just part of a page without disrupting what the user is doing. */\ninterface XMLHttpRequest extends XMLHttpRequestEventTarget {\n    onreadystatechange: ((this: XMLHttpRequest, ev: Event) => any) | null;\n    /** Returns client\'s state. */\n    readonly readyState: number;\n    /** Returns the response body. */\n    readonly response: any;\n    /**\n     * Returns response as text.\n     *\n     * Throws an "InvalidStateError" DOMException if responseType is not the empty string or "text".\n     */\n    readonly responseText: string;\n    /**\n     * Returns the response type.\n     *\n     * Can be set to change the response type. Values are: the empty string (default), "arraybuffer", "blob", "document", "json", and "text".\n     *\n     * When set: setting to "document" is ignored if current global object is not a Window object.\n     *\n     * When set: throws an "InvalidStateError" DOMException if state is loading or done.\n     *\n     * When set: throws an "InvalidAccessError" DOMException if the synchronous flag is set and current global object is a Window object.\n     */\n    responseType: XMLHttpRequestResponseType;\n    readonly responseURL: string;\n    readonly status: number;\n    readonly statusText: string;\n    /**\n     * Can be set to a time in milliseconds. When set to a non-zero value will cause fetching to terminate after the given time has passed. When the time has passed, the request has not yet completed, and this\'s synchronous flag is unset, a timeout event will then be dispatched, or a "TimeoutError" DOMException will be thrown otherwise (for the send() method).\n     *\n     * When set: throws an "InvalidAccessError" DOMException if the synchronous flag is set and current global object is a Window object.\n     */\n    timeout: number;\n    /** Returns the associated XMLHttpRequestUpload object. It can be used to gather transmission information when data is transferred to a server. */\n    readonly upload: XMLHttpRequestUpload;\n    /**\n     * True when credentials are to be included in a cross-origin request. False when they are to be excluded in a cross-origin request and when cookies are to be ignored in its response. Initially false.\n     *\n     * When set: throws an "InvalidStateError" DOMException if state is not unsent or opened, or if the send() flag is set.\n     */\n    withCredentials: boolean;\n    /** Cancels any network activity. */\n    abort(): void;\n    getAllResponseHeaders(): string;\n    getResponseHeader(name: string): string | null;\n    /**\n     * Sets the request method, request URL, and synchronous flag.\n     *\n     * Throws a "SyntaxError" DOMException if either method is not a valid method or url cannot be parsed.\n     *\n     * Throws a "SecurityError" DOMException if method is a case-insensitive match for `CONNECT`, `TRACE`, or `TRACK`.\n     *\n     * Throws an "InvalidAccessError" DOMException if async is false, current global object is a Window object, and the timeout attribute is not zero or the responseType attribute is not the empty string.\n     */\n    open(method: string, url: string | URL): void;\n    open(method: string, url: string | URL, async: boolean, username?: string | null, password?: string | null): void;\n    /**\n     * Acts as if the `Content-Type` header value for a response is mime. (It does not change the header.)\n     *\n     * Throws an "InvalidStateError" DOMException if state is loading or done.\n     */\n    overrideMimeType(mime: string): void;\n    /**\n     * Initiates the request. The body argument provides the request body, if any, and is ignored if the request method is GET or HEAD.\n     *\n     * Throws an "InvalidStateError" DOMException if either state is not opened or the send() flag is set.\n     */\n    send(body?: XMLHttpRequestBodyInit | null): void;\n    /**\n     * Combines a header in author request headers.\n     *\n     * Throws an "InvalidStateError" DOMException if either state is not opened or the send() flag is set.\n     *\n     * Throws a "SyntaxError" DOMException if name is not a header name or if value is not a header value.\n     */\n    setRequestHeader(name: string, value: string): void;\n    readonly DONE: number;\n    readonly HEADERS_RECEIVED: number;\n    readonly LOADING: number;\n    readonly OPENED: number;\n    readonly UNSENT: number;\n    addEventListener<K extends keyof XMLHttpRequestEventMap>(type: K, listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventMap>(type: K, listener: (this: XMLHttpRequest, ev: XMLHttpRequestEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var XMLHttpRequest: {\n    prototype: XMLHttpRequest;\n    new(): XMLHttpRequest;\n    readonly DONE: number;\n    readonly HEADERS_RECEIVED: number;\n    readonly LOADING: number;\n    readonly OPENED: number;\n    readonly UNSENT: number;\n};\n\ninterface XMLHttpRequestEventTargetEventMap {\n    "abort": ProgressEvent<XMLHttpRequestEventTarget>;\n    "error": ProgressEvent<XMLHttpRequestEventTarget>;\n    "load": ProgressEvent<XMLHttpRequestEventTarget>;\n    "loadend": ProgressEvent<XMLHttpRequestEventTarget>;\n    "loadstart": ProgressEvent<XMLHttpRequestEventTarget>;\n    "progress": ProgressEvent<XMLHttpRequestEventTarget>;\n    "timeout": ProgressEvent<XMLHttpRequestEventTarget>;\n}\n\ninterface XMLHttpRequestEventTarget extends EventTarget {\n    onabort: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onerror: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onload: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onloadend: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onloadstart: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    onprogress: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    ontimeout: ((this: XMLHttpRequest, ev: ProgressEvent) => any) | null;\n    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestEventTarget, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var XMLHttpRequestEventTarget: {\n    prototype: XMLHttpRequestEventTarget;\n    new(): XMLHttpRequestEventTarget;\n};\n\ninterface XMLHttpRequestUpload extends XMLHttpRequestEventTarget {\n    addEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestUpload, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n    addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n    removeEventListener<K extends keyof XMLHttpRequestEventTargetEventMap>(type: K, listener: (this: XMLHttpRequestUpload, ev: XMLHttpRequestEventTargetEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n    removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n}\n\ndeclare var XMLHttpRequestUpload: {\n    prototype: XMLHttpRequestUpload;\n    new(): XMLHttpRequestUpload;\n};\n\ninterface Console {\n    assert(condition?: boolean, ...data: any[]): void;\n    clear(): void;\n    count(label?: string): void;\n    countReset(label?: string): void;\n    debug(...data: any[]): void;\n    dir(item?: any, options?: any): void;\n    dirxml(...data: any[]): void;\n    error(...data: any[]): void;\n    group(...data: any[]): void;\n    groupCollapsed(...data: any[]): void;\n    groupEnd(): void;\n    info(...data: any[]): void;\n    log(...data: any[]): void;\n    table(tabularData?: any, properties?: string[]): void;\n    time(label?: string): void;\n    timeEnd(label?: string): void;\n    timeLog(label?: string, ...data: any[]): void;\n    timeStamp(label?: string): void;\n    trace(...data: any[]): void;\n    warn(...data: any[]): void;\n}\n\ndeclare var console: Console;\n\ndeclare namespace WebAssembly {\n    interface CompileError extends Error {\n    }\n\n    var CompileError: {\n        prototype: CompileError;\n        new(message?: string): CompileError;\n        (message?: string): CompileError;\n    };\n\n    interface Global {\n        value: any;\n        valueOf(): any;\n    }\n\n    var Global: {\n        prototype: Global;\n        new(descriptor: GlobalDescriptor, v?: any): Global;\n    };\n\n    interface Instance {\n        readonly exports: Exports;\n    }\n\n    var Instance: {\n        prototype: Instance;\n        new(module: Module, importObject?: Imports): Instance;\n    };\n\n    interface LinkError extends Error {\n    }\n\n    var LinkError: {\n        prototype: LinkError;\n        new(message?: string): LinkError;\n        (message?: string): LinkError;\n    };\n\n    interface Memory {\n        readonly buffer: ArrayBuffer;\n        grow(delta: number): number;\n    }\n\n    var Memory: {\n        prototype: Memory;\n        new(descriptor: MemoryDescriptor): Memory;\n    };\n\n    interface Module {\n    }\n\n    var Module: {\n        prototype: Module;\n        new(bytes: BufferSource): Module;\n        customSections(moduleObject: Module, sectionName: string): ArrayBuffer[];\n        exports(moduleObject: Module): ModuleExportDescriptor[];\n        imports(moduleObject: Module): ModuleImportDescriptor[];\n    };\n\n    interface RuntimeError extends Error {\n    }\n\n    var RuntimeError: {\n        prototype: RuntimeError;\n        new(message?: string): RuntimeError;\n        (message?: string): RuntimeError;\n    };\n\n    interface Table {\n        readonly length: number;\n        get(index: number): any;\n        grow(delta: number, value?: any): number;\n        set(index: number, value?: any): void;\n    }\n\n    var Table: {\n        prototype: Table;\n        new(descriptor: TableDescriptor, value?: any): Table;\n    };\n\n    interface GlobalDescriptor {\n        mutable?: boolean;\n        value: ValueType;\n    }\n\n    interface MemoryDescriptor {\n        initial: number;\n        maximum?: number;\n        shared?: boolean;\n    }\n\n    interface ModuleExportDescriptor {\n        kind: ImportExportKind;\n        name: string;\n    }\n\n    interface ModuleImportDescriptor {\n        kind: ImportExportKind;\n        module: string;\n        name: string;\n    }\n\n    interface TableDescriptor {\n        element: TableKind;\n        initial: number;\n        maximum?: number;\n    }\n\n    interface WebAssemblyInstantiatedSource {\n        instance: Instance;\n        module: Module;\n    }\n\n    type ImportExportKind = "function" | "global" | "memory" | "table";\n    type TableKind = "anyfunc" | "externref";\n    type ValueType = "anyfunc" | "externref" | "f32" | "f64" | "i32" | "i64" | "v128";\n    type ExportValue = Function | Global | Memory | Table;\n    type Exports = Record<string, ExportValue>;\n    type ImportValue = ExportValue | number;\n    type Imports = Record<string, ModuleImports>;\n    type ModuleImports = Record<string, ImportValue>;\n    function compile(bytes: BufferSource): Promise<Module>;\n    function compileStreaming(source: Response | PromiseLike<Response>): Promise<Module>;\n    function instantiate(bytes: BufferSource, importObject?: Imports): Promise<WebAssemblyInstantiatedSource>;\n    function instantiate(moduleObject: Module, importObject?: Imports): Promise<Instance>;\n    function instantiateStreaming(source: Response | PromiseLike<Response>, importObject?: Imports): Promise<WebAssemblyInstantiatedSource>;\n    function validate(bytes: BufferSource): boolean;\n}\n\ninterface FrameRequestCallback {\n    (time: DOMHighResTimeStamp): void;\n}\n\ninterface LockGrantedCallback {\n    (lock: Lock | null): any;\n}\n\ninterface OnErrorEventHandlerNonNull {\n    (event: Event | string, source?: string, lineno?: number, colno?: number, error?: Error): any;\n}\n\ninterface PerformanceObserverCallback {\n    (entries: PerformanceObserverEntryList, observer: PerformanceObserver): void;\n}\n\ninterface QueuingStrategySize<T = any> {\n    (chunk: T): number;\n}\n\ninterface TransformerFlushCallback<O> {\n    (controller: TransformStreamDefaultController<O>): void | PromiseLike<void>;\n}\n\ninterface TransformerStartCallback<O> {\n    (controller: TransformStreamDefaultController<O>): any;\n}\n\ninterface TransformerTransformCallback<I, O> {\n    (chunk: I, controller: TransformStreamDefaultController<O>): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSinkAbortCallback {\n    (reason?: any): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSinkCloseCallback {\n    (): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSinkStartCallback {\n    (controller: WritableStreamDefaultController): any;\n}\n\ninterface UnderlyingSinkWriteCallback<W> {\n    (chunk: W, controller: WritableStreamDefaultController): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSourceCancelCallback {\n    (reason?: any): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSourcePullCallback<R> {\n    (controller: ReadableStreamController<R>): void | PromiseLike<void>;\n}\n\ninterface UnderlyingSourceStartCallback<R> {\n    (controller: ReadableStreamController<R>): any;\n}\n\ninterface VoidFunction {\n    (): void;\n}\n\n/** Returns dedicatedWorkerGlobal\'s name, i.e. the value given to the Worker constructor. Primarily useful for debugging. */\ndeclare var name: string;\ndeclare var onmessage: ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any) | null;\ndeclare var onmessageerror: ((this: DedicatedWorkerGlobalScope, ev: MessageEvent) => any) | null;\n/** Aborts dedicatedWorkerGlobal. */\ndeclare function close(): void;\n/** Clones message and transmits it to the Worker object associated with dedicatedWorkerGlobal. transfer can be passed as a list of objects that are to be transferred rather than cloned. */\ndeclare function postMessage(message: any, transfer: Transferable[]): void;\ndeclare function postMessage(message: any, options?: StructuredSerializeOptions): void;\n/** Dispatches a synthetic event event to target and returns true if either event\'s cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise. */\ndeclare function dispatchEvent(event: Event): boolean;\n/** Returns workerGlobal\'s WorkerLocation object. */\ndeclare var location: WorkerLocation;\n/** Returns workerGlobal\'s WorkerNavigator object. */\ndeclare var navigator: WorkerNavigator;\ndeclare var onerror: ((this: DedicatedWorkerGlobalScope, ev: ErrorEvent) => any) | null;\ndeclare var onlanguagechange: ((this: DedicatedWorkerGlobalScope, ev: Event) => any) | null;\ndeclare var onoffline: ((this: DedicatedWorkerGlobalScope, ev: Event) => any) | null;\ndeclare var ononline: ((this: DedicatedWorkerGlobalScope, ev: Event) => any) | null;\ndeclare var onrejectionhandled: ((this: DedicatedWorkerGlobalScope, ev: PromiseRejectionEvent) => any) | null;\ndeclare var onunhandledrejection: ((this: DedicatedWorkerGlobalScope, ev: PromiseRejectionEvent) => any) | null;\n/** Returns workerGlobal. */\ndeclare var self: WorkerGlobalScope & typeof globalThis;\n/** Fetches each URL in urls, executes them one-by-one in the order they are passed, and then returns (or throws if something went amiss). */\ndeclare function importScripts(...urls: (string | URL)[]): void;\n/** Dispatches a synthetic event event to target and returns true if either event\'s cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise. */\ndeclare function dispatchEvent(event: Event): boolean;\ndeclare var fonts: FontFaceSet;\n/** Available only in secure contexts. */\ndeclare var caches: CacheStorage;\ndeclare var crossOriginIsolated: boolean;\ndeclare var crypto: Crypto;\ndeclare var indexedDB: IDBFactory;\ndeclare var isSecureContext: boolean;\ndeclare var origin: string;\ndeclare var performance: Performance;\ndeclare function atob(data: string): string;\ndeclare function btoa(data: string): string;\ndeclare function clearInterval(id?: number): void;\ndeclare function clearTimeout(id?: number): void;\ndeclare function createImageBitmap(image: ImageBitmapSource, options?: ImageBitmapOptions): Promise<ImageBitmap>;\ndeclare function createImageBitmap(image: ImageBitmapSource, sx: number, sy: number, sw: number, sh: number, options?: ImageBitmapOptions): Promise<ImageBitmap>;\ndeclare function fetch(input: RequestInfo, init?: RequestInit): Promise<Response>;\ndeclare function queueMicrotask(callback: VoidFunction): void;\ndeclare function reportError(e: any): void;\ndeclare function setInterval(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;\ndeclare function setTimeout(handler: TimerHandler, timeout?: number, ...arguments: any[]): number;\ndeclare function cancelAnimationFrame(handle: number): void;\ndeclare function requestAnimationFrame(callback: FrameRequestCallback): number;\ndeclare function addEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type: K, listener: (this: DedicatedWorkerGlobalScope, ev: DedicatedWorkerGlobalScopeEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\ndeclare function addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\ndeclare function removeEventListener<K extends keyof DedicatedWorkerGlobalScopeEventMap>(type: K, listener: (this: DedicatedWorkerGlobalScope, ev: DedicatedWorkerGlobalScopeEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\ndeclare function removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\ntype AlgorithmIdentifier = Algorithm | string;\ntype BigInteger = Uint8Array;\ntype BinaryData = ArrayBuffer | ArrayBufferView;\ntype BlobPart = BufferSource | Blob | string;\ntype BodyInit = ReadableStream | XMLHttpRequestBodyInit;\ntype BufferSource = ArrayBufferView | ArrayBuffer;\ntype CanvasImageSource = ImageBitmap | OffscreenCanvas;\ntype DOMHighResTimeStamp = number;\ntype EpochTimeStamp = number;\ntype EventListenerOrEventListenerObject = EventListener | EventListenerObject;\ntype Float32List = Float32Array | GLfloat[];\ntype FormDataEntryValue = File | string;\ntype GLbitfield = number;\ntype GLboolean = boolean;\ntype GLclampf = number;\ntype GLenum = number;\ntype GLfloat = number;\ntype GLint = number;\ntype GLint64 = number;\ntype GLintptr = number;\ntype GLsizei = number;\ntype GLsizeiptr = number;\ntype GLuint = number;\ntype GLuint64 = number;\ntype HashAlgorithmIdentifier = AlgorithmIdentifier;\ntype HeadersInit = string[][] | Record<string, string> | Headers;\ntype IDBValidKey = number | string | Date | BufferSource | IDBValidKey[];\ntype ImageBitmapSource = CanvasImageSource | Blob | ImageData;\ntype Int32List = Int32Array | GLint[];\ntype MessageEventSource = MessagePort | ServiceWorker;\ntype NamedCurve = string;\ntype OnErrorEventHandler = OnErrorEventHandlerNonNull | null;\ntype PerformanceEntryList = PerformanceEntry[];\ntype PushMessageDataInit = BufferSource | string;\ntype ReadableStreamController<T> = ReadableStreamDefaultController<T>;\ntype ReadableStreamDefaultReadResult<T> = ReadableStreamDefaultReadValueResult<T> | ReadableStreamDefaultReadDoneResult;\ntype ReadableStreamReader<T> = ReadableStreamDefaultReader<T>;\ntype RequestInfo = Request | string;\ntype TexImageSource = ImageBitmap | ImageData | OffscreenCanvas;\ntype TimerHandler = string | Function;\ntype Transferable = ArrayBuffer | MessagePort | ImageBitmap;\ntype Uint32List = Uint32Array | GLuint[];\ntype VibratePattern = number | number[];\ntype XMLHttpRequestBodyInit = Blob | BufferSource | FormData | URLSearchParams | string;\ntype BinaryType = "arraybuffer" | "blob";\ntype ClientTypes = "all" | "sharedworker" | "window" | "worker";\ntype ColorGamut = "p3" | "rec2020" | "srgb";\ntype ColorSpaceConversion = "default" | "none";\ntype ConnectionType = "bluetooth" | "cellular" | "ethernet" | "mixed" | "none" | "other" | "unknown" | "wifi";\ntype DocumentVisibilityState = "hidden" | "visible";\ntype EndingType = "native" | "transparent";\ntype FileSystemHandleKind = "directory" | "file";\ntype FontFaceLoadStatus = "error" | "loaded" | "loading" | "unloaded";\ntype FontFaceSetLoadStatus = "loaded" | "loading";\ntype FrameType = "auxiliary" | "nested" | "none" | "top-level";\ntype HdrMetadataType = "smpteSt2086" | "smpteSt2094-10" | "smpteSt2094-40";\ntype IDBCursorDirection = "next" | "nextunique" | "prev" | "prevunique";\ntype IDBRequestReadyState = "done" | "pending";\ntype IDBTransactionDurability = "default" | "relaxed" | "strict";\ntype IDBTransactionMode = "readonly" | "readwrite" | "versionchange";\ntype ImageOrientation = "flipY" | "none";\ntype KeyFormat = "jwk" | "pkcs8" | "raw" | "spki";\ntype KeyType = "private" | "public" | "secret";\ntype KeyUsage = "decrypt" | "deriveBits" | "deriveKey" | "encrypt" | "sign" | "unwrapKey" | "verify" | "wrapKey";\ntype LockMode = "exclusive" | "shared";\ntype MediaDecodingType = "file" | "media-source" | "webrtc";\ntype MediaEncodingType = "record" | "webrtc";\ntype NotificationDirection = "auto" | "ltr" | "rtl";\ntype NotificationPermission = "default" | "denied" | "granted";\ntype PermissionName = "geolocation" | "notifications" | "persistent-storage" | "push" | "screen-wake-lock" | "xr-spatial-tracking";\ntype PermissionState = "denied" | "granted" | "prompt";\ntype PredefinedColorSpace = "display-p3" | "srgb";\ntype PremultiplyAlpha = "default" | "none" | "premultiply";\ntype PushEncryptionKeyName = "auth" | "p256dh";\ntype ReferrerPolicy = "" | "no-referrer" | "no-referrer-when-downgrade" | "origin" | "origin-when-cross-origin" | "same-origin" | "strict-origin" | "strict-origin-when-cross-origin" | "unsafe-url";\ntype RequestCache = "default" | "force-cache" | "no-cache" | "no-store" | "only-if-cached" | "reload";\ntype RequestCredentials = "include" | "omit" | "same-origin";\ntype RequestDestination = "" | "audio" | "audioworklet" | "document" | "embed" | "font" | "frame" | "iframe" | "image" | "manifest" | "object" | "paintworklet" | "report" | "script" | "sharedworker" | "style" | "track" | "video" | "worker" | "xslt";\ntype RequestMode = "cors" | "navigate" | "no-cors" | "same-origin";\ntype RequestRedirect = "error" | "follow" | "manual";\ntype ResizeQuality = "high" | "low" | "medium" | "pixelated";\ntype ResponseType = "basic" | "cors" | "default" | "error" | "opaque" | "opaqueredirect";\ntype SecurityPolicyViolationEventDisposition = "enforce" | "report";\ntype ServiceWorkerState = "activated" | "activating" | "installed" | "installing" | "parsed" | "redundant";\ntype ServiceWorkerUpdateViaCache = "all" | "imports" | "none";\ntype TransferFunction = "hlg" | "pq" | "srgb";\ntype WebGLPowerPreference = "default" | "high-performance" | "low-power";\ntype WorkerType = "classic" | "module";\ntype XMLHttpRequestResponseType = "" | "arraybuffer" | "blob" | "document" | "json" | "text";\n'},26546:(e,n,t)=>{t.d(n,{Z:()=>r});const r='/*! *****************************************************************************\nCopyright (c) Microsoft Corporation. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\n\n\n\n/// <reference no-default-lib="true"/>\r\n\n\n\r\n/////////////////////////////\r\n/// WorkerGlobalScope APIs\r\n/////////////////////////////\r\n// These are only available in a Web Worker\r\ndeclare function importScripts(...urls: string[]): void;\r\n'}}]);